<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 3.2a1 (Python 3.6.5 on win32)" generated="20191222 13:37:07.097" rpa="false">
<suite id="s1" name="Rfhub2" source="F:\Docs\Desktop\rfhub2">
<suite id="s1-s1" name="Tests" source="F:\Docs\Desktop\rfhub2\tests">
<suite id="s1-s1-s1" name="Acceptance" source="F:\Docs\Desktop\rfhub2\tests\acceptance">
<suite id="s1-s1-s1-s1" name="Cli Options" source="F:\Docs\Desktop\rfhub2\tests\acceptance\cli_options.robot">
<kw name="Run Package With Help Option" type="setup">
<kw name="Run Cli Package With Options" library="keywords">
<doc>Attempt to run the rfhub2-cli package with the given options
The stdout of the process will be in a test suite
variable named ${output}</doc>
<arguments>
<arg>--help</arg>
</arguments>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>${ACTIVATE_VENV} rfhub2-cli ${options}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<msg timestamp="20191027 07:36:25.059" level="INFO">Running command ' rfhub2-cli --help 2&gt;&amp;1'.</msg>
<msg timestamp="20191027 07:36:26.321" level="INFO">${output} = Usage: rfhub2-cli [OPTIONS] [PATHS]...

  Package to populate rfhub2 with robot framework keywords from libraries
  and resource files.

Options:
  -a, --app-url TEXT              Specifies IP, URI or...</msg>
<status status="PASS" starttime="20191027 07:36:24.884" endtime="20191027 07:36:26.321"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20191027 07:36:26.326" level="INFO">${output} = Usage: rfhub2-cli [OPTIONS] [PATHS]...

  Package to populate rfhub2 with robot framework keywords from libraries
  and resource files.

Options:
  -a, --app-url TEXT              Specifies IP, URI or...</msg>
<status status="PASS" starttime="20191027 07:36:26.322" endtime="20191027 07:36:26.327"></status>
</kw>
<status status="PASS" starttime="20191027 07:36:24.883" endtime="20191027 07:36:26.327"></status>
</kw>
<status status="PASS" starttime="20191027 07:36:24.881" endtime="20191027 07:36:26.328"></status>
</kw>
<test id="s1-s1-s1-s1-t1" name="Documentation For Whole Package Should Be Displayed Properly">
<kw name="Output Should Contain" library="keywords">
<doc>Fail if the output from the previous command doesn't contain the given string
This keyword assumes the output of the command is in
a test suite variable named ${output}
Note: the help will be automatically wrapped, so
you can only search for relatively short strings.</doc>
<arguments>
<arg>Package to populate rfhub2 with robot framework keywords from libraries</arg>
<arg>and resource files.</arg>
</arguments>
<kw name="${pattern} IN [ @{patterns} ]" type="for">
<kw name="${pattern} = Package to populate rfhub2 with robot framework keywords from libraries" type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'''${pattern}''' not in '''${output}'''</arg>
<arg>Fail</arg>
<arg>Output did not contain '${pattern}'</arg>
</arguments>
<status status="PASS" starttime="20191027 07:36:26.332" endtime="20191027 07:36:26.333"></status>
</kw>
<status status="PASS" starttime="20191027 07:36:26.331" endtime="20191027 07:36:26.333"></status>
</kw>
<kw name="${pattern} = and resource files." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'''${pattern}''' not in '''${output}'''</arg>
<arg>Fail</arg>
<arg>Output did not contain '${pattern}'</arg>
</arguments>
<status status="PASS" starttime="20191027 07:36:26.334" endtime="20191027 07:36:26.335"></status>
</kw>
<status status="PASS" starttime="20191027 07:36:26.333" endtime="20191027 07:36:26.335"></status>
</kw>
<status status="PASS" starttime="20191027 07:36:26.331" endtime="20191027 07:36:26.335"></status>
</kw>
<status status="PASS" starttime="20191027 07:36:26.330" endtime="20191027 07:36:26.336"></status>
</kw>
<doc>Documentation For Whole Package Should Be Displayed Properly</doc>
<status status="PASS" starttime="20191027 07:36:26.328" endtime="20191027 07:36:26.336" critical="yes"></status>
</test>
<test id="s1-s1-s1-s1-t2" name="Documentation For AppUrl Should Be Displayed Properly">
<kw name="Output Should Contain" library="keywords">
<doc>Fail if the output from the previous command doesn't contain the given string
This keyword assumes the output of the command is in
a test suite variable named ${output}
Note: the help will be automatically wrapped, so
you can only search for relatively short strings.</doc>
<arguments>
<arg>-a, --app-url TEXT</arg>
<arg>Specifies IP, URI or host of rfhub2 web</arg>
<arg>application. Default value is</arg>
<arg>http://localhost:8000.</arg>
</arguments>
<kw name="${pattern} IN [ @{patterns} ]" type="for">
<kw name="${pattern} = -a, --app-url TEXT" type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'''${pattern}''' not in '''${output}'''</arg>
<arg>Fail</arg>
<arg>Output did not contain '${pattern}'</arg>
</arguments>
<status status="PASS" starttime="20191027 07:36:26.340" endtime="20191027 07:36:26.341"></status>
</kw>
<status status="PASS" starttime="20191027 07:36:26.340" endtime="20191027 07:36:26.341"></status>
</kw>
<kw name="${pattern} = Specifies IP, URI or host of rfhub2 web" type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'''${pattern}''' not in '''${output}'''</arg>
<arg>Fail</arg>
<arg>Output did not contain '${pattern}'</arg>
</arguments>
<status status="PASS" starttime="20191027 07:36:26.342" endtime="20191027 07:36:26.343"></status>
</kw>
<status status="PASS" starttime="20191027 07:36:26.342" endtime="20191027 07:36:26.343"></status>
</kw>
<kw name="${pattern} = application. Default value is" type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'''${pattern}''' not in '''${output}'''</arg>
<arg>Fail</arg>
<arg>Output did not contain '${pattern}'</arg>
</arguments>
<status status="PASS" starttime="20191027 07:36:26.344" endtime="20191027 07:36:26.345"></status>
</kw>
<status status="PASS" starttime="20191027 07:36:26.344" endtime="20191027 07:36:26.345"></status>
</kw>
<kw name="${pattern} = http://localhost:8000." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'''${pattern}''' not in '''${output}'''</arg>
<arg>Fail</arg>
<arg>Output did not contain '${pattern}'</arg>
</arguments>
<status status="PASS" starttime="20191027 07:36:26.346" endtime="20191027 07:36:26.347"></status>
</kw>
<status status="PASS" starttime="20191027 07:36:26.346" endtime="20191027 07:36:26.347"></status>
</kw>
<status status="PASS" starttime="20191027 07:36:26.339" endtime="20191027 07:36:26.348"></status>
</kw>
<status status="PASS" starttime="20191027 07:36:26.338" endtime="20191027 07:36:26.348"></status>
</kw>
<doc>Documentation For AppUrl Should Be Displayed Properly</doc>
<status status="PASS" starttime="20191027 07:36:26.337" endtime="20191027 07:36:26.349" critical="yes"></status>
</test>
<test id="s1-s1-s1-s1-t3" name="Documentation For User Should Be Displayed Properly">
<kw name="Output Should Contain" library="keywords">
<doc>Fail if the output from the previous command doesn't contain the given string
This keyword assumes the output of the command is in
a test suite variable named ${output}
Note: the help will be automatically wrapped, so
you can only search for relatively short strings.</doc>
<arguments>
<arg>-u, --user TEXT</arg>
<arg>Specifies rfhub2 user to authenticate on</arg>
<arg>endpoints that requires that. Default value</arg>
<arg>is rfhub.</arg>
</arguments>
<kw name="${pattern} IN [ @{patterns} ]" type="for">
<kw name="${pattern} = -u, --user TEXT" type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'''${pattern}''' not in '''${output}'''</arg>
<arg>Fail</arg>
<arg>Output did not contain '${pattern}'</arg>
</arguments>
<status status="PASS" starttime="20191027 07:36:26.352" endtime="20191027 07:36:26.354"></status>
</kw>
<status status="PASS" starttime="20191027 07:36:26.352" endtime="20191027 07:36:26.354"></status>
</kw>
<kw name="${pattern} = Specifies rfhub2 user to authenticate on" type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'''${pattern}''' not in '''${output}'''</arg>
<arg>Fail</arg>
<arg>Output did not contain '${pattern}'</arg>
</arguments>
<status status="PASS" starttime="20191027 07:36:26.355" endtime="20191027 07:36:26.356"></status>
</kw>
<status status="PASS" starttime="20191027 07:36:26.354" endtime="20191027 07:36:26.356"></status>
</kw>
<kw name="${pattern} = endpoints that requires that. Default value" type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'''${pattern}''' not in '''${output}'''</arg>
<arg>Fail</arg>
<arg>Output did not contain '${pattern}'</arg>
</arguments>
<status status="PASS" starttime="20191027 07:36:26.357" endtime="20191027 07:36:26.358"></status>
</kw>
<status status="PASS" starttime="20191027 07:36:26.356" endtime="20191027 07:36:26.358"></status>
</kw>
<kw name="${pattern} = is rfhub." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'''${pattern}''' not in '''${output}'''</arg>
<arg>Fail</arg>
<arg>Output did not contain '${pattern}'</arg>
</arguments>
<status status="PASS" starttime="20191027 07:36:26.359" endtime="20191027 07:36:26.360"></status>
</kw>
<status status="PASS" starttime="20191027 07:36:26.358" endtime="20191027 07:36:26.360"></status>
</kw>
<status status="PASS" starttime="20191027 07:36:26.352" endtime="20191027 07:36:26.360"></status>
</kw>
<status status="PASS" starttime="20191027 07:36:26.351" endtime="20191027 07:36:26.361"></status>
</kw>
<doc>Documentation For User Should Be Displayed Properly</doc>
<status status="PASS" starttime="20191027 07:36:26.349" endtime="20191027 07:36:26.361" critical="yes"></status>
</test>
<test id="s1-s1-s1-s1-t4" name="Documentation For Password Should Be Displayed Properly">
<kw name="Output Should Contain" library="keywords">
<doc>Fail if the output from the previous command doesn't contain the given string
This keyword assumes the output of the command is in
a test suite variable named ${output}
Note: the help will be automatically wrapped, so
you can only search for relatively short strings.</doc>
<arguments>
<arg>-p, --password TEXT</arg>
<arg>Specifies rfhub2 password to authenticate on</arg>
<arg>endpoints that requires that. Default value</arg>
<arg>is rfhub.</arg>
</arguments>
<kw name="${pattern} IN [ @{patterns} ]" type="for">
<kw name="${pattern} = -p, --password TEXT" type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'''${pattern}''' not in '''${output}'''</arg>
<arg>Fail</arg>
<arg>Output did not contain '${pattern}'</arg>
</arguments>
<status status="PASS" starttime="20191027 07:36:26.365" endtime="20191027 07:36:26.366"></status>
</kw>
<status status="PASS" starttime="20191027 07:36:26.365" endtime="20191027 07:36:26.366"></status>
</kw>
<kw name="${pattern} = Specifies rfhub2 password to authenticate on" type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'''${pattern}''' not in '''${output}'''</arg>
<arg>Fail</arg>
<arg>Output did not contain '${pattern}'</arg>
</arguments>
<status status="PASS" starttime="20191027 07:36:26.367" endtime="20191027 07:36:26.368"></status>
</kw>
<status status="PASS" starttime="20191027 07:36:26.367" endtime="20191027 07:36:26.369"></status>
</kw>
<kw name="${pattern} = endpoints that requires that. Default value" type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'''${pattern}''' not in '''${output}'''</arg>
<arg>Fail</arg>
<arg>Output did not contain '${pattern}'</arg>
</arguments>
<status status="PASS" starttime="20191027 07:36:26.369" endtime="20191027 07:36:26.370"></status>
</kw>
<status status="PASS" starttime="20191027 07:36:26.369" endtime="20191027 07:36:26.371"></status>
</kw>
<kw name="${pattern} = is rfhub." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'''${pattern}''' not in '''${output}'''</arg>
<arg>Fail</arg>
<arg>Output did not contain '${pattern}'</arg>
</arguments>
<status status="PASS" starttime="20191027 07:36:26.371" endtime="20191027 07:36:26.372"></status>
</kw>
<status status="PASS" starttime="20191027 07:36:26.371" endtime="20191027 07:36:26.373"></status>
</kw>
<status status="PASS" starttime="20191027 07:36:26.364" endtime="20191027 07:36:26.373"></status>
</kw>
<status status="PASS" starttime="20191027 07:36:26.363" endtime="20191027 07:36:26.373"></status>
</kw>
<doc>Documentation For Password Should Be Displayed Properly</doc>
<status status="PASS" starttime="20191027 07:36:26.362" endtime="20191027 07:36:26.374" critical="yes"></status>
</test>
<test id="s1-s1-s1-s1-t5" name="Documentation For No Installed Keywords Should Be Displayed Properly">
<kw name="Output Should Contain" library="keywords">
<doc>Fail if the output from the previous command doesn't contain the given string
This keyword assumes the output of the command is in
a test suite variable named ${output}
Note: the help will be automatically wrapped, so
you can only search for relatively short strings.</doc>
<arguments>
<arg>--no-installed-keywords</arg>
<arg>Flag specifying if package should skip</arg>
<arg>loading commonly installed libraries, such</arg>
<arg>as such as BuiltIn, Collections, DateTime</arg>
<arg>etc.</arg>
</arguments>
<kw name="${pattern} IN [ @{patterns} ]" type="for">
<kw name="${pattern} = --no-installed-keywords" type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'''${pattern}''' not in '''${output}'''</arg>
<arg>Fail</arg>
<arg>Output did not contain '${pattern}'</arg>
</arguments>
<status status="PASS" starttime="20191027 07:36:26.377" endtime="20191027 07:36:26.378"></status>
</kw>
<status status="PASS" starttime="20191027 07:36:26.377" endtime="20191027 07:36:26.379"></status>
</kw>
<kw name="${pattern} = Flag specifying if package should skip" type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'''${pattern}''' not in '''${output}'''</arg>
<arg>Fail</arg>
<arg>Output did not contain '${pattern}'</arg>
</arguments>
<status status="PASS" starttime="20191027 07:36:26.379" endtime="20191027 07:36:26.381"></status>
</kw>
<status status="PASS" starttime="20191027 07:36:26.379" endtime="20191027 07:36:26.381"></status>
</kw>
<kw name="${pattern} = loading commonly installed libraries, such" type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'''${pattern}''' not in '''${output}'''</arg>
<arg>Fail</arg>
<arg>Output did not contain '${pattern}'</arg>
</arguments>
<status status="PASS" starttime="20191027 07:36:26.381" endtime="20191027 07:36:26.382"></status>
</kw>
<status status="PASS" starttime="20191027 07:36:26.381" endtime="20191027 07:36:26.383"></status>
</kw>
<kw name="${pattern} = as such as BuiltIn, Collections, DateTime" type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'''${pattern}''' not in '''${output}'''</arg>
<arg>Fail</arg>
<arg>Output did not contain '${pattern}'</arg>
</arguments>
<status status="PASS" starttime="20191027 07:36:26.383" endtime="20191027 07:36:26.384"></status>
</kw>
<status status="PASS" starttime="20191027 07:36:26.383" endtime="20191027 07:36:26.385"></status>
</kw>
<kw name="${pattern} = etc." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'''${pattern}''' not in '''${output}'''</arg>
<arg>Fail</arg>
<arg>Output did not contain '${pattern}'</arg>
</arguments>
<status status="PASS" starttime="20191027 07:36:26.385" endtime="20191027 07:36:26.386"></status>
</kw>
<status status="PASS" starttime="20191027 07:36:26.385" endtime="20191027 07:36:26.387"></status>
</kw>
<status status="PASS" starttime="20191027 07:36:26.377" endtime="20191027 07:36:26.387"></status>
</kw>
<status status="PASS" starttime="20191027 07:36:26.376" endtime="20191027 07:36:26.388"></status>
</kw>
<doc>Documentation For No Installed Keywords Should Be Displayed Properly</doc>
<status status="PASS" starttime="20191027 07:36:26.374" endtime="20191027 07:36:26.388" critical="yes"></status>
</test>
<test id="s1-s1-s1-s1-t6" name="Documentation For Mode Should Be Displayed Properly">
<kw name="Output Should Contain" library="keywords">
<doc>Fail if the output from the previous command doesn't contain the given string
This keyword assumes the output of the command is in
a test suite variable named ${output}
Note: the help will be automatically wrapped, so
you can only search for relatively short strings.</doc>
<arguments>
<arg>-m, --mode [insert|append|update]</arg>
<arg>Choice parameter specifying in what mode</arg>
<arg>package should run:</arg>
<arg>- `insert` - default</arg>
<arg>value, removes all existing collections from</arg>
<arg>app and add ones found in paths</arg>
<arg>- `append`</arg>
<arg>- adds collections found in paths without</arg>
<arg>removal of existing ones</arg>
<arg>- `update` -</arg>
<arg>removes collections not found in paths, adds</arg>
<arg>new ones and updates existing ones.</arg>
</arguments>
<kw name="${pattern} IN [ @{patterns} ]" type="for">
<kw name="${pattern} = -m, --mode [insert|append|update]" type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'''${pattern}''' not in '''${output}'''</arg>
<arg>Fail</arg>
<arg>Output did not contain '${pattern}'</arg>
</arguments>
<status status="PASS" starttime="20191027 07:36:26.392" endtime="20191027 07:36:26.393"></status>
</kw>
<status status="PASS" starttime="20191027 07:36:26.391" endtime="20191027 07:36:26.393"></status>
</kw>
<kw name="${pattern} = Choice parameter specifying in what mode" type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'''${pattern}''' not in '''${output}'''</arg>
<arg>Fail</arg>
<arg>Output did not contain '${pattern}'</arg>
</arguments>
<status status="PASS" starttime="20191027 07:36:26.394" endtime="20191027 07:36:26.395"></status>
</kw>
<status status="PASS" starttime="20191027 07:36:26.393" endtime="20191027 07:36:26.395"></status>
</kw>
<kw name="${pattern} = package should run:" type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'''${pattern}''' not in '''${output}'''</arg>
<arg>Fail</arg>
<arg>Output did not contain '${pattern}'</arg>
</arguments>
<status status="PASS" starttime="20191027 07:36:26.396" endtime="20191027 07:36:26.397"></status>
</kw>
<status status="PASS" starttime="20191027 07:36:26.396" endtime="20191027 07:36:26.398"></status>
</kw>
<kw name="${pattern} = - `insert` - default" type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'''${pattern}''' not in '''${output}'''</arg>
<arg>Fail</arg>
<arg>Output did not contain '${pattern}'</arg>
</arguments>
<status status="PASS" starttime="20191027 07:36:26.398" endtime="20191027 07:36:26.399"></status>
</kw>
<status status="PASS" starttime="20191027 07:36:26.398" endtime="20191027 07:36:26.399"></status>
</kw>
<kw name="${pattern} = value, removes all existing collections from" type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'''${pattern}''' not in '''${output}'''</arg>
<arg>Fail</arg>
<arg>Output did not contain '${pattern}'</arg>
</arguments>
<status status="PASS" starttime="20191027 07:36:26.400" endtime="20191027 07:36:26.401"></status>
</kw>
<status status="PASS" starttime="20191027 07:36:26.400" endtime="20191027 07:36:26.401"></status>
</kw>
<kw name="${pattern} = app and add ones found in paths" type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'''${pattern}''' not in '''${output}'''</arg>
<arg>Fail</arg>
<arg>Output did not contain '${pattern}'</arg>
</arguments>
<status status="PASS" starttime="20191027 07:36:26.402" endtime="20191027 07:36:26.403"></status>
</kw>
<status status="PASS" starttime="20191027 07:36:26.402" endtime="20191027 07:36:26.403"></status>
</kw>
<kw name="${pattern} = - `append`" type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'''${pattern}''' not in '''${output}'''</arg>
<arg>Fail</arg>
<arg>Output did not contain '${pattern}'</arg>
</arguments>
<status status="PASS" starttime="20191027 07:36:26.404" endtime="20191027 07:36:26.405"></status>
</kw>
<status status="PASS" starttime="20191027 07:36:26.404" endtime="20191027 07:36:26.406"></status>
</kw>
<kw name="${pattern} = - adds collections found in paths without" type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'''${pattern}''' not in '''${output}'''</arg>
<arg>Fail</arg>
<arg>Output did not contain '${pattern}'</arg>
</arguments>
<status status="PASS" starttime="20191027 07:36:26.406" endtime="20191027 07:36:26.407"></status>
</kw>
<status status="PASS" starttime="20191027 07:36:26.406" endtime="20191027 07:36:26.408"></status>
</kw>
<kw name="${pattern} = removal of existing ones" type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'''${pattern}''' not in '''${output}'''</arg>
<arg>Fail</arg>
<arg>Output did not contain '${pattern}'</arg>
</arguments>
<status status="PASS" starttime="20191027 07:36:26.409" endtime="20191027 07:36:26.410"></status>
</kw>
<status status="PASS" starttime="20191027 07:36:26.408" endtime="20191027 07:36:26.410"></status>
</kw>
<kw name="${pattern} = - `update` -" type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'''${pattern}''' not in '''${output}'''</arg>
<arg>Fail</arg>
<arg>Output did not contain '${pattern}'</arg>
</arguments>
<status status="PASS" starttime="20191027 07:36:26.411" endtime="20191027 07:36:26.412"></status>
</kw>
<status status="PASS" starttime="20191027 07:36:26.410" endtime="20191027 07:36:26.412"></status>
</kw>
<kw name="${pattern} = removes collections not found in paths, adds" type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'''${pattern}''' not in '''${output}'''</arg>
<arg>Fail</arg>
<arg>Output did not contain '${pattern}'</arg>
</arguments>
<status status="PASS" starttime="20191027 07:36:26.413" endtime="20191027 07:36:26.414"></status>
</kw>
<status status="PASS" starttime="20191027 07:36:26.413" endtime="20191027 07:36:26.415"></status>
</kw>
<kw name="${pattern} = new ones and updates existing ones." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'''${pattern}''' not in '''${output}'''</arg>
<arg>Fail</arg>
<arg>Output did not contain '${pattern}'</arg>
</arguments>
<status status="PASS" starttime="20191027 07:36:26.415" endtime="20191027 07:36:26.416"></status>
</kw>
<status status="PASS" starttime="20191027 07:36:26.415" endtime="20191027 07:36:26.417"></status>
</kw>
<status status="PASS" starttime="20191027 07:36:26.391" endtime="20191027 07:36:26.417"></status>
</kw>
<status status="PASS" starttime="20191027 07:36:26.390" endtime="20191027 07:36:26.417"></status>
</kw>
<doc>Documentation For Mode Should Be Displayed Properly</doc>
<tags>
<tag>rfhub2-64</tag>
</tags>
<status status="PASS" starttime="20191027 07:36:26.389" endtime="20191027 07:36:26.418" critical="yes"></status>
</test>
<test id="s1-s1-s1-s1-t7" name="Documentation For Help Should Be Displayed Properly">
<kw name="Output Should Contain" library="keywords">
<doc>Fail if the output from the previous command doesn't contain the given string
This keyword assumes the output of the command is in
a test suite variable named ${output}
Note: the help will be automatically wrapped, so
you can only search for relatively short strings.</doc>
<arguments>
<arg>--help</arg>
<arg>Show this message and exit.</arg>
</arguments>
<kw name="${pattern} IN [ @{patterns} ]" type="for">
<kw name="${pattern} = --help" type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'''${pattern}''' not in '''${output}'''</arg>
<arg>Fail</arg>
<arg>Output did not contain '${pattern}'</arg>
</arguments>
<status status="PASS" starttime="20191027 07:36:26.422" endtime="20191027 07:36:26.423"></status>
</kw>
<status status="PASS" starttime="20191027 07:36:26.421" endtime="20191027 07:36:26.423"></status>
</kw>
<kw name="${pattern} = Show this message and exit." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'''${pattern}''' not in '''${output}'''</arg>
<arg>Fail</arg>
<arg>Output did not contain '${pattern}'</arg>
</arguments>
<status status="PASS" starttime="20191027 07:36:26.424" endtime="20191027 07:36:26.425"></status>
</kw>
<status status="PASS" starttime="20191027 07:36:26.423" endtime="20191027 07:36:26.425"></status>
</kw>
<status status="PASS" starttime="20191027 07:36:26.421" endtime="20191027 07:36:26.425"></status>
</kw>
<status status="PASS" starttime="20191027 07:36:26.420" endtime="20191027 07:36:26.426"></status>
</kw>
<doc>Documentation For Help Should Be Displayed Properly</doc>
<status status="PASS" starttime="20191027 07:36:26.419" endtime="20191027 07:36:26.426" critical="yes"></status>
</test>
<status status="PASS" starttime="20191027 07:36:24.872" endtime="20191027 07:36:26.427"></status>
</suite>
<suite id="s1-s1-s1-s2" name="Cli Population" source="F:\Docs\Desktop\rfhub2\tests\acceptance\cli_population.robot">
<test id="s1-s1-s1-s2-t1" name="Cli Should Populate App With Keywords From Provided Paths Only">
<kw name="Run Cli Package Without Installed Keywords" library="keywords">
<kw name="Run Cli Package With Options" library="keywords">
<doc>Attempt to run the rfhub2-cli package with the given options
The stdout of the process will be in a test suite
variable named ${output}</doc>
<arguments>
<arg>--no-installed-keywords ${INITIAL_FIXTURES}</arg>
</arguments>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>${ACTIVATE_VENV} rfhub2-cli ${options}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<msg timestamp="20191027 07:36:26.622" level="INFO">Running command ' rfhub2-cli --no-installed-keywords F:\Docs\Desktop\rfhub2\tests\acceptance\resources/../../fixtures/initial/ 2&gt;&amp;1'.</msg>
<msg timestamp="20191027 07:36:29.633" level="INFO">${output} = usage: script_for_system_exit [-h] -c CONF
script_for_system_exit: error: the following arguments are required: -c/--conf
Failed to create collection from path F:\Docs\Desktop\rfhub2\tests\acceptance\...</msg>
<status status="PASS" starttime="20191027 07:36:26.449" endtime="20191027 07:36:29.633"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20191027 07:36:29.636" level="INFO">${output} = usage: script_for_system_exit [-h] -c CONF
script_for_system_exit: error: the following arguments are required: -c/--conf
Failed to create collection from path F:\Docs\Desktop\rfhub2\tests\acceptance\...</msg>
<status status="PASS" starttime="20191027 07:36:29.634" endtime="20191027 07:36:29.636"></status>
</kw>
<status status="PASS" starttime="20191027 07:36:26.448" endtime="20191027 07:36:29.637"></status>
</kw>
<status status="PASS" starttime="20191027 07:36:26.447" endtime="20191027 07:36:29.638"></status>
</kw>
<kw name="Output Should Contain" library="keywords">
<doc>Fail if the output from the previous command doesn't contain the given string
This keyword assumes the output of the command is in
a test suite variable named ${output}
Note: the help will be automatically wrapped, so
you can only search for relatively short strings.</doc>
<arguments>
<arg>LibWithInit library with 4 keywords loaded.</arg>
<arg>Test Libdoc File library with 1 keywords loaded.</arg>
<arg>LibWithEmptyInit1 library with 2 keywords loaded.</arg>
<arg>test_resource library with 2 keywords loaded.</arg>
<arg>SingleClassLib library with 3 keywords loaded.</arg>
<arg>LibWithEmptyInit2 library with 2 keywords loaded.</arg>
<arg>test_robot library with 4 keywords loaded.</arg>
<arg>Successfully loaded 7 collections with 18 keywords.</arg>
</arguments>
<kw name="${pattern} IN [ @{patterns} ]" type="for">
<kw name="${pattern} = LibWithInit library with 4 keywords loaded." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'''${pattern}''' not in '''${output}'''</arg>
<arg>Fail</arg>
<arg>Output did not contain '${pattern}'</arg>
</arguments>
<status status="PASS" starttime="20191027 07:36:29.640" endtime="20191027 07:36:29.641"></status>
</kw>
<status status="PASS" starttime="20191027 07:36:29.640" endtime="20191027 07:36:29.641"></status>
</kw>
<kw name="${pattern} = Test Libdoc File library with 1 keywords loaded." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'''${pattern}''' not in '''${output}'''</arg>
<arg>Fail</arg>
<arg>Output did not contain '${pattern}'</arg>
</arguments>
<status status="PASS" starttime="20191027 07:36:29.642" endtime="20191027 07:36:29.643"></status>
</kw>
<status status="PASS" starttime="20191027 07:36:29.642" endtime="20191027 07:36:29.644"></status>
</kw>
<kw name="${pattern} = LibWithEmptyInit1 library with 2 keywords loaded." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'''${pattern}''' not in '''${output}'''</arg>
<arg>Fail</arg>
<arg>Output did not contain '${pattern}'</arg>
</arguments>
<status status="PASS" starttime="20191027 07:36:29.644" endtime="20191027 07:36:29.645"></status>
</kw>
<status status="PASS" starttime="20191027 07:36:29.644" endtime="20191027 07:36:29.646"></status>
</kw>
<kw name="${pattern} = test_resource library with 2 keywords loaded." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'''${pattern}''' not in '''${output}'''</arg>
<arg>Fail</arg>
<arg>Output did not contain '${pattern}'</arg>
</arguments>
<status status="PASS" starttime="20191027 07:36:29.646" endtime="20191027 07:36:29.648"></status>
</kw>
<status status="PASS" starttime="20191027 07:36:29.646" endtime="20191027 07:36:29.648"></status>
</kw>
<kw name="${pattern} = SingleClassLib library with 3 keywords loaded." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'''${pattern}''' not in '''${output}'''</arg>
<arg>Fail</arg>
<arg>Output did not contain '${pattern}'</arg>
</arguments>
<status status="PASS" starttime="20191027 07:36:29.648" endtime="20191027 07:36:29.650"></status>
</kw>
<status status="PASS" starttime="20191027 07:36:29.648" endtime="20191027 07:36:29.650"></status>
</kw>
<kw name="${pattern} = LibWithEmptyInit2 library with 2 keywords loaded." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'''${pattern}''' not in '''${output}'''</arg>
<arg>Fail</arg>
<arg>Output did not contain '${pattern}'</arg>
</arguments>
<status status="PASS" starttime="20191027 07:36:29.651" endtime="20191027 07:36:29.652"></status>
</kw>
<status status="PASS" starttime="20191027 07:36:29.650" endtime="20191027 07:36:29.652"></status>
</kw>
<kw name="${pattern} = test_robot library with 4 keywords loaded." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'''${pattern}''' not in '''${output}'''</arg>
<arg>Fail</arg>
<arg>Output did not contain '${pattern}'</arg>
</arguments>
<status status="PASS" starttime="20191027 07:36:29.653" endtime="20191027 07:36:29.654"></status>
</kw>
<status status="PASS" starttime="20191027 07:36:29.652" endtime="20191027 07:36:29.654"></status>
</kw>
<kw name="${pattern} = Successfully loaded 7 collections with 18 keywords." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'''${pattern}''' not in '''${output}'''</arg>
<arg>Fail</arg>
<arg>Output did not contain '${pattern}'</arg>
</arguments>
<status status="PASS" starttime="20191027 07:36:29.655" endtime="20191027 07:36:29.656"></status>
</kw>
<status status="PASS" starttime="20191027 07:36:29.654" endtime="20191027 07:36:29.656"></status>
</kw>
<status status="PASS" starttime="20191027 07:36:29.639" endtime="20191027 07:36:29.656"></status>
</kw>
<status status="PASS" starttime="20191027 07:36:29.638" endtime="20191027 07:36:29.657"></status>
</kw>
<kw name="Api Should Have With 7 Collections And 18 Keywords">
<kw name="collections Endpoint Should Have ${n} Items" library="keywords">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>tmp</arg>
<arg>http://localhost:8000/api/v1</arg>
</arguments>
<msg timestamp="20191027 07:36:29.659" level="INFO">Creating Session using : alias=tmp, url=http://localhost:8000/api/v1, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20191027 07:36:29.659" endtime="20191027 07:36:29.661"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>tmp</arg>
<arg>${endpoint}/</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20191027 07:36:30.711" level="INFO">Get Request using : alias=tmp, uri=collections/, headers=None json=None</msg>
<msg timestamp="20191027 07:36:30.712" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20191027 07:36:29.662" endtime="20191027 07:36:30.712"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20191027 07:36:30.715" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20191027 07:36:30.713" endtime="20191027 07:36:30.716"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<assign>
<var>${response_content}</var>
</assign>
<msg timestamp="20191027 07:36:30.747" level="INFO">${response_content} = [{'name': 'LibWithEmptyInit1', 'type': 'library', 'version': '2.1.0', 'scope': 'test case', 'named_args': None, 'path': 'F:\\Docs\\Desktop\\rfhub2\\tests\\acceptance\\resources\\..\\..\\fixtures\\init...</msg>
<status status="PASS" starttime="20191027 07:36:30.718" endtime="20191027 07:36:30.748"></status>
</kw>
<kw name="Length Should Be" library="BuiltIn">
<doc>Verifies that the length of the given item is correct.</doc>
<arguments>
<arg>${response_content}</arg>
<arg>${n}</arg>
</arguments>
<msg timestamp="20191027 07:36:30.760" level="INFO">Length is 7</msg>
<status status="PASS" starttime="20191027 07:36:30.748" endtime="20191027 07:36:30.760"></status>
</kw>
<status status="PASS" starttime="20191027 07:36:29.658" endtime="20191027 07:36:30.761"></status>
</kw>
<kw name="keywords Endpoint Should Have ${m} Items" library="keywords">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>tmp</arg>
<arg>http://localhost:8000/api/v1</arg>
</arguments>
<msg timestamp="20191027 07:36:30.763" level="INFO">Creating Session using : alias=tmp, url=http://localhost:8000/api/v1, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20191027 07:36:30.762" endtime="20191027 07:36:30.764"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>tmp</arg>
<arg>${endpoint}/</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20191027 07:36:31.809" level="INFO">Get Request using : alias=tmp, uri=keywords/, headers=None json=None</msg>
<msg timestamp="20191027 07:36:31.809" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20191027 07:36:30.764" endtime="20191027 07:36:31.810"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20191027 07:36:31.812" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20191027 07:36:31.810" endtime="20191027 07:36:31.812"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<assign>
<var>${response_content}</var>
</assign>
<msg timestamp="20191027 07:36:31.827" level="INFO">${response_content} = [{'name': 'Keyword 1 Imported From Resource File', 'doc': 'This keyword was imported from file\nwith .resource extension, available since RFWK 3.1', 'args': '', 'id': 5, 'synopsis': 'This keyword was ...</msg>
<status status="PASS" starttime="20191027 07:36:31.813" endtime="20191027 07:36:31.827"></status>
</kw>
<kw name="Length Should Be" library="BuiltIn">
<doc>Verifies that the length of the given item is correct.</doc>
<arguments>
<arg>${response_content}</arg>
<arg>${n}</arg>
</arguments>
<msg timestamp="20191027 07:36:31.835" level="INFO">Length is 18</msg>
<status status="PASS" starttime="20191027 07:36:31.828" endtime="20191027 07:36:31.835"></status>
</kw>
<status status="PASS" starttime="20191027 07:36:30.761" endtime="20191027 07:36:31.836"></status>
</kw>
<status status="PASS" starttime="20191027 07:36:29.657" endtime="20191027 07:36:31.836"></status>
</kw>
<doc>Cli Should Populate App With Keywords From Provided Paths Only</doc>
<status status="PASS" starttime="20191027 07:36:26.446" endtime="20191027 07:36:31.837" critical="yes"></status>
</test>
<test id="s1-s1-s1-s2-t2" name="Cli Should Populate App With Installed Keywords">
<kw name="Run Cli Package" library="keywords">
<doc>Attempt to run the rfhub2-cli package with the default options
The stdout of the process will be in a test suite
variable named ${output}</doc>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>${ACTIVATE_VENV} rfhub2-cli</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<msg timestamp="20191027 07:36:32.015" level="INFO">Running command ' rfhub2-cli 2&gt;&amp;1'.</msg>
<msg timestamp="20191027 07:36:42.482" level="INFO">${output} = DateTime library with 8 keywords loaded.
Screenshot library with 3 keywords loaded.
String library with 31 keywords loaded.
Easter library with 1 keywords loaded.
Collections library with 43 keywords ...</msg>
<status status="PASS" starttime="20191027 07:36:31.840" endtime="20191027 07:36:42.482"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20191027 07:36:42.483" level="INFO">${output} = DateTime library with 8 keywords loaded.
Screenshot library with 3 keywords loaded.
String library with 31 keywords loaded.
Easter library with 1 keywords loaded.
Collections library with 43 keywords ...</msg>
<status status="PASS" starttime="20191027 07:36:42.482" endtime="20191027 07:36:42.484"></status>
</kw>
<status status="PASS" starttime="20191027 07:36:31.839" endtime="20191027 07:36:42.485"></status>
</kw>
<kw name="Output Should Contain" library="keywords">
<doc>Fail if the output from the previous command doesn't contain the given string
This keyword assumes the output of the command is in
a test suite variable named ${output}
Note: the help will be automatically wrapped, so
you can only search for relatively short strings.</doc>
<arguments>
<arg>Collections library with 43 keywords loaded.</arg>
<arg>XML library with 37 keywords loaded.</arg>
<arg>Easter library with 1 keywords loaded.</arg>
<arg>Process library with 15 keywords loaded.</arg>
<arg>String library with 31 keywords loaded.</arg>
<arg>DateTime library with 8 keywords loaded.</arg>
<arg>OperatingSystem library with 56 keywords loaded.</arg>
<arg>Screenshot library with 3 keywords loaded.</arg>
<arg>BuiltIn library with 104 keywords loaded.</arg>
<arg>Telnet library with 20 keywords loaded.</arg>
<arg>Successfully loaded 10 collections with 318 keywords.</arg>
</arguments>
<kw name="${pattern} IN [ @{patterns} ]" type="for">
<kw name="${pattern} = Collections library with 43 keywords loaded." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'''${pattern}''' not in '''${output}'''</arg>
<arg>Fail</arg>
<arg>Output did not contain '${pattern}'</arg>
</arguments>
<status status="PASS" starttime="20191027 07:36:42.487" endtime="20191027 07:36:42.488"></status>
</kw>
<status status="PASS" starttime="20191027 07:36:42.487" endtime="20191027 07:36:42.488"></status>
</kw>
<kw name="${pattern} = XML library with 37 keywords loaded." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'''${pattern}''' not in '''${output}'''</arg>
<arg>Fail</arg>
<arg>Output did not contain '${pattern}'</arg>
</arguments>
<status status="PASS" starttime="20191027 07:36:42.489" endtime="20191027 07:36:42.490"></status>
</kw>
<status status="PASS" starttime="20191027 07:36:42.489" endtime="20191027 07:36:42.490"></status>
</kw>
<kw name="${pattern} = Easter library with 1 keywords loaded." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'''${pattern}''' not in '''${output}'''</arg>
<arg>Fail</arg>
<arg>Output did not contain '${pattern}'</arg>
</arguments>
<status status="PASS" starttime="20191027 07:36:42.491" endtime="20191027 07:36:42.492"></status>
</kw>
<status status="PASS" starttime="20191027 07:36:42.491" endtime="20191027 07:36:42.492"></status>
</kw>
<kw name="${pattern} = Process library with 15 keywords loaded." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'''${pattern}''' not in '''${output}'''</arg>
<arg>Fail</arg>
<arg>Output did not contain '${pattern}'</arg>
</arguments>
<status status="PASS" starttime="20191027 07:36:42.493" endtime="20191027 07:36:42.494"></status>
</kw>
<status status="PASS" starttime="20191027 07:36:42.493" endtime="20191027 07:36:42.494"></status>
</kw>
<kw name="${pattern} = String library with 31 keywords loaded." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'''${pattern}''' not in '''${output}'''</arg>
<arg>Fail</arg>
<arg>Output did not contain '${pattern}'</arg>
</arguments>
<status status="PASS" starttime="20191027 07:36:42.495" endtime="20191027 07:36:42.496"></status>
</kw>
<status status="PASS" starttime="20191027 07:36:42.495" endtime="20191027 07:36:42.496"></status>
</kw>
<kw name="${pattern} = DateTime library with 8 keywords loaded." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'''${pattern}''' not in '''${output}'''</arg>
<arg>Fail</arg>
<arg>Output did not contain '${pattern}'</arg>
</arguments>
<status status="PASS" starttime="20191027 07:36:42.497" endtime="20191027 07:36:42.498"></status>
</kw>
<status status="PASS" starttime="20191027 07:36:42.496" endtime="20191027 07:36:42.498"></status>
</kw>
<kw name="${pattern} = OperatingSystem library with 56 keywords loaded." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'''${pattern}''' not in '''${output}'''</arg>
<arg>Fail</arg>
<arg>Output did not contain '${pattern}'</arg>
</arguments>
<status status="PASS" starttime="20191027 07:36:42.499" endtime="20191027 07:36:42.500"></status>
</kw>
<status status="PASS" starttime="20191027 07:36:42.498" endtime="20191027 07:36:42.500"></status>
</kw>
<kw name="${pattern} = Screenshot library with 3 keywords loaded." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'''${pattern}''' not in '''${output}'''</arg>
<arg>Fail</arg>
<arg>Output did not contain '${pattern}'</arg>
</arguments>
<status status="PASS" starttime="20191027 07:36:42.501" endtime="20191027 07:36:42.502"></status>
</kw>
<status status="PASS" starttime="20191027 07:36:42.500" endtime="20191027 07:36:42.502"></status>
</kw>
<kw name="${pattern} = BuiltIn library with 104 keywords loaded." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'''${pattern}''' not in '''${output}'''</arg>
<arg>Fail</arg>
<arg>Output did not contain '${pattern}'</arg>
</arguments>
<status status="PASS" starttime="20191027 07:36:42.503" endtime="20191027 07:36:42.503"></status>
</kw>
<status status="PASS" starttime="20191027 07:36:42.502" endtime="20191027 07:36:42.504"></status>
</kw>
<kw name="${pattern} = Telnet library with 20 keywords loaded." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'''${pattern}''' not in '''${output}'''</arg>
<arg>Fail</arg>
<arg>Output did not contain '${pattern}'</arg>
</arguments>
<status status="PASS" starttime="20191027 07:36:42.505" endtime="20191027 07:36:42.505"></status>
</kw>
<status status="PASS" starttime="20191027 07:36:42.504" endtime="20191027 07:36:42.506"></status>
</kw>
<kw name="${pattern} = Successfully loaded 10 collections with 318 keywords." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'''${pattern}''' not in '''${output}'''</arg>
<arg>Fail</arg>
<arg>Output did not contain '${pattern}'</arg>
</arguments>
<status status="PASS" starttime="20191027 07:36:42.506" endtime="20191027 07:36:42.507"></status>
</kw>
<status status="PASS" starttime="20191027 07:36:42.506" endtime="20191027 07:36:42.508"></status>
</kw>
<status status="PASS" starttime="20191027 07:36:42.486" endtime="20191027 07:36:42.508"></status>
</kw>
<status status="PASS" starttime="20191027 07:36:42.485" endtime="20191027 07:36:42.508"></status>
</kw>
<kw name="Api Should Have With 10 Collections And 100 Keywords">
<kw name="collections Endpoint Should Have ${n} Items" library="keywords">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>tmp</arg>
<arg>http://localhost:8000/api/v1</arg>
</arguments>
<msg timestamp="20191027 07:36:42.511" level="INFO">Creating Session using : alias=tmp, url=http://localhost:8000/api/v1, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20191027 07:36:42.511" endtime="20191027 07:36:42.512"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>tmp</arg>
<arg>${endpoint}/</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20191027 07:36:43.814" level="INFO">Get Request using : alias=tmp, uri=collections/, headers=None json=None</msg>
<msg timestamp="20191027 07:36:43.815" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20191027 07:36:42.513" endtime="20191027 07:36:43.815"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20191027 07:36:43.816" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20191027 07:36:43.816" endtime="20191027 07:36:43.817"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<assign>
<var>${response_content}</var>
</assign>
<msg timestamp="20191027 07:36:44.262" level="INFO">${response_content} = [{'name': 'BuiltIn', 'type': 'library', 'version': '3.1.2', 'scope': 'global', 'named_args': None, 'path': 'c:\\program files (x86)\\python36-32\\lib\\site-packages\\robot\\libraries\\BuiltIn.py', 'do...</msg>
<status status="PASS" starttime="20191027 07:36:43.818" endtime="20191027 07:36:44.262"></status>
</kw>
<kw name="Length Should Be" library="BuiltIn">
<doc>Verifies that the length of the given item is correct.</doc>
<arguments>
<arg>${response_content}</arg>
<arg>${n}</arg>
</arguments>
<msg timestamp="20191027 07:36:44.451" level="INFO">Length is 10</msg>
<status status="PASS" starttime="20191027 07:36:44.263" endtime="20191027 07:36:44.452"></status>
</kw>
<status status="PASS" starttime="20191027 07:36:42.510" endtime="20191027 07:36:44.453"></status>
</kw>
<kw name="keywords Endpoint Should Have ${m} Items" library="keywords">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>tmp</arg>
<arg>http://localhost:8000/api/v1</arg>
</arguments>
<msg timestamp="20191027 07:36:44.455" level="INFO">Creating Session using : alias=tmp, url=http://localhost:8000/api/v1, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20191027 07:36:44.454" endtime="20191027 07:36:44.456"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>tmp</arg>
<arg>${endpoint}/</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20191027 07:36:45.608" level="INFO">Get Request using : alias=tmp, uri=keywords/, headers=None json=None</msg>
<msg timestamp="20191027 07:36:45.609" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20191027 07:36:44.456" endtime="20191027 07:36:45.609"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20191027 07:36:45.610" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20191027 07:36:45.609" endtime="20191027 07:36:45.611"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<assign>
<var>${response_content}</var>
</assign>
<msg timestamp="20191027 07:36:45.689" level="INFO">${response_content} = [{'name': 'Add Element', 'doc': 'Adds a child element to the specified element.\n\nThe element to whom to add the new element is specified using ``source``\nand ``xpath``. They have exactly the same s...</msg>
<status status="PASS" starttime="20191027 07:36:45.611" endtime="20191027 07:36:45.689"></status>
</kw>
<kw name="Length Should Be" library="BuiltIn">
<doc>Verifies that the length of the given item is correct.</doc>
<arguments>
<arg>${response_content}</arg>
<arg>${n}</arg>
</arguments>
<msg timestamp="20191027 07:36:45.726" level="INFO">Length is 100</msg>
<status status="PASS" starttime="20191027 07:36:45.689" endtime="20191027 07:36:45.727"></status>
</kw>
<status status="PASS" starttime="20191027 07:36:44.453" endtime="20191027 07:36:45.727"></status>
</kw>
<status status="PASS" starttime="20191027 07:36:42.509" endtime="20191027 07:36:45.728"></status>
</kw>
<doc>Cli Should Populate App With Installed Keywords</doc>
<status status="PASS" starttime="20191027 07:36:31.838" endtime="20191027 07:36:45.728" critical="yes"></status>
</test>
<test id="s1-s1-s1-s2-t3" name="Cli Should Preserve All Keywords When Paths And No Db Flush Set">
<kw name="Run Cli Package With Options" library="keywords">
<doc>Attempt to run the rfhub2-cli package with the given options
The stdout of the process will be in a test suite
variable named ${output}</doc>
<arguments>
<arg>--mode=append --no-installed-keywords</arg>
</arguments>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>${ACTIVATE_VENV} rfhub2-cli ${options}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<msg timestamp="20191027 07:36:45.908" level="INFO">Running command ' rfhub2-cli --mode=append --no-installed-keywords 2&gt;&amp;1'.</msg>
<msg timestamp="20191027 07:36:47.173" level="INFO">${output} = 
Successfully loaded 0 collections with 0 keywords.</msg>
<status status="PASS" starttime="20191027 07:36:45.732" endtime="20191027 07:36:47.173"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20191027 07:36:47.174" level="INFO">${output} = 
Successfully loaded 0 collections with 0 keywords.</msg>
<status status="PASS" starttime="20191027 07:36:47.174" endtime="20191027 07:36:47.175"></status>
</kw>
<status status="PASS" starttime="20191027 07:36:45.731" endtime="20191027 07:36:47.175"></status>
</kw>
<kw name="Output Should Contain" library="keywords">
<doc>Fail if the output from the previous command doesn't contain the given string
This keyword assumes the output of the command is in
a test suite variable named ${output}
Note: the help will be automatically wrapped, so
you can only search for relatively short strings.</doc>
<arguments>
<arg>Successfully loaded 0 collections with 0 keywords.</arg>
</arguments>
<kw name="${pattern} IN [ @{patterns} ]" type="for">
<kw name="${pattern} = Successfully loaded 0 collections with 0 keywords." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'''${pattern}''' not in '''${output}'''</arg>
<arg>Fail</arg>
<arg>Output did not contain '${pattern}'</arg>
</arguments>
<status status="PASS" starttime="20191027 07:36:47.177" endtime="20191027 07:36:47.178"></status>
</kw>
<status status="PASS" starttime="20191027 07:36:47.177" endtime="20191027 07:36:47.179"></status>
</kw>
<status status="PASS" starttime="20191027 07:36:47.176" endtime="20191027 07:36:47.179"></status>
</kw>
<status status="PASS" starttime="20191027 07:36:47.176" endtime="20191027 07:36:47.180"></status>
</kw>
<kw name="Api Should Have With 10 Collections And 100 Keywords">
<kw name="collections Endpoint Should Have ${n} Items" library="keywords">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>tmp</arg>
<arg>http://localhost:8000/api/v1</arg>
</arguments>
<msg timestamp="20191027 07:36:47.184" level="INFO">Creating Session using : alias=tmp, url=http://localhost:8000/api/v1, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20191027 07:36:47.184" endtime="20191027 07:36:47.186"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>tmp</arg>
<arg>${endpoint}/</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20191027 07:36:48.485" level="INFO">Get Request using : alias=tmp, uri=collections/, headers=None json=None</msg>
<msg timestamp="20191027 07:36:48.485" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20191027 07:36:47.186" endtime="20191027 07:36:48.485"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20191027 07:36:48.487" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20191027 07:36:48.486" endtime="20191027 07:36:48.487"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<assign>
<var>${response_content}</var>
</assign>
<msg timestamp="20191027 07:36:48.912" level="INFO">${response_content} = [{'name': 'BuiltIn', 'type': 'library', 'version': '3.1.2', 'scope': 'global', 'named_args': None, 'path': 'c:\\program files (x86)\\python36-32\\lib\\site-packages\\robot\\libraries\\BuiltIn.py', 'do...</msg>
<status status="PASS" starttime="20191027 07:36:48.488" endtime="20191027 07:36:48.912"></status>
</kw>
<kw name="Length Should Be" library="BuiltIn">
<doc>Verifies that the length of the given item is correct.</doc>
<arguments>
<arg>${response_content}</arg>
<arg>${n}</arg>
</arguments>
<msg timestamp="20191027 07:36:49.103" level="INFO">Length is 10</msg>
<status status="PASS" starttime="20191027 07:36:48.913" endtime="20191027 07:36:49.104"></status>
</kw>
<status status="PASS" starttime="20191027 07:36:47.183" endtime="20191027 07:36:49.104"></status>
</kw>
<kw name="keywords Endpoint Should Have ${m} Items" library="keywords">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>tmp</arg>
<arg>http://localhost:8000/api/v1</arg>
</arguments>
<msg timestamp="20191027 07:36:49.106" level="INFO">Creating Session using : alias=tmp, url=http://localhost:8000/api/v1, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20191027 07:36:49.106" endtime="20191027 07:36:49.107"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>tmp</arg>
<arg>${endpoint}/</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20191027 07:36:50.286" level="INFO">Get Request using : alias=tmp, uri=keywords/, headers=None json=None</msg>
<msg timestamp="20191027 07:36:50.287" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20191027 07:36:49.108" endtime="20191027 07:36:50.287"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20191027 07:36:50.288" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20191027 07:36:50.288" endtime="20191027 07:36:50.289"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<assign>
<var>${response_content}</var>
</assign>
<msg timestamp="20191027 07:36:50.367" level="INFO">${response_content} = [{'name': 'Add Element', 'doc': 'Adds a child element to the specified element.\n\nThe element to whom to add the new element is specified using ``source``\nand ``xpath``. They have exactly the same s...</msg>
<status status="PASS" starttime="20191027 07:36:50.289" endtime="20191027 07:36:50.367"></status>
</kw>
<kw name="Length Should Be" library="BuiltIn">
<doc>Verifies that the length of the given item is correct.</doc>
<arguments>
<arg>${response_content}</arg>
<arg>${n}</arg>
</arguments>
<msg timestamp="20191027 07:36:50.404" level="INFO">Length is 100</msg>
<status status="PASS" starttime="20191027 07:36:50.368" endtime="20191027 07:36:50.405"></status>
</kw>
<status status="PASS" starttime="20191027 07:36:49.105" endtime="20191027 07:36:50.405"></status>
</kw>
<status status="PASS" starttime="20191027 07:36:47.180" endtime="20191027 07:36:50.406"></status>
</kw>
<doc>Cli Should Preserve All Keywords When Paths And No Db Flush Set
This test is dependant on one above:
'Cli Should Populate App With Installed Keywords'</doc>
<status status="PASS" starttime="20191027 07:36:45.729" endtime="20191027 07:36:50.406" critical="yes"></status>
</test>
<test id="s1-s1-s1-s2-t4" name="Cli Should Delete All Keywords When Paths And No Installed Keywords Set">
<kw name="Run Cli Package With Options" library="keywords">
<doc>Attempt to run the rfhub2-cli package with the given options
The stdout of the process will be in a test suite
variable named ${output}</doc>
<arguments>
<arg>--no-installed-keywords</arg>
</arguments>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>${ACTIVATE_VENV} rfhub2-cli ${options}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<msg timestamp="20191027 07:36:50.582" level="INFO">Running command ' rfhub2-cli --no-installed-keywords 2&gt;&amp;1'.</msg>
<msg timestamp="20191027 07:36:53.613" level="INFO">${output} = 
Successfully loaded 0 collections with 0 keywords.</msg>
<status status="PASS" starttime="20191027 07:36:50.409" endtime="20191027 07:36:53.613"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20191027 07:36:53.615" level="INFO">${output} = 
Successfully loaded 0 collections with 0 keywords.</msg>
<status status="PASS" starttime="20191027 07:36:53.614" endtime="20191027 07:36:53.616"></status>
</kw>
<status status="PASS" starttime="20191027 07:36:50.409" endtime="20191027 07:36:53.616"></status>
</kw>
<kw name="Output Should Contain" library="keywords">
<doc>Fail if the output from the previous command doesn't contain the given string
This keyword assumes the output of the command is in
a test suite variable named ${output}
Note: the help will be automatically wrapped, so
you can only search for relatively short strings.</doc>
<arguments>
<arg>Successfully loaded 0 collections with 0 keywords.</arg>
</arguments>
<kw name="${pattern} IN [ @{patterns} ]" type="for">
<kw name="${pattern} = Successfully loaded 0 collections with 0 keywords." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'''${pattern}''' not in '''${output}'''</arg>
<arg>Fail</arg>
<arg>Output did not contain '${pattern}'</arg>
</arguments>
<status status="PASS" starttime="20191027 07:36:53.619" endtime="20191027 07:36:53.620"></status>
</kw>
<status status="PASS" starttime="20191027 07:36:53.618" endtime="20191027 07:36:53.620"></status>
</kw>
<status status="PASS" starttime="20191027 07:36:53.618" endtime="20191027 07:36:53.620"></status>
</kw>
<status status="PASS" starttime="20191027 07:36:53.617" endtime="20191027 07:36:53.621"></status>
</kw>
<kw name="Api Should Have With 0 Collections And 0 Keywords">
<kw name="collections Endpoint Should Have ${n} Items" library="keywords">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>tmp</arg>
<arg>http://localhost:8000/api/v1</arg>
</arguments>
<msg timestamp="20191027 07:36:53.623" level="INFO">Creating Session using : alias=tmp, url=http://localhost:8000/api/v1, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20191027 07:36:53.623" endtime="20191027 07:36:53.624"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>tmp</arg>
<arg>${endpoint}/</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20191027 07:36:54.643" level="INFO">Get Request using : alias=tmp, uri=collections/, headers=None json=None</msg>
<msg timestamp="20191027 07:36:54.644" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20191027 07:36:53.625" endtime="20191027 07:36:54.644"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20191027 07:36:54.647" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20191027 07:36:54.646" endtime="20191027 07:36:54.649"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<assign>
<var>${response_content}</var>
</assign>
<msg timestamp="20191027 07:36:54.653" level="INFO">${response_content} = []</msg>
<status status="PASS" starttime="20191027 07:36:54.650" endtime="20191027 07:36:54.653"></status>
</kw>
<kw name="Length Should Be" library="BuiltIn">
<doc>Verifies that the length of the given item is correct.</doc>
<arguments>
<arg>${response_content}</arg>
<arg>${n}</arg>
</arguments>
<msg timestamp="20191027 07:36:54.656" level="INFO">Length is 0</msg>
<status status="PASS" starttime="20191027 07:36:54.654" endtime="20191027 07:36:54.657"></status>
</kw>
<status status="PASS" starttime="20191027 07:36:53.622" endtime="20191027 07:36:54.659"></status>
</kw>
<kw name="keywords Endpoint Should Have ${m} Items" library="keywords">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>tmp</arg>
<arg>http://localhost:8000/api/v1</arg>
</arguments>
<msg timestamp="20191027 07:36:54.664" level="INFO">Creating Session using : alias=tmp, url=http://localhost:8000/api/v1, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20191027 07:36:54.662" endtime="20191027 07:36:54.665"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>tmp</arg>
<arg>${endpoint}/</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20191027 07:36:55.685" level="INFO">Get Request using : alias=tmp, uri=keywords/, headers=None json=None</msg>
<msg timestamp="20191027 07:36:55.686" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20191027 07:36:54.666" endtime="20191027 07:36:55.686"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20191027 07:36:55.691" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20191027 07:36:55.688" endtime="20191027 07:36:55.692"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<assign>
<var>${response_content}</var>
</assign>
<msg timestamp="20191027 07:36:55.695" level="INFO">${response_content} = []</msg>
<status status="PASS" starttime="20191027 07:36:55.693" endtime="20191027 07:36:55.696"></status>
</kw>
<kw name="Length Should Be" library="BuiltIn">
<doc>Verifies that the length of the given item is correct.</doc>
<arguments>
<arg>${response_content}</arg>
<arg>${n}</arg>
</arguments>
<msg timestamp="20191027 07:36:55.699" level="INFO">Length is 0</msg>
<status status="PASS" starttime="20191027 07:36:55.697" endtime="20191027 07:36:55.700"></status>
</kw>
<status status="PASS" starttime="20191027 07:36:54.660" endtime="20191027 07:36:55.701"></status>
</kw>
<status status="PASS" starttime="20191027 07:36:53.621" endtime="20191027 07:36:55.703"></status>
</kw>
<doc>Cli Should Delete All Keywords When Paths And No Installed Keywords Set</doc>
<status status="PASS" starttime="20191027 07:36:50.407" endtime="20191027 07:36:55.704" critical="yes"></status>
</test>
<test id="s1-s1-s1-s2-t5" name="Cli Should Return Unauthorised When Wrong User Given">
<kw name="Run Cli Package With Options" library="keywords">
<doc>Attempt to run the rfhub2-cli package with the given options
The stdout of the process will be in a test suite
variable named ${output}</doc>
<arguments>
<arg>-u wrong_user</arg>
</arguments>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>${ACTIVATE_VENV} rfhub2-cli ${options}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<msg timestamp="20191027 07:36:55.896" level="INFO">Running command ' rfhub2-cli -u wrong_user 2&gt;&amp;1'.</msg>
<msg timestamp="20191027 07:36:58.350" level="INFO">${output} = Unauthorized to perform this action
Traceback (most recent call last):
  File "C:\Program Files (x86)\Python36-32\Scripts\rfhub2-cli-script.py", line 11, in &lt;module&gt;
    load_entry_point('rfhub2', 'co...</msg>
<status status="PASS" starttime="20191027 07:36:55.712" endtime="20191027 07:36:58.351"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20191027 07:36:58.353" level="INFO">${output} = Unauthorized to perform this action
Traceback (most recent call last):
  File "C:\Program Files (x86)\Python36-32\Scripts\rfhub2-cli-script.py", line 11, in &lt;module&gt;
    load_entry_point('rfhub2', 'co...</msg>
<status status="PASS" starttime="20191027 07:36:58.351" endtime="20191027 07:36:58.354"></status>
</kw>
<status status="PASS" starttime="20191027 07:36:55.710" endtime="20191027 07:36:58.354"></status>
</kw>
<kw name="Output Should Contain" library="keywords">
<doc>Fail if the output from the previous command doesn't contain the given string
This keyword assumes the output of the command is in
a test suite variable named ${output}
Note: the help will be automatically wrapped, so
you can only search for relatively short strings.</doc>
<arguments>
<arg>Unauthorized to perform this action</arg>
</arguments>
<kw name="${pattern} IN [ @{patterns} ]" type="for">
<kw name="${pattern} = Unauthorized to perform this action" type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'''${pattern}''' not in '''${output}'''</arg>
<arg>Fail</arg>
<arg>Output did not contain '${pattern}'</arg>
</arguments>
<status status="PASS" starttime="20191027 07:36:58.356" endtime="20191027 07:36:58.357"></status>
</kw>
<status status="PASS" starttime="20191027 07:36:58.356" endtime="20191027 07:36:58.357"></status>
</kw>
<status status="PASS" starttime="20191027 07:36:58.355" endtime="20191027 07:36:58.358"></status>
</kw>
<status status="PASS" starttime="20191027 07:36:58.355" endtime="20191027 07:36:58.358"></status>
</kw>
<doc>Cli Should Return Unauthorised When Wrong User Given</doc>
<status status="PASS" starttime="20191027 07:36:55.706" endtime="20191027 07:36:58.359" critical="yes"></status>
</test>
<test id="s1-s1-s1-s2-t6" name="Cli Should Return Unauthorised When Wrong Password Given">
<kw name="Run Cli Package With Options" library="keywords">
<doc>Attempt to run the rfhub2-cli package with the given options
The stdout of the process will be in a test suite
variable named ${output}</doc>
<arguments>
<arg>-p wrong_pass</arg>
</arguments>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>${ACTIVATE_VENV} rfhub2-cli ${options}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<msg timestamp="20191027 07:36:58.535" level="INFO">Running command ' rfhub2-cli -p wrong_pass 2&gt;&amp;1'.</msg>
<msg timestamp="20191027 07:37:00.969" level="INFO">${output} = Unauthorized to perform this action
Traceback (most recent call last):
  File "C:\Program Files (x86)\Python36-32\Scripts\rfhub2-cli-script.py", line 11, in &lt;module&gt;
    load_entry_point('rfhub2', 'co...</msg>
<status status="PASS" starttime="20191027 07:36:58.362" endtime="20191027 07:37:00.969"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20191027 07:37:00.972" level="INFO">${output} = Unauthorized to perform this action
Traceback (most recent call last):
  File "C:\Program Files (x86)\Python36-32\Scripts\rfhub2-cli-script.py", line 11, in &lt;module&gt;
    load_entry_point('rfhub2', 'co...</msg>
<status status="PASS" starttime="20191027 07:37:00.970" endtime="20191027 07:37:00.972"></status>
</kw>
<status status="PASS" starttime="20191027 07:36:58.361" endtime="20191027 07:37:00.973"></status>
</kw>
<kw name="Output Should Contain" library="keywords">
<doc>Fail if the output from the previous command doesn't contain the given string
This keyword assumes the output of the command is in
a test suite variable named ${output}
Note: the help will be automatically wrapped, so
you can only search for relatively short strings.</doc>
<arguments>
<arg>Unauthorized to perform this action</arg>
</arguments>
<kw name="${pattern} IN [ @{patterns} ]" type="for">
<kw name="${pattern} = Unauthorized to perform this action" type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'''${pattern}''' not in '''${output}'''</arg>
<arg>Fail</arg>
<arg>Output did not contain '${pattern}'</arg>
</arguments>
<status status="PASS" starttime="20191027 07:37:00.974" endtime="20191027 07:37:00.976"></status>
</kw>
<status status="PASS" starttime="20191027 07:37:00.974" endtime="20191027 07:37:00.976"></status>
</kw>
<status status="PASS" starttime="20191027 07:37:00.974" endtime="20191027 07:37:00.976"></status>
</kw>
<status status="PASS" starttime="20191027 07:37:00.973" endtime="20191027 07:37:00.977"></status>
</kw>
<doc>Cli Should Return Unauthorised When Wrong Password Given</doc>
<status status="PASS" starttime="20191027 07:36:58.360" endtime="20191027 07:37:00.977" critical="yes"></status>
</test>
<test id="s1-s1-s1-s2-t7" name="Cli Should Return Connection Error When Wrong Url Given">
<kw name="Run Cli Package With Options" library="keywords">
<doc>Attempt to run the rfhub2-cli package with the given options
The stdout of the process will be in a test suite
variable named ${output}</doc>
<arguments>
<arg>-a 123.456.789.123:666</arg>
</arguments>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>${ACTIVATE_VENV} rfhub2-cli ${options}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<msg timestamp="20191027 07:37:01.153" level="INFO">Running command ' rfhub2-cli -a 123.456.789.123:666 2&gt;&amp;1'.</msg>
<msg timestamp="20191027 07:37:02.552" level="INFO">${output} = Traceback (most recent call last):
  File "C:\Program Files (x86)\Python36-32\Scripts\rfhub2-cli-script.py", line 11, in &lt;module&gt;
    load_entry_point('rfhub2', 'console_scripts', 'rfhub2-cli')()
  Fi...</msg>
<status status="PASS" starttime="20191027 07:37:00.980" endtime="20191027 07:37:02.552"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20191027 07:37:02.554" level="INFO">${output} = Traceback (most recent call last):
  File "C:\Program Files (x86)\Python36-32\Scripts\rfhub2-cli-script.py", line 11, in &lt;module&gt;
    load_entry_point('rfhub2', 'console_scripts', 'rfhub2-cli')()
  Fi...</msg>
<status status="PASS" starttime="20191027 07:37:02.552" endtime="20191027 07:37:02.554"></status>
</kw>
<status status="PASS" starttime="20191027 07:37:00.979" endtime="20191027 07:37:02.555"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>No connection adapters were found</arg>
</arguments>
<status status="PASS" starttime="20191027 07:37:02.555" endtime="20191027 07:37:02.556"></status>
</kw>
<doc>Cli Should Return Connection Error When Wrong Url Given</doc>
<status status="PASS" starttime="20191027 07:37:00.978" endtime="20191027 07:37:02.557" critical="yes"></status>
</test>
<test id="s1-s1-s1-s2-t8" name="Cli Should Update Existing Collections, Delete Obsolete And Add New">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>Run Cli Package Without Installed Keywords</arg>
<arg>Backup And Switch Initial With Updated Fixtures</arg>
</arguments>
<kw name="Run Cli Package Without Installed Keywords" library="keywords">
<kw name="Run Cli Package With Options" library="keywords">
<doc>Attempt to run the rfhub2-cli package with the given options
The stdout of the process will be in a test suite
variable named ${output}</doc>
<arguments>
<arg>--no-installed-keywords ${INITIAL_FIXTURES}</arg>
</arguments>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>${ACTIVATE_VENV} rfhub2-cli ${options}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<msg timestamp="20191027 07:37:02.736" level="INFO">Running command ' rfhub2-cli --no-installed-keywords F:\Docs\Desktop\rfhub2\tests\acceptance\resources/../../fixtures/initial/ 2&gt;&amp;1'.</msg>
<msg timestamp="20191027 07:37:05.624" level="INFO">${output} = usage: script_for_system_exit [-h] -c CONF
script_for_system_exit: error: the following arguments are required: -c/--conf
Failed to create collection from path F:\Docs\Desktop\rfhub2\tests\acceptance\...</msg>
<status status="PASS" starttime="20191027 07:37:02.562" endtime="20191027 07:37:05.624"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20191027 07:37:05.627" level="INFO">${output} = usage: script_for_system_exit [-h] -c CONF
script_for_system_exit: error: the following arguments are required: -c/--conf
Failed to create collection from path F:\Docs\Desktop\rfhub2\tests\acceptance\...</msg>
<status status="PASS" starttime="20191027 07:37:05.625" endtime="20191027 07:37:05.627"></status>
</kw>
<status status="PASS" starttime="20191027 07:37:02.561" endtime="20191027 07:37:05.628"></status>
</kw>
<status status="PASS" starttime="20191027 07:37:02.560" endtime="20191027 07:37:05.628"></status>
</kw>
<kw name="Backup And Switch Initial With Updated Fixtures" library="keywords">
<kw name="Move Directory" library="OperatingSystem">
<doc>Moves the source directory into a destination.</doc>
<arguments>
<arg>${INITIAL_FIXTURES}</arg>
<arg>${BACKUP_FIXTURES}</arg>
</arguments>
<msg timestamp="20191027 07:37:05.632" level="INFO" html="yes">Moved directory from '&lt;a href="file://F:\Docs\Desktop\rfhub2\tests\fixtures\initial"&gt;F:\Docs\Desktop\rfhub2\tests\fixtures\initial&lt;/a&gt;' to '&lt;a href="file://F:\Docs\Desktop\rfhub2\tests\fixtures\initial_bkp"&gt;F:\Docs\Desktop\rfhub2\tests\fixtures\initial_bkp&lt;/a&gt;'.</msg>
<status status="PASS" starttime="20191027 07:37:05.629" endtime="20191027 07:37:05.632"></status>
</kw>
<kw name="Copy Directory" library="OperatingSystem">
<doc>Copies the source directory into the destination.</doc>
<arguments>
<arg>${UPDATED_FIXTURES}</arg>
<arg>${INITIAL_FIXTURES}</arg>
</arguments>
<msg timestamp="20191027 07:37:05.785" level="INFO" html="yes">Copied directory from '&lt;a href="file://F:\Docs\Desktop\rfhub2\tests\fixtures\updated"&gt;F:\Docs\Desktop\rfhub2\tests\fixtures\updated&lt;/a&gt;' to '&lt;a href="file://F:\Docs\Desktop\rfhub2\tests\fixtures\initial"&gt;F:\Docs\Desktop\rfhub2\tests\fixtures\initial&lt;/a&gt;'.</msg>
<status status="PASS" starttime="20191027 07:37:05.633" endtime="20191027 07:37:05.785"></status>
</kw>
<status status="PASS" starttime="20191027 07:37:05.629" endtime="20191027 07:37:05.786"></status>
</kw>
<status status="PASS" starttime="20191027 07:37:02.559" endtime="20191027 07:37:05.786"></status>
</kw>
<kw name="Run Cli Package With Options" library="keywords">
<doc>Attempt to run the rfhub2-cli package with the given options
The stdout of the process will be in a test suite
variable named ${output}</doc>
<arguments>
<arg>--mode=update --no-installed-keywords ${INITIAL_FIXTURES}</arg>
</arguments>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>${ACTIVATE_VENV} rfhub2-cli ${options}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<msg timestamp="20191027 07:37:05.960" level="INFO">Running command ' rfhub2-cli --mode=update --no-installed-keywords F:\Docs\Desktop\rfhub2\tests\acceptance\resources/../../fixtures/initial/ 2&gt;&amp;1'.</msg>
<msg timestamp="20191027 07:37:08.688" level="INFO">${output} = Test Libdoc File library with 1 keywords loaded.
SingleClassLib library with 4 keywords loaded.
test_resource library with 2 keywords loaded.
Test Libdoc File Copy library with 1 keywords loaded.

Suc...</msg>
<status status="PASS" starttime="20191027 07:37:05.788" endtime="20191027 07:37:08.688"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20191027 07:37:08.690" level="INFO">${output} = Test Libdoc File library with 1 keywords loaded.
SingleClassLib library with 4 keywords loaded.
test_resource library with 2 keywords loaded.
Test Libdoc File Copy library with 1 keywords loaded.

Suc...</msg>
<status status="PASS" starttime="20191027 07:37:08.689" endtime="20191027 07:37:08.690"></status>
</kw>
<status status="PASS" starttime="20191027 07:37:05.787" endtime="20191027 07:37:08.691"></status>
</kw>
<kw name="Output Should Contain" library="keywords">
<doc>Fail if the output from the previous command doesn't contain the given string
This keyword assumes the output of the command is in
a test suite variable named ${output}
Note: the help will be automatically wrapped, so
you can only search for relatively short strings.</doc>
<arguments>
<arg>SingleClassLib library with 4 keywords loaded.</arg>
<arg>test_resource library with 2 keywords loaded.</arg>
<arg>Test Libdoc File library with 1 keywords loaded.</arg>
<arg>Test Libdoc File Copy library with 1 keywords loaded.</arg>
</arguments>
<kw name="${pattern} IN [ @{patterns} ]" type="for">
<kw name="${pattern} = SingleClassLib library with 4 keywords loaded." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'''${pattern}''' not in '''${output}'''</arg>
<arg>Fail</arg>
<arg>Output did not contain '${pattern}'</arg>
</arguments>
<status status="PASS" starttime="20191027 07:37:08.693" endtime="20191027 07:37:08.694"></status>
</kw>
<status status="PASS" starttime="20191027 07:37:08.693" endtime="20191027 07:37:08.694"></status>
</kw>
<kw name="${pattern} = test_resource library with 2 keywords loaded." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'''${pattern}''' not in '''${output}'''</arg>
<arg>Fail</arg>
<arg>Output did not contain '${pattern}'</arg>
</arguments>
<status status="PASS" starttime="20191027 07:37:08.695" endtime="20191027 07:37:08.696"></status>
</kw>
<status status="PASS" starttime="20191027 07:37:08.695" endtime="20191027 07:37:08.696"></status>
</kw>
<kw name="${pattern} = Test Libdoc File library with 1 keywords loaded." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'''${pattern}''' not in '''${output}'''</arg>
<arg>Fail</arg>
<arg>Output did not contain '${pattern}'</arg>
</arguments>
<status status="PASS" starttime="20191027 07:37:08.697" endtime="20191027 07:37:08.698"></status>
</kw>
<status status="PASS" starttime="20191027 07:37:08.696" endtime="20191027 07:37:08.698"></status>
</kw>
<kw name="${pattern} = Test Libdoc File Copy library with 1 keywords loaded." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'''${pattern}''' not in '''${output}'''</arg>
<arg>Fail</arg>
<arg>Output did not contain '${pattern}'</arg>
</arguments>
<status status="PASS" starttime="20191027 07:37:08.699" endtime="20191027 07:37:08.700"></status>
</kw>
<status status="PASS" starttime="20191027 07:37:08.699" endtime="20191027 07:37:08.701"></status>
</kw>
<status status="PASS" starttime="20191027 07:37:08.692" endtime="20191027 07:37:08.701"></status>
</kw>
<status status="PASS" starttime="20191027 07:37:08.691" endtime="20191027 07:37:08.702"></status>
</kw>
<doc>Cli Should Update Existing Collections,
Delete Obsolete And Add New.</doc>
<tags>
<tag>rfhub2-64</tag>
</tags>
<status status="PASS" starttime="20191027 07:37:02.558" endtime="20191027 07:37:08.702" critical="yes"></status>
</test>
<test id="s1-s1-s1-s2-t9" name="Cli Update Mode Should Leave Application With New Set Of Collections">
<kw name="Api Should Have With 7 Collections And 16 Keywords">
<kw name="collections Endpoint Should Have ${n} Items" library="keywords">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>tmp</arg>
<arg>http://localhost:8000/api/v1</arg>
</arguments>
<msg timestamp="20191027 07:37:08.708" level="INFO">Creating Session using : alias=tmp, url=http://localhost:8000/api/v1, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20191027 07:37:08.707" endtime="20191027 07:37:08.709"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>tmp</arg>
<arg>${endpoint}/</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20191027 07:37:09.743" level="INFO">Get Request using : alias=tmp, uri=collections/, headers=None json=None</msg>
<msg timestamp="20191027 07:37:09.743" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20191027 07:37:08.709" endtime="20191027 07:37:09.744"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20191027 07:37:09.746" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20191027 07:37:09.744" endtime="20191027 07:37:09.746"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<assign>
<var>${response_content}</var>
</assign>
<msg timestamp="20191027 07:37:09.772" level="INFO">${response_content} = [{'name': 'LibWithEmptyInit1', 'type': 'library', 'version': '2.1.0', 'scope': 'test case', 'named_args': None, 'path': 'F:\\Docs\\Desktop\\rfhub2\\tests\\acceptance\\resources\\..\\..\\fixtures\\init...</msg>
<status status="PASS" starttime="20191027 07:37:09.747" endtime="20191027 07:37:09.773"></status>
</kw>
<kw name="Length Should Be" library="BuiltIn">
<doc>Verifies that the length of the given item is correct.</doc>
<arguments>
<arg>${response_content}</arg>
<arg>${n}</arg>
</arguments>
<msg timestamp="20191027 07:37:09.786" level="INFO">Length is 7</msg>
<status status="PASS" starttime="20191027 07:37:09.773" endtime="20191027 07:37:09.787"></status>
</kw>
<status status="PASS" starttime="20191027 07:37:08.706" endtime="20191027 07:37:09.788"></status>
</kw>
<kw name="keywords Endpoint Should Have ${m} Items" library="keywords">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>tmp</arg>
<arg>http://localhost:8000/api/v1</arg>
</arguments>
<msg timestamp="20191027 07:37:09.791" level="INFO">Creating Session using : alias=tmp, url=http://localhost:8000/api/v1, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20191027 07:37:09.790" endtime="20191027 07:37:09.792"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>tmp</arg>
<arg>${endpoint}/</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20191027 07:37:10.840" level="INFO">Get Request using : alias=tmp, uri=keywords/, headers=None json=None</msg>
<msg timestamp="20191027 07:37:10.841" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20191027 07:37:09.793" endtime="20191027 07:37:10.841"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20191027 07:37:10.843" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20191027 07:37:10.842" endtime="20191027 07:37:10.843"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<assign>
<var>${response_content}</var>
</assign>
<msg timestamp="20191027 07:37:10.857" level="INFO">${response_content} = [{'name': 'Keyword 1 Imported From Resource File Updated', 'doc': 'This keyword was imported from file\nwith .resource extension, available since RFWK 3.1', 'args': '', 'id': 24, 'synopsis': 'This key...</msg>
<status status="PASS" starttime="20191027 07:37:10.844" endtime="20191027 07:37:10.857"></status>
</kw>
<kw name="Length Should Be" library="BuiltIn">
<doc>Verifies that the length of the given item is correct.</doc>
<arguments>
<arg>${response_content}</arg>
<arg>${n}</arg>
</arguments>
<msg timestamp="20191027 07:37:10.864" level="INFO">Length is 16</msg>
<status status="PASS" starttime="20191027 07:37:10.858" endtime="20191027 07:37:10.865"></status>
</kw>
<status status="PASS" starttime="20191027 07:37:09.788" endtime="20191027 07:37:10.865"></status>
</kw>
<status status="PASS" starttime="20191027 07:37:08.705" endtime="20191027 07:37:10.866"></status>
</kw>
<doc>Cli Update Mode Should Leave Application
With New Set Of Collections. This test bases on
'Cli Should Update Existing Collections, Delete Obsolete And Add New'
to speed up execution</doc>
<tags>
<tag>rfhub2-64</tag>
</tags>
<status status="PASS" starttime="20191027 07:37:08.703" endtime="20191027 07:37:10.866" critical="yes"></status>
</test>
<test id="s1-s1-s1-s2-t10" name="Running Cli Update Mode Second Time Should Leave Collections Untouched">
<kw name="Run Cli Package With Options" library="keywords">
<doc>Attempt to run the rfhub2-cli package with the given options
The stdout of the process will be in a test suite
variable named ${output}</doc>
<arguments>
<arg>--mode=update --no-installed-keywords ${INITIAL_FIXTURES}</arg>
</arguments>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>${ACTIVATE_VENV} rfhub2-cli ${options}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<msg timestamp="20191027 07:37:11.044" level="INFO">Running command ' rfhub2-cli --mode=update --no-installed-keywords F:\Docs\Desktop\rfhub2\tests\acceptance\resources/../../fixtures/initial/ 2&gt;&amp;1'.</msg>
<msg timestamp="20191027 07:37:13.385" level="INFO">${output} = 
Successfully loaded 0 collections with 0 keywords.</msg>
<status status="PASS" starttime="20191027 07:37:10.869" endtime="20191027 07:37:13.385"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20191027 07:37:13.387" level="INFO">${output} = 
Successfully loaded 0 collections with 0 keywords.</msg>
<status status="PASS" starttime="20191027 07:37:13.386" endtime="20191027 07:37:13.388"></status>
</kw>
<status status="PASS" starttime="20191027 07:37:10.869" endtime="20191027 07:37:13.388"></status>
</kw>
<kw name="Output Should Contain" library="keywords">
<doc>Fail if the output from the previous command doesn't contain the given string
This keyword assumes the output of the command is in
a test suite variable named ${output}
Note: the help will be automatically wrapped, so
you can only search for relatively short strings.</doc>
<arguments>
<arg>Successfully loaded 0 collections with 0 keywords.</arg>
</arguments>
<kw name="${pattern} IN [ @{patterns} ]" type="for">
<kw name="${pattern} = Successfully loaded 0 collections with 0 keywords." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'''${pattern}''' not in '''${output}'''</arg>
<arg>Fail</arg>
<arg>Output did not contain '${pattern}'</arg>
</arguments>
<status status="PASS" starttime="20191027 07:37:13.390" endtime="20191027 07:37:13.391"></status>
</kw>
<status status="PASS" starttime="20191027 07:37:13.390" endtime="20191027 07:37:13.391"></status>
</kw>
<status status="PASS" starttime="20191027 07:37:13.389" endtime="20191027 07:37:13.392"></status>
</kw>
<status status="PASS" starttime="20191027 07:37:13.389" endtime="20191027 07:37:13.392"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>Restore Initial Fixtures</arg>
<arg>AND</arg>
<arg>Run Cli Package With Options</arg>
<arg>--mode=insert --no-installed-keywords</arg>
</arguments>
<kw name="Restore Initial Fixtures" library="keywords">
<kw name="Remove Directory" library="OperatingSystem">
<doc>Removes the directory pointed to by the given ``path``.</doc>
<arguments>
<arg>${INITIAL_FIXTURES}</arg>
<arg>recursive=True</arg>
</arguments>
<msg timestamp="20191027 07:37:13.410" level="INFO" html="yes">Removed directory '&lt;a href="file://F:\Docs\Desktop\rfhub2\tests\fixtures\initial"&gt;F:\Docs\Desktop\rfhub2\tests\fixtures\initial&lt;/a&gt;'.</msg>
<status status="PASS" starttime="20191027 07:37:13.394" endtime="20191027 07:37:13.410"></status>
</kw>
<kw name="Copy Directory" library="OperatingSystem">
<doc>Copies the source directory into the destination.</doc>
<arguments>
<arg>${BACKUP_FIXTURES}</arg>
<arg>${INITIAL_FIXTURES}</arg>
</arguments>
<msg timestamp="20191027 07:37:13.490" level="INFO" html="yes">Copied directory from '&lt;a href="file://F:\Docs\Desktop\rfhub2\tests\fixtures\initial_bkp"&gt;F:\Docs\Desktop\rfhub2\tests\fixtures\initial_bkp&lt;/a&gt;' to '&lt;a href="file://F:\Docs\Desktop\rfhub2\tests\fixtures\initial"&gt;F:\Docs\Desktop\rfhub2\tests\fixtures\initial&lt;/a&gt;'.</msg>
<status status="PASS" starttime="20191027 07:37:13.411" endtime="20191027 07:37:13.491"></status>
</kw>
<kw name="Remove Directory" library="OperatingSystem">
<doc>Removes the directory pointed to by the given ``path``.</doc>
<arguments>
<arg>${BACKUP_FIXTURES}</arg>
<arg>recursive=True</arg>
</arguments>
<msg timestamp="20191027 07:37:13.569" level="INFO" html="yes">Removed directory '&lt;a href="file://F:\Docs\Desktop\rfhub2\tests\fixtures\initial_bkp"&gt;F:\Docs\Desktop\rfhub2\tests\fixtures\initial_bkp&lt;/a&gt;'.</msg>
<status status="PASS" starttime="20191027 07:37:13.492" endtime="20191027 07:37:13.569"></status>
</kw>
<status status="PASS" starttime="20191027 07:37:13.393" endtime="20191027 07:37:13.570"></status>
</kw>
<kw name="Run Cli Package With Options" library="keywords">
<doc>Attempt to run the rfhub2-cli package with the given options
The stdout of the process will be in a test suite
variable named ${output}</doc>
<arguments>
<arg>--mode=insert --no-installed-keywords</arg>
</arguments>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>${ACTIVATE_VENV} rfhub2-cli ${options}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<msg timestamp="20191027 07:37:13.755" level="INFO">Running command ' rfhub2-cli --mode=insert --no-installed-keywords 2&gt;&amp;1'.</msg>
<msg timestamp="20191027 07:37:16.177" level="INFO">${output} = 
Successfully loaded 0 collections with 0 keywords.</msg>
<status status="PASS" starttime="20191027 07:37:13.572" endtime="20191027 07:37:16.177"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20191027 07:37:16.179" level="INFO">${output} = 
Successfully loaded 0 collections with 0 keywords.</msg>
<status status="PASS" starttime="20191027 07:37:16.178" endtime="20191027 07:37:16.179"></status>
</kw>
<status status="PASS" starttime="20191027 07:37:13.571" endtime="20191027 07:37:16.180"></status>
</kw>
<status status="PASS" starttime="20191027 07:37:13.393" endtime="20191027 07:37:16.180"></status>
</kw>
<doc>Running Cli Update Mode Second Time
Should Leave Collections Untouched. This test bases on
'Cli Should Update Existing Collections, Delete Obsolete And Add New'
to speed up execution</doc>
<status status="PASS" starttime="20191027 07:37:10.867" endtime="20191027 07:37:16.181" critical="yes"></status>
</test>
<status status="PASS" starttime="20191027 07:36:26.431" endtime="20191027 07:37:16.184"></status>
</suite>
<suite id="s1-s1-s1-s3" name="E2E" source="F:\Docs\Desktop\rfhub2\tests\acceptance\e2e.robot">
<kw name="Open Browser With App On Mainpage" library="keywords" type="setup">
<kw name="Open Browser" library="SeleniumLibrary">
<doc>Opens a new browser instance to the given ``url``.</doc>
<arguments>
<arg>url=localhost:8000</arg>
<arg>browser=gc</arg>
</arguments>
<msg timestamp="20191027 07:37:16.223" level="INFO">Opening browser 'gc' to base url 'localhost:8000'.</msg>
<status status="PASS" starttime="20191027 07:37:16.222" endtime="20191027 07:37:21.123"></status>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20191027 07:37:21.123" endtime="20191027 07:37:22.249"></status>
</kw>
<status status="PASS" starttime="20191027 07:37:16.222" endtime="20191027 07:37:22.251"></status>
</kw>
<kw name="Close Browser" library="SeleniumLibrary" type="teardown">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20191027 07:37:49.880" endtime="20191027 07:37:52.083"></status>
</kw>
<test id="s1-s1-s1-s3-t1" name="App Should Start With No Collections">
<kw name="Navigate To Main Page" library="keywords" type="setup">
<kw name="Go To" library="SeleniumLibrary">
<doc>Navigates the active browser instance to the provided ``url``.</doc>
<arguments>
<arg>localhost:8000</arg>
</arguments>
<msg timestamp="20191027 07:37:22.258" level="INFO">Opening url 'localhost:8000'</msg>
<status status="PASS" starttime="20191027 07:37:22.256" endtime="20191027 07:37:22.387"></status>
</kw>
<status status="PASS" starttime="20191027 07:37:22.254" endtime="20191027 07:37:22.388"></status>
</kw>
<kw name="Collections Count On Main Page Should Be 0" library="keywords">
<kw name="Reload Page" library="SeleniumLibrary">
<doc>Simulates user reloading page.</doc>
<status status="PASS" starttime="20191027 07:37:22.391" endtime="20191027 07:37:22.505"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${n}'!='0'</arg>
<arg>Wait Until Element Is Visible</arg>
<arg>${main_page_table}</arg>
</arguments>
<status status="PASS" starttime="20191027 07:37:22.505" endtime="20191027 07:37:22.506"></status>
</kw>
<kw name="Element Text Should Be" library="SeleniumLibrary">
<doc>Verifies that element ``locator`` contains exact text ``expected``.</doc>
<arguments>
<arg>${main_page_collection_number}</arg>
<arg>Collections (${n})</arg>
</arguments>
<msg timestamp="20191027 07:37:22.507" level="INFO">Verifying element '//*[@id="root"]/div/main/div[2]/div/div/div/h2' contains exact text 'Collections (0)'.</msg>
<status status="PASS" starttime="20191027 07:37:22.507" endtime="20191027 07:37:22.548"></status>
</kw>
<status status="PASS" starttime="20191027 07:37:22.389" endtime="20191027 07:37:22.549"></status>
</kw>
<status status="PASS" starttime="20191027 07:37:22.252" endtime="20191027 07:37:22.549" critical="yes"></status>
</test>
<test id="s1-s1-s1-s3-t2" name="Populated App Should Show Number Of Collections">
<kw name="Navigate To Main Page" library="keywords" type="setup">
<kw name="Go To" library="SeleniumLibrary">
<doc>Navigates the active browser instance to the provided ``url``.</doc>
<arguments>
<arg>localhost:8000</arg>
</arguments>
<msg timestamp="20191027 07:37:22.553" level="INFO">Opening url 'localhost:8000'</msg>
<status status="PASS" starttime="20191027 07:37:22.552" endtime="20191027 07:37:22.649"></status>
</kw>
<status status="PASS" starttime="20191027 07:37:22.551" endtime="20191027 07:37:22.650"></status>
</kw>
<kw name="Run Cli Package With Options" library="keywords">
<doc>Attempt to run the rfhub2-cli package with the given options
The stdout of the process will be in a test suite
variable named ${output}</doc>
<arguments>
<arg>--no-installed-keywords F:\\Docs\\Desktop\\rfhub2\\tests\\acceptance/../fixtures/initial</arg>
</arguments>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>${ACTIVATE_VENV} rfhub2-cli ${options}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<msg timestamp="20191027 07:37:22.836" level="INFO">Running command ' rfhub2-cli --no-installed-keywords F:\Docs\Desktop\rfhub2\tests\acceptance/../fixtures/initial 2&gt;&amp;1'.</msg>
<msg timestamp="20191027 07:37:25.789" level="INFO">${output} = usage: script_for_system_exit [-h] -c CONF
script_for_system_exit: error: the following arguments are required: -c/--conf
Failed to create collection from path F:\Docs\Desktop\rfhub2\tests\acceptance\...</msg>
<status status="PASS" starttime="20191027 07:37:22.653" endtime="20191027 07:37:25.789"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20191027 07:37:25.791" level="INFO">${output} = usage: script_for_system_exit [-h] -c CONF
script_for_system_exit: error: the following arguments are required: -c/--conf
Failed to create collection from path F:\Docs\Desktop\rfhub2\tests\acceptance\...</msg>
<status status="PASS" starttime="20191027 07:37:25.789" endtime="20191027 07:37:25.792"></status>
</kw>
<status status="PASS" starttime="20191027 07:37:22.652" endtime="20191027 07:37:25.792"></status>
</kw>
<kw name="Collections Count On Main Page Should Be 7" library="keywords">
<kw name="Reload Page" library="SeleniumLibrary">
<doc>Simulates user reloading page.</doc>
<status status="PASS" starttime="20191027 07:37:25.794" endtime="20191027 07:37:25.904"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${n}'!='0'</arg>
<arg>Wait Until Element Is Visible</arg>
<arg>${main_page_table}</arg>
</arguments>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<doc>Waits until element ``locator`` is visible.</doc>
<arguments>
<arg>${main_page_table}</arg>
</arguments>
<status status="PASS" starttime="20191027 07:37:25.905" endtime="20191027 07:37:25.996"></status>
</kw>
<status status="PASS" starttime="20191027 07:37:25.904" endtime="20191027 07:37:25.996"></status>
</kw>
<kw name="Element Text Should Be" library="SeleniumLibrary">
<doc>Verifies that element ``locator`` contains exact text ``expected``.</doc>
<arguments>
<arg>${main_page_collection_number}</arg>
<arg>Collections (${n})</arg>
</arguments>
<msg timestamp="20191027 07:37:25.997" level="INFO">Verifying element '//*[@id="root"]/div/main/div[2]/div/div/div/h2' contains exact text 'Collections (7)'.</msg>
<status status="PASS" starttime="20191027 07:37:25.997" endtime="20191027 07:37:26.028"></status>
</kw>
<status status="PASS" starttime="20191027 07:37:25.793" endtime="20191027 07:37:26.028"></status>
</kw>
<status status="PASS" starttime="20191027 07:37:22.550" endtime="20191027 07:37:26.029" critical="yes"></status>
</test>
<test id="s1-s1-s1-s3-t3" name="First Page Table Should Contain Proper Libraries Data">
<kw name="Navigate To Main Page" library="keywords" type="setup">
<kw name="Go To" library="SeleniumLibrary">
<doc>Navigates the active browser instance to the provided ``url``.</doc>
<arguments>
<arg>localhost:8000</arg>
</arguments>
<msg timestamp="20191027 07:37:26.033" level="INFO">Opening url 'localhost:8000'</msg>
<status status="PASS" starttime="20191027 07:37:26.032" endtime="20191027 07:37:26.135"></status>
</kw>
<status status="PASS" starttime="20191027 07:37:26.031" endtime="20191027 07:37:26.136"></status>
</kw>
<kw name="Table Should Contain Library Data">
<arguments>
<arg>LibWithEmptyInit1</arg>
<arg>library</arg>
<arg>2.1.0</arg>
<arg>2</arg>
</arguments>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<doc>Waits until element ``locator`` is visible.</doc>
<arguments>
<arg>${main_page_table}</arg>
</arguments>
<status status="PASS" starttime="20191027 07:37:26.138" endtime="20191027 07:37:26.202"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${Library_data}</arg>
</arguments>
<assign>
<var>${list_len}</var>
</assign>
<msg timestamp="20191027 07:37:26.203" level="INFO">Length is 4</msg>
<msg timestamp="20191027 07:37:26.204" level="INFO">${list_len} = 4</msg>
<status status="PASS" starttime="20191027 07:37:26.202" endtime="20191027 07:37:26.204"></status>
</kw>
<kw name="${i} IN RANGE [ 1 | ${list_len} ]" type="for">
<kw name="${i} = 1" type="foritem">
<kw name="Table Column Should Contain" library="SeleniumLibrary">
<doc>Verifies table column contains text ``expected``.</doc>
<arguments>
<arg>${main_page_table}</arg>
<arg>${i}</arg>
<arg>@{Library_data}[${i-1}]</arg>
</arguments>
<status status="PASS" starttime="20191027 07:37:26.205" endtime="20191027 07:37:26.317"></status>
</kw>
<status status="PASS" starttime="20191027 07:37:26.205" endtime="20191027 07:37:26.317"></status>
</kw>
<kw name="${i} = 2" type="foritem">
<kw name="Table Column Should Contain" library="SeleniumLibrary">
<doc>Verifies table column contains text ``expected``.</doc>
<arguments>
<arg>${main_page_table}</arg>
<arg>${i}</arg>
<arg>@{Library_data}[${i-1}]</arg>
</arguments>
<status status="PASS" starttime="20191027 07:37:26.318" endtime="20191027 07:37:26.406"></status>
</kw>
<status status="PASS" starttime="20191027 07:37:26.317" endtime="20191027 07:37:26.407"></status>
</kw>
<kw name="${i} = 3" type="foritem">
<kw name="Table Column Should Contain" library="SeleniumLibrary">
<doc>Verifies table column contains text ``expected``.</doc>
<arguments>
<arg>${main_page_table}</arg>
<arg>${i}</arg>
<arg>@{Library_data}[${i-1}]</arg>
</arguments>
<status status="PASS" starttime="20191027 07:37:26.407" endtime="20191027 07:37:26.500"></status>
</kw>
<status status="PASS" starttime="20191027 07:37:26.407" endtime="20191027 07:37:26.500"></status>
</kw>
<status status="PASS" starttime="20191027 07:37:26.204" endtime="20191027 07:37:26.500"></status>
</kw>
<status status="PASS" starttime="20191027 07:37:26.137" endtime="20191027 07:37:26.501"></status>
</kw>
<kw name="Table Should Contain Library Data">
<arguments>
<arg>LibWithEmptyInit2</arg>
<arg>library</arg>
<arg>1.0.0</arg>
<arg>2</arg>
</arguments>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<doc>Waits until element ``locator`` is visible.</doc>
<arguments>
<arg>${main_page_table}</arg>
</arguments>
<status status="PASS" starttime="20191027 07:37:26.502" endtime="20191027 07:37:26.530"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${Library_data}</arg>
</arguments>
<assign>
<var>${list_len}</var>
</assign>
<msg timestamp="20191027 07:37:26.531" level="INFO">Length is 4</msg>
<msg timestamp="20191027 07:37:26.532" level="INFO">${list_len} = 4</msg>
<status status="PASS" starttime="20191027 07:37:26.531" endtime="20191027 07:37:26.532"></status>
</kw>
<kw name="${i} IN RANGE [ 1 | ${list_len} ]" type="for">
<kw name="${i} = 1" type="foritem">
<kw name="Table Column Should Contain" library="SeleniumLibrary">
<doc>Verifies table column contains text ``expected``.</doc>
<arguments>
<arg>${main_page_table}</arg>
<arg>${i}</arg>
<arg>@{Library_data}[${i-1}]</arg>
</arguments>
<status status="PASS" starttime="20191027 07:37:26.533" endtime="20191027 07:37:26.643"></status>
</kw>
<status status="PASS" starttime="20191027 07:37:26.532" endtime="20191027 07:37:26.643"></status>
</kw>
<kw name="${i} = 2" type="foritem">
<kw name="Table Column Should Contain" library="SeleniumLibrary">
<doc>Verifies table column contains text ``expected``.</doc>
<arguments>
<arg>${main_page_table}</arg>
<arg>${i}</arg>
<arg>@{Library_data}[${i-1}]</arg>
</arguments>
<status status="PASS" starttime="20191027 07:37:26.644" endtime="20191027 07:37:26.724"></status>
</kw>
<status status="PASS" starttime="20191027 07:37:26.643" endtime="20191027 07:37:26.724"></status>
</kw>
<kw name="${i} = 3" type="foritem">
<kw name="Table Column Should Contain" library="SeleniumLibrary">
<doc>Verifies table column contains text ``expected``.</doc>
<arguments>
<arg>${main_page_table}</arg>
<arg>${i}</arg>
<arg>@{Library_data}[${i-1}]</arg>
</arguments>
<status status="PASS" starttime="20191027 07:37:26.725" endtime="20191027 07:37:26.832"></status>
</kw>
<status status="PASS" starttime="20191027 07:37:26.725" endtime="20191027 07:37:26.833"></status>
</kw>
<status status="PASS" starttime="20191027 07:37:26.532" endtime="20191027 07:37:26.833"></status>
</kw>
<status status="PASS" starttime="20191027 07:37:26.501" endtime="20191027 07:37:26.834"></status>
</kw>
<kw name="Table Should Contain Library Data">
<arguments>
<arg>LibWithInit</arg>
<arg>library</arg>
<arg>6.6.6</arg>
<arg>4</arg>
</arguments>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<doc>Waits until element ``locator`` is visible.</doc>
<arguments>
<arg>${main_page_table}</arg>
</arguments>
<status status="PASS" starttime="20191027 07:37:26.835" endtime="20191027 07:37:26.863"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${Library_data}</arg>
</arguments>
<assign>
<var>${list_len}</var>
</assign>
<msg timestamp="20191027 07:37:26.865" level="INFO">Length is 4</msg>
<msg timestamp="20191027 07:37:26.865" level="INFO">${list_len} = 4</msg>
<status status="PASS" starttime="20191027 07:37:26.864" endtime="20191027 07:37:26.865"></status>
</kw>
<kw name="${i} IN RANGE [ 1 | ${list_len} ]" type="for">
<kw name="${i} = 1" type="foritem">
<kw name="Table Column Should Contain" library="SeleniumLibrary">
<doc>Verifies table column contains text ``expected``.</doc>
<arguments>
<arg>${main_page_table}</arg>
<arg>${i}</arg>
<arg>@{Library_data}[${i-1}]</arg>
</arguments>
<status status="PASS" starttime="20191027 07:37:26.866" endtime="20191027 07:37:26.998"></status>
</kw>
<status status="PASS" starttime="20191027 07:37:26.866" endtime="20191027 07:37:26.998"></status>
</kw>
<kw name="${i} = 2" type="foritem">
<kw name="Table Column Should Contain" library="SeleniumLibrary">
<doc>Verifies table column contains text ``expected``.</doc>
<arguments>
<arg>${main_page_table}</arg>
<arg>${i}</arg>
<arg>@{Library_data}[${i-1}]</arg>
</arguments>
<status status="PASS" starttime="20191027 07:37:26.999" endtime="20191027 07:37:27.068"></status>
</kw>
<status status="PASS" starttime="20191027 07:37:26.999" endtime="20191027 07:37:27.069"></status>
</kw>
<kw name="${i} = 3" type="foritem">
<kw name="Table Column Should Contain" library="SeleniumLibrary">
<doc>Verifies table column contains text ``expected``.</doc>
<arguments>
<arg>${main_page_table}</arg>
<arg>${i}</arg>
<arg>@{Library_data}[${i-1}]</arg>
</arguments>
<status status="PASS" starttime="20191027 07:37:27.069" endtime="20191027 07:37:27.191"></status>
</kw>
<status status="PASS" starttime="20191027 07:37:27.069" endtime="20191027 07:37:27.192"></status>
</kw>
<status status="PASS" starttime="20191027 07:37:26.865" endtime="20191027 07:37:27.192"></status>
</kw>
<status status="PASS" starttime="20191027 07:37:26.834" endtime="20191027 07:37:27.193"></status>
</kw>
<kw name="Table Should Contain Library Data">
<arguments>
<arg>SingleClassLib</arg>
<arg>library</arg>
<arg>1.2.3</arg>
<arg>3</arg>
</arguments>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<doc>Waits until element ``locator`` is visible.</doc>
<arguments>
<arg>${main_page_table}</arg>
</arguments>
<status status="PASS" starttime="20191027 07:37:27.194" endtime="20191027 07:37:27.221"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${Library_data}</arg>
</arguments>
<assign>
<var>${list_len}</var>
</assign>
<msg timestamp="20191027 07:37:27.222" level="INFO">Length is 4</msg>
<msg timestamp="20191027 07:37:27.223" level="INFO">${list_len} = 4</msg>
<status status="PASS" starttime="20191027 07:37:27.222" endtime="20191027 07:37:27.223"></status>
</kw>
<kw name="${i} IN RANGE [ 1 | ${list_len} ]" type="for">
<kw name="${i} = 1" type="foritem">
<kw name="Table Column Should Contain" library="SeleniumLibrary">
<doc>Verifies table column contains text ``expected``.</doc>
<arguments>
<arg>${main_page_table}</arg>
<arg>${i}</arg>
<arg>@{Library_data}[${i-1}]</arg>
</arguments>
<status status="PASS" starttime="20191027 07:37:27.224" endtime="20191027 07:37:27.382"></status>
</kw>
<status status="PASS" starttime="20191027 07:37:27.223" endtime="20191027 07:37:27.382"></status>
</kw>
<kw name="${i} = 2" type="foritem">
<kw name="Table Column Should Contain" library="SeleniumLibrary">
<doc>Verifies table column contains text ``expected``.</doc>
<arguments>
<arg>${main_page_table}</arg>
<arg>${i}</arg>
<arg>@{Library_data}[${i-1}]</arg>
</arguments>
<status status="PASS" starttime="20191027 07:37:27.383" endtime="20191027 07:37:27.450"></status>
</kw>
<status status="PASS" starttime="20191027 07:37:27.382" endtime="20191027 07:37:27.450"></status>
</kw>
<kw name="${i} = 3" type="foritem">
<kw name="Table Column Should Contain" library="SeleniumLibrary">
<doc>Verifies table column contains text ``expected``.</doc>
<arguments>
<arg>${main_page_table}</arg>
<arg>${i}</arg>
<arg>@{Library_data}[${i-1}]</arg>
</arguments>
<status status="PASS" starttime="20191027 07:37:27.451" endtime="20191027 07:37:27.602"></status>
</kw>
<status status="PASS" starttime="20191027 07:37:27.450" endtime="20191027 07:37:27.602"></status>
</kw>
<status status="PASS" starttime="20191027 07:37:27.223" endtime="20191027 07:37:27.602"></status>
</kw>
<status status="PASS" starttime="20191027 07:37:27.193" endtime="20191027 07:37:27.603"></status>
</kw>
<kw name="Table Should Contain Library Data">
<arguments>
<arg>Test Libdoc File</arg>
<arg>library</arg>
<arg>3.2.0</arg>
<arg>1</arg>
</arguments>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<doc>Waits until element ``locator`` is visible.</doc>
<arguments>
<arg>${main_page_table}</arg>
</arguments>
<status status="PASS" starttime="20191027 07:37:27.604" endtime="20191027 07:37:27.630"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${Library_data}</arg>
</arguments>
<assign>
<var>${list_len}</var>
</assign>
<msg timestamp="20191027 07:37:27.631" level="INFO">Length is 4</msg>
<msg timestamp="20191027 07:37:27.632" level="INFO">${list_len} = 4</msg>
<status status="PASS" starttime="20191027 07:37:27.631" endtime="20191027 07:37:27.632"></status>
</kw>
<kw name="${i} IN RANGE [ 1 | ${list_len} ]" type="for">
<kw name="${i} = 1" type="foritem">
<kw name="Table Column Should Contain" library="SeleniumLibrary">
<doc>Verifies table column contains text ``expected``.</doc>
<arguments>
<arg>${main_page_table}</arg>
<arg>${i}</arg>
<arg>@{Library_data}[${i-1}]</arg>
</arguments>
<status status="PASS" starttime="20191027 07:37:27.633" endtime="20191027 07:37:27.814"></status>
</kw>
<status status="PASS" starttime="20191027 07:37:27.633" endtime="20191027 07:37:27.814"></status>
</kw>
<kw name="${i} = 2" type="foritem">
<kw name="Table Column Should Contain" library="SeleniumLibrary">
<doc>Verifies table column contains text ``expected``.</doc>
<arguments>
<arg>${main_page_table}</arg>
<arg>${i}</arg>
<arg>@{Library_data}[${i-1}]</arg>
</arguments>
<status status="PASS" starttime="20191027 07:37:27.816" endtime="20191027 07:37:27.891"></status>
</kw>
<status status="PASS" starttime="20191027 07:37:27.815" endtime="20191027 07:37:27.891"></status>
</kw>
<kw name="${i} = 3" type="foritem">
<kw name="Table Column Should Contain" library="SeleniumLibrary">
<doc>Verifies table column contains text ``expected``.</doc>
<arguments>
<arg>${main_page_table}</arg>
<arg>${i}</arg>
<arg>@{Library_data}[${i-1}]</arg>
</arguments>
<status status="PASS" starttime="20191027 07:37:27.892" endtime="20191027 07:37:28.063"></status>
</kw>
<status status="PASS" starttime="20191027 07:37:27.892" endtime="20191027 07:37:28.063"></status>
</kw>
<status status="PASS" starttime="20191027 07:37:27.632" endtime="20191027 07:37:28.063"></status>
</kw>
<status status="PASS" starttime="20191027 07:37:27.603" endtime="20191027 07:37:28.064"></status>
</kw>
<kw name="Table Should Contain Library Data">
<arguments>
<arg>test_resource</arg>
<arg>resource</arg>
<arg>${EMPTY}</arg>
<arg>2</arg>
</arguments>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<doc>Waits until element ``locator`` is visible.</doc>
<arguments>
<arg>${main_page_table}</arg>
</arguments>
<status status="PASS" starttime="20191027 07:37:28.065" endtime="20191027 07:37:28.093"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${Library_data}</arg>
</arguments>
<assign>
<var>${list_len}</var>
</assign>
<msg timestamp="20191027 07:37:28.095" level="INFO">Length is 4</msg>
<msg timestamp="20191027 07:37:28.095" level="INFO">${list_len} = 4</msg>
<status status="PASS" starttime="20191027 07:37:28.094" endtime="20191027 07:37:28.095"></status>
</kw>
<kw name="${i} IN RANGE [ 1 | ${list_len} ]" type="for">
<kw name="${i} = 1" type="foritem">
<kw name="Table Column Should Contain" library="SeleniumLibrary">
<doc>Verifies table column contains text ``expected``.</doc>
<arguments>
<arg>${main_page_table}</arg>
<arg>${i}</arg>
<arg>@{Library_data}[${i-1}]</arg>
</arguments>
<status status="PASS" starttime="20191027 07:37:28.096" endtime="20191027 07:37:28.312"></status>
</kw>
<status status="PASS" starttime="20191027 07:37:28.096" endtime="20191027 07:37:28.312"></status>
</kw>
<kw name="${i} = 2" type="foritem">
<kw name="Table Column Should Contain" library="SeleniumLibrary">
<doc>Verifies table column contains text ``expected``.</doc>
<arguments>
<arg>${main_page_table}</arg>
<arg>${i}</arg>
<arg>@{Library_data}[${i-1}]</arg>
</arguments>
<status status="PASS" starttime="20191027 07:37:28.313" endtime="20191027 07:37:28.528"></status>
</kw>
<status status="PASS" starttime="20191027 07:37:28.313" endtime="20191027 07:37:28.529"></status>
</kw>
<kw name="${i} = 3" type="foritem">
<kw name="Table Column Should Contain" library="SeleniumLibrary">
<doc>Verifies table column contains text ``expected``.</doc>
<arguments>
<arg>${main_page_table}</arg>
<arg>${i}</arg>
<arg>@{Library_data}[${i-1}]</arg>
</arguments>
<status status="PASS" starttime="20191027 07:37:28.529" endtime="20191027 07:37:28.575"></status>
</kw>
<status status="PASS" starttime="20191027 07:37:28.529" endtime="20191027 07:37:28.575"></status>
</kw>
<status status="PASS" starttime="20191027 07:37:28.096" endtime="20191027 07:37:28.575"></status>
</kw>
<status status="PASS" starttime="20191027 07:37:28.064" endtime="20191027 07:37:28.576"></status>
</kw>
<kw name="Table Should Contain Library Data">
<arguments>
<arg>test_robot</arg>
<arg>resource</arg>
<arg>${EMPTY}</arg>
<arg>4</arg>
</arguments>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<doc>Waits until element ``locator`` is visible.</doc>
<arguments>
<arg>${main_page_table}</arg>
</arguments>
<status status="PASS" starttime="20191027 07:37:28.577" endtime="20191027 07:37:28.604"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${Library_data}</arg>
</arguments>
<assign>
<var>${list_len}</var>
</assign>
<msg timestamp="20191027 07:37:28.605" level="INFO">Length is 4</msg>
<msg timestamp="20191027 07:37:28.605" level="INFO">${list_len} = 4</msg>
<status status="PASS" starttime="20191027 07:37:28.604" endtime="20191027 07:37:28.605"></status>
</kw>
<kw name="${i} IN RANGE [ 1 | ${list_len} ]" type="for">
<kw name="${i} = 1" type="foritem">
<kw name="Table Column Should Contain" library="SeleniumLibrary">
<doc>Verifies table column contains text ``expected``.</doc>
<arguments>
<arg>${main_page_table}</arg>
<arg>${i}</arg>
<arg>@{Library_data}[${i-1}]</arg>
</arguments>
<status status="PASS" starttime="20191027 07:37:28.607" endtime="20191027 07:37:28.838"></status>
</kw>
<status status="PASS" starttime="20191027 07:37:28.607" endtime="20191027 07:37:28.838"></status>
</kw>
<kw name="${i} = 2" type="foritem">
<kw name="Table Column Should Contain" library="SeleniumLibrary">
<doc>Verifies table column contains text ``expected``.</doc>
<arguments>
<arg>${main_page_table}</arg>
<arg>${i}</arg>
<arg>@{Library_data}[${i-1}]</arg>
</arguments>
<status status="PASS" starttime="20191027 07:37:28.839" endtime="20191027 07:37:29.034"></status>
</kw>
<status status="PASS" starttime="20191027 07:37:28.839" endtime="20191027 07:37:29.034"></status>
</kw>
<kw name="${i} = 3" type="foritem">
<kw name="Table Column Should Contain" library="SeleniumLibrary">
<doc>Verifies table column contains text ``expected``.</doc>
<arguments>
<arg>${main_page_table}</arg>
<arg>${i}</arg>
<arg>@{Library_data}[${i-1}]</arg>
</arguments>
<status status="PASS" starttime="20191027 07:37:29.035" endtime="20191027 07:37:29.083"></status>
</kw>
<status status="PASS" starttime="20191027 07:37:29.035" endtime="20191027 07:37:29.083"></status>
</kw>
<status status="PASS" starttime="20191027 07:37:28.606" endtime="20191027 07:37:29.083"></status>
</kw>
<status status="PASS" starttime="20191027 07:37:28.576" endtime="20191027 07:37:29.084"></status>
</kw>
<doc>This test bases on
'Populated App Should Show Number Of Collections'
to shorten execution time.</doc>
<status status="PASS" starttime="20191027 07:37:26.030" endtime="20191027 07:37:29.084" critical="yes"></status>
</test>
<test id="s1-s1-s1-s3-t4" name="Left Panel Should Contain Expected Libraries Library">
<kw name="Navigate To Main Page" library="keywords" type="setup">
<kw name="Go To" library="SeleniumLibrary">
<doc>Navigates the active browser instance to the provided ``url``.</doc>
<arguments>
<arg>localhost:8000</arg>
</arguments>
<msg timestamp="20191027 07:37:29.088" level="INFO">Opening url 'localhost:8000'</msg>
<status status="PASS" starttime="20191027 07:37:29.087" endtime="20191027 07:37:29.216"></status>
</kw>
<status status="PASS" starttime="20191027 07:37:29.087" endtime="20191027 07:37:29.216"></status>
</kw>
<kw name="Left Panel Should Contain Every Library">
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<doc>Waits until element ``locator`` is visible.</doc>
<arguments>
<arg>${main_page_table}</arg>
</arguments>
<status status="PASS" starttime="20191027 07:37:29.218" endtime="20191027 07:37:29.280"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${expected_libraries}</arg>
</arguments>
<assign>
<var>${list_len}</var>
</assign>
<msg timestamp="20191027 07:37:29.281" level="INFO">Length is 7</msg>
<msg timestamp="20191027 07:37:29.281" level="INFO">${list_len} = 7</msg>
<status status="PASS" starttime="20191027 07:37:29.280" endtime="20191027 07:37:29.282"></status>
</kw>
<kw name="${i} IN RANGE [ 1 | ${list_len} ]" type="for">
<kw name="${i} = 1" type="foritem">
<kw name="Element Text Should Be" library="SeleniumLibrary">
<doc>Verifies that element ``locator`` contains exact text ``expected``.</doc>
<arguments>
<arg>${left_panel_list}/li[${i}]/div/span</arg>
<arg>@{expected_libraries}[${i-1}]</arg>
</arguments>
<msg timestamp="20191027 07:37:29.284" level="INFO">Verifying element '//*[@id="root"]/div/div/div/ul/li[1]/div/span' contains exact text 'LibWithEmptyInit1'.</msg>
<status status="PASS" starttime="20191027 07:37:29.283" endtime="20191027 07:37:29.318"></status>
</kw>
<status status="PASS" starttime="20191027 07:37:29.282" endtime="20191027 07:37:29.318"></status>
</kw>
<kw name="${i} = 2" type="foritem">
<kw name="Element Text Should Be" library="SeleniumLibrary">
<doc>Verifies that element ``locator`` contains exact text ``expected``.</doc>
<arguments>
<arg>${left_panel_list}/li[${i}]/div/span</arg>
<arg>@{expected_libraries}[${i-1}]</arg>
</arguments>
<msg timestamp="20191027 07:37:29.320" level="INFO">Verifying element '//*[@id="root"]/div/div/div/ul/li[2]/div/span' contains exact text 'LibWithEmptyInit2'.</msg>
<status status="PASS" starttime="20191027 07:37:29.319" endtime="20191027 07:37:29.354"></status>
</kw>
<status status="PASS" starttime="20191027 07:37:29.319" endtime="20191027 07:37:29.354"></status>
</kw>
<kw name="${i} = 3" type="foritem">
<kw name="Element Text Should Be" library="SeleniumLibrary">
<doc>Verifies that element ``locator`` contains exact text ``expected``.</doc>
<arguments>
<arg>${left_panel_list}/li[${i}]/div/span</arg>
<arg>@{expected_libraries}[${i-1}]</arg>
</arguments>
<msg timestamp="20191027 07:37:29.356" level="INFO">Verifying element '//*[@id="root"]/div/div/div/ul/li[3]/div/span' contains exact text 'LibWithInit'.</msg>
<status status="PASS" starttime="20191027 07:37:29.355" endtime="20191027 07:37:29.388"></status>
</kw>
<status status="PASS" starttime="20191027 07:37:29.355" endtime="20191027 07:37:29.389"></status>
</kw>
<kw name="${i} = 4" type="foritem">
<kw name="Element Text Should Be" library="SeleniumLibrary">
<doc>Verifies that element ``locator`` contains exact text ``expected``.</doc>
<arguments>
<arg>${left_panel_list}/li[${i}]/div/span</arg>
<arg>@{expected_libraries}[${i-1}]</arg>
</arguments>
<msg timestamp="20191027 07:37:29.391" level="INFO">Verifying element '//*[@id="root"]/div/div/div/ul/li[4]/div/span' contains exact text 'SingleClassLib'.</msg>
<status status="PASS" starttime="20191027 07:37:29.390" endtime="20191027 07:37:29.423"></status>
</kw>
<status status="PASS" starttime="20191027 07:37:29.389" endtime="20191027 07:37:29.424"></status>
</kw>
<kw name="${i} = 5" type="foritem">
<kw name="Element Text Should Be" library="SeleniumLibrary">
<doc>Verifies that element ``locator`` contains exact text ``expected``.</doc>
<arguments>
<arg>${left_panel_list}/li[${i}]/div/span</arg>
<arg>@{expected_libraries}[${i-1}]</arg>
</arguments>
<msg timestamp="20191027 07:37:29.426" level="INFO">Verifying element '//*[@id="root"]/div/div/div/ul/li[5]/div/span' contains exact text 'Test Libdoc File'.</msg>
<status status="PASS" starttime="20191027 07:37:29.425" endtime="20191027 07:37:29.460"></status>
</kw>
<status status="PASS" starttime="20191027 07:37:29.424" endtime="20191027 07:37:29.460"></status>
</kw>
<kw name="${i} = 6" type="foritem">
<kw name="Element Text Should Be" library="SeleniumLibrary">
<doc>Verifies that element ``locator`` contains exact text ``expected``.</doc>
<arguments>
<arg>${left_panel_list}/li[${i}]/div/span</arg>
<arg>@{expected_libraries}[${i-1}]</arg>
</arguments>
<msg timestamp="20191027 07:37:29.462" level="INFO">Verifying element '//*[@id="root"]/div/div/div/ul/li[6]/div/span' contains exact text 'test_resource'.</msg>
<status status="PASS" starttime="20191027 07:37:29.461" endtime="20191027 07:37:29.503"></status>
</kw>
<status status="PASS" starttime="20191027 07:37:29.460" endtime="20191027 07:37:29.503"></status>
</kw>
<status status="PASS" starttime="20191027 07:37:29.282" endtime="20191027 07:37:29.503"></status>
</kw>
<status status="PASS" starttime="20191027 07:37:29.217" endtime="20191027 07:37:29.504"></status>
</kw>
<doc>This test bases on
'Populated App Should Show Number Of Collections'
to shorten execution time.</doc>
<status status="PASS" starttime="20191027 07:37:29.085" endtime="20191027 07:37:29.504" critical="yes"></status>
</test>
<test id="s1-s1-s1-s3-t5" name="Left Panel Should Contain Library Keywords In Alphabetical Order After Click">
<kw name="Navigate To Main Page" library="keywords" type="setup">
<kw name="Go To" library="SeleniumLibrary">
<doc>Navigates the active browser instance to the provided ``url``.</doc>
<arguments>
<arg>localhost:8000</arg>
</arguments>
<msg timestamp="20191027 07:37:29.508" level="INFO">Opening url 'localhost:8000'</msg>
<status status="PASS" starttime="20191027 07:37:29.508" endtime="20191027 07:37:29.625"></status>
</kw>
<status status="PASS" starttime="20191027 07:37:29.507" endtime="20191027 07:37:29.626"></status>
</kw>
<kw name="Open ${single_class_lib} In Left Panel">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Element Should Not Be Visible</arg>
<arg>${hamburger}</arg>
</arguments>
<assign>
<var>${is_visible}</var>
</assign>
<kw name="Element Should Not Be Visible" library="SeleniumLibrary">
<doc>Verifies that the element identified by ``locator`` is NOT visible.</doc>
<arguments>
<arg>${hamburger}</arg>
</arguments>
<msg timestamp="20191027 07:37:29.678" level="INFO">Element '//*[@id="root"]/div/header/div/button/span[1]/svg/path' did not exist.</msg>
<status status="PASS" starttime="20191027 07:37:29.629" endtime="20191027 07:37:29.678"></status>
</kw>
<msg timestamp="20191027 07:37:29.679" level="INFO">${is_visible} = True</msg>
<status status="PASS" starttime="20191027 07:37:29.628" endtime="20191027 07:37:29.679"></status>
</kw>
<kw name="Run Keyword Unless" library="BuiltIn">
<doc>Runs the given keyword with the given arguments if ``condition`` is false.</doc>
<arguments>
<arg>${is_visible}</arg>
<arg>Click Element</arg>
<arg>${hamburger}</arg>
</arguments>
<status status="PASS" starttime="20191027 07:37:29.680" endtime="20191027 07:37:29.681"></status>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<doc>Waits until element ``locator`` is visible.</doc>
<arguments>
<arg>${library}</arg>
</arguments>
<status status="PASS" starttime="20191027 07:37:29.681" endtime="20191027 07:37:29.718"></status>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click element identified by ``locator``.</doc>
<arguments>
<arg>${library}</arg>
</arguments>
<msg timestamp="20191027 07:37:29.719" level="INFO">Clicking element '//*[contains(text(),"SingleClassLib")]'.</msg>
<status status="PASS" starttime="20191027 07:37:29.718" endtime="20191027 07:37:29.794"></status>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<doc>Waits until element ``locator`` is visible.</doc>
<arguments>
<arg>//*[contains(text(),'Overview')]</arg>
</arguments>
<status status="PASS" starttime="20191027 07:37:29.795" endtime="20191027 07:37:30.061"></status>
</kw>
<status status="PASS" starttime="20191027 07:37:29.627" endtime="20191027 07:37:30.062"></status>
</kw>
<kw name="Left Panel For Single Library Should Contain Expected Keywords">
<arguments>
<arg>@{expected_keywords}</arg>
</arguments>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${keywords}</arg>
</arguments>
<assign>
<var>${list_len}</var>
</assign>
<msg timestamp="20191027 07:37:30.064" level="INFO">Length is 4</msg>
<msg timestamp="20191027 07:37:30.065" level="INFO">${list_len} = 4</msg>
<status status="PASS" starttime="20191027 07:37:30.064" endtime="20191027 07:37:30.065"></status>
</kw>
<kw name="${i} IN RANGE [ 1 | ${list_len} ]" type="for">
<kw name="${i} = 1" type="foritem">
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Element Text Should Be</arg>
<arg>${single_class_lib_items}/div[${i+1}]/a/div/span</arg>
<arg>@{keywords}[${i}]</arg>
</arguments>
<kw name="Element Text Should Be" library="SeleniumLibrary">
<doc>Verifies that element ``locator`` contains exact text ``expected``.</doc>
<arguments>
<arg>${single_class_lib_items}/div[${i+1}]/a/div/span</arg>
<arg>@{keywords}[${i}]</arg>
</arguments>
<msg timestamp="20191027 07:37:30.068" level="INFO">Verifying element '//*[@id="root"]/div/div/div/ul/div/div/div/div/div[2]/a/div/span' contains exact text 'Single Class Lib Method 1'.</msg>
<status status="PASS" starttime="20191027 07:37:30.067" endtime="20191027 07:37:30.106"></status>
</kw>
<status status="PASS" starttime="20191027 07:37:30.066" endtime="20191027 07:37:30.106"></status>
</kw>
<status status="PASS" starttime="20191027 07:37:30.066" endtime="20191027 07:37:30.106"></status>
</kw>
<kw name="${i} = 2" type="foritem">
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Element Text Should Be</arg>
<arg>${single_class_lib_items}/div[${i+1}]/a/div/span</arg>
<arg>@{keywords}[${i}]</arg>
</arguments>
<kw name="Element Text Should Be" library="SeleniumLibrary">
<doc>Verifies that element ``locator`` contains exact text ``expected``.</doc>
<arguments>
<arg>${single_class_lib_items}/div[${i+1}]/a/div/span</arg>
<arg>@{keywords}[${i}]</arg>
</arguments>
<msg timestamp="20191027 07:37:30.109" level="INFO">Verifying element '//*[@id="root"]/div/div/div/ul/div/div/div/div/div[3]/a/div/span' contains exact text 'Single Class Lib Method 2'.</msg>
<status status="PASS" starttime="20191027 07:37:30.108" endtime="20191027 07:37:30.148"></status>
</kw>
<status status="PASS" starttime="20191027 07:37:30.107" endtime="20191027 07:37:30.148"></status>
</kw>
<status status="PASS" starttime="20191027 07:37:30.107" endtime="20191027 07:37:30.148"></status>
</kw>
<kw name="${i} = 3" type="foritem">
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Element Text Should Be</arg>
<arg>${single_class_lib_items}/div[${i+1}]/a/div/span</arg>
<arg>@{keywords}[${i}]</arg>
</arguments>
<kw name="Element Text Should Be" library="SeleniumLibrary">
<doc>Verifies that element ``locator`` contains exact text ``expected``.</doc>
<arguments>
<arg>${single_class_lib_items}/div[${i+1}]/a/div/span</arg>
<arg>@{keywords}[${i}]</arg>
</arguments>
<msg timestamp="20191027 07:37:30.151" level="INFO">Verifying element '//*[@id="root"]/div/div/div/ul/div/div/div/div/div[4]/a/div/span' contains exact text 'Single Class Lib Method 3'.</msg>
<status status="PASS" starttime="20191027 07:37:30.150" endtime="20191027 07:37:30.186"></status>
</kw>
<status status="PASS" starttime="20191027 07:37:30.149" endtime="20191027 07:37:30.186"></status>
</kw>
<status status="PASS" starttime="20191027 07:37:30.149" endtime="20191027 07:37:30.187"></status>
</kw>
<status status="PASS" starttime="20191027 07:37:30.065" endtime="20191027 07:37:30.187"></status>
</kw>
<status status="PASS" starttime="20191027 07:37:30.062" endtime="20191027 07:37:30.188"></status>
</kw>
<doc>This test bases on
'Populated App Should Show Number Of Collections'
to shorten execution time.</doc>
<tags>
<tag>regression</tag>
<tag>rfhub2-46</tag>
</tags>
<status status="PASS" starttime="20191027 07:37:29.505" endtime="20191027 07:37:30.188" critical="yes"></status>
</test>
<test id="s1-s1-s1-s3-t6" name="Left Panel Keywords Should Navigate To Library Details And Show Correct Data">
<kw name="Navigate To Main Page" library="keywords" type="setup">
<kw name="Go To" library="SeleniumLibrary">
<doc>Navigates the active browser instance to the provided ``url``.</doc>
<arguments>
<arg>localhost:8000</arg>
</arguments>
<msg timestamp="20191027 07:37:30.192" level="INFO">Opening url 'localhost:8000'</msg>
<status status="PASS" starttime="20191027 07:37:30.191" endtime="20191027 07:37:30.294"></status>
</kw>
<status status="PASS" starttime="20191027 07:37:30.190" endtime="20191027 07:37:30.295"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20191027 07:37:31.296" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20191027 07:37:30.296" endtime="20191027 07:37:31.296"></status>
</kw>
<kw name="Open ${lib_with_init} In Left Panel">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Element Should Not Be Visible</arg>
<arg>${hamburger}</arg>
</arguments>
<assign>
<var>${is_visible}</var>
</assign>
<kw name="Element Should Not Be Visible" library="SeleniumLibrary">
<doc>Verifies that the element identified by ``locator`` is NOT visible.</doc>
<arguments>
<arg>${hamburger}</arg>
</arguments>
<msg timestamp="20191027 07:37:31.310" level="INFO">Element '//*[@id="root"]/div/header/div/button/span[1]/svg/path' did not exist.</msg>
<status status="PASS" starttime="20191027 07:37:31.298" endtime="20191027 07:37:31.311"></status>
</kw>
<msg timestamp="20191027 07:37:31.311" level="INFO">${is_visible} = True</msg>
<status status="PASS" starttime="20191027 07:37:31.298" endtime="20191027 07:37:31.311"></status>
</kw>
<kw name="Run Keyword Unless" library="BuiltIn">
<doc>Runs the given keyword with the given arguments if ``condition`` is false.</doc>
<arguments>
<arg>${is_visible}</arg>
<arg>Click Element</arg>
<arg>${hamburger}</arg>
</arguments>
<status status="PASS" starttime="20191027 07:37:31.312" endtime="20191027 07:37:31.313"></status>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<doc>Waits until element ``locator`` is visible.</doc>
<arguments>
<arg>${library}</arg>
</arguments>
<status status="PASS" starttime="20191027 07:37:31.313" endtime="20191027 07:37:31.345"></status>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click element identified by ``locator``.</doc>
<arguments>
<arg>${library}</arg>
</arguments>
<msg timestamp="20191027 07:37:31.347" level="INFO">Clicking element '//*[contains(text(),"LibWithInit")]'.</msg>
<status status="PASS" starttime="20191027 07:37:31.346" endtime="20191027 07:37:31.412"></status>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<doc>Waits until element ``locator`` is visible.</doc>
<arguments>
<arg>//*[contains(text(),'Overview')]</arg>
</arguments>
<status status="PASS" starttime="20191027 07:37:31.412" endtime="20191027 07:37:31.668"></status>
</kw>
<status status="PASS" starttime="20191027 07:37:31.297" endtime="20191027 07:37:31.668"></status>
</kw>
<kw name="Click ${lib_with_init_2_method_1} In Left Panel">
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click element identified by ``locator``.</doc>
<arguments>
<arg>${keyword}</arg>
</arguments>
<msg timestamp="20191027 07:37:31.670" level="INFO">Clicking element '//*[contains(text(),"Lib With Init 2 Method 1")]'.</msg>
<status status="PASS" starttime="20191027 07:37:31.669" endtime="20191027 07:37:31.750"></status>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<doc>Waits until element ``locator`` is visible.</doc>
<arguments>
<arg>${detail_view_library_version}</arg>
</arguments>
<status status="PASS" starttime="20191027 07:37:31.750" endtime="20191027 07:37:31.800"></status>
</kw>
<status status="PASS" starttime="20191027 07:37:31.669" endtime="20191027 07:37:31.801"></status>
</kw>
<kw name="Library title Should Be LibWithInit">
<kw name="Element Text Should Be" library="SeleniumLibrary">
<doc>Verifies that element ``locator`` contains exact text ``expected``.</doc>
<arguments>
<arg>${detail_view_library_${field}}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20191027 07:37:31.803" level="INFO">Verifying element '//*[@id="root"]/div/main/div[2]/div/div/div/h2[1]' contains exact text 'LibWithInit'.</msg>
<status status="PASS" starttime="20191027 07:37:31.802" endtime="20191027 07:37:31.839"></status>
</kw>
<status status="PASS" starttime="20191027 07:37:31.801" endtime="20191027 07:37:31.840"></status>
</kw>
<kw name="Library version Should Be version: 6.6.6">
<kw name="Element Text Should Be" library="SeleniumLibrary">
<doc>Verifies that element ``locator`` contains exact text ``expected``.</doc>
<arguments>
<arg>${detail_view_library_${field}}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20191027 07:37:31.842" level="INFO">Verifying element '//*[@id="root"]/div/main/div[2]/div/div/div/div[1]' contains exact text 'version: 6.6.6'.</msg>
<status status="PASS" starttime="20191027 07:37:31.841" endtime="20191027 07:37:31.870"></status>
</kw>
<status status="PASS" starttime="20191027 07:37:31.840" endtime="20191027 07:37:31.871"></status>
</kw>
<kw name="Library scope Should Be scope: global">
<kw name="Element Text Should Be" library="SeleniumLibrary">
<doc>Verifies that element ``locator`` contains exact text ``expected``.</doc>
<arguments>
<arg>${detail_view_library_${field}}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20191027 07:37:31.873" level="INFO">Verifying element '//*[@id="root"]/div/main/div[2]/div/div/div/div[2]' contains exact text 'scope: global'.</msg>
<status status="PASS" starttime="20191027 07:37:31.872" endtime="20191027 07:37:31.907"></status>
</kw>
<status status="PASS" starttime="20191027 07:37:31.871" endtime="20191027 07:37:31.907"></status>
</kw>
<kw name="Library overview Should Be This is a docstring that should be imported as overview">
<kw name="Element Text Should Be" library="SeleniumLibrary">
<doc>Verifies that element ``locator`` contains exact text ``expected``.</doc>
<arguments>
<arg>${detail_view_library_${field}}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20191027 07:37:31.909" level="INFO">Verifying element '//*[@id="root"]/div/main/div[2]/div/div/div/div[4]/p' contains exact text 'This is a docstring that should be imported as overview'.</msg>
<status status="PASS" starttime="20191027 07:37:31.909" endtime="20191027 07:37:31.943"></status>
</kw>
<status status="PASS" starttime="20191027 07:37:31.908" endtime="20191027 07:37:31.943"></status>
</kw>
<kw name="Library keywords Should Be Keywords (4)">
<kw name="Element Text Should Be" library="SeleniumLibrary">
<doc>Verifies that element ``locator`` contains exact text ``expected``.</doc>
<arguments>
<arg>${detail_view_library_${field}}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20191027 07:37:31.945" level="INFO">Verifying element '//*[@id="root"]/div/main/div[2]/div/div/div/h2[2]' contains exact text 'Keywords (4)'.</msg>
<status status="PASS" starttime="20191027 07:37:31.945" endtime="20191027 07:37:31.979"></status>
</kw>
<status status="PASS" starttime="20191027 07:37:31.944" endtime="20191027 07:37:31.979"></status>
</kw>
<doc>This test bases on
'Populated App Should Show Number Of Collections'
to shorten execution time.</doc>
<status status="PASS" starttime="20191027 07:37:30.189" endtime="20191027 07:37:31.980" critical="yes"></status>
</test>
<test id="s1-s1-s1-s3-t7" name="Main Page Libraries Should Navigate To Library Details">
<kw name="Navigate To Main Page" library="keywords" type="setup">
<kw name="Go To" library="SeleniumLibrary">
<doc>Navigates the active browser instance to the provided ``url``.</doc>
<arguments>
<arg>localhost:8000</arg>
</arguments>
<msg timestamp="20191027 07:37:31.983" level="INFO">Opening url 'localhost:8000'</msg>
<status status="PASS" starttime="20191027 07:37:31.983" endtime="20191027 07:37:32.089"></status>
</kw>
<status status="PASS" starttime="20191027 07:37:31.982" endtime="20191027 07:37:32.090"></status>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<doc>Waits until element ``locator`` is visible.</doc>
<arguments>
<arg>${test_libdoc_file}</arg>
</arguments>
<status status="PASS" starttime="20191027 07:37:32.091" endtime="20191027 07:37:32.154"></status>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click element identified by ``locator``.</doc>
<arguments>
<arg>${test_libdoc_file}</arg>
</arguments>
<msg timestamp="20191027 07:37:32.156" level="INFO">Clicking element '//a[contains(text(), "Test Libdoc File")]'.</msg>
<status status="PASS" starttime="20191027 07:37:32.155" endtime="20191027 07:37:32.236"></status>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<doc>Waits until element ``locator`` is visible.</doc>
<arguments>
<arg>${detail_view_library_version}</arg>
</arguments>
<status status="PASS" starttime="20191027 07:37:32.236" endtime="20191027 07:37:32.291"></status>
</kw>
<kw name="Library title Should Be Test Libdoc File">
<kw name="Element Text Should Be" library="SeleniumLibrary">
<doc>Verifies that element ``locator`` contains exact text ``expected``.</doc>
<arguments>
<arg>${detail_view_library_${field}}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20191027 07:37:32.293" level="INFO">Verifying element '//*[@id="root"]/div/main/div[2]/div/div/div/h2[1]' contains exact text 'Test Libdoc File'.</msg>
<status status="PASS" starttime="20191027 07:37:32.292" endtime="20191027 07:37:32.321"></status>
</kw>
<status status="PASS" starttime="20191027 07:37:32.291" endtime="20191027 07:37:32.322"></status>
</kw>
<kw name="Library version Should Be version: 3.2.0">
<kw name="Element Text Should Be" library="SeleniumLibrary">
<doc>Verifies that element ``locator`` contains exact text ``expected``.</doc>
<arguments>
<arg>${detail_view_library_${field}}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20191027 07:37:32.324" level="INFO">Verifying element '//*[@id="root"]/div/main/div[2]/div/div/div/div[1]' contains exact text 'version: 3.2.0'.</msg>
<status status="PASS" starttime="20191027 07:37:32.324" endtime="20191027 07:37:32.351"></status>
</kw>
<status status="PASS" starttime="20191027 07:37:32.323" endtime="20191027 07:37:32.352"></status>
</kw>
<kw name="Library scope Should Be scope: global">
<kw name="Element Text Should Be" library="SeleniumLibrary">
<doc>Verifies that element ``locator`` contains exact text ``expected``.</doc>
<arguments>
<arg>${detail_view_library_${field}}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20191027 07:37:32.354" level="INFO">Verifying element '//*[@id="root"]/div/main/div[2]/div/div/div/div[2]' contains exact text 'scope: global'.</msg>
<status status="PASS" starttime="20191027 07:37:32.353" endtime="20191027 07:37:32.382"></status>
</kw>
<status status="PASS" starttime="20191027 07:37:32.352" endtime="20191027 07:37:32.383"></status>
</kw>
<kw name="Library overview Should Be Documentation for library Test Libdoc File.">
<kw name="Element Text Should Be" library="SeleniumLibrary">
<doc>Verifies that element ``locator`` contains exact text ``expected``.</doc>
<arguments>
<arg>${detail_view_library_${field}}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20191027 07:37:32.385" level="INFO">Verifying element '//*[@id="root"]/div/main/div[2]/div/div/div/div[4]/p' contains exact text 'Documentation for library Test Libdoc File.'.</msg>
<status status="PASS" starttime="20191027 07:37:32.384" endtime="20191027 07:37:32.414"></status>
</kw>
<status status="PASS" starttime="20191027 07:37:32.383" endtime="20191027 07:37:32.414"></status>
</kw>
<kw name="Library keywords Should Be Keywords (1)">
<kw name="Element Text Should Be" library="SeleniumLibrary">
<doc>Verifies that element ``locator`` contains exact text ``expected``.</doc>
<arguments>
<arg>${detail_view_library_${field}}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20191027 07:37:32.416" level="INFO">Verifying element '//*[@id="root"]/div/main/div[2]/div/div/div/h2[2]' contains exact text 'Keywords (1)'.</msg>
<status status="PASS" starttime="20191027 07:37:32.416" endtime="20191027 07:37:32.445"></status>
</kw>
<status status="PASS" starttime="20191027 07:37:32.415" endtime="20191027 07:37:32.446"></status>
</kw>
<doc>This test bases on
'Populated App Should Show Number Of Collections'
to shorten execution time.</doc>
<status status="PASS" starttime="20191027 07:37:31.981" endtime="20191027 07:37:32.446" critical="yes"></status>
</test>
<test id="s1-s1-s1-s3-t8" name="Search Should Return Expected Results">
<kw name="Navigate To Main Page" library="keywords" type="setup">
<kw name="Go To" library="SeleniumLibrary">
<doc>Navigates the active browser instance to the provided ``url``.</doc>
<arguments>
<arg>localhost:8000</arg>
</arguments>
<msg timestamp="20191027 07:37:32.450" level="INFO">Opening url 'localhost:8000'</msg>
<status status="PASS" starttime="20191027 07:37:32.449" endtime="20191027 07:37:32.586"></status>
</kw>
<status status="PASS" starttime="20191027 07:37:32.449" endtime="20191027 07:37:32.587"></status>
</kw>
<kw name="Search For Method Should Return Expected Values">
<arguments>
<arg>Method 3</arg>
<arg>1</arg>
<arg>Single Class Lib Method 3</arg>
<arg>SingleClassLib</arg>
<arg>Docstring for single_class_lib_method_3 with two params</arg>
</arguments>
<kw name="Search For">
<arguments>
<arg>${method}</arg>
</arguments>
<kw name="Navigate To Main Page" library="keywords">
<kw name="Go To" library="SeleniumLibrary">
<doc>Navigates the active browser instance to the provided ``url``.</doc>
<arguments>
<arg>localhost:8000</arg>
</arguments>
<msg timestamp="20191027 07:37:32.590" level="INFO">Opening url 'localhost:8000'</msg>
<status status="PASS" starttime="20191027 07:37:32.590" endtime="20191027 07:37:32.693"></status>
</kw>
<status status="PASS" starttime="20191027 07:37:32.589" endtime="20191027 07:37:32.694"></status>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<doc>Types the given ``text`` into text field identified by ``locator``.</doc>
<arguments>
<arg>${search_field}</arg>
<arg>${text}</arg>
</arguments>
<msg timestamp="20191027 07:37:32.696" level="INFO">Typing text 'Method 3' into text field '//*[@id="root"]/div/header/div/div/div[2]/input'.</msg>
<status status="PASS" starttime="20191027 07:37:32.695" endtime="20191027 07:37:33.005"></status>
</kw>
<kw name="Reload Page" library="SeleniumLibrary">
<doc>Simulates user reloading page.</doc>
<status status="PASS" starttime="20191027 07:37:33.005" endtime="20191027 07:37:33.119"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.5s</arg>
</arguments>
<msg timestamp="20191027 07:37:33.621" level="INFO">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20191027 07:37:33.120" endtime="20191027 07:37:33.621"></status>
</kw>
<status status="PASS" starttime="20191027 07:37:32.588" endtime="20191027 07:37:33.622"></status>
</kw>
<kw name="Search Results Count Should Be ${results_count}">
<kw name="Element ${search_result_table} Count Should Be ${n}">
<kw name="Get Element Count" library="SeleniumLibrary">
<doc>Returns number of elements matching ``locator``.</doc>
<arguments>
<arg>${element}</arg>
</arguments>
<assign>
<var>${count}</var>
</assign>
<msg timestamp="20191027 07:37:33.644" level="INFO">${count} = 1</msg>
<status status="PASS" starttime="20191027 07:37:33.625" endtime="20191027 07:37:33.644"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${count}</arg>
<arg>${n}</arg>
</arguments>
<msg timestamp="20191027 07:37:33.645" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20191027 07:37:33.645" endtime="20191027 07:37:33.646"></status>
</kw>
<status status="PASS" starttime="20191027 07:37:33.624" endtime="20191027 07:37:33.647"></status>
</kw>
<status status="PASS" starttime="20191027 07:37:33.623" endtime="20191027 07:37:33.647"></status>
</kw>
<kw name="Table Should Contain Library Data">
<arguments>
<arg>@{results_data}</arg>
</arguments>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<doc>Waits until element ``locator`` is visible.</doc>
<arguments>
<arg>${main_page_table}</arg>
</arguments>
<status status="PASS" starttime="20191027 07:37:33.649" endtime="20191027 07:37:33.681"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${Library_data}</arg>
</arguments>
<assign>
<var>${list_len}</var>
</assign>
<msg timestamp="20191027 07:37:33.682" level="INFO">Length is 3</msg>
<msg timestamp="20191027 07:37:33.683" level="INFO">${list_len} = 3</msg>
<status status="PASS" starttime="20191027 07:37:33.682" endtime="20191027 07:37:33.683"></status>
</kw>
<kw name="${i} IN RANGE [ 1 | ${list_len} ]" type="for">
<kw name="${i} = 1" type="foritem">
<kw name="Table Column Should Contain" library="SeleniumLibrary">
<doc>Verifies table column contains text ``expected``.</doc>
<arguments>
<arg>${main_page_table}</arg>
<arg>${i}</arg>
<arg>@{Library_data}[${i-1}]</arg>
</arguments>
<status status="PASS" starttime="20191027 07:37:33.684" endtime="20191027 07:37:33.767"></status>
</kw>
<status status="PASS" starttime="20191027 07:37:33.684" endtime="20191027 07:37:33.768"></status>
</kw>
<kw name="${i} = 2" type="foritem">
<kw name="Table Column Should Contain" library="SeleniumLibrary">
<doc>Verifies table column contains text ``expected``.</doc>
<arguments>
<arg>${main_page_table}</arg>
<arg>${i}</arg>
<arg>@{Library_data}[${i-1}]</arg>
</arguments>
<status status="PASS" starttime="20191027 07:37:33.769" endtime="20191027 07:37:33.851"></status>
</kw>
<status status="PASS" starttime="20191027 07:37:33.768" endtime="20191027 07:37:33.851"></status>
</kw>
<status status="PASS" starttime="20191027 07:37:33.683" endtime="20191027 07:37:33.852"></status>
</kw>
<status status="PASS" starttime="20191027 07:37:33.648" endtime="20191027 07:37:33.852"></status>
</kw>
<status status="PASS" starttime="20191027 07:37:32.587" endtime="20191027 07:37:33.853"></status>
</kw>
<kw name="Search For Method Should Return Expected Values">
<arguments>
<arg>Keyword*Doub</arg>
<arg>1</arg>
<arg>Keyword With Args With Double Quotation Mark</arg>
<arg>test_robot</arg>
<arg>Keyword With Args With Double Quotation Mark</arg>
</arguments>
<kw name="Search For">
<arguments>
<arg>${method}</arg>
</arguments>
<kw name="Navigate To Main Page" library="keywords">
<kw name="Go To" library="SeleniumLibrary">
<doc>Navigates the active browser instance to the provided ``url``.</doc>
<arguments>
<arg>localhost:8000</arg>
</arguments>
<msg timestamp="20191027 07:37:33.856" level="INFO">Opening url 'localhost:8000'</msg>
<status status="PASS" starttime="20191027 07:37:33.856" endtime="20191027 07:37:33.967"></status>
</kw>
<status status="PASS" starttime="20191027 07:37:33.855" endtime="20191027 07:37:33.968"></status>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<doc>Types the given ``text`` into text field identified by ``locator``.</doc>
<arguments>
<arg>${search_field}</arg>
<arg>${text}</arg>
</arguments>
<msg timestamp="20191027 07:37:33.969" level="INFO">Typing text 'Keyword*Doub' into text field '//*[@id="root"]/div/header/div/div/div[2]/input'.</msg>
<status status="PASS" starttime="20191027 07:37:33.968" endtime="20191027 07:37:34.287"></status>
</kw>
<kw name="Reload Page" library="SeleniumLibrary">
<doc>Simulates user reloading page.</doc>
<status status="PASS" starttime="20191027 07:37:34.287" endtime="20191027 07:37:34.406"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.5s</arg>
</arguments>
<msg timestamp="20191027 07:37:34.908" level="INFO">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20191027 07:37:34.407" endtime="20191027 07:37:34.909"></status>
</kw>
<status status="PASS" starttime="20191027 07:37:33.854" endtime="20191027 07:37:34.910"></status>
</kw>
<kw name="Search Results Count Should Be ${results_count}">
<kw name="Element ${search_result_table} Count Should Be ${n}">
<kw name="Get Element Count" library="SeleniumLibrary">
<doc>Returns number of elements matching ``locator``.</doc>
<arguments>
<arg>${element}</arg>
</arguments>
<assign>
<var>${count}</var>
</assign>
<msg timestamp="20191027 07:37:34.946" level="INFO">${count} = 1</msg>
<status status="PASS" starttime="20191027 07:37:34.916" endtime="20191027 07:37:34.946"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${count}</arg>
<arg>${n}</arg>
</arguments>
<msg timestamp="20191027 07:37:34.950" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20191027 07:37:34.948" endtime="20191027 07:37:34.951"></status>
</kw>
<status status="PASS" starttime="20191027 07:37:34.914" endtime="20191027 07:37:34.952"></status>
</kw>
<status status="PASS" starttime="20191027 07:37:34.912" endtime="20191027 07:37:34.953"></status>
</kw>
<kw name="Table Should Contain Library Data">
<arguments>
<arg>@{results_data}</arg>
</arguments>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<doc>Waits until element ``locator`` is visible.</doc>
<arguments>
<arg>${main_page_table}</arg>
</arguments>
<status status="PASS" starttime="20191027 07:37:34.956" endtime="20191027 07:37:34.989"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${Library_data}</arg>
</arguments>
<assign>
<var>${list_len}</var>
</assign>
<msg timestamp="20191027 07:37:34.991" level="INFO">Length is 3</msg>
<msg timestamp="20191027 07:37:34.991" level="INFO">${list_len} = 3</msg>
<status status="PASS" starttime="20191027 07:37:34.990" endtime="20191027 07:37:34.992"></status>
</kw>
<kw name="${i} IN RANGE [ 1 | ${list_len} ]" type="for">
<kw name="${i} = 1" type="foritem">
<kw name="Table Column Should Contain" library="SeleniumLibrary">
<doc>Verifies table column contains text ``expected``.</doc>
<arguments>
<arg>${main_page_table}</arg>
<arg>${i}</arg>
<arg>@{Library_data}[${i-1}]</arg>
</arguments>
<status status="PASS" starttime="20191027 07:37:34.993" endtime="20191027 07:37:35.097"></status>
</kw>
<status status="PASS" starttime="20191027 07:37:34.992" endtime="20191027 07:37:35.097"></status>
</kw>
<kw name="${i} = 2" type="foritem">
<kw name="Table Column Should Contain" library="SeleniumLibrary">
<doc>Verifies table column contains text ``expected``.</doc>
<arguments>
<arg>${main_page_table}</arg>
<arg>${i}</arg>
<arg>@{Library_data}[${i-1}]</arg>
</arguments>
<status status="PASS" starttime="20191027 07:37:35.098" endtime="20191027 07:37:35.199"></status>
</kw>
<status status="PASS" starttime="20191027 07:37:35.098" endtime="20191027 07:37:35.199"></status>
</kw>
<status status="PASS" starttime="20191027 07:37:34.992" endtime="20191027 07:37:35.199"></status>
</kw>
<status status="PASS" starttime="20191027 07:37:34.954" endtime="20191027 07:37:35.200"></status>
</kw>
<status status="PASS" starttime="20191027 07:37:33.853" endtime="20191027 07:37:35.201"></status>
</kw>
<kw name="Search For Method Should Return Expected Values">
<arguments>
<arg>name:Some</arg>
<arg>1</arg>
<arg>Someone Shall Pass</arg>
<arg>${EMPTY}</arg>
<arg>Test Libdoc File</arg>
</arguments>
<kw name="Search For">
<arguments>
<arg>${method}</arg>
</arguments>
<kw name="Navigate To Main Page" library="keywords">
<kw name="Go To" library="SeleniumLibrary">
<doc>Navigates the active browser instance to the provided ``url``.</doc>
<arguments>
<arg>localhost:8000</arg>
</arguments>
<msg timestamp="20191027 07:37:35.205" level="INFO">Opening url 'localhost:8000'</msg>
<status status="PASS" starttime="20191027 07:37:35.204" endtime="20191027 07:37:35.305"></status>
</kw>
<status status="PASS" starttime="20191027 07:37:35.204" endtime="20191027 07:37:35.305"></status>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<doc>Types the given ``text`` into text field identified by ``locator``.</doc>
<arguments>
<arg>${search_field}</arg>
<arg>${text}</arg>
</arguments>
<msg timestamp="20191027 07:37:35.307" level="INFO">Typing text 'name:Some' into text field '//*[@id="root"]/div/header/div/div/div[2]/input'.</msg>
<status status="PASS" starttime="20191027 07:37:35.306" endtime="20191027 07:37:35.600"></status>
</kw>
<kw name="Reload Page" library="SeleniumLibrary">
<doc>Simulates user reloading page.</doc>
<status status="PASS" starttime="20191027 07:37:35.601" endtime="20191027 07:37:35.705"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.5s</arg>
</arguments>
<msg timestamp="20191027 07:37:36.207" level="INFO">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20191027 07:37:35.706" endtime="20191027 07:37:36.209"></status>
</kw>
<status status="PASS" starttime="20191027 07:37:35.203" endtime="20191027 07:37:36.211"></status>
</kw>
<kw name="Search Results Count Should Be ${results_count}">
<kw name="Element ${search_result_table} Count Should Be ${n}">
<kw name="Get Element Count" library="SeleniumLibrary">
<doc>Returns number of elements matching ``locator``.</doc>
<arguments>
<arg>${element}</arg>
</arguments>
<assign>
<var>${count}</var>
</assign>
<msg timestamp="20191027 07:37:36.246" level="INFO">${count} = 1</msg>
<status status="PASS" starttime="20191027 07:37:36.217" endtime="20191027 07:37:36.246"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${count}</arg>
<arg>${n}</arg>
</arguments>
<msg timestamp="20191027 07:37:36.249" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20191027 07:37:36.248" endtime="20191027 07:37:36.251"></status>
</kw>
<status status="PASS" starttime="20191027 07:37:36.214" endtime="20191027 07:37:36.252"></status>
</kw>
<status status="PASS" starttime="20191027 07:37:36.212" endtime="20191027 07:37:36.254"></status>
</kw>
<kw name="Table Should Contain Library Data">
<arguments>
<arg>@{results_data}</arg>
</arguments>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<doc>Waits until element ``locator`` is visible.</doc>
<arguments>
<arg>${main_page_table}</arg>
</arguments>
<status status="PASS" starttime="20191027 07:37:36.257" endtime="20191027 07:37:36.317"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${Library_data}</arg>
</arguments>
<assign>
<var>${list_len}</var>
</assign>
<msg timestamp="20191027 07:37:36.319" level="INFO">Length is 3</msg>
<msg timestamp="20191027 07:37:36.320" level="INFO">${list_len} = 3</msg>
<status status="PASS" starttime="20191027 07:37:36.318" endtime="20191027 07:37:36.320"></status>
</kw>
<kw name="${i} IN RANGE [ 1 | ${list_len} ]" type="for">
<kw name="${i} = 1" type="foritem">
<kw name="Table Column Should Contain" library="SeleniumLibrary">
<doc>Verifies table column contains text ``expected``.</doc>
<arguments>
<arg>${main_page_table}</arg>
<arg>${i}</arg>
<arg>@{Library_data}[${i-1}]</arg>
</arguments>
<status status="PASS" starttime="20191027 07:37:36.322" endtime="20191027 07:37:36.449"></status>
</kw>
<status status="PASS" starttime="20191027 07:37:36.321" endtime="20191027 07:37:36.450"></status>
</kw>
<kw name="${i} = 2" type="foritem">
<kw name="Table Column Should Contain" library="SeleniumLibrary">
<doc>Verifies table column contains text ``expected``.</doc>
<arguments>
<arg>${main_page_table}</arg>
<arg>${i}</arg>
<arg>@{Library_data}[${i-1}]</arg>
</arguments>
<status status="PASS" starttime="20191027 07:37:36.451" endtime="20191027 07:37:36.516"></status>
</kw>
<status status="PASS" starttime="20191027 07:37:36.450" endtime="20191027 07:37:36.516"></status>
</kw>
<status status="PASS" starttime="20191027 07:37:36.321" endtime="20191027 07:37:36.517"></status>
</kw>
<status status="PASS" starttime="20191027 07:37:36.255" endtime="20191027 07:37:36.517"></status>
</kw>
<status status="PASS" starttime="20191027 07:37:35.201" endtime="20191027 07:37:36.518"></status>
</kw>
<kw name="Search For Method Should Return Expected Values">
<arguments>
<arg>Some in:Te</arg>
<arg>1</arg>
<arg>Someone Shall Pass</arg>
<arg>${EMPTY}</arg>
<arg>Test Libdoc File</arg>
</arguments>
<kw name="Search For">
<arguments>
<arg>${method}</arg>
</arguments>
<kw name="Navigate To Main Page" library="keywords">
<kw name="Go To" library="SeleniumLibrary">
<doc>Navigates the active browser instance to the provided ``url``.</doc>
<arguments>
<arg>localhost:8000</arg>
</arguments>
<msg timestamp="20191027 07:37:36.522" level="INFO">Opening url 'localhost:8000'</msg>
<status status="PASS" starttime="20191027 07:37:36.521" endtime="20191027 07:37:36.618"></status>
</kw>
<status status="PASS" starttime="20191027 07:37:36.520" endtime="20191027 07:37:36.618"></status>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<doc>Types the given ``text`` into text field identified by ``locator``.</doc>
<arguments>
<arg>${search_field}</arg>
<arg>${text}</arg>
</arguments>
<msg timestamp="20191027 07:37:36.620" level="INFO">Typing text 'Some in:Te' into text field '//*[@id="root"]/div/header/div/div/div[2]/input'.</msg>
<status status="PASS" starttime="20191027 07:37:36.619" endtime="20191027 07:37:36.903"></status>
</kw>
<kw name="Reload Page" library="SeleniumLibrary">
<doc>Simulates user reloading page.</doc>
<status status="PASS" starttime="20191027 07:37:36.904" endtime="20191027 07:37:37.002"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.5s</arg>
</arguments>
<msg timestamp="20191027 07:37:37.503" level="INFO">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20191027 07:37:37.003" endtime="20191027 07:37:37.504"></status>
</kw>
<status status="PASS" starttime="20191027 07:37:36.519" endtime="20191027 07:37:37.506"></status>
</kw>
<kw name="Search Results Count Should Be ${results_count}">
<kw name="Element ${search_result_table} Count Should Be ${n}">
<kw name="Get Element Count" library="SeleniumLibrary">
<doc>Returns number of elements matching ``locator``.</doc>
<arguments>
<arg>${element}</arg>
</arguments>
<assign>
<var>${count}</var>
</assign>
<msg timestamp="20191027 07:37:37.539" level="INFO">${count} = 1</msg>
<status status="PASS" starttime="20191027 07:37:37.512" endtime="20191027 07:37:37.539"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${count}</arg>
<arg>${n}</arg>
</arguments>
<msg timestamp="20191027 07:37:37.541" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20191027 07:37:37.540" endtime="20191027 07:37:37.541"></status>
</kw>
<status status="PASS" starttime="20191027 07:37:37.509" endtime="20191027 07:37:37.542"></status>
</kw>
<status status="PASS" starttime="20191027 07:37:37.507" endtime="20191027 07:37:37.543"></status>
</kw>
<kw name="Table Should Contain Library Data">
<arguments>
<arg>@{results_data}</arg>
</arguments>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<doc>Waits until element ``locator`` is visible.</doc>
<arguments>
<arg>${main_page_table}</arg>
</arguments>
<status status="PASS" starttime="20191027 07:37:37.545" endtime="20191027 07:37:37.579"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${Library_data}</arg>
</arguments>
<assign>
<var>${list_len}</var>
</assign>
<msg timestamp="20191027 07:37:37.580" level="INFO">Length is 3</msg>
<msg timestamp="20191027 07:37:37.581" level="INFO">${list_len} = 3</msg>
<status status="PASS" starttime="20191027 07:37:37.580" endtime="20191027 07:37:37.581"></status>
</kw>
<kw name="${i} IN RANGE [ 1 | ${list_len} ]" type="for">
<kw name="${i} = 1" type="foritem">
<kw name="Table Column Should Contain" library="SeleniumLibrary">
<doc>Verifies table column contains text ``expected``.</doc>
<arguments>
<arg>${main_page_table}</arg>
<arg>${i}</arg>
<arg>@{Library_data}[${i-1}]</arg>
</arguments>
<status status="PASS" starttime="20191027 07:37:37.582" endtime="20191027 07:37:37.681"></status>
</kw>
<status status="PASS" starttime="20191027 07:37:37.582" endtime="20191027 07:37:37.682"></status>
</kw>
<kw name="${i} = 2" type="foritem">
<kw name="Table Column Should Contain" library="SeleniumLibrary">
<doc>Verifies table column contains text ``expected``.</doc>
<arguments>
<arg>${main_page_table}</arg>
<arg>${i}</arg>
<arg>@{Library_data}[${i-1}]</arg>
</arguments>
<status status="PASS" starttime="20191027 07:37:37.682" endtime="20191027 07:37:37.737"></status>
</kw>
<status status="PASS" starttime="20191027 07:37:37.682" endtime="20191027 07:37:37.737"></status>
</kw>
<status status="PASS" starttime="20191027 07:37:37.581" endtime="20191027 07:37:37.737"></status>
</kw>
<status status="PASS" starttime="20191027 07:37:37.544" endtime="20191027 07:37:37.738"></status>
</kw>
<status status="PASS" starttime="20191027 07:37:36.518" endtime="20191027 07:37:37.739"></status>
</kw>
<kw name="Search For Method Should Return Expected Values">
<arguments>
<arg>name:Sh in:Te</arg>
<arg>1</arg>
<arg>Someone Shall Pass</arg>
<arg>${EMPTY}</arg>
<arg>Test Libdoc File</arg>
</arguments>
<kw name="Search For">
<arguments>
<arg>${method}</arg>
</arguments>
<kw name="Navigate To Main Page" library="keywords">
<kw name="Go To" library="SeleniumLibrary">
<doc>Navigates the active browser instance to the provided ``url``.</doc>
<arguments>
<arg>localhost:8000</arg>
</arguments>
<msg timestamp="20191027 07:37:37.742" level="INFO">Opening url 'localhost:8000'</msg>
<status status="PASS" starttime="20191027 07:37:37.742" endtime="20191027 07:37:37.841"></status>
</kw>
<status status="PASS" starttime="20191027 07:37:37.741" endtime="20191027 07:37:37.842"></status>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<doc>Types the given ``text`` into text field identified by ``locator``.</doc>
<arguments>
<arg>${search_field}</arg>
<arg>${text}</arg>
</arguments>
<msg timestamp="20191027 07:37:37.843" level="INFO">Typing text 'name:Sh in:Te' into text field '//*[@id="root"]/div/header/div/div/div[2]/input'.</msg>
<status status="PASS" starttime="20191027 07:37:37.842" endtime="20191027 07:37:38.158"></status>
</kw>
<kw name="Reload Page" library="SeleniumLibrary">
<doc>Simulates user reloading page.</doc>
<status status="PASS" starttime="20191027 07:37:38.159" endtime="20191027 07:37:38.257"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.5s</arg>
</arguments>
<msg timestamp="20191027 07:37:38.759" level="INFO">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20191027 07:37:38.258" endtime="20191027 07:37:38.760"></status>
</kw>
<status status="PASS" starttime="20191027 07:37:37.740" endtime="20191027 07:37:38.761"></status>
</kw>
<kw name="Search Results Count Should Be ${results_count}">
<kw name="Element ${search_result_table} Count Should Be ${n}">
<kw name="Get Element Count" library="SeleniumLibrary">
<doc>Returns number of elements matching ``locator``.</doc>
<arguments>
<arg>${element}</arg>
</arguments>
<assign>
<var>${count}</var>
</assign>
<msg timestamp="20191027 07:37:38.797" level="INFO">${count} = 1</msg>
<status status="PASS" starttime="20191027 07:37:38.768" endtime="20191027 07:37:38.797"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${count}</arg>
<arg>${n}</arg>
</arguments>
<msg timestamp="20191027 07:37:38.800" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20191027 07:37:38.798" endtime="20191027 07:37:38.801"></status>
</kw>
<status status="PASS" starttime="20191027 07:37:38.765" endtime="20191027 07:37:38.802"></status>
</kw>
<status status="PASS" starttime="20191027 07:37:38.763" endtime="20191027 07:37:38.804"></status>
</kw>
<kw name="Table Should Contain Library Data">
<arguments>
<arg>@{results_data}</arg>
</arguments>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<doc>Waits until element ``locator`` is visible.</doc>
<arguments>
<arg>${main_page_table}</arg>
</arguments>
<status status="PASS" starttime="20191027 07:37:38.807" endtime="20191027 07:37:38.855"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${Library_data}</arg>
</arguments>
<assign>
<var>${list_len}</var>
</assign>
<msg timestamp="20191027 07:37:38.857" level="INFO">Length is 3</msg>
<msg timestamp="20191027 07:37:38.858" level="INFO">${list_len} = 3</msg>
<status status="PASS" starttime="20191027 07:37:38.856" endtime="20191027 07:37:38.858"></status>
</kw>
<kw name="${i} IN RANGE [ 1 | ${list_len} ]" type="for">
<kw name="${i} = 1" type="foritem">
<kw name="Table Column Should Contain" library="SeleniumLibrary">
<doc>Verifies table column contains text ``expected``.</doc>
<arguments>
<arg>${main_page_table}</arg>
<arg>${i}</arg>
<arg>@{Library_data}[${i-1}]</arg>
</arguments>
<status status="PASS" starttime="20191027 07:37:38.860" endtime="20191027 07:37:38.963"></status>
</kw>
<status status="PASS" starttime="20191027 07:37:38.859" endtime="20191027 07:37:38.963"></status>
</kw>
<kw name="${i} = 2" type="foritem">
<kw name="Table Column Should Contain" library="SeleniumLibrary">
<doc>Verifies table column contains text ``expected``.</doc>
<arguments>
<arg>${main_page_table}</arg>
<arg>${i}</arg>
<arg>@{Library_data}[${i-1}]</arg>
</arguments>
<status status="PASS" starttime="20191027 07:37:38.964" endtime="20191027 07:37:39.016"></status>
</kw>
<status status="PASS" starttime="20191027 07:37:38.964" endtime="20191027 07:37:39.017"></status>
</kw>
<status status="PASS" starttime="20191027 07:37:38.859" endtime="20191027 07:37:39.017"></status>
</kw>
<status status="PASS" starttime="20191027 07:37:38.805" endtime="20191027 07:37:39.018"></status>
</kw>
<status status="PASS" starttime="20191027 07:37:37.739" endtime="20191027 07:37:39.018"></status>
</kw>
<doc>This test bases on
'Populated App Should Show Number Of Collections'
to shorten execution time.</doc>
<status status="PASS" starttime="20191027 07:37:32.447" endtime="20191027 07:37:39.019" critical="yes"></status>
</test>
<test id="s1-s1-s1-s3-t9" name="First Page Table After Update Should Contain Proper Libraries Data">
<kw name="Test Setup For Collections Update" type="setup">
<kw name="Run Cli Package Without Installed Keywords" library="keywords">
<kw name="Run Cli Package With Options" library="keywords">
<doc>Attempt to run the rfhub2-cli package with the given options
The stdout of the process will be in a test suite
variable named ${output}</doc>
<arguments>
<arg>--no-installed-keywords ${INITIAL_FIXTURES}</arg>
</arguments>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>${ACTIVATE_VENV} rfhub2-cli ${options}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<msg timestamp="20191027 07:37:39.200" level="INFO">Running command ' rfhub2-cli --no-installed-keywords F:\Docs\Desktop\rfhub2\tests\acceptance\resources/../../fixtures/initial/ 2&gt;&amp;1'.</msg>
<msg timestamp="20191027 07:37:42.314" level="INFO">${output} = usage: script_for_system_exit [-h] -c CONF
script_for_system_exit: error: the following arguments are required: -c/--conf
Failed to create collection from path F:\Docs\Desktop\rfhub2\tests\acceptance\...</msg>
<status status="PASS" starttime="20191027 07:37:39.024" endtime="20191027 07:37:42.314"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20191027 07:37:42.317" level="INFO">${output} = usage: script_for_system_exit [-h] -c CONF
script_for_system_exit: error: the following arguments are required: -c/--conf
Failed to create collection from path F:\Docs\Desktop\rfhub2\tests\acceptance\...</msg>
<status status="PASS" starttime="20191027 07:37:42.315" endtime="20191027 07:37:42.317"></status>
</kw>
<status status="PASS" starttime="20191027 07:37:39.023" endtime="20191027 07:37:42.318"></status>
</kw>
<status status="PASS" starttime="20191027 07:37:39.022" endtime="20191027 07:37:42.318"></status>
</kw>
<kw name="Backup And Switch Initial With Updated Fixtures" library="keywords">
<kw name="Move Directory" library="OperatingSystem">
<doc>Moves the source directory into a destination.</doc>
<arguments>
<arg>${INITIAL_FIXTURES}</arg>
<arg>${BACKUP_FIXTURES}</arg>
</arguments>
<msg timestamp="20191027 07:37:42.322" level="INFO" html="yes">Moved directory from '&lt;a href="file://F:\Docs\Desktop\rfhub2\tests\fixtures\initial"&gt;F:\Docs\Desktop\rfhub2\tests\fixtures\initial&lt;/a&gt;' to '&lt;a href="file://F:\Docs\Desktop\rfhub2\tests\fixtures\initial_bkp"&gt;F:\Docs\Desktop\rfhub2\tests\fixtures\initial_bkp&lt;/a&gt;'.</msg>
<status status="PASS" starttime="20191027 07:37:42.319" endtime="20191027 07:37:42.323"></status>
</kw>
<kw name="Copy Directory" library="OperatingSystem">
<doc>Copies the source directory into the destination.</doc>
<arguments>
<arg>${UPDATED_FIXTURES}</arg>
<arg>${INITIAL_FIXTURES}</arg>
</arguments>
<msg timestamp="20191027 07:37:42.409" level="INFO" html="yes">Copied directory from '&lt;a href="file://F:\Docs\Desktop\rfhub2\tests\fixtures\updated"&gt;F:\Docs\Desktop\rfhub2\tests\fixtures\updated&lt;/a&gt;' to '&lt;a href="file://F:\Docs\Desktop\rfhub2\tests\fixtures\initial"&gt;F:\Docs\Desktop\rfhub2\tests\fixtures\initial&lt;/a&gt;'.</msg>
<status status="PASS" starttime="20191027 07:37:42.323" endtime="20191027 07:37:42.409"></status>
</kw>
<status status="PASS" starttime="20191027 07:37:42.319" endtime="20191027 07:37:42.410"></status>
</kw>
<kw name="Run Cli Package With Options" library="keywords">
<doc>Attempt to run the rfhub2-cli package with the given options
The stdout of the process will be in a test suite
variable named ${output}</doc>
<arguments>
<arg>--mode=update --no-installed-keywords ${INITIAL_FIXTURES}</arg>
</arguments>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>${ACTIVATE_VENV} rfhub2-cli ${options}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<msg timestamp="20191027 07:37:42.587" level="INFO">Running command ' rfhub2-cli --mode=update --no-installed-keywords F:\Docs\Desktop\rfhub2\tests\acceptance\resources/../../fixtures/initial/ 2&gt;&amp;1'.</msg>
<msg timestamp="20191027 07:37:45.238" level="INFO">${output} = Test Libdoc File library with 1 keywords loaded.
SingleClassLib library with 4 keywords loaded.
test_resource library with 2 keywords loaded.
Test Libdoc File Copy library with 1 keywords loaded.

Suc...</msg>
<status status="PASS" starttime="20191027 07:37:42.412" endtime="20191027 07:37:45.238"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20191027 07:37:45.240" level="INFO">${output} = Test Libdoc File library with 1 keywords loaded.
SingleClassLib library with 4 keywords loaded.
test_resource library with 2 keywords loaded.
Test Libdoc File Copy library with 1 keywords loaded.

Suc...</msg>
<status status="PASS" starttime="20191027 07:37:45.239" endtime="20191027 07:37:45.240"></status>
</kw>
<status status="PASS" starttime="20191027 07:37:42.411" endtime="20191027 07:37:45.241"></status>
</kw>
<kw name="Navigate To Main Page" library="keywords">
<kw name="Go To" library="SeleniumLibrary">
<doc>Navigates the active browser instance to the provided ``url``.</doc>
<arguments>
<arg>localhost:8000</arg>
</arguments>
<msg timestamp="20191027 07:37:45.243" level="INFO">Opening url 'localhost:8000'</msg>
<status status="PASS" starttime="20191027 07:37:45.242" endtime="20191027 07:37:45.339"></status>
</kw>
<status status="PASS" starttime="20191027 07:37:45.241" endtime="20191027 07:37:45.340"></status>
</kw>
<kw name="Collections Count On Main Page Should Be 7" library="keywords">
<kw name="Reload Page" library="SeleniumLibrary">
<doc>Simulates user reloading page.</doc>
<status status="PASS" starttime="20191027 07:37:45.341" endtime="20191027 07:37:45.669"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${n}'!='0'</arg>
<arg>Wait Until Element Is Visible</arg>
<arg>${main_page_table}</arg>
</arguments>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<doc>Waits until element ``locator`` is visible.</doc>
<arguments>
<arg>${main_page_table}</arg>
</arguments>
<status status="PASS" starttime="20191027 07:37:45.671" endtime="20191027 07:37:45.729"></status>
</kw>
<status status="PASS" starttime="20191027 07:37:45.670" endtime="20191027 07:37:45.729"></status>
</kw>
<kw name="Element Text Should Be" library="SeleniumLibrary">
<doc>Verifies that element ``locator`` contains exact text ``expected``.</doc>
<arguments>
<arg>${main_page_collection_number}</arg>
<arg>Collections (${n})</arg>
</arguments>
<msg timestamp="20191027 07:37:45.730" level="INFO">Verifying element '//*[@id="root"]/div/main/div[2]/div/div/div/h2' contains exact text 'Collections (7)'.</msg>
<status status="PASS" starttime="20191027 07:37:45.730" endtime="20191027 07:37:45.777"></status>
</kw>
<status status="PASS" starttime="20191027 07:37:45.340" endtime="20191027 07:37:45.778"></status>
</kw>
<status status="PASS" starttime="20191027 07:37:39.021" endtime="20191027 07:37:45.778"></status>
</kw>
<kw name="Table Should Contain Library Data">
<arguments>
<arg>LibWithEmptyInit1</arg>
<arg>library</arg>
<arg>2.1.0</arg>
<arg>2</arg>
</arguments>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<doc>Waits until element ``locator`` is visible.</doc>
<arguments>
<arg>${main_page_table}</arg>
</arguments>
<status status="PASS" starttime="20191027 07:37:45.780" endtime="20191027 07:37:45.806"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${Library_data}</arg>
</arguments>
<assign>
<var>${list_len}</var>
</assign>
<msg timestamp="20191027 07:37:45.807" level="INFO">Length is 4</msg>
<msg timestamp="20191027 07:37:45.807" level="INFO">${list_len} = 4</msg>
<status status="PASS" starttime="20191027 07:37:45.806" endtime="20191027 07:37:45.808"></status>
</kw>
<kw name="${i} IN RANGE [ 1 | ${list_len} ]" type="for">
<kw name="${i} = 1" type="foritem">
<kw name="Table Column Should Contain" library="SeleniumLibrary">
<doc>Verifies table column contains text ``expected``.</doc>
<arguments>
<arg>${main_page_table}</arg>
<arg>${i}</arg>
<arg>@{Library_data}[${i-1}]</arg>
</arguments>
<status status="PASS" starttime="20191027 07:37:45.809" endtime="20191027 07:37:45.895"></status>
</kw>
<status status="PASS" starttime="20191027 07:37:45.808" endtime="20191027 07:37:45.895"></status>
</kw>
<kw name="${i} = 2" type="foritem">
<kw name="Table Column Should Contain" library="SeleniumLibrary">
<doc>Verifies table column contains text ``expected``.</doc>
<arguments>
<arg>${main_page_table}</arg>
<arg>${i}</arg>
<arg>@{Library_data}[${i-1}]</arg>
</arguments>
<status status="PASS" starttime="20191027 07:37:45.896" endtime="20191027 07:37:46.001"></status>
</kw>
<status status="PASS" starttime="20191027 07:37:45.895" endtime="20191027 07:37:46.002"></status>
</kw>
<kw name="${i} = 3" type="foritem">
<kw name="Table Column Should Contain" library="SeleniumLibrary">
<doc>Verifies table column contains text ``expected``.</doc>
<arguments>
<arg>${main_page_table}</arg>
<arg>${i}</arg>
<arg>@{Library_data}[${i-1}]</arg>
</arguments>
<status status="PASS" starttime="20191027 07:37:46.002" endtime="20191027 07:37:46.112"></status>
</kw>
<status status="PASS" starttime="20191027 07:37:46.002" endtime="20191027 07:37:46.113"></status>
</kw>
<status status="PASS" starttime="20191027 07:37:45.808" endtime="20191027 07:37:46.113"></status>
</kw>
<status status="PASS" starttime="20191027 07:37:45.779" endtime="20191027 07:37:46.114"></status>
</kw>
<kw name="Table Should Contain Library Data">
<arguments>
<arg>LibWithEmptyInit2</arg>
<arg>library</arg>
<arg>1.0.0</arg>
<arg>2</arg>
</arguments>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<doc>Waits until element ``locator`` is visible.</doc>
<arguments>
<arg>${main_page_table}</arg>
</arguments>
<status status="PASS" starttime="20191027 07:37:46.115" endtime="20191027 07:37:46.145"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${Library_data}</arg>
</arguments>
<assign>
<var>${list_len}</var>
</assign>
<msg timestamp="20191027 07:37:46.146" level="INFO">Length is 4</msg>
<msg timestamp="20191027 07:37:46.147" level="INFO">${list_len} = 4</msg>
<status status="PASS" starttime="20191027 07:37:46.146" endtime="20191027 07:37:46.147"></status>
</kw>
<kw name="${i} IN RANGE [ 1 | ${list_len} ]" type="for">
<kw name="${i} = 1" type="foritem">
<kw name="Table Column Should Contain" library="SeleniumLibrary">
<doc>Verifies table column contains text ``expected``.</doc>
<arguments>
<arg>${main_page_table}</arg>
<arg>${i}</arg>
<arg>@{Library_data}[${i-1}]</arg>
</arguments>
<status status="PASS" starttime="20191027 07:37:46.148" endtime="20191027 07:37:46.246"></status>
</kw>
<status status="PASS" starttime="20191027 07:37:46.148" endtime="20191027 07:37:46.246"></status>
</kw>
<kw name="${i} = 2" type="foritem">
<kw name="Table Column Should Contain" library="SeleniumLibrary">
<doc>Verifies table column contains text ``expected``.</doc>
<arguments>
<arg>${main_page_table}</arg>
<arg>${i}</arg>
<arg>@{Library_data}[${i-1}]</arg>
</arguments>
<status status="PASS" starttime="20191027 07:37:46.247" endtime="20191027 07:37:46.313"></status>
</kw>
<status status="PASS" starttime="20191027 07:37:46.246" endtime="20191027 07:37:46.313"></status>
</kw>
<kw name="${i} = 3" type="foritem">
<kw name="Table Column Should Contain" library="SeleniumLibrary">
<doc>Verifies table column contains text ``expected``.</doc>
<arguments>
<arg>${main_page_table}</arg>
<arg>${i}</arg>
<arg>@{Library_data}[${i-1}]</arg>
</arguments>
<status status="PASS" starttime="20191027 07:37:46.314" endtime="20191027 07:37:46.410"></status>
</kw>
<status status="PASS" starttime="20191027 07:37:46.313" endtime="20191027 07:37:46.411"></status>
</kw>
<status status="PASS" starttime="20191027 07:37:46.147" endtime="20191027 07:37:46.411"></status>
</kw>
<status status="PASS" starttime="20191027 07:37:46.114" endtime="20191027 07:37:46.411"></status>
</kw>
<kw name="Table Should Contain Library Data">
<arguments>
<arg>LibWithInit</arg>
<arg>library</arg>
<arg>6.6.6</arg>
<arg>4</arg>
</arguments>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<doc>Waits until element ``locator`` is visible.</doc>
<arguments>
<arg>${main_page_table}</arg>
</arguments>
<status status="PASS" starttime="20191027 07:37:46.413" endtime="20191027 07:37:46.440"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${Library_data}</arg>
</arguments>
<assign>
<var>${list_len}</var>
</assign>
<msg timestamp="20191027 07:37:46.442" level="INFO">Length is 4</msg>
<msg timestamp="20191027 07:37:46.442" level="INFO">${list_len} = 4</msg>
<status status="PASS" starttime="20191027 07:37:46.441" endtime="20191027 07:37:46.442"></status>
</kw>
<kw name="${i} IN RANGE [ 1 | ${list_len} ]" type="for">
<kw name="${i} = 1" type="foritem">
<kw name="Table Column Should Contain" library="SeleniumLibrary">
<doc>Verifies table column contains text ``expected``.</doc>
<arguments>
<arg>${main_page_table}</arg>
<arg>${i}</arg>
<arg>@{Library_data}[${i-1}]</arg>
</arguments>
<status status="PASS" starttime="20191027 07:37:46.443" endtime="20191027 07:37:46.564"></status>
</kw>
<status status="PASS" starttime="20191027 07:37:46.443" endtime="20191027 07:37:46.564"></status>
</kw>
<kw name="${i} = 2" type="foritem">
<kw name="Table Column Should Contain" library="SeleniumLibrary">
<doc>Verifies table column contains text ``expected``.</doc>
<arguments>
<arg>${main_page_table}</arg>
<arg>${i}</arg>
<arg>@{Library_data}[${i-1}]</arg>
</arguments>
<status status="PASS" starttime="20191027 07:37:46.565" endtime="20191027 07:37:46.630"></status>
</kw>
<status status="PASS" starttime="20191027 07:37:46.565" endtime="20191027 07:37:46.630"></status>
</kw>
<kw name="${i} = 3" type="foritem">
<kw name="Table Column Should Contain" library="SeleniumLibrary">
<doc>Verifies table column contains text ``expected``.</doc>
<arguments>
<arg>${main_page_table}</arg>
<arg>${i}</arg>
<arg>@{Library_data}[${i-1}]</arg>
</arguments>
<status status="PASS" starttime="20191027 07:37:46.631" endtime="20191027 07:37:46.747"></status>
</kw>
<status status="PASS" starttime="20191027 07:37:46.631" endtime="20191027 07:37:46.748"></status>
</kw>
<status status="PASS" starttime="20191027 07:37:46.442" endtime="20191027 07:37:46.748"></status>
</kw>
<status status="PASS" starttime="20191027 07:37:46.412" endtime="20191027 07:37:46.748"></status>
</kw>
<kw name="Table Should Contain Library Data">
<arguments>
<arg>SingleClassLib</arg>
<arg>library</arg>
<arg>1.2.8</arg>
<arg>4</arg>
</arguments>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<doc>Waits until element ``locator`` is visible.</doc>
<arguments>
<arg>${main_page_table}</arg>
</arguments>
<status status="PASS" starttime="20191027 07:37:46.750" endtime="20191027 07:37:46.786"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${Library_data}</arg>
</arguments>
<assign>
<var>${list_len}</var>
</assign>
<msg timestamp="20191027 07:37:46.787" level="INFO">Length is 4</msg>
<msg timestamp="20191027 07:37:46.788" level="INFO">${list_len} = 4</msg>
<status status="PASS" starttime="20191027 07:37:46.787" endtime="20191027 07:37:46.788"></status>
</kw>
<kw name="${i} IN RANGE [ 1 | ${list_len} ]" type="for">
<kw name="${i} = 1" type="foritem">
<kw name="Table Column Should Contain" library="SeleniumLibrary">
<doc>Verifies table column contains text ``expected``.</doc>
<arguments>
<arg>${main_page_table}</arg>
<arg>${i}</arg>
<arg>@{Library_data}[${i-1}]</arg>
</arguments>
<status status="PASS" starttime="20191027 07:37:46.789" endtime="20191027 07:37:46.936"></status>
</kw>
<status status="PASS" starttime="20191027 07:37:46.788" endtime="20191027 07:37:46.936"></status>
</kw>
<kw name="${i} = 2" type="foritem">
<kw name="Table Column Should Contain" library="SeleniumLibrary">
<doc>Verifies table column contains text ``expected``.</doc>
<arguments>
<arg>${main_page_table}</arg>
<arg>${i}</arg>
<arg>@{Library_data}[${i-1}]</arg>
</arguments>
<status status="PASS" starttime="20191027 07:37:46.937" endtime="20191027 07:37:47.002"></status>
</kw>
<status status="PASS" starttime="20191027 07:37:46.937" endtime="20191027 07:37:47.003"></status>
</kw>
<kw name="${i} = 3" type="foritem">
<kw name="Table Column Should Contain" library="SeleniumLibrary">
<doc>Verifies table column contains text ``expected``.</doc>
<arguments>
<arg>${main_page_table}</arg>
<arg>${i}</arg>
<arg>@{Library_data}[${i-1}]</arg>
</arguments>
<status status="PASS" starttime="20191027 07:37:47.003" endtime="20191027 07:37:47.141"></status>
</kw>
<status status="PASS" starttime="20191027 07:37:47.003" endtime="20191027 07:37:47.141"></status>
</kw>
<status status="PASS" starttime="20191027 07:37:46.788" endtime="20191027 07:37:47.142"></status>
</kw>
<status status="PASS" starttime="20191027 07:37:46.749" endtime="20191027 07:37:47.142"></status>
</kw>
<kw name="Table Should Contain Library Data">
<arguments>
<arg>Test Libdoc File</arg>
<arg>library</arg>
<arg>3.2.1</arg>
<arg>1</arg>
</arguments>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<doc>Waits until element ``locator`` is visible.</doc>
<arguments>
<arg>${main_page_table}</arg>
</arguments>
<status status="PASS" starttime="20191027 07:37:47.144" endtime="20191027 07:37:47.169"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${Library_data}</arg>
</arguments>
<assign>
<var>${list_len}</var>
</assign>
<msg timestamp="20191027 07:37:47.170" level="INFO">Length is 4</msg>
<msg timestamp="20191027 07:37:47.171" level="INFO">${list_len} = 4</msg>
<status status="PASS" starttime="20191027 07:37:47.169" endtime="20191027 07:37:47.171"></status>
</kw>
<kw name="${i} IN RANGE [ 1 | ${list_len} ]" type="for">
<kw name="${i} = 1" type="foritem">
<kw name="Table Column Should Contain" library="SeleniumLibrary">
<doc>Verifies table column contains text ``expected``.</doc>
<arguments>
<arg>${main_page_table}</arg>
<arg>${i}</arg>
<arg>@{Library_data}[${i-1}]</arg>
</arguments>
<status status="PASS" starttime="20191027 07:37:47.172" endtime="20191027 07:37:47.341"></status>
</kw>
<status status="PASS" starttime="20191027 07:37:47.171" endtime="20191027 07:37:47.341"></status>
</kw>
<kw name="${i} = 2" type="foritem">
<kw name="Table Column Should Contain" library="SeleniumLibrary">
<doc>Verifies table column contains text ``expected``.</doc>
<arguments>
<arg>${main_page_table}</arg>
<arg>${i}</arg>
<arg>@{Library_data}[${i-1}]</arg>
</arguments>
<status status="PASS" starttime="20191027 07:37:47.343" endtime="20191027 07:37:47.410"></status>
</kw>
<status status="PASS" starttime="20191027 07:37:47.342" endtime="20191027 07:37:47.410"></status>
</kw>
<kw name="${i} = 3" type="foritem">
<kw name="Table Column Should Contain" library="SeleniumLibrary">
<doc>Verifies table column contains text ``expected``.</doc>
<arguments>
<arg>${main_page_table}</arg>
<arg>${i}</arg>
<arg>@{Library_data}[${i-1}]</arg>
</arguments>
<status status="PASS" starttime="20191027 07:37:47.411" endtime="20191027 07:37:47.570"></status>
</kw>
<status status="PASS" starttime="20191027 07:37:47.411" endtime="20191027 07:37:47.571"></status>
</kw>
<status status="PASS" starttime="20191027 07:37:47.171" endtime="20191027 07:37:47.571"></status>
</kw>
<status status="PASS" starttime="20191027 07:37:47.143" endtime="20191027 07:37:47.571"></status>
</kw>
<kw name="Table Should Contain Library Data">
<arguments>
<arg>Test Libdoc File Copy</arg>
<arg>library</arg>
<arg>3.2.1</arg>
<arg>1</arg>
</arguments>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<doc>Waits until element ``locator`` is visible.</doc>
<arguments>
<arg>${main_page_table}</arg>
</arguments>
<status status="PASS" starttime="20191027 07:37:47.573" endtime="20191027 07:37:47.598"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${Library_data}</arg>
</arguments>
<assign>
<var>${list_len}</var>
</assign>
<msg timestamp="20191027 07:37:47.599" level="INFO">Length is 4</msg>
<msg timestamp="20191027 07:37:47.599" level="INFO">${list_len} = 4</msg>
<status status="PASS" starttime="20191027 07:37:47.598" endtime="20191027 07:37:47.599"></status>
</kw>
<kw name="${i} IN RANGE [ 1 | ${list_len} ]" type="for">
<kw name="${i} = 1" type="foritem">
<kw name="Table Column Should Contain" library="SeleniumLibrary">
<doc>Verifies table column contains text ``expected``.</doc>
<arguments>
<arg>${main_page_table}</arg>
<arg>${i}</arg>
<arg>@{Library_data}[${i-1}]</arg>
</arguments>
<status status="PASS" starttime="20191027 07:37:47.600" endtime="20191027 07:37:47.794"></status>
</kw>
<status status="PASS" starttime="20191027 07:37:47.600" endtime="20191027 07:37:47.794"></status>
</kw>
<kw name="${i} = 2" type="foritem">
<kw name="Table Column Should Contain" library="SeleniumLibrary">
<doc>Verifies table column contains text ``expected``.</doc>
<arguments>
<arg>${main_page_table}</arg>
<arg>${i}</arg>
<arg>@{Library_data}[${i-1}]</arg>
</arguments>
<status status="PASS" starttime="20191027 07:37:47.795" endtime="20191027 07:37:47.865"></status>
</kw>
<status status="PASS" starttime="20191027 07:37:47.795" endtime="20191027 07:37:47.865"></status>
</kw>
<kw name="${i} = 3" type="foritem">
<kw name="Table Column Should Contain" library="SeleniumLibrary">
<doc>Verifies table column contains text ``expected``.</doc>
<arguments>
<arg>${main_page_table}</arg>
<arg>${i}</arg>
<arg>@{Library_data}[${i-1}]</arg>
</arguments>
<status status="PASS" starttime="20191027 07:37:47.866" endtime="20191027 07:37:48.032"></status>
</kw>
<status status="PASS" starttime="20191027 07:37:47.865" endtime="20191027 07:37:48.032"></status>
</kw>
<status status="PASS" starttime="20191027 07:37:47.600" endtime="20191027 07:37:48.032"></status>
</kw>
<status status="PASS" starttime="20191027 07:37:47.572" endtime="20191027 07:37:48.033"></status>
</kw>
<kw name="Table Should Contain Library Data">
<arguments>
<arg>test_resource</arg>
<arg>resource</arg>
<arg>${EMPTY}</arg>
<arg>2</arg>
</arguments>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<doc>Waits until element ``locator`` is visible.</doc>
<arguments>
<arg>${main_page_table}</arg>
</arguments>
<status status="PASS" starttime="20191027 07:37:48.034" endtime="20191027 07:37:48.060"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${Library_data}</arg>
</arguments>
<assign>
<var>${list_len}</var>
</assign>
<msg timestamp="20191027 07:37:48.061" level="INFO">Length is 4</msg>
<msg timestamp="20191027 07:37:48.062" level="INFO">${list_len} = 4</msg>
<status status="PASS" starttime="20191027 07:37:48.061" endtime="20191027 07:37:48.062"></status>
</kw>
<kw name="${i} IN RANGE [ 1 | ${list_len} ]" type="for">
<kw name="${i} = 1" type="foritem">
<kw name="Table Column Should Contain" library="SeleniumLibrary">
<doc>Verifies table column contains text ``expected``.</doc>
<arguments>
<arg>${main_page_table}</arg>
<arg>${i}</arg>
<arg>@{Library_data}[${i-1}]</arg>
</arguments>
<status status="PASS" starttime="20191027 07:37:48.063" endtime="20191027 07:37:48.279"></status>
</kw>
<status status="PASS" starttime="20191027 07:37:48.063" endtime="20191027 07:37:48.280"></status>
</kw>
<kw name="${i} = 2" type="foritem">
<kw name="Table Column Should Contain" library="SeleniumLibrary">
<doc>Verifies table column contains text ``expected``.</doc>
<arguments>
<arg>${main_page_table}</arg>
<arg>${i}</arg>
<arg>@{Library_data}[${i-1}]</arg>
</arguments>
<status status="PASS" starttime="20191027 07:37:48.280" endtime="20191027 07:37:48.516"></status>
</kw>
<status status="PASS" starttime="20191027 07:37:48.280" endtime="20191027 07:37:48.516"></status>
</kw>
<kw name="${i} = 3" type="foritem">
<kw name="Table Column Should Contain" library="SeleniumLibrary">
<doc>Verifies table column contains text ``expected``.</doc>
<arguments>
<arg>${main_page_table}</arg>
<arg>${i}</arg>
<arg>@{Library_data}[${i-1}]</arg>
</arguments>
<status status="PASS" starttime="20191027 07:37:48.517" endtime="20191027 07:37:48.564"></status>
</kw>
<status status="PASS" starttime="20191027 07:37:48.516" endtime="20191027 07:37:48.564"></status>
</kw>
<status status="PASS" starttime="20191027 07:37:48.062" endtime="20191027 07:37:48.564"></status>
</kw>
<status status="PASS" starttime="20191027 07:37:48.033" endtime="20191027 07:37:48.565"></status>
</kw>
<kw name="Restore Initial Fixtures" library="keywords" type="teardown">
<kw name="Remove Directory" library="OperatingSystem">
<doc>Removes the directory pointed to by the given ``path``.</doc>
<arguments>
<arg>${INITIAL_FIXTURES}</arg>
<arg>recursive=True</arg>
</arguments>
<msg timestamp="20191027 07:37:48.582" level="INFO" html="yes">Removed directory '&lt;a href="file://F:\Docs\Desktop\rfhub2\tests\fixtures\initial"&gt;F:\Docs\Desktop\rfhub2\tests\fixtures\initial&lt;/a&gt;'.</msg>
<status status="PASS" starttime="20191027 07:37:48.566" endtime="20191027 07:37:48.583"></status>
</kw>
<kw name="Copy Directory" library="OperatingSystem">
<doc>Copies the source directory into the destination.</doc>
<arguments>
<arg>${BACKUP_FIXTURES}</arg>
<arg>${INITIAL_FIXTURES}</arg>
</arguments>
<msg timestamp="20191027 07:37:48.652" level="INFO" html="yes">Copied directory from '&lt;a href="file://F:\Docs\Desktop\rfhub2\tests\fixtures\initial_bkp"&gt;F:\Docs\Desktop\rfhub2\tests\fixtures\initial_bkp&lt;/a&gt;' to '&lt;a href="file://F:\Docs\Desktop\rfhub2\tests\fixtures\initial"&gt;F:\Docs\Desktop\rfhub2\tests\fixtures\initial&lt;/a&gt;'.</msg>
<status status="PASS" starttime="20191027 07:37:48.583" endtime="20191027 07:37:48.652"></status>
</kw>
<kw name="Remove Directory" library="OperatingSystem">
<doc>Removes the directory pointed to by the given ``path``.</doc>
<arguments>
<arg>${BACKUP_FIXTURES}</arg>
<arg>recursive=True</arg>
</arguments>
<msg timestamp="20191027 07:37:48.686" level="INFO" html="yes">Removed directory '&lt;a href="file://F:\Docs\Desktop\rfhub2\tests\fixtures\initial_bkp"&gt;F:\Docs\Desktop\rfhub2\tests\fixtures\initial_bkp&lt;/a&gt;'.</msg>
<status status="PASS" starttime="20191027 07:37:48.653" endtime="20191027 07:37:48.686"></status>
</kw>
<status status="PASS" starttime="20191027 07:37:48.565" endtime="20191027 07:37:48.687"></status>
</kw>
<doc>This test bases on
'Populated App Should Show Number Of Collections'
to shorten execution time.</doc>
<tags>
<tag>rfhub2-64</tag>
</tags>
<status status="PASS" starttime="20191027 07:37:39.020" endtime="20191027 07:37:48.687" critical="yes"></status>
</test>
<test id="s1-s1-s1-s3-t10" name="Single Class Library Details Should Be Updated On Frontend">
<kw name="Navigate To Main Page" library="keywords" type="setup">
<kw name="Go To" library="SeleniumLibrary">
<doc>Navigates the active browser instance to the provided ``url``.</doc>
<arguments>
<arg>localhost:8000</arg>
</arguments>
<msg timestamp="20191027 07:37:48.691" level="INFO">Opening url 'localhost:8000'</msg>
<status status="PASS" starttime="20191027 07:37:48.691" endtime="20191027 07:37:48.798"></status>
</kw>
<status status="PASS" starttime="20191027 07:37:48.690" endtime="20191027 07:37:48.799"></status>
</kw>
<kw name="Open ${single_class_lib} In Left Panel">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Element Should Not Be Visible</arg>
<arg>${hamburger}</arg>
</arguments>
<assign>
<var>${is_visible}</var>
</assign>
<kw name="Element Should Not Be Visible" library="SeleniumLibrary">
<doc>Verifies that the element identified by ``locator`` is NOT visible.</doc>
<arguments>
<arg>${hamburger}</arg>
</arguments>
<msg timestamp="20191027 07:37:48.846" level="INFO">Element '//*[@id="root"]/div/header/div/button/span[1]/svg/path' did not exist.</msg>
<status status="PASS" starttime="20191027 07:37:48.801" endtime="20191027 07:37:48.846"></status>
</kw>
<msg timestamp="20191027 07:37:48.847" level="INFO">${is_visible} = True</msg>
<status status="PASS" starttime="20191027 07:37:48.800" endtime="20191027 07:37:48.847"></status>
</kw>
<kw name="Run Keyword Unless" library="BuiltIn">
<doc>Runs the given keyword with the given arguments if ``condition`` is false.</doc>
<arguments>
<arg>${is_visible}</arg>
<arg>Click Element</arg>
<arg>${hamburger}</arg>
</arguments>
<status status="PASS" starttime="20191027 07:37:48.848" endtime="20191027 07:37:48.848"></status>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<doc>Waits until element ``locator`` is visible.</doc>
<arguments>
<arg>${library}</arg>
</arguments>
<status status="PASS" starttime="20191027 07:37:48.849" endtime="20191027 07:37:48.881"></status>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click element identified by ``locator``.</doc>
<arguments>
<arg>${library}</arg>
</arguments>
<msg timestamp="20191027 07:37:48.882" level="INFO">Clicking element '//*[contains(text(),"SingleClassLib")]'.</msg>
<status status="PASS" starttime="20191027 07:37:48.881" endtime="20191027 07:37:48.949"></status>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<doc>Waits until element ``locator`` is visible.</doc>
<arguments>
<arg>//*[contains(text(),'Overview')]</arg>
</arguments>
<status status="PASS" starttime="20191027 07:37:48.949" endtime="20191027 07:37:49.221"></status>
</kw>
<status status="PASS" starttime="20191027 07:37:48.799" endtime="20191027 07:37:49.222"></status>
</kw>
<kw name="Click ${overview} In Left Panel">
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click element identified by ``locator``.</doc>
<arguments>
<arg>${keyword}</arg>
</arguments>
<msg timestamp="20191027 07:37:49.225" level="INFO">Clicking element '//*[contains(text(),"Overview")]'.</msg>
<status status="PASS" starttime="20191027 07:37:49.224" endtime="20191027 07:37:49.320"></status>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<doc>Waits until element ``locator`` is visible.</doc>
<arguments>
<arg>${detail_view_library_version}</arg>
</arguments>
<status status="PASS" starttime="20191027 07:37:49.320" endtime="20191027 07:37:49.583"></status>
</kw>
<status status="PASS" starttime="20191027 07:37:49.223" endtime="20191027 07:37:49.584"></status>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click element identified by ``locator``.</doc>
<arguments>
<arg>${single_class_lib}</arg>
</arguments>
<msg timestamp="20191027 07:37:49.586" level="INFO">Clicking element '//*[contains(text(),"SingleClassLib")]'.</msg>
<status status="PASS" starttime="20191027 07:37:49.585" endtime="20191027 07:37:49.665"></status>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<doc>Waits until element ``locator`` is visible.</doc>
<arguments>
<arg>${detail_view_library_version}</arg>
</arguments>
<status status="PASS" starttime="20191027 07:37:49.665" endtime="20191027 07:37:49.697"></status>
</kw>
<kw name="Library title Should Be SingleClassLib">
<kw name="Element Text Should Be" library="SeleniumLibrary">
<doc>Verifies that element ``locator`` contains exact text ``expected``.</doc>
<arguments>
<arg>${detail_view_library_${field}}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20191027 07:37:49.699" level="INFO">Verifying element '//*[@id="root"]/div/main/div[2]/div/div/div/h2[1]' contains exact text 'SingleClassLib'.</msg>
<status status="PASS" starttime="20191027 07:37:49.699" endtime="20191027 07:37:49.733"></status>
</kw>
<status status="PASS" starttime="20191027 07:37:49.697" endtime="20191027 07:37:49.733"></status>
</kw>
<kw name="Library version Should Be version: 1.2.8">
<kw name="Element Text Should Be" library="SeleniumLibrary">
<doc>Verifies that element ``locator`` contains exact text ``expected``.</doc>
<arguments>
<arg>${detail_view_library_${field}}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20191027 07:37:49.735" level="INFO">Verifying element '//*[@id="root"]/div/main/div[2]/div/div/div/div[1]' contains exact text 'version: 1.2.8'.</msg>
<status status="PASS" starttime="20191027 07:37:49.735" endtime="20191027 07:37:49.765"></status>
</kw>
<status status="PASS" starttime="20191027 07:37:49.734" endtime="20191027 07:37:49.766"></status>
</kw>
<kw name="Library scope Should Be scope: test case">
<kw name="Element Text Should Be" library="SeleniumLibrary">
<doc>Verifies that element ``locator`` contains exact text ``expected``.</doc>
<arguments>
<arg>${detail_view_library_${field}}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20191027 07:37:49.768" level="INFO">Verifying element '//*[@id="root"]/div/main/div[2]/div/div/div/div[2]' contains exact text 'scope: test case'.</msg>
<status status="PASS" starttime="20191027 07:37:49.767" endtime="20191027 07:37:49.801"></status>
</kw>
<status status="PASS" starttime="20191027 07:37:49.766" endtime="20191027 07:37:49.802"></status>
</kw>
<kw name="Library overview Should Be Overview that should be imported for SingleClassLib.">
<kw name="Element Text Should Be" library="SeleniumLibrary">
<doc>Verifies that element ``locator`` contains exact text ``expected``.</doc>
<arguments>
<arg>${detail_view_library_${field}}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20191027 07:37:49.804" level="INFO">Verifying element '//*[@id="root"]/div/main/div[2]/div/div/div/div[4]/p' contains exact text 'Overview that should be imported for SingleClassLib.'.</msg>
<status status="PASS" starttime="20191027 07:37:49.803" endtime="20191027 07:37:49.837"></status>
</kw>
<status status="PASS" starttime="20191027 07:37:49.802" endtime="20191027 07:37:49.837"></status>
</kw>
<kw name="Library keywords Should Be Keywords (4)">
<kw name="Element Text Should Be" library="SeleniumLibrary">
<doc>Verifies that element ``locator`` contains exact text ``expected``.</doc>
<arguments>
<arg>${detail_view_library_${field}}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20191027 07:37:49.840" level="INFO">Verifying element '//*[@id="root"]/div/main/div[2]/div/div/div/h2[2]' contains exact text 'Keywords (4)'.</msg>
<status status="PASS" starttime="20191027 07:37:49.838" endtime="20191027 07:37:49.876"></status>
</kw>
<status status="PASS" starttime="20191027 07:37:49.838" endtime="20191027 07:37:49.877"></status>
</kw>
<doc>This test bases on
'First Page Table After Update Should Contain Proper Libraries Data'
to shorten execution time.</doc>
<tags>
<tag>rfhub2-64</tag>
</tags>
<status status="PASS" starttime="20191027 07:37:48.688" endtime="20191027 07:37:49.877" critical="yes"></status>
</test>
<status status="PASS" starttime="20191027 07:37:16.197" endtime="20191027 07:37:52.084"></status>
</suite>
<status status="PASS" starttime="20191027 07:36:24.542" endtime="20191027 07:37:52.119"></status>
</suite>
<status status="PASS" starttime="20191027 07:36:24.539" endtime="20191027 07:37:52.152"></status>
</suite>
<status status="PASS" starttime="20191027 07:36:24.505" endtime="20191027 07:37:52.173"></status>
</suite>
<statistics>
<total>
<stat pass="27" fail="0">Critical Tests</stat>
<stat pass="27" fail="0">All Tests</stat>
</total>
<tag>
<stat pass="1" fail="0">regression</stat>
<stat pass="1" fail="0">rfhub2-46</stat>
<stat pass="5" fail="0">rfhub2-64</stat>
</tag>
<suite>
<stat pass="27" fail="0" id="s1" name="Rfhub2">Rfhub2</stat>
<stat pass="27" fail="0" id="s1-s1" name="Tests">Rfhub2.Tests</stat>
<stat pass="27" fail="0" id="s1-s1-s1" name="Acceptance">Rfhub2.Tests.Acceptance</stat>
<stat pass="7" fail="0" id="s1-s1-s1-s1" name="Cli Options">Rfhub2.Tests.Acceptance.Cli Options</stat>
<stat pass="10" fail="0" id="s1-s1-s1-s2" name="Cli Population">Rfhub2.Tests.Acceptance.Cli Population</stat>
<stat pass="10" fail="0" id="s1-s1-s1-s3" name="E2E">Rfhub2.Tests.Acceptance.E2E</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
