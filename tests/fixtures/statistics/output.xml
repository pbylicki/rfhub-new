<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 4.1 (Python 3.6.5 on win32)" generated="20210830 17:35:10.061" rpa="false" schemaversion="2">
    <suite id="s1" name="Acceptance" source="C:\repo\rfhub2\tests\acceptance">
        <kw name="Start Rfhub2" library="keywords" type="SETUP">
            <doc>Starts rfhub2 on the port given in the variable ${PORT}
                As a side effect this creates a suite variable named ${rfhub process},
                which is used by the 'Stop rfhub2' keyword.
            </doc>
            <kw name="Remove File" library="OperatingSystem">
                <arg>${DB_PATH}</arg>
                <doc>Removes a file with the given path.</doc>
                <msg timestamp="20210830 17:35:10.573" level="INFO" html="true">Removed file '&lt;a
                    href="file://C:\repo\rfhub2\test.db"&gt;C:\repo\rfhub2\test.db&lt;/a&gt;'.
                </msg>
                <status status="PASS" starttime="20210830 17:35:10.571" endtime="20210830 17:35:10.573"/>
            </kw>
            <kw name="Start Process" library="Process">
                <var>${rfhub2_process}</var>
                <arg>${ACTIVATE_VENV} ${DB_URI} rfhub2</arg>
                <arg>shell=True</arg>
                <arg>stdout=api_logs.log</arg>
                <arg>stderr=stderr_logs.log</arg>
                <doc>Starts a new process on background.</doc>
                <msg timestamp="20210830 17:35:10.575" level="INFO">Starting process:
                    rfhub2
                </msg>
                <msg timestamp="20210830 17:35:10.730" level="INFO">${rfhub2_process} = 1</msg>
                <status status="PASS" starttime="20210830 17:35:10.573" endtime="20210830 17:35:10.730"/>
            </kw>
            <kw name="Set Suite Variable" library="BuiltIn">
                <arg>${rfhub2_process}</arg>
                <doc>Makes a variable available everywhere within the scope of the current suite.</doc>
                <msg timestamp="20210830 17:35:10.731" level="INFO">${rfhub2_process} = 1</msg>
                <status status="PASS" starttime="20210830 17:35:10.731" endtime="20210830 17:35:10.731"/>
            </kw>
            <kw name="Wait Until Keyword Succeeds" library="BuiltIn">
                <arg>20 seconds</arg>
                <arg>0.5 second</arg>
                <arg>Verify URL Is Reachable</arg>
                <arg>/api/v1/health</arg>
                <doc>Runs the specified keyword and retries if it fails.</doc>
                <kw name="Verify URL Is Reachable" library="keywords">
                    <arg>/api/v1/health</arg>
                    <doc>Fail if the given URL doesn't return a status code of 200.</doc>
                    <kw name="Create Session" library="RequestsLibrary">
                        <arg>tmp</arg>
                        <arg>http://${HOST}:${PORT}</arg>
                        <doc>Create Session: create a HTTP session to a server</doc>
                        <msg timestamp="20210830 17:35:10.733" level="INFO">Creating Session using : alias=tmp,
                            url=http://127.0.0.1:8000, headers={}, cookies={}, auth=None, timeout=None, proxies=None,
                            verify=False, debug=0
                        </msg>
                        <status status="PASS" starttime="20210830 17:35:10.733" endtime="20210830 17:35:10.734"/>
                    </kw>
                    <kw name="Get On Session" library="RequestsLibrary">
                        <var>${response}</var>
                        <arg>tmp</arg>
                        <arg>${url}</arg>
                        <doc>Sends a GET request on a previously created HTTP Session.</doc>
                        <msg timestamp="20210830 17:35:11.745" level="WARN">Retrying (RetryAdapter(total=2,
                            connect=None, read=None, redirect=None, status=None)) after connection broken by
                            'NewConnectionError('&lt;urllib3.connection.HTTPConnection object at 0x03319470&gt;: Failed
                            to establish a new connection: [WinError 10061] Nie można nawiązać połączenia, ponieważ
                            komputer docelowy aktywnie go odmawia',)': /api/v1/health
                        </msg>
                        <msg timestamp="20210830 17:35:12.947" level="WARN">Retrying (RetryAdapter(total=1,
                            connect=None, read=None, redirect=None, status=None)) after connection broken by
                            'NewConnectionError('&lt;urllib3.connection.HTTPConnection object at 0x03BA7930&gt;: Failed
                            to establish a new connection: [WinError 10061] Nie można nawiązać połączenia, ponieważ
                            komputer docelowy aktywnie go odmawia',)': /api/v1/health
                        </msg>
                        <msg timestamp="20210830 17:35:13.975" level="INFO">GET Request :
                            url=http://127.0.0.1:8000/api/v1/health (redirected)
                            path_url=/api/v1/health
                            headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate',
                            'Accept': '*/*', 'Connection': 'keep-alive'}
                            body=None
                        </msg>
                        <msg timestamp="20210830 17:35:13.976" level="INFO">GET Response :
                            url=http://127.0.0.1:8000/api/v1/health/
                            status=200, reason=OK
                            headers={'date': 'Mon, 30 Aug 2021 15:35:13 GMT', 'server': 'uvicorn', 'content-length':
                            '11', 'content-type': 'application/json'}
                            body={"db":"ok"}
                        </msg>
                        <msg timestamp="20210830 17:35:13.976" level="INFO">${response} = &lt;Response [200]&gt;</msg>
                        <status status="PASS" starttime="20210830 17:35:10.734" endtime="20210830 17:35:13.976"/>
                    </kw>
                    <kw name="Should Be Equal As Integers" library="BuiltIn">
                        <arg>${response.status_code}</arg>
                        <arg>200</arg>
                        <doc>Fails if objects are unequal after converting them to integers.</doc>
                        <msg timestamp="20210830 17:35:13.980" level="INFO">Argument types are:
                            &lt;class 'int'&gt;
                            &lt;type 'unicode'&gt;
                        </msg>
                        <status status="PASS" starttime="20210830 17:35:13.977" endtime="20210830 17:35:13.980"/>
                    </kw>
                    <status status="PASS" starttime="20210830 17:35:10.732" endtime="20210830 17:35:13.980"/>
                </kw>
                <status status="PASS" starttime="20210830 17:35:10.732" endtime="20210830 17:35:13.980"/>
            </kw>
            <status status="PASS" starttime="20210830 17:35:10.571" endtime="20210830 17:35:13.980"/>
        </kw>
        <suite id="s1-s1" name="Cli Options" source="C:\repo\rfhub2\tests\acceptance\cli_options.robot">
            <kw name="Run Package With Help Option" type="SETUP">
                <kw name="Run Cli Package With Options" library="keywords">
                    <arg>--help</arg>
                    <doc>Attempt to run the rfhub2-cli package with the given options
                        The stdout of the process will be in a test suite
                        variable named ${output}
                    </doc>
                    <kw name="Run" library="OperatingSystem">
                        <var>${output}</var>
                        <arg>${ACTIVATE_VENV} rfhub2-cli -a http://${HOST}:8000 ${options}</arg>
                        <doc>Runs the given command in the system and returns the output.</doc>
                        <msg timestamp="20210830 17:35:14.162" level="INFO">Running command ' rfhub2-cli -a
                            http://127.0.0.1:8000 --help 2&gt;&amp;1'.
                        </msg>
                        <msg timestamp="20210830 17:35:15.972" level="INFO">${output} = Usage: rfhub2-cli [OPTIONS]
                            [PATHS]...

                            Package to populate rfhub2 with robot framework keywords from libraries and
                            resource files.

                            Options:
                            -a, --app-url TEXT Specifies IP, URI or...
                        </msg>
                        <status status="PASS" starttime="20210830 17:35:14.008" endtime="20210830 17:35:15.972"/>
                    </kw>
                    <kw name="Set Suite Variable" library="BuiltIn">
                        <arg>${output}</arg>
                        <doc>Makes a variable available everywhere within the scope of the current suite.</doc>
                        <msg timestamp="20210830 17:35:15.973" level="INFO">${output} = Usage: rfhub2-cli [OPTIONS]
                            [PATHS]...

                            Package to populate rfhub2 with robot framework keywords from libraries and
                            resource files.

                            Options:
                            -a, --app-url TEXT Specifies IP, URI or...
                        </msg>
                        <status status="PASS" starttime="20210830 17:35:15.973" endtime="20210830 17:35:15.973"/>
                    </kw>
                    <status status="PASS" starttime="20210830 17:35:14.008" endtime="20210830 17:35:15.974"/>
                </kw>
                <status status="PASS" starttime="20210830 17:35:13.995" endtime="20210830 17:35:15.974"/>
            </kw>
            <test id="s1-s1-t1" name="Documentation For Whole Package Should Be Displayed Properly">
                <kw name="Output Should Contain" library="keywords">
                    <arg>Package to populate rfhub2 with robot framework keywords from libraries</arg>
                    <arg>and resource files.</arg>
                    <doc>Fail if the output from the previous command doesn't contain the given string
                        This keyword assumes the output of the command is in
                        a test suite variable named ${output}
                    </doc>
                    <kw name="Create Dictionary" library="BuiltIn">
                        <var>${ns}</var>
                        <arg>output=${output}</arg>
                        <doc>Creates and returns a dictionary based on the given ``items``.</doc>
                        <msg timestamp="20210830 17:35:15.979" level="INFO">${ns} = {'output': 'Usage: rfhub2-cli
                            [OPTIONS] [PATHS]...\n\n Package to populate rfhub2 with robot framework keywords from
                            libraries and\n resource files.\n\nOptions:\n -a, --app-url TEXT Sp...
                        </msg>
                        <status status="PASS" starttime="20210830 17:35:15.978" endtime="20210830 17:35:15.979"/>
                    </kw>
                    <kw name="Evaluate" library="BuiltIn">
                        <var>${clean_output}</var>
                        <arg>" ".join(l.strip() for l in output.splitlines())</arg>
                        <arg>namespace=${ns}</arg>
                        <doc>Evaluates the given expression in Python and returns the result.</doc>
                        <msg timestamp="20210830 17:35:15.980" level="INFO">${clean_output} = Usage: rfhub2-cli
                            [OPTIONS] [PATHS]... Package to populate rfhub2 with robot framework keywords from libraries
                            and resource files. Options: -a, --app-url TEXT Specifies IP, URI or host ...
                        </msg>
                        <status status="PASS" starttime="20210830 17:35:15.979" endtime="20210830 17:35:15.980"/>
                    </kw>
                    <for flavor="IN">
                        <var>${pattern}</var>
                        <value>@{patterns}</value>
                        <iter>
                            <var name="${pattern}">Package to populate rfhub2 with robot framework keywords from
                                libraries
                            </var>
                            <kw name="Run Keyword If" library="BuiltIn">
                                <arg>'''${pattern}''' not in '''${clean_output}'''</arg>
                                <arg>Fail</arg>
                                <arg>Output did not contain '${pattern}'. \n${clean_output}</arg>
                                <doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
                                <status status="PASS" starttime="20210830 17:35:15.981"
                                        endtime="20210830 17:35:15.981"/>
                            </kw>
                            <status status="PASS" starttime="20210830 17:35:15.981" endtime="20210830 17:35:15.981"/>
                        </iter>
                        <iter>
                            <var name="${pattern}">and resource files.</var>
                            <kw name="Run Keyword If" library="BuiltIn">
                                <arg>'''${pattern}''' not in '''${clean_output}'''</arg>
                                <arg>Fail</arg>
                                <arg>Output did not contain '${pattern}'. \n${clean_output}</arg>
                                <doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
                                <status status="PASS" starttime="20210830 17:35:15.982"
                                        endtime="20210830 17:35:15.982"/>
                            </kw>
                            <status status="PASS" starttime="20210830 17:35:15.982" endtime="20210830 17:35:15.982"/>
                        </iter>
                        <status status="PASS" starttime="20210830 17:35:15.980" endtime="20210830 17:35:15.982"/>
                    </for>
                    <status status="PASS" starttime="20210830 17:35:15.977" endtime="20210830 17:35:15.983"/>
                </kw>
                <doc>Documentation For Whole Package Should Be Displayed Properly</doc>
                <status status="PASS" starttime="20210830 17:35:15.974" endtime="20210830 17:35:15.983"/>
            </test>
            <test id="s1-s1-t2" name="Documentation For AppUrl Should Be Displayed Properly">
                <kw name="Output Should Contain" library="keywords">
                    <arg>-a, --app-url TEXT</arg>
                    <arg>Specifies IP, URI or host of rfhub2 web</arg>
                    <arg>application. Default value is</arg>
                    <arg>http://localhost:8000.</arg>
                    <doc>Fail if the output from the previous command doesn't contain the given string
                        This keyword assumes the output of the command is in
                        a test suite variable named ${output}
                    </doc>
                    <kw name="Create Dictionary" library="BuiltIn">
                        <var>${ns}</var>
                        <arg>output=${output}</arg>
                        <doc>Creates and returns a dictionary based on the given ``items``.</doc>
                        <msg timestamp="20210830 17:35:15.986" level="INFO">${ns} = {'output': 'Usage: rfhub2-cli
                            [OPTIONS] [PATHS]...\n\n Package to populate rfhub2 with robot framework keywords from
                            libraries and\n resource files.\n\nOptions:\n -a, --app-url TEXT Sp...
                        </msg>
                        <status status="PASS" starttime="20210830 17:35:15.985" endtime="20210830 17:35:15.986"/>
                    </kw>
                    <kw name="Evaluate" library="BuiltIn">
                        <var>${clean_output}</var>
                        <arg>" ".join(l.strip() for l in output.splitlines())</arg>
                        <arg>namespace=${ns}</arg>
                        <doc>Evaluates the given expression in Python and returns the result.</doc>
                        <msg timestamp="20210830 17:35:15.987" level="INFO">${clean_output} = Usage: rfhub2-cli
                            [OPTIONS] [PATHS]... Package to populate rfhub2 with robot framework keywords from libraries
                            and resource files. Options: -a, --app-url TEXT Specifies IP, URI or host ...
                        </msg>
                        <status status="PASS" starttime="20210830 17:35:15.986" endtime="20210830 17:35:15.987"/>
                    </kw>
                    <for flavor="IN">
                        <var>${pattern}</var>
                        <value>@{patterns}</value>
                        <iter>
                            <var name="${pattern}">-a, --app-url TEXT</var>
                            <kw name="Run Keyword If" library="BuiltIn">
                                <arg>'''${pattern}''' not in '''${clean_output}'''</arg>
                                <arg>Fail</arg>
                                <arg>Output did not contain '${pattern}'. \n${clean_output}</arg>
                                <doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
                                <status status="PASS" starttime="20210830 17:35:15.988"
                                        endtime="20210830 17:35:15.988"/>
                            </kw>
                            <status status="PASS" starttime="20210830 17:35:15.987" endtime="20210830 17:35:15.988"/>
                        </iter>
                        <iter>
                            <var name="${pattern}">Specifies IP, URI or host of rfhub2 web</var>
                            <kw name="Run Keyword If" library="BuiltIn">
                                <arg>'''${pattern}''' not in '''${clean_output}'''</arg>
                                <arg>Fail</arg>
                                <arg>Output did not contain '${pattern}'. \n${clean_output}</arg>
                                <doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
                                <status status="PASS" starttime="20210830 17:35:15.989"
                                        endtime="20210830 17:35:15.989"/>
                            </kw>
                            <status status="PASS" starttime="20210830 17:35:15.988" endtime="20210830 17:35:15.989"/>
                        </iter>
                        <iter>
                            <var name="${pattern}">application. Default value is</var>
                            <kw name="Run Keyword If" library="BuiltIn">
                                <arg>'''${pattern}''' not in '''${clean_output}'''</arg>
                                <arg>Fail</arg>
                                <arg>Output did not contain '${pattern}'. \n${clean_output}</arg>
                                <doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
                                <status status="PASS" starttime="20210830 17:35:15.990"
                                        endtime="20210830 17:35:15.990"/>
                            </kw>
                            <status status="PASS" starttime="20210830 17:35:15.989" endtime="20210830 17:35:15.990"/>
                        </iter>
                        <iter>
                            <var name="${pattern}">http://localhost:8000.</var>
                            <kw name="Run Keyword If" library="BuiltIn">
                                <arg>'''${pattern}''' not in '''${clean_output}'''</arg>
                                <arg>Fail</arg>
                                <arg>Output did not contain '${pattern}'. \n${clean_output}</arg>
                                <doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
                                <status status="PASS" starttime="20210830 17:35:15.991"
                                        endtime="20210830 17:35:15.991"/>
                            </kw>
                            <status status="PASS" starttime="20210830 17:35:15.990" endtime="20210830 17:35:15.991"/>
                        </iter>
                        <status status="PASS" starttime="20210830 17:35:15.987" endtime="20210830 17:35:15.991"/>
                    </for>
                    <status status="PASS" starttime="20210830 17:35:15.985" endtime="20210830 17:35:15.991"/>
                </kw>
                <doc>Documentation For AppUrl Should Be Displayed Properly</doc>
                <status status="PASS" starttime="20210830 17:35:15.984" endtime="20210830 17:35:15.992"/>
            </test>
            <test id="s1-s1-t3" name="Documentation For User Should Be Displayed Properly">
                <kw name="Output Should Contain" library="keywords">
                    <arg>-u, --user TEXT</arg>
                    <arg>Specifies rfhub2 user to authenticate on</arg>
                    <arg>endpoints that requires that. Default value</arg>
                    <arg>is rfhub.</arg>
                    <doc>Fail if the output from the previous command doesn't contain the given string
                        This keyword assumes the output of the command is in
                        a test suite variable named ${output}
                    </doc>
                    <kw name="Create Dictionary" library="BuiltIn">
                        <var>${ns}</var>
                        <arg>output=${output}</arg>
                        <doc>Creates and returns a dictionary based on the given ``items``.</doc>
                        <msg timestamp="20210830 17:35:15.995" level="INFO">${ns} = {'output': 'Usage: rfhub2-cli
                            [OPTIONS] [PATHS]...\n\n Package to populate rfhub2 with robot framework keywords from
                            libraries and\n resource files.\n\nOptions:\n -a, --app-url TEXT Sp...
                        </msg>
                        <status status="PASS" starttime="20210830 17:35:15.994" endtime="20210830 17:35:15.995"/>
                    </kw>
                    <kw name="Evaluate" library="BuiltIn">
                        <var>${clean_output}</var>
                        <arg>" ".join(l.strip() for l in output.splitlines())</arg>
                        <arg>namespace=${ns}</arg>
                        <doc>Evaluates the given expression in Python and returns the result.</doc>
                        <msg timestamp="20210830 17:35:15.996" level="INFO">${clean_output} = Usage: rfhub2-cli
                            [OPTIONS] [PATHS]... Package to populate rfhub2 with robot framework keywords from libraries
                            and resource files. Options: -a, --app-url TEXT Specifies IP, URI or host ...
                        </msg>
                        <status status="PASS" starttime="20210830 17:35:15.995" endtime="20210830 17:35:15.996"/>
                    </kw>
                    <for flavor="IN">
                        <var>${pattern}</var>
                        <value>@{patterns}</value>
                        <iter>
                            <var name="${pattern}">-u, --user TEXT</var>
                            <kw name="Run Keyword If" library="BuiltIn">
                                <arg>'''${pattern}''' not in '''${clean_output}'''</arg>
                                <arg>Fail</arg>
                                <arg>Output did not contain '${pattern}'. \n${clean_output}</arg>
                                <doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
                                <status status="PASS" starttime="20210830 17:35:15.997"
                                        endtime="20210830 17:35:15.998"/>
                            </kw>
                            <status status="PASS" starttime="20210830 17:35:15.997" endtime="20210830 17:35:15.998"/>
                        </iter>
                        <iter>
                            <var name="${pattern}">Specifies rfhub2 user to authenticate on</var>
                            <kw name="Run Keyword If" library="BuiltIn">
                                <arg>'''${pattern}''' not in '''${clean_output}'''</arg>
                                <arg>Fail</arg>
                                <arg>Output did not contain '${pattern}'. \n${clean_output}</arg>
                                <doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
                                <status status="PASS" starttime="20210830 17:35:15.999"
                                        endtime="20210830 17:35:15.999"/>
                            </kw>
                            <status status="PASS" starttime="20210830 17:35:15.998" endtime="20210830 17:35:15.999"/>
                        </iter>
                        <iter>
                            <var name="${pattern}">endpoints that requires that. Default value</var>
                            <kw name="Run Keyword If" library="BuiltIn">
                                <arg>'''${pattern}''' not in '''${clean_output}'''</arg>
                                <arg>Fail</arg>
                                <arg>Output did not contain '${pattern}'. \n${clean_output}</arg>
                                <doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
                                <status status="PASS" starttime="20210830 17:35:15.999"
                                        endtime="20210830 17:35:16.000"/>
                            </kw>
                            <status status="PASS" starttime="20210830 17:35:15.999" endtime="20210830 17:35:16.000"/>
                        </iter>
                        <iter>
                            <var name="${pattern}">is rfhub.</var>
                            <kw name="Run Keyword If" library="BuiltIn">
                                <arg>'''${pattern}''' not in '''${clean_output}'''</arg>
                                <arg>Fail</arg>
                                <arg>Output did not contain '${pattern}'. \n${clean_output}</arg>
                                <doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
                                <status status="PASS" starttime="20210830 17:35:16.000"
                                        endtime="20210830 17:35:16.001"/>
                            </kw>
                            <status status="PASS" starttime="20210830 17:35:16.000" endtime="20210830 17:35:16.001"/>
                        </iter>
                        <status status="PASS" starttime="20210830 17:35:15.997" endtime="20210830 17:35:16.001"/>
                    </for>
                    <status status="PASS" starttime="20210830 17:35:15.994" endtime="20210830 17:35:16.002"/>
                </kw>
                <doc>Documentation For User Should Be Displayed Properly</doc>
                <status status="PASS" starttime="20210830 17:35:15.992" endtime="20210830 17:35:16.002"/>
            </test>
            <test id="s1-s1-t4" name="Documentation For Password Should Be Displayed Properly">
                <kw name="Output Should Contain" library="keywords">
                    <arg>-p, --password TEXT</arg>
                    <arg>Specifies rfhub2 password to authenticate on</arg>
                    <arg>endpoints that requires that. Default value</arg>
                    <arg>is rfhub.</arg>
                    <doc>Fail if the output from the previous command doesn't contain the given string
                        This keyword assumes the output of the command is in
                        a test suite variable named ${output}
                    </doc>
                    <kw name="Create Dictionary" library="BuiltIn">
                        <var>${ns}</var>
                        <arg>output=${output}</arg>
                        <doc>Creates and returns a dictionary based on the given ``items``.</doc>
                        <msg timestamp="20210830 17:35:16.005" level="INFO">${ns} = {'output': 'Usage: rfhub2-cli
                            [OPTIONS] [PATHS]...\n\n Package to populate rfhub2 with robot framework keywords from
                            libraries and\n resource files.\n\nOptions:\n -a, --app-url TEXT Sp...
                        </msg>
                        <status status="PASS" starttime="20210830 17:35:16.005" endtime="20210830 17:35:16.005"/>
                    </kw>
                    <kw name="Evaluate" library="BuiltIn">
                        <var>${clean_output}</var>
                        <arg>" ".join(l.strip() for l in output.splitlines())</arg>
                        <arg>namespace=${ns}</arg>
                        <doc>Evaluates the given expression in Python and returns the result.</doc>
                        <msg timestamp="20210830 17:35:16.007" level="INFO">${clean_output} = Usage: rfhub2-cli
                            [OPTIONS] [PATHS]... Package to populate rfhub2 with robot framework keywords from libraries
                            and resource files. Options: -a, --app-url TEXT Specifies IP, URI or host ...
                        </msg>
                        <status status="PASS" starttime="20210830 17:35:16.006" endtime="20210830 17:35:16.007"/>
                    </kw>
                    <for flavor="IN">
                        <var>${pattern}</var>
                        <value>@{patterns}</value>
                        <iter>
                            <var name="${pattern}">-p, --password TEXT</var>
                            <kw name="Run Keyword If" library="BuiltIn">
                                <arg>'''${pattern}''' not in '''${clean_output}'''</arg>
                                <arg>Fail</arg>
                                <arg>Output did not contain '${pattern}'. \n${clean_output}</arg>
                                <doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
                                <status status="PASS" starttime="20210830 17:35:16.008"
                                        endtime="20210830 17:35:16.009"/>
                            </kw>
                            <status status="PASS" starttime="20210830 17:35:16.008" endtime="20210830 17:35:16.009"/>
                        </iter>
                        <iter>
                            <var name="${pattern}">Specifies rfhub2 password to authenticate on</var>
                            <kw name="Run Keyword If" library="BuiltIn">
                                <arg>'''${pattern}''' not in '''${clean_output}'''</arg>
                                <arg>Fail</arg>
                                <arg>Output did not contain '${pattern}'. \n${clean_output}</arg>
                                <doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
                                <status status="PASS" starttime="20210830 17:35:16.009"
                                        endtime="20210830 17:35:16.010"/>
                            </kw>
                            <status status="PASS" starttime="20210830 17:35:16.009" endtime="20210830 17:35:16.010"/>
                        </iter>
                        <iter>
                            <var name="${pattern}">endpoints that requires that. Default value</var>
                            <kw name="Run Keyword If" library="BuiltIn">
                                <arg>'''${pattern}''' not in '''${clean_output}'''</arg>
                                <arg>Fail</arg>
                                <arg>Output did not contain '${pattern}'. \n${clean_output}</arg>
                                <doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
                                <status status="PASS" starttime="20210830 17:35:16.010"
                                        endtime="20210830 17:35:16.011"/>
                            </kw>
                            <status status="PASS" starttime="20210830 17:35:16.010" endtime="20210830 17:35:16.011"/>
                        </iter>
                        <iter>
                            <var name="${pattern}">is rfhub.</var>
                            <kw name="Run Keyword If" library="BuiltIn">
                                <arg>'''${pattern}''' not in '''${clean_output}'''</arg>
                                <arg>Fail</arg>
                                <arg>Output did not contain '${pattern}'. \n${clean_output}</arg>
                                <doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
                                <status status="PASS" starttime="20210830 17:35:16.012"
                                        endtime="20210830 17:35:16.012"/>
                            </kw>
                            <status status="PASS" starttime="20210830 17:35:16.011" endtime="20210830 17:35:16.012"/>
                        </iter>
                        <status status="PASS" starttime="20210830 17:35:16.007" endtime="20210830 17:35:16.012"/>
                    </for>
                    <status status="PASS" starttime="20210830 17:35:16.004" endtime="20210830 17:35:16.013"/>
                </kw>
                <doc>Documentation For Password Should Be Displayed Properly</doc>
                <status status="PASS" starttime="20210830 17:35:16.003" endtime="20210830 17:35:16.013"/>
            </test>
            <test id="s1-s1-t5" name="Documentation For No Installed Keywords Should Be Displayed Properly">
                <kw name="Output Should Contain" library="keywords">
                    <arg>--no-installed-keywords</arg>
                    <arg>Flag specifying if package should skip</arg>
                    <arg>loading commonly installed libraries, such</arg>
                    <arg>as such as BuiltIn, Collections, DateTime</arg>
                    <arg>etc.</arg>
                    <doc>Fail if the output from the previous command doesn't contain the given string
                        This keyword assumes the output of the command is in
                        a test suite variable named ${output}
                    </doc>
                    <kw name="Create Dictionary" library="BuiltIn">
                        <var>${ns}</var>
                        <arg>output=${output}</arg>
                        <doc>Creates and returns a dictionary based on the given ``items``.</doc>
                        <msg timestamp="20210830 17:35:16.017" level="INFO">${ns} = {'output': 'Usage: rfhub2-cli
                            [OPTIONS] [PATHS]...\n\n Package to populate rfhub2 with robot framework keywords from
                            libraries and\n resource files.\n\nOptions:\n -a, --app-url TEXT Sp...
                        </msg>
                        <status status="PASS" starttime="20210830 17:35:16.016" endtime="20210830 17:35:16.017"/>
                    </kw>
                    <kw name="Evaluate" library="BuiltIn">
                        <var>${clean_output}</var>
                        <arg>" ".join(l.strip() for l in output.splitlines())</arg>
                        <arg>namespace=${ns}</arg>
                        <doc>Evaluates the given expression in Python and returns the result.</doc>
                        <msg timestamp="20210830 17:35:16.018" level="INFO">${clean_output} = Usage: rfhub2-cli
                            [OPTIONS] [PATHS]... Package to populate rfhub2 with robot framework keywords from libraries
                            and resource files. Options: -a, --app-url TEXT Specifies IP, URI or host ...
                        </msg>
                        <status status="PASS" starttime="20210830 17:35:16.018" endtime="20210830 17:35:16.019"/>
                    </kw>
                    <for flavor="IN">
                        <var>${pattern}</var>
                        <value>@{patterns}</value>
                        <iter>
                            <var name="${pattern}">--no-installed-keywords</var>
                            <kw name="Run Keyword If" library="BuiltIn">
                                <arg>'''${pattern}''' not in '''${clean_output}'''</arg>
                                <arg>Fail</arg>
                                <arg>Output did not contain '${pattern}'. \n${clean_output}</arg>
                                <doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
                                <status status="PASS" starttime="20210830 17:35:16.019"
                                        endtime="20210830 17:35:16.020"/>
                            </kw>
                            <status status="PASS" starttime="20210830 17:35:16.019" endtime="20210830 17:35:16.020"/>
                        </iter>
                        <iter>
                            <var name="${pattern}">Flag specifying if package should skip</var>
                            <kw name="Run Keyword If" library="BuiltIn">
                                <arg>'''${pattern}''' not in '''${clean_output}'''</arg>
                                <arg>Fail</arg>
                                <arg>Output did not contain '${pattern}'. \n${clean_output}</arg>
                                <doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
                                <status status="PASS" starttime="20210830 17:35:16.021"
                                        endtime="20210830 17:35:16.021"/>
                            </kw>
                            <status status="PASS" starttime="20210830 17:35:16.020" endtime="20210830 17:35:16.021"/>
                        </iter>
                        <iter>
                            <var name="${pattern}">loading commonly installed libraries, such</var>
                            <kw name="Run Keyword If" library="BuiltIn">
                                <arg>'''${pattern}''' not in '''${clean_output}'''</arg>
                                <arg>Fail</arg>
                                <arg>Output did not contain '${pattern}'. \n${clean_output}</arg>
                                <doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
                                <status status="PASS" starttime="20210830 17:35:16.022"
                                        endtime="20210830 17:35:16.022"/>
                            </kw>
                            <status status="PASS" starttime="20210830 17:35:16.021" endtime="20210830 17:35:16.022"/>
                        </iter>
                        <iter>
                            <var name="${pattern}">as such as BuiltIn, Collections, DateTime</var>
                            <kw name="Run Keyword If" library="BuiltIn">
                                <arg>'''${pattern}''' not in '''${clean_output}'''</arg>
                                <arg>Fail</arg>
                                <arg>Output did not contain '${pattern}'. \n${clean_output}</arg>
                                <doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
                                <status status="PASS" starttime="20210830 17:35:16.023"
                                        endtime="20210830 17:35:16.023"/>
                            </kw>
                            <status status="PASS" starttime="20210830 17:35:16.022" endtime="20210830 17:35:16.023"/>
                        </iter>
                        <iter>
                            <var name="${pattern}">etc.</var>
                            <kw name="Run Keyword If" library="BuiltIn">
                                <arg>'''${pattern}''' not in '''${clean_output}'''</arg>
                                <arg>Fail</arg>
                                <arg>Output did not contain '${pattern}'. \n${clean_output}</arg>
                                <doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
                                <status status="PASS" starttime="20210830 17:35:16.024"
                                        endtime="20210830 17:35:16.024"/>
                            </kw>
                            <status status="PASS" starttime="20210830 17:35:16.023" endtime="20210830 17:35:16.024"/>
                        </iter>
                        <status status="PASS" starttime="20210830 17:35:16.019" endtime="20210830 17:35:16.024"/>
                    </for>
                    <status status="PASS" starttime="20210830 17:35:16.015" endtime="20210830 17:35:16.025"/>
                </kw>
                <doc>Documentation For No Installed Keywords Should Be Displayed Properly</doc>
                <status status="PASS" starttime="20210830 17:35:16.014" endtime="20210830 17:35:16.025"/>
            </test>
            <test id="s1-s1-t6" name="Documentation For Load Should Be Displayed Properly">
                <kw name="Output Should Contain" library="keywords">
                    <arg>-m, --mode [keywords|statistics]</arg>
                    <arg>Choice parameter specifying what kind of</arg>
                    <arg>data package should add:</arg>
                    <arg>- `keywords` -</arg>
                    <arg>default value, application is working with</arg>
                    <arg>keywords documentation</arg>
                    <arg>- `statistics` -</arg>
                    <arg>application is working with data about</arg>
                    <arg>keywords execution.</arg>
                    <doc>Fail if the output from the previous command doesn't contain the given string
                        This keyword assumes the output of the command is in
                        a test suite variable named ${output}
                    </doc>
                    <kw name="Create Dictionary" library="BuiltIn">
                        <var>${ns}</var>
                        <arg>output=${output}</arg>
                        <doc>Creates and returns a dictionary based on the given ``items``.</doc>
                        <msg timestamp="20210830 17:35:16.029" level="INFO">${ns} = {'output': 'Usage: rfhub2-cli
                            [OPTIONS] [PATHS]...\n\n Package to populate rfhub2 with robot framework keywords from
                            libraries and\n resource files.\n\nOptions:\n -a, --app-url TEXT Sp...
                        </msg>
                        <status status="PASS" starttime="20210830 17:35:16.028" endtime="20210830 17:35:16.029"/>
                    </kw>
                    <kw name="Evaluate" library="BuiltIn">
                        <var>${clean_output}</var>
                        <arg>" ".join(l.strip() for l in output.splitlines())</arg>
                        <arg>namespace=${ns}</arg>
                        <doc>Evaluates the given expression in Python and returns the result.</doc>
                        <msg timestamp="20210830 17:35:16.030" level="INFO">${clean_output} = Usage: rfhub2-cli
                            [OPTIONS] [PATHS]... Package to populate rfhub2 with robot framework keywords from libraries
                            and resource files. Options: -a, --app-url TEXT Specifies IP, URI or host ...
                        </msg>
                        <status status="PASS" starttime="20210830 17:35:16.030" endtime="20210830 17:35:16.030"/>
                    </kw>
                    <for flavor="IN">
                        <var>${pattern}</var>
                        <value>@{patterns}</value>
                        <iter>
                            <var name="${pattern}">-m, --mode [keywords|statistics]</var>
                            <kw name="Run Keyword If" library="BuiltIn">
                                <arg>'''${pattern}''' not in '''${clean_output}'''</arg>
                                <arg>Fail</arg>
                                <arg>Output did not contain '${pattern}'. \n${clean_output}</arg>
                                <doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
                                <status status="PASS" starttime="20210830 17:35:16.031"
                                        endtime="20210830 17:35:16.032"/>
                            </kw>
                            <status status="PASS" starttime="20210830 17:35:16.031" endtime="20210830 17:35:16.032"/>
                        </iter>
                        <iter>
                            <var name="${pattern}">Choice parameter specifying what kind of</var>
                            <kw name="Run Keyword If" library="BuiltIn">
                                <arg>'''${pattern}''' not in '''${clean_output}'''</arg>
                                <arg>Fail</arg>
                                <arg>Output did not contain '${pattern}'. \n${clean_output}</arg>
                                <doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
                                <status status="PASS" starttime="20210830 17:35:16.032"
                                        endtime="20210830 17:35:16.033"/>
                            </kw>
                            <status status="PASS" starttime="20210830 17:35:16.032" endtime="20210830 17:35:16.033"/>
                        </iter>
                        <iter>
                            <var name="${pattern}">data package should add:</var>
                            <kw name="Run Keyword If" library="BuiltIn">
                                <arg>'''${pattern}''' not in '''${clean_output}'''</arg>
                                <arg>Fail</arg>
                                <arg>Output did not contain '${pattern}'. \n${clean_output}</arg>
                                <doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
                                <status status="PASS" starttime="20210830 17:35:16.033"
                                        endtime="20210830 17:35:16.034"/>
                            </kw>
                            <status status="PASS" starttime="20210830 17:35:16.033" endtime="20210830 17:35:16.034"/>
                        </iter>
                        <iter>
                            <var name="${pattern}">- `keywords` -</var>
                            <kw name="Run Keyword If" library="BuiltIn">
                                <arg>'''${pattern}''' not in '''${clean_output}'''</arg>
                                <arg>Fail</arg>
                                <arg>Output did not contain '${pattern}'. \n${clean_output}</arg>
                                <doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
                                <status status="PASS" starttime="20210830 17:35:16.034"
                                        endtime="20210830 17:35:16.035"/>
                            </kw>
                            <status status="PASS" starttime="20210830 17:35:16.034" endtime="20210830 17:35:16.035"/>
                        </iter>
                        <iter>
                            <var name="${pattern}">default value, application is working with</var>
                            <kw name="Run Keyword If" library="BuiltIn">
                                <arg>'''${pattern}''' not in '''${clean_output}'''</arg>
                                <arg>Fail</arg>
                                <arg>Output did not contain '${pattern}'. \n${clean_output}</arg>
                                <doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
                                <status status="PASS" starttime="20210830 17:35:16.035"
                                        endtime="20210830 17:35:16.036"/>
                            </kw>
                            <status status="PASS" starttime="20210830 17:35:16.035" endtime="20210830 17:35:16.036"/>
                        </iter>
                        <iter>
                            <var name="${pattern}">keywords documentation</var>
                            <kw name="Run Keyword If" library="BuiltIn">
                                <arg>'''${pattern}''' not in '''${clean_output}'''</arg>
                                <arg>Fail</arg>
                                <arg>Output did not contain '${pattern}'. \n${clean_output}</arg>
                                <doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
                                <status status="PASS" starttime="20210830 17:35:16.036"
                                        endtime="20210830 17:35:16.037"/>
                            </kw>
                            <status status="PASS" starttime="20210830 17:35:16.036" endtime="20210830 17:35:16.037"/>
                        </iter>
                        <iter>
                            <var name="${pattern}">- `statistics` -</var>
                            <kw name="Run Keyword If" library="BuiltIn">
                                <arg>'''${pattern}''' not in '''${clean_output}'''</arg>
                                <arg>Fail</arg>
                                <arg>Output did not contain '${pattern}'. \n${clean_output}</arg>
                                <doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
                                <status status="PASS" starttime="20210830 17:35:16.037"
                                        endtime="20210830 17:35:16.038"/>
                            </kw>
                            <status status="PASS" starttime="20210830 17:35:16.037" endtime="20210830 17:35:16.038"/>
                        </iter>
                        <iter>
                            <var name="${pattern}">application is working with data about</var>
                            <kw name="Run Keyword If" library="BuiltIn">
                                <arg>'''${pattern}''' not in '''${clean_output}'''</arg>
                                <arg>Fail</arg>
                                <arg>Output did not contain '${pattern}'. \n${clean_output}</arg>
                                <doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
                                <status status="PASS" starttime="20210830 17:35:16.038"
                                        endtime="20210830 17:35:16.039"/>
                            </kw>
                            <status status="PASS" starttime="20210830 17:35:16.038" endtime="20210830 17:35:16.039"/>
                        </iter>
                        <iter>
                            <var name="${pattern}">keywords execution.</var>
                            <kw name="Run Keyword If" library="BuiltIn">
                                <arg>'''${pattern}''' not in '''${clean_output}'''</arg>
                                <arg>Fail</arg>
                                <arg>Output did not contain '${pattern}'. \n${clean_output}</arg>
                                <doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
                                <status status="PASS" starttime="20210830 17:35:16.039"
                                        endtime="20210830 17:35:16.040"/>
                            </kw>
                            <status status="PASS" starttime="20210830 17:35:16.039" endtime="20210830 17:35:16.040"/>
                        </iter>
                        <status status="PASS" starttime="20210830 17:35:16.031" endtime="20210830 17:35:16.040"/>
                    </for>
                    <status status="PASS" starttime="20210830 17:35:16.027" endtime="20210830 17:35:16.041"/>
                </kw>
                <doc>Documentation For Mode Should Be Displayed Properly</doc>
                <tag>rfhub2-67</tag>
                <tag>statistics</tag>
                <status status="PASS" starttime="20210830 17:35:16.026" endtime="20210830 17:35:16.041"/>
            </test>
            <test id="s1-s1-t7" name="Documentation For Load Mode Should Be Displayed Properly">
                <kw name="Output Should Contain" library="keywords">
                    <arg>-l, --load-mode [merge|insert|append|update]</arg>
                    <arg>Choice parameter specifying in what load</arg>
                    <arg>mode package should run:</arg>
                    <arg>- `merge`</arg>
                    <arg>- default value, adds new and</arg>
                    <arg>updates only matched collections, does</arg>
                    <arg>nothing with not matched ones</arg>
                    <arg>- `insert` - removes all existing</arg>
                    <arg>collections from app and add ones found in</arg>
                    <arg>paths</arg>
                    <arg>- `append` - adds collections found in paths</arg>
                    <arg>without removal of existing ones</arg>
                    <arg>- `update` - removes collections not found</arg>
                    <arg>in paths, adds new ones and updates existing</arg>
                    <arg>ones</arg>
                    <doc>Fail if the output from the previous command doesn't contain the given string
                        This keyword assumes the output of the command is in
                        a test suite variable named ${output}
                    </doc>
                    <kw name="Create Dictionary" library="BuiltIn">
                        <var>${ns}</var>
                        <arg>output=${output}</arg>
                        <doc>Creates and returns a dictionary based on the given ``items``.</doc>
                        <msg timestamp="20210830 17:35:16.044" level="INFO">${ns} = {'output': 'Usage: rfhub2-cli
                            [OPTIONS] [PATHS]...\n\n Package to populate rfhub2 with robot framework keywords from
                            libraries and\n resource files.\n\nOptions:\n -a, --app-url TEXT Sp...
                        </msg>
                        <status status="PASS" starttime="20210830 17:35:16.044" endtime="20210830 17:35:16.044"/>
                    </kw>
                    <kw name="Evaluate" library="BuiltIn">
                        <var>${clean_output}</var>
                        <arg>" ".join(l.strip() for l in output.splitlines())</arg>
                        <arg>namespace=${ns}</arg>
                        <doc>Evaluates the given expression in Python and returns the result.</doc>
                        <msg timestamp="20210830 17:35:16.045" level="INFO">${clean_output} = Usage: rfhub2-cli
                            [OPTIONS] [PATHS]... Package to populate rfhub2 with robot framework keywords from libraries
                            and resource files. Options: -a, --app-url TEXT Specifies IP, URI or host ...
                        </msg>
                        <status status="PASS" starttime="20210830 17:35:16.044" endtime="20210830 17:35:16.045"/>
                    </kw>
                    <for flavor="IN">
                        <var>${pattern}</var>
                        <value>@{patterns}</value>
                        <iter>
                            <var name="${pattern}">-l, --load-mode [merge|insert|append|update]</var>
                            <kw name="Run Keyword If" library="BuiltIn">
                                <arg>'''${pattern}''' not in '''${clean_output}'''</arg>
                                <arg>Fail</arg>
                                <arg>Output did not contain '${pattern}'. \n${clean_output}</arg>
                                <doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
                                <status status="PASS" starttime="20210830 17:35:16.046"
                                        endtime="20210830 17:35:16.046"/>
                            </kw>
                            <status status="PASS" starttime="20210830 17:35:16.046" endtime="20210830 17:35:16.046"/>
                        </iter>
                        <iter>
                            <var name="${pattern}">Choice parameter specifying in what load</var>
                            <kw name="Run Keyword If" library="BuiltIn">
                                <arg>'''${pattern}''' not in '''${clean_output}'''</arg>
                                <arg>Fail</arg>
                                <arg>Output did not contain '${pattern}'. \n${clean_output}</arg>
                                <doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
                                <status status="PASS" starttime="20210830 17:35:16.047"
                                        endtime="20210830 17:35:16.047"/>
                            </kw>
                            <status status="PASS" starttime="20210830 17:35:16.047" endtime="20210830 17:35:16.047"/>
                        </iter>
                        <iter>
                            <var name="${pattern}">mode package should run:</var>
                            <kw name="Run Keyword If" library="BuiltIn">
                                <arg>'''${pattern}''' not in '''${clean_output}'''</arg>
                                <arg>Fail</arg>
                                <arg>Output did not contain '${pattern}'. \n${clean_output}</arg>
                                <doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
                                <status status="PASS" starttime="20210830 17:35:16.048"
                                        endtime="20210830 17:35:16.048"/>
                            </kw>
                            <status status="PASS" starttime="20210830 17:35:16.047" endtime="20210830 17:35:16.048"/>
                        </iter>
                        <iter>
                            <var name="${pattern}">- `merge`</var>
                            <kw name="Run Keyword If" library="BuiltIn">
                                <arg>'''${pattern}''' not in '''${clean_output}'''</arg>
                                <arg>Fail</arg>
                                <arg>Output did not contain '${pattern}'. \n${clean_output}</arg>
                                <doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
                                <status status="PASS" starttime="20210830 17:35:16.049"
                                        endtime="20210830 17:35:16.049"/>
                            </kw>
                            <status status="PASS" starttime="20210830 17:35:16.048" endtime="20210830 17:35:16.049"/>
                        </iter>
                        <iter>
                            <var name="${pattern}">- default value, adds new and</var>
                            <kw name="Run Keyword If" library="BuiltIn">
                                <arg>'''${pattern}''' not in '''${clean_output}'''</arg>
                                <arg>Fail</arg>
                                <arg>Output did not contain '${pattern}'. \n${clean_output}</arg>
                                <doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
                                <status status="PASS" starttime="20210830 17:35:16.050"
                                        endtime="20210830 17:35:16.050"/>
                            </kw>
                            <status status="PASS" starttime="20210830 17:35:16.049" endtime="20210830 17:35:16.050"/>
                        </iter>
                        <iter>
                            <var name="${pattern}">updates only matched collections, does</var>
                            <kw name="Run Keyword If" library="BuiltIn">
                                <arg>'''${pattern}''' not in '''${clean_output}'''</arg>
                                <arg>Fail</arg>
                                <arg>Output did not contain '${pattern}'. \n${clean_output}</arg>
                                <doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
                                <status status="PASS" starttime="20210830 17:35:16.050"
                                        endtime="20210830 17:35:16.051"/>
                            </kw>
                            <status status="PASS" starttime="20210830 17:35:16.050" endtime="20210830 17:35:16.051"/>
                        </iter>
                        <iter>
                            <var name="${pattern}">nothing with not matched ones</var>
                            <kw name="Run Keyword If" library="BuiltIn">
                                <arg>'''${pattern}''' not in '''${clean_output}'''</arg>
                                <arg>Fail</arg>
                                <arg>Output did not contain '${pattern}'. \n${clean_output}</arg>
                                <doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
                                <status status="PASS" starttime="20210830 17:35:16.051"
                                        endtime="20210830 17:35:16.052"/>
                            </kw>
                            <status status="PASS" starttime="20210830 17:35:16.051" endtime="20210830 17:35:16.052"/>
                        </iter>
                        <iter>
                            <var name="${pattern}">- `insert` - removes all existing</var>
                            <kw name="Run Keyword If" library="BuiltIn">
                                <arg>'''${pattern}''' not in '''${clean_output}'''</arg>
                                <arg>Fail</arg>
                                <arg>Output did not contain '${pattern}'. \n${clean_output}</arg>
                                <doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
                                <status status="PASS" starttime="20210830 17:35:16.052"
                                        endtime="20210830 17:35:16.053"/>
                            </kw>
                            <status status="PASS" starttime="20210830 17:35:16.052" endtime="20210830 17:35:16.053"/>
                        </iter>
                        <iter>
                            <var name="${pattern}">collections from app and add ones found in</var>
                            <kw name="Run Keyword If" library="BuiltIn">
                                <arg>'''${pattern}''' not in '''${clean_output}'''</arg>
                                <arg>Fail</arg>
                                <arg>Output did not contain '${pattern}'. \n${clean_output}</arg>
                                <doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
                                <status status="PASS" starttime="20210830 17:35:16.053"
                                        endtime="20210830 17:35:16.054"/>
                            </kw>
                            <status status="PASS" starttime="20210830 17:35:16.053" endtime="20210830 17:35:16.054"/>
                        </iter>
                        <iter>
                            <var name="${pattern}">paths</var>
                            <kw name="Run Keyword If" library="BuiltIn">
                                <arg>'''${pattern}''' not in '''${clean_output}'''</arg>
                                <arg>Fail</arg>
                                <arg>Output did not contain '${pattern}'. \n${clean_output}</arg>
                                <doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
                                <status status="PASS" starttime="20210830 17:35:16.055"
                                        endtime="20210830 17:35:16.055"/>
                            </kw>
                            <status status="PASS" starttime="20210830 17:35:16.055" endtime="20210830 17:35:16.055"/>
                        </iter>
                        <iter>
                            <var name="${pattern}">- `append` - adds collections found in paths</var>
                            <kw name="Run Keyword If" library="BuiltIn">
                                <arg>'''${pattern}''' not in '''${clean_output}'''</arg>
                                <arg>Fail</arg>
                                <arg>Output did not contain '${pattern}'. \n${clean_output}</arg>
                                <doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
                                <status status="PASS" starttime="20210830 17:35:16.056"
                                        endtime="20210830 17:35:16.056"/>
                            </kw>
                            <status status="PASS" starttime="20210830 17:35:16.056" endtime="20210830 17:35:16.056"/>
                        </iter>
                        <iter>
                            <var name="${pattern}">without removal of existing ones</var>
                            <kw name="Run Keyword If" library="BuiltIn">
                                <arg>'''${pattern}''' not in '''${clean_output}'''</arg>
                                <arg>Fail</arg>
                                <arg>Output did not contain '${pattern}'. \n${clean_output}</arg>
                                <doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
                                <status status="PASS" starttime="20210830 17:35:16.057"
                                        endtime="20210830 17:35:16.057"/>
                            </kw>
                            <status status="PASS" starttime="20210830 17:35:16.057" endtime="20210830 17:35:16.058"/>
                        </iter>
                        <iter>
                            <var name="${pattern}">- `update` - removes collections not found</var>
                            <kw name="Run Keyword If" library="BuiltIn">
                                <arg>'''${pattern}''' not in '''${clean_output}'''</arg>
                                <arg>Fail</arg>
                                <arg>Output did not contain '${pattern}'. \n${clean_output}</arg>
                                <doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
                                <status status="PASS" starttime="20210830 17:35:16.058"
                                        endtime="20210830 17:35:16.059"/>
                            </kw>
                            <status status="PASS" starttime="20210830 17:35:16.058" endtime="20210830 17:35:16.059"/>
                        </iter>
                        <iter>
                            <var name="${pattern}">in paths, adds new ones and updates existing</var>
                            <kw name="Run Keyword If" library="BuiltIn">
                                <arg>'''${pattern}''' not in '''${clean_output}'''</arg>
                                <arg>Fail</arg>
                                <arg>Output did not contain '${pattern}'. \n${clean_output}</arg>
                                <doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
                                <status status="PASS" starttime="20210830 17:35:16.059"
                                        endtime="20210830 17:35:16.060"/>
                            </kw>
                            <status status="PASS" starttime="20210830 17:35:16.059" endtime="20210830 17:35:16.060"/>
                        </iter>
                        <iter>
                            <var name="${pattern}">ones</var>
                            <kw name="Run Keyword If" library="BuiltIn">
                                <arg>'''${pattern}''' not in '''${clean_output}'''</arg>
                                <arg>Fail</arg>
                                <arg>Output did not contain '${pattern}'. \n${clean_output}</arg>
                                <doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
                                <status status="PASS" starttime="20210830 17:35:16.060"
                                        endtime="20210830 17:35:16.061"/>
                            </kw>
                            <status status="PASS" starttime="20210830 17:35:16.060" endtime="20210830 17:35:16.061"/>
                        </iter>
                        <status status="PASS" starttime="20210830 17:35:16.045" endtime="20210830 17:35:16.061"/>
                    </for>
                    <status status="PASS" starttime="20210830 17:35:16.043" endtime="20210830 17:35:16.061"/>
                </kw>
                <doc>Documentation For Load Mode Should Be Displayed Properly</doc>
                <tag>rfhub2-330</tag>
                <tag>rfhub2-64</tag>
                <tag>update</tag>
                <status status="PASS" starttime="20210830 17:35:16.042" endtime="20210830 17:35:16.062"/>
            </test>
            <test id="s1-s1-t8" name="Documentation For Include Exclude Should Be Displayed Properly">
                <kw name="Output Should Contain" library="keywords">
                    <arg>-i, --include TEXT</arg>
                    <arg>Include all the keywords containing tags</arg>
                    <arg>matching this pattern. This option has the</arg>
                    <arg>same behavior as the --include option of the</arg>
                    <arg>RobotFramework CLI (with the same format).</arg>
                    <arg>By default, all the keywords found are</arg>
                    <arg>included.</arg>
                    <arg>-e, --exclude TEXT</arg>
                    <arg>Exclude all the keywords containing tags</arg>
                    <arg>matching this pattern. This option has the</arg>
                    <arg>same behavior as the --exclude option of the</arg>
                    <arg>RobotFramework CLI (with the same format).</arg>
                    <arg>By default, no keyword is excluded.</arg>
                    <doc>Fail if the output from the previous command doesn't contain the given string
                        This keyword assumes the output of the command is in
                        a test suite variable named ${output}
                    </doc>
                    <kw name="Create Dictionary" library="BuiltIn">
                        <var>${ns}</var>
                        <arg>output=${output}</arg>
                        <doc>Creates and returns a dictionary based on the given ``items``.</doc>
                        <msg timestamp="20210830 17:35:16.065" level="INFO">${ns} = {'output': 'Usage: rfhub2-cli
                            [OPTIONS] [PATHS]...\n\n Package to populate rfhub2 with robot framework keywords from
                            libraries and\n resource files.\n\nOptions:\n -a, --app-url TEXT Sp...
                        </msg>
                        <status status="PASS" starttime="20210830 17:35:16.065" endtime="20210830 17:35:16.065"/>
                    </kw>
                    <kw name="Evaluate" library="BuiltIn">
                        <var>${clean_output}</var>
                        <arg>" ".join(l.strip() for l in output.splitlines())</arg>
                        <arg>namespace=${ns}</arg>
                        <doc>Evaluates the given expression in Python and returns the result.</doc>
                        <msg timestamp="20210830 17:35:16.066" level="INFO">${clean_output} = Usage: rfhub2-cli
                            [OPTIONS] [PATHS]... Package to populate rfhub2 with robot framework keywords from libraries
                            and resource files. Options: -a, --app-url TEXT Specifies IP, URI or host ...
                        </msg>
                        <status status="PASS" starttime="20210830 17:35:16.066" endtime="20210830 17:35:16.066"/>
                    </kw>
                    <for flavor="IN">
                        <var>${pattern}</var>
                        <value>@{patterns}</value>
                        <iter>
                            <var name="${pattern}">-i, --include TEXT</var>
                            <kw name="Run Keyword If" library="BuiltIn">
                                <arg>'''${pattern}''' not in '''${clean_output}'''</arg>
                                <arg>Fail</arg>
                                <arg>Output did not contain '${pattern}'. \n${clean_output}</arg>
                                <doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
                                <status status="PASS" starttime="20210830 17:35:16.067"
                                        endtime="20210830 17:35:16.067"/>
                            </kw>
                            <status status="PASS" starttime="20210830 17:35:16.067" endtime="20210830 17:35:16.068"/>
                        </iter>
                        <iter>
                            <var name="${pattern}">Include all the keywords containing tags</var>
                            <kw name="Run Keyword If" library="BuiltIn">
                                <arg>'''${pattern}''' not in '''${clean_output}'''</arg>
                                <arg>Fail</arg>
                                <arg>Output did not contain '${pattern}'. \n${clean_output}</arg>
                                <doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
                                <status status="PASS" starttime="20210830 17:35:16.068"
                                        endtime="20210830 17:35:16.068"/>
                            </kw>
                            <status status="PASS" starttime="20210830 17:35:16.068" endtime="20210830 17:35:16.068"/>
                        </iter>
                        <iter>
                            <var name="${pattern}">matching this pattern. This option has the</var>
                            <kw name="Run Keyword If" library="BuiltIn">
                                <arg>'''${pattern}''' not in '''${clean_output}'''</arg>
                                <arg>Fail</arg>
                                <arg>Output did not contain '${pattern}'. \n${clean_output}</arg>
                                <doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
                                <status status="PASS" starttime="20210830 17:35:16.069"
                                        endtime="20210830 17:35:16.069"/>
                            </kw>
                            <status status="PASS" starttime="20210830 17:35:16.069" endtime="20210830 17:35:16.070"/>
                        </iter>
                        <iter>
                            <var name="${pattern}">same behavior as the --include option of the</var>
                            <kw name="Run Keyword If" library="BuiltIn">
                                <arg>'''${pattern}''' not in '''${clean_output}'''</arg>
                                <arg>Fail</arg>
                                <arg>Output did not contain '${pattern}'. \n${clean_output}</arg>
                                <doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
                                <status status="PASS" starttime="20210830 17:35:16.070"
                                        endtime="20210830 17:35:16.071"/>
                            </kw>
                            <status status="PASS" starttime="20210830 17:35:16.070" endtime="20210830 17:35:16.071"/>
                        </iter>
                        <iter>
                            <var name="${pattern}">RobotFramework CLI (with the same format).</var>
                            <kw name="Run Keyword If" library="BuiltIn">
                                <arg>'''${pattern}''' not in '''${clean_output}'''</arg>
                                <arg>Fail</arg>
                                <arg>Output did not contain '${pattern}'. \n${clean_output}</arg>
                                <doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
                                <status status="PASS" starttime="20210830 17:35:16.071"
                                        endtime="20210830 17:35:16.072"/>
                            </kw>
                            <status status="PASS" starttime="20210830 17:35:16.071" endtime="20210830 17:35:16.072"/>
                        </iter>
                        <iter>
                            <var name="${pattern}">By default, all the keywords found are</var>
                            <kw name="Run Keyword If" library="BuiltIn">
                                <arg>'''${pattern}''' not in '''${clean_output}'''</arg>
                                <arg>Fail</arg>
                                <arg>Output did not contain '${pattern}'. \n${clean_output}</arg>
                                <doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
                                <status status="PASS" starttime="20210830 17:35:16.072"
                                        endtime="20210830 17:35:16.073"/>
                            </kw>
                            <status status="PASS" starttime="20210830 17:35:16.072" endtime="20210830 17:35:16.073"/>
                        </iter>
                        <iter>
                            <var name="${pattern}">included.</var>
                            <kw name="Run Keyword If" library="BuiltIn">
                                <arg>'''${pattern}''' not in '''${clean_output}'''</arg>
                                <arg>Fail</arg>
                                <arg>Output did not contain '${pattern}'. \n${clean_output}</arg>
                                <doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
                                <status status="PASS" starttime="20210830 17:35:16.073"
                                        endtime="20210830 17:35:16.074"/>
                            </kw>
                            <status status="PASS" starttime="20210830 17:35:16.073" endtime="20210830 17:35:16.074"/>
                        </iter>
                        <iter>
                            <var name="${pattern}">-e, --exclude TEXT</var>
                            <kw name="Run Keyword If" library="BuiltIn">
                                <arg>'''${pattern}''' not in '''${clean_output}'''</arg>
                                <arg>Fail</arg>
                                <arg>Output did not contain '${pattern}'. \n${clean_output}</arg>
                                <doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
                                <status status="PASS" starttime="20210830 17:35:16.074"
                                        endtime="20210830 17:35:16.075"/>
                            </kw>
                            <status status="PASS" starttime="20210830 17:35:16.074" endtime="20210830 17:35:16.075"/>
                        </iter>
                        <iter>
                            <var name="${pattern}">Exclude all the keywords containing tags</var>
                            <kw name="Run Keyword If" library="BuiltIn">
                                <arg>'''${pattern}''' not in '''${clean_output}'''</arg>
                                <arg>Fail</arg>
                                <arg>Output did not contain '${pattern}'. \n${clean_output}</arg>
                                <doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
                                <status status="PASS" starttime="20210830 17:35:16.075"
                                        endtime="20210830 17:35:16.076"/>
                            </kw>
                            <status status="PASS" starttime="20210830 17:35:16.075" endtime="20210830 17:35:16.076"/>
                        </iter>
                        <iter>
                            <var name="${pattern}">matching this pattern. This option has the</var>
                            <kw name="Run Keyword If" library="BuiltIn">
                                <arg>'''${pattern}''' not in '''${clean_output}'''</arg>
                                <arg>Fail</arg>
                                <arg>Output did not contain '${pattern}'. \n${clean_output}</arg>
                                <doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
                                <status status="PASS" starttime="20210830 17:35:16.076"
                                        endtime="20210830 17:35:16.077"/>
                            </kw>
                            <status status="PASS" starttime="20210830 17:35:16.076" endtime="20210830 17:35:16.077"/>
                        </iter>
                        <iter>
                            <var name="${pattern}">same behavior as the --exclude option of the</var>
                            <kw name="Run Keyword If" library="BuiltIn">
                                <arg>'''${pattern}''' not in '''${clean_output}'''</arg>
                                <arg>Fail</arg>
                                <arg>Output did not contain '${pattern}'. \n${clean_output}</arg>
                                <doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
                                <status status="PASS" starttime="20210830 17:35:16.077"
                                        endtime="20210830 17:35:16.078"/>
                            </kw>
                            <status status="PASS" starttime="20210830 17:35:16.077" endtime="20210830 17:35:16.078"/>
                        </iter>
                        <iter>
                            <var name="${pattern}">RobotFramework CLI (with the same format).</var>
                            <kw name="Run Keyword If" library="BuiltIn">
                                <arg>'''${pattern}''' not in '''${clean_output}'''</arg>
                                <arg>Fail</arg>
                                <arg>Output did not contain '${pattern}'. \n${clean_output}</arg>
                                <doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
                                <status status="PASS" starttime="20210830 17:35:16.078"
                                        endtime="20210830 17:35:16.079"/>
                            </kw>
                            <status status="PASS" starttime="20210830 17:35:16.078" endtime="20210830 17:35:16.079"/>
                        </iter>
                        <iter>
                            <var name="${pattern}">By default, no keyword is excluded.</var>
                            <kw name="Run Keyword If" library="BuiltIn">
                                <arg>'''${pattern}''' not in '''${clean_output}'''</arg>
                                <arg>Fail</arg>
                                <arg>Output did not contain '${pattern}'. \n${clean_output}</arg>
                                <doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
                                <status status="PASS" starttime="20210830 17:35:16.079"
                                        endtime="20210830 17:35:16.080"/>
                            </kw>
                            <status status="PASS" starttime="20210830 17:35:16.079" endtime="20210830 17:35:16.080"/>
                        </iter>
                        <status status="PASS" starttime="20210830 17:35:16.066" endtime="20210830 17:35:16.080"/>
                    </for>
                    <status status="PASS" starttime="20210830 17:35:16.064" endtime="20210830 17:35:16.081"/>
                </kw>
                <doc>Documentation For Include Exclude options Should Be Displayed Properly</doc>
                <tag>include-exclude</tag>
                <status status="PASS" starttime="20210830 17:35:16.062" endtime="20210830 17:35:16.081"/>
            </test>
            <test id="s1-s1-t9" name="Documentation For Help Should Be Displayed Properly">
                <kw name="Output Should Contain" library="keywords">
                    <arg>--help</arg>
                    <arg>Show this message and exit.</arg>
                    <doc>Fail if the output from the previous command doesn't contain the given string
                        This keyword assumes the output of the command is in
                        a test suite variable named ${output}
                    </doc>
                    <kw name="Create Dictionary" library="BuiltIn">
                        <var>${ns}</var>
                        <arg>output=${output}</arg>
                        <doc>Creates and returns a dictionary based on the given ``items``.</doc>
                        <msg timestamp="20210830 17:35:16.084" level="INFO">${ns} = {'output': 'Usage: rfhub2-cli
                            [OPTIONS] [PATHS]...\n\n Package to populate rfhub2 with robot framework keywords from
                            libraries and\n resource files.\n\nOptions:\n -a, --app-url TEXT Sp...
                        </msg>
                        <status status="PASS" starttime="20210830 17:35:16.083" endtime="20210830 17:35:16.084"/>
                    </kw>
                    <kw name="Evaluate" library="BuiltIn">
                        <var>${clean_output}</var>
                        <arg>" ".join(l.strip() for l in output.splitlines())</arg>
                        <arg>namespace=${ns}</arg>
                        <doc>Evaluates the given expression in Python and returns the result.</doc>
                        <msg timestamp="20210830 17:35:16.085" level="INFO">${clean_output} = Usage: rfhub2-cli
                            [OPTIONS] [PATHS]... Package to populate rfhub2 with robot framework keywords from libraries
                            and resource files. Options: -a, --app-url TEXT Specifies IP, URI or host ...
                        </msg>
                        <status status="PASS" starttime="20210830 17:35:16.084" endtime="20210830 17:35:16.085"/>
                    </kw>
                    <for flavor="IN">
                        <var>${pattern}</var>
                        <value>@{patterns}</value>
                        <iter>
                            <var name="${pattern}">--help</var>
                            <kw name="Run Keyword If" library="BuiltIn">
                                <arg>'''${pattern}''' not in '''${clean_output}'''</arg>
                                <arg>Fail</arg>
                                <arg>Output did not contain '${pattern}'. \n${clean_output}</arg>
                                <doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
                                <status status="PASS" starttime="20210830 17:35:16.086"
                                        endtime="20210830 17:35:16.086"/>
                            </kw>
                            <status status="PASS" starttime="20210830 17:35:16.085" endtime="20210830 17:35:16.086"/>
                        </iter>
                        <iter>
                            <var name="${pattern}">Show this message and exit.</var>
                            <kw name="Run Keyword If" library="BuiltIn">
                                <arg>'''${pattern}''' not in '''${clean_output}'''</arg>
                                <arg>Fail</arg>
                                <arg>Output did not contain '${pattern}'. \n${clean_output}</arg>
                                <doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
                                <status status="PASS" starttime="20210830 17:35:16.087"
                                        endtime="20210830 17:35:16.087"/>
                            </kw>
                            <status status="PASS" starttime="20210830 17:35:16.086" endtime="20210830 17:35:16.087"/>
                        </iter>
                        <status status="PASS" starttime="20210830 17:35:16.085" endtime="20210830 17:35:16.087"/>
                    </for>
                    <status status="PASS" starttime="20210830 17:35:16.083" endtime="20210830 17:35:16.088"/>
                </kw>
                <doc>Documentation For Help Should Be Displayed Properly</doc>
                <status status="PASS" starttime="20210830 17:35:16.082" endtime="20210830 17:35:16.088"/>
            </test>
            <status status="PASS" starttime="20210830 17:35:13.981" endtime="20210830 17:35:16.089"/>
        </suite>
        <suite id="s1-s2" name="Cli Population" source="C:\repo\rfhub2\tests\acceptance\cli_population.robot">
            <test id="s1-s2-t1" name="Cli Should Populate App With Keywords From Provided Paths Only">
                <kw name="Run Cli Package Without Installed Keywords" library="keywords">
                    <kw name="Run Cli Package With Options" library="keywords">
                        <arg>--load-mode=insert --no-installed-keywords ${INITIAL_FIXTURES}</arg>
                        <doc>Attempt to run the rfhub2-cli package with the given options
                            The stdout of the process will be in a test suite
                            variable named ${output}
                        </doc>
                        <kw name="Run" library="OperatingSystem">
                            <var>${output}</var>
                            <arg>${ACTIVATE_VENV} rfhub2-cli -a http://${HOST}:8000 ${options}</arg>
                            <doc>Runs the given command in the system and returns the output.</doc>
                            <msg timestamp="20210830 17:35:16.271" level="INFO">Running command ' rfhub2-cli -a
                                http://127.0.0.1:8000 --load-mode=insert --no-installed-keywords
                                C:\repo\rfhub2\tests\acceptance\resources\..\..\fixtures/initial/ 2&gt;&amp;1'.
                            </msg>
                            <msg timestamp="20210830 17:35:18.762" level="INFO">${output} = usage:
                                script_for_system_exit [-h] -c CONF
                                script_for_system_exit: error: the following arguments are required: -c/--conf
                                Failed to create collection from path C:\repo\rfhub2\tests\acceptance\resource...
                            </msg>
                            <status status="PASS" starttime="20210830 17:35:16.117" endtime="20210830 17:35:18.762"/>
                        </kw>
                        <kw name="Set Suite Variable" library="BuiltIn">
                            <arg>${output}</arg>
                            <doc>Makes a variable available everywhere within the scope of the current suite.</doc>
                            <msg timestamp="20210830 17:35:18.763" level="INFO">${output} = usage:
                                script_for_system_exit [-h] -c CONF
                                script_for_system_exit: error: the following arguments are required: -c/--conf
                                Failed to create collection from path C:\repo\rfhub2\tests\acceptance\resource...
                            </msg>
                            <status status="PASS" starttime="20210830 17:35:18.763" endtime="20210830 17:35:18.763"/>
                        </kw>
                        <status status="PASS" starttime="20210830 17:35:16.116" endtime="20210830 17:35:18.764"/>
                    </kw>
                    <status status="PASS" starttime="20210830 17:35:16.116" endtime="20210830 17:35:18.764"/>
                </kw>
                <kw name="Output Should Contain" library="keywords">
                    <arg>LibWithInit library with 4 keywords loaded.</arg>
                    <arg>Test Libdoc File library with 1 keywords loaded.</arg>
                    <arg>LibWithEmptyInit1 library with 2 keywords loaded.</arg>
                    <arg>test_resource library with 2 keywords loaded.</arg>
                    <arg>SingleClassLib library with 3 keywords loaded.</arg>
                    <arg>LibWithEmptyInit2 library with 2 keywords loaded.</arg>
                    <arg>test_robot library with 4 keywords loaded.</arg>
                    <arg>test_res_lib_dir library with 2 keywords loaded.</arg>
                    <arg>Successfully loaded 8 collections with 20 keywords.</arg>
                    <doc>Fail if the output from the previous command doesn't contain the given string
                        This keyword assumes the output of the command is in
                        a test suite variable named ${output}
                    </doc>
                    <kw name="Create Dictionary" library="BuiltIn">
                        <var>${ns}</var>
                        <arg>output=${output}</arg>
                        <doc>Creates and returns a dictionary based on the given ``items``.</doc>
                        <msg timestamp="20210830 17:35:18.765" level="INFO">${ns} = {'output': 'usage:
                            script_for_system_exit [-h] -c CONF\nscript_for_system_exit: error: the following arguments
                            are required: -c/--conf\nFailed to create collection from path C:\\repo\\rfhub2\\tests\\a...
                        </msg>
                        <status status="PASS" starttime="20210830 17:35:18.765" endtime="20210830 17:35:18.765"/>
                    </kw>
                    <kw name="Evaluate" library="BuiltIn">
                        <var>${clean_output}</var>
                        <arg>" ".join(l.strip() for l in output.splitlines())</arg>
                        <arg>namespace=${ns}</arg>
                        <doc>Evaluates the given expression in Python and returns the result.</doc>
                        <msg timestamp="20210830 17:35:18.766" level="INFO">${clean_output} = usage:
                            script_for_system_exit [-h] -c CONF script_for_system_exit: error: the following arguments
                            are required: -c/--conf Failed to create collection from path
                            C:\repo\rfhub2\tests\acceptance\resource...
                        </msg>
                        <status status="PASS" starttime="20210830 17:35:18.766" endtime="20210830 17:35:18.766"/>
                    </kw>
                    <for flavor="IN">
                        <var>${pattern}</var>
                        <value>@{patterns}</value>
                        <iter>
                            <var name="${pattern}">LibWithInit library with 4 keywords loaded.</var>
                            <kw name="Run Keyword If" library="BuiltIn">
                                <arg>'''${pattern}''' not in '''${clean_output}'''</arg>
                                <arg>Fail</arg>
                                <arg>Output did not contain '${pattern}'. \n${clean_output}</arg>
                                <doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
                                <status status="PASS" starttime="20210830 17:35:18.767"
                                        endtime="20210830 17:35:18.768"/>
                            </kw>
                            <status status="PASS" starttime="20210830 17:35:18.767" endtime="20210830 17:35:18.768"/>
                        </iter>
                        <iter>
                            <var name="${pattern}">Test Libdoc File library with 1 keywords loaded.</var>
                            <kw name="Run Keyword If" library="BuiltIn">
                                <arg>'''${pattern}''' not in '''${clean_output}'''</arg>
                                <arg>Fail</arg>
                                <arg>Output did not contain '${pattern}'. \n${clean_output}</arg>
                                <doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
                                <status status="PASS" starttime="20210830 17:35:18.768"
                                        endtime="20210830 17:35:18.769"/>
                            </kw>
                            <status status="PASS" starttime="20210830 17:35:18.768" endtime="20210830 17:35:18.769"/>
                        </iter>
                        <iter>
                            <var name="${pattern}">LibWithEmptyInit1 library with 2 keywords loaded.</var>
                            <kw name="Run Keyword If" library="BuiltIn">
                                <arg>'''${pattern}''' not in '''${clean_output}'''</arg>
                                <arg>Fail</arg>
                                <arg>Output did not contain '${pattern}'. \n${clean_output}</arg>
                                <doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
                                <status status="PASS" starttime="20210830 17:35:18.769"
                                        endtime="20210830 17:35:18.770"/>
                            </kw>
                            <status status="PASS" starttime="20210830 17:35:18.769" endtime="20210830 17:35:18.770"/>
                        </iter>
                        <iter>
                            <var name="${pattern}">test_resource library with 2 keywords loaded.</var>
                            <kw name="Run Keyword If" library="BuiltIn">
                                <arg>'''${pattern}''' not in '''${clean_output}'''</arg>
                                <arg>Fail</arg>
                                <arg>Output did not contain '${pattern}'. \n${clean_output}</arg>
                                <doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
                                <status status="PASS" starttime="20210830 17:35:18.770"
                                        endtime="20210830 17:35:18.771"/>
                            </kw>
                            <status status="PASS" starttime="20210830 17:35:18.770" endtime="20210830 17:35:18.771"/>
                        </iter>
                        <iter>
                            <var name="${pattern}">SingleClassLib library with 3 keywords loaded.</var>
                            <kw name="Run Keyword If" library="BuiltIn">
                                <arg>'''${pattern}''' not in '''${clean_output}'''</arg>
                                <arg>Fail</arg>
                                <arg>Output did not contain '${pattern}'. \n${clean_output}</arg>
                                <doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
                                <status status="PASS" starttime="20210830 17:35:18.772"
                                        endtime="20210830 17:35:18.772"/>
                            </kw>
                            <status status="PASS" starttime="20210830 17:35:18.771" endtime="20210830 17:35:18.772"/>
                        </iter>
                        <iter>
                            <var name="${pattern}">LibWithEmptyInit2 library with 2 keywords loaded.</var>
                            <kw name="Run Keyword If" library="BuiltIn">
                                <arg>'''${pattern}''' not in '''${clean_output}'''</arg>
                                <arg>Fail</arg>
                                <arg>Output did not contain '${pattern}'. \n${clean_output}</arg>
                                <doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
                                <status status="PASS" starttime="20210830 17:35:18.772"
                                        endtime="20210830 17:35:18.773"/>
                            </kw>
                            <status status="PASS" starttime="20210830 17:35:18.772" endtime="20210830 17:35:18.773"/>
                        </iter>
                        <iter>
                            <var name="${pattern}">test_robot library with 4 keywords loaded.</var>
                            <kw name="Run Keyword If" library="BuiltIn">
                                <arg>'''${pattern}''' not in '''${clean_output}'''</arg>
                                <arg>Fail</arg>
                                <arg>Output did not contain '${pattern}'. \n${clean_output}</arg>
                                <doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
                                <status status="PASS" starttime="20210830 17:35:18.774"
                                        endtime="20210830 17:35:18.774"/>
                            </kw>
                            <status status="PASS" starttime="20210830 17:35:18.773" endtime="20210830 17:35:18.774"/>
                        </iter>
                        <iter>
                            <var name="${pattern}">test_res_lib_dir library with 2 keywords loaded.</var>
                            <kw name="Run Keyword If" library="BuiltIn">
                                <arg>'''${pattern}''' not in '''${clean_output}'''</arg>
                                <arg>Fail</arg>
                                <arg>Output did not contain '${pattern}'. \n${clean_output}</arg>
                                <doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
                                <status status="PASS" starttime="20210830 17:35:18.775"
                                        endtime="20210830 17:35:18.775"/>
                            </kw>
                            <status status="PASS" starttime="20210830 17:35:18.774" endtime="20210830 17:35:18.775"/>
                        </iter>
                        <iter>
                            <var name="${pattern}">Successfully loaded 8 collections with 20 keywords.</var>
                            <kw name="Run Keyword If" library="BuiltIn">
                                <arg>'''${pattern}''' not in '''${clean_output}'''</arg>
                                <arg>Fail</arg>
                                <arg>Output did not contain '${pattern}'. \n${clean_output}</arg>
                                <doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
                                <status status="PASS" starttime="20210830 17:35:18.776"
                                        endtime="20210830 17:35:18.776"/>
                            </kw>
                            <status status="PASS" starttime="20210830 17:35:18.775" endtime="20210830 17:35:18.776"/>
                        </iter>
                        <status status="PASS" starttime="20210830 17:35:18.767" endtime="20210830 17:35:18.776"/>
                    </for>
                    <status status="PASS" starttime="20210830 17:35:18.764" endtime="20210830 17:35:18.777"/>
                </kw>
                <kw name="Api Should Have 8 Collections And 20 Keywords"
                    sourcename="Api Should Have ${n} Collections And ${m} Keywords">
                    <kw name="collections Endpoint Should Have ${n} Items" library="keywords"
                        sourcename="${endpoint} Endpoint Should Have ${n} Items">
                        <kw name="Get Request For Endpoint" library="keywords">
                            <var>${response}</var>
                            <arg>endpoint=${endpoint}</arg>
                            <kw name="Create Session" library="RequestsLibrary">
                                <arg>tmp</arg>
                                <arg>http://${HOST}:8000/api/v1</arg>
                                <doc>Create Session: create a HTTP session to a server</doc>
                                <msg timestamp="20210830 17:35:18.779" level="INFO">Creating Session using : alias=tmp,
                                    url=http://127.0.0.1:8000/api/v1, headers={}, cookies={}, auth=None, timeout=None,
                                    proxies=None, verify=False, debug=0
                                </msg>
                                <status status="PASS" starttime="20210830 17:35:18.779"
                                        endtime="20210830 17:35:18.779"/>
                            </kw>
                            <kw name="Get On Session" library="RequestsLibrary">
                                <var>${response}</var>
                                <arg>tmp</arg>
                                <arg>${endpoint}/</arg>
                                <arg>params=${params}</arg>
                                <doc>Sends a GET request on a previously created HTTP Session.</doc>
                                <msg timestamp="20210830 17:35:18.810" level="INFO">GET Request :
                                    url=http://127.0.0.1:8000/api/v1/collections/?None
                                    path_url=/api/v1/collections/?None
                                    headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate',
                                    'Accept': '*/*', 'Connection': 'keep-alive'}
                                    body=None
                                </msg>
                                <msg timestamp="20210830 17:35:18.810" level="INFO">GET Response :
                                    url=http://127.0.0.1:8000/api/v1/collections/?None
                                    status=200, reason=OK
                                    headers={'date': 'Mon, 30 Aug 2021 15:35:18 GMT', 'server': 'uvicorn',
                                    'content-length': '10079', 'content-type': 'application/json'}
                                    body=[{"name":"LibWithEmptyInit1","type":"LIBRARY","version":"2.1.0","scope":"TEST","named_args":null,"path":"C:\\repo\\rfhub2\\tests\\acceptance\\resources\\..\\..\\fixtures\\initial\\LibsWithEmptyInit\\LibWithEmptyInit1.py","doc":"Overview
                                    that should be imported for
                                    LibWithEmptyInit1.","doc_format":"ROBOT","id":1,"keywords":[{"name":"Lib With Empty
                                    Init 1 Method 1","doc":"Docstring for
                                    lib_with_empty_init_1_method_1","args":"","tags":[],"id":1,"synopsis":"Docstring for
                                    lib_with_empty_init_1_method_1","html_doc":"&lt;p&gt;Docstring for
                                    lib_with_empty_init_1_method_1&lt;/p&gt;","arg_string":""},{"name":"Lib With Empty
                                    Init 1 Method 2","doc":"Docstring for
                                    lib_with_empty_init_1_method_2","args":"","tags":[],"id":2,"synopsis":"Docstring for
                                    lib_with_empty_init_1_method_2","html_doc":"&lt;p&gt;Docstring for
                                    lib_with_empty_init_1_method_2&lt;/p&gt;","arg_string":""}],"synopsis":"Overview
                                    that should be imported for LibWithEmptyInit1.","html_doc":"&lt;p&gt;Overview that
                                    should be imported for LibWithEmptyInit1.&lt;/p&gt;"},{"name":"LibWithEmptyInit2","type":"LIBRARY","version":"1.0.0","scope":"TEST","named_args":null,"path":"C:\\repo\\rfhub2\\tests\\acceptance\\resources\\..\\..\\fixtures\\initial\\LibsWithEmptyInit\\LibWithEmptyInit2.py","doc":"Overview
                                    that should be imported for
                                    LibWithEmptyInit2.","doc_format":"ROBOT","id":2,"keywords":[{"name":"Lib With Empty
                                    Init 2 Method 1","doc":"Docstring for
                                    lib_with_empty_init_2_method_1","args":"","tags":[],"id":3,"synopsis":"Docstring for
                                    lib_with_empty_init_2_method_1","html_doc":"&lt;p&gt;Docstring for
                                    lib_with_empty_init_2_method_1&lt;/p&gt;","arg_string":""},{"name":"Lib With Empty
                                    Init 2 Method 2","doc":"Docstring for
                                    lib_with_empty_init_2_method_2","args":"","tags":[],"id":4,"synopsis":"Docstring for
                                    lib_with_empty_init_2_method_2","html_doc":"&lt;p&gt;Docstring for
                                    lib_with_empty_init_2_method_2&lt;/p&gt;","arg_string":""}],"synopsis":"Overview
                                    that should be imported for LibWithEmptyInit2.","html_doc":"&lt;p&gt;Overview that
                                    should be imported for LibWithEmptyInit2.&lt;/p&gt;"},{"name":"LibWithInit","type":"LIBRARY","version":"6.6.6","scope":"GLOBAL","named_args":null,"path":"C:\\repo\\rfhub2\\tests\\acceptance\\resources\\..\\..\\fixtures\\initial\\LibWithInit","doc":"This
                                    is a docstring that should be imported as overview\n\nHere goes some docs that
                                    should appear on rfhub2 if init is parametrised\n\nThe library
                                    import:\n\nExamples:\n| Library LibWithInit dummy=../one # add one dummy\n| Library
                                    LibWithInit path=../one,/global # add two
                                    dummies","doc_format":"ROBOT","id":3,"keywords":[{"name":"Lib With Init 1 Method
                                    1","doc":"Docstring for
                                    lib_with_init_1_method_1","args":"","tags":[],"id":5,"synopsis":"Docstring for
                                    lib_with_init_1_method_1","html_doc":"&lt;p&gt;Docstring for
                                    lib_with_init_1_method_1&lt;/p&gt;","arg_string":""},{"name":"Lib With Init 1 Method
                                    2","doc":"Docstring for
                                    lib_with_init_1_method_2","args":"","tags":[],"id":6,"synopsis":"Docstring for
                                    lib_with_init_1_method_2","html_doc":"&lt;p&gt;Docstring for
                                    lib_with_init_1_method_2&lt;/p&gt;","arg_string":""},{"name":"Lib With Init 2 Method
                                    1","doc":"Docstring for
                                    lib_with_init_2_method_1","args":"","tags":[],"id":7,"synopsis":"Docstring for
                                    lib_with_init_2_method_1","html_doc":"&lt;p&gt;Docstring for
                                    lib_with_init_2_method_1&lt;/p&gt;","arg_string":""},{"name":"Lib With Init 2 Method
                                    2","doc":"Docstring for
                                    lib_with_init_2_method_2","args":"","tags":[],"id":8,"synopsis":"Docstring for
                                    lib_with_init_2_method_2","html_doc":"&lt;p&gt;Docstring for
                                    lib_with_init_2_method_2&lt;/p&gt;","arg_string":""}],"synopsis":"This is a
                                    docstring that should be imported as overview","html_doc":"&lt;p&gt;This is a
                                    docstring that should be imported as overview&lt;/p&gt;\n&lt;p&gt;Here goes some
                                    docs that should appear on rfhub2 if init is parametrised&lt;/p&gt;\n&lt;p&gt;The
                                    library import:&lt;/p&gt;\n&lt;p&gt;Examples:&lt;/p&gt;\n&lt;pre&gt;\nLibrary
                                    LibWithInit dummy=../one # add one dummy\nLibrary LibWithInit path=../one,/global #
                                    add two dummies\n&lt;/pre&gt;"},{"name":"SingleClassLib","type":"LIBRARY","version":"1.2.3","scope":"TEST","named_args":null,"path":"C:\\repo\\rfhub2\\tests\\acceptance\\resources\\..\\..\\fixtures\\initial\\SingleClassLib\\SingleClassLib.py","doc":"Overview
                                    that should be imported for
                                    SingleClassLib.","doc_format":"ROBOT","id":4,"keywords":[{"name":"Single Class Lib
                                    Method 1","doc":"Docstring for
                                    single_class_lib_method_1","args":"","tags":["tag_1","tag_2"],"id":9,"synopsis":"Docstring
                                    for single_class_lib_method_1","html_doc":"&lt;p&gt;Docstring for
                                    single_class_lib_method_1&lt;/p&gt;","arg_string":""},{"name":"Single Class Lib
                                    Method 2","doc":"Docstring for
                                    single_class_lib_method_2","args":"","tags":[],"id":10,"synopsis":"Docstring for
                                    single_class_lib_method_2","html_doc":"&lt;p&gt;Docstring for
                                    single_class_lib_method_2&lt;/p&gt;","arg_string":""},{"name":"Single Class Lib
                                    Method 3","doc":"Docstring for single_class_lib_method_3 with two
                                    params","args":"[\"param_1\", \"param_2\"]","tags":[],"id":11,"synopsis":"Docstring
                                    for single_class_lib_method_3 with two params","html_doc":"&lt;p&gt;Docstring for
                                    single_class_lib_method_3 with two params&lt;/p&gt;","arg_string":"param_1,
                                    param_2"}],"synopsis":"Overview that should be imported for
                                    SingleClassLib.","html_doc":"&lt;p&gt;Overview that should be imported for
                                    SingleClassLib.&lt;/p&gt;"},{"name":"Test Libdoc
                                    File","type":"LIBRARY","version":"3.2.0","scope":"GLOBAL","named_args":null,"path":"C:\\repo\\rfhub2\\tests\\acceptance\\resources\\..\\..\\fixtures\\initial\\test_libdoc_file.xml","doc":"Documentation
                                    for library ``Test Libdoc
                                    File``.","doc_format":"ROBOT","id":5,"keywords":[{"name":"Someone Shall
                                    Pass","doc":"","args":"[\"who\"]","tags":[],"id":12,"synopsis":"","html_doc":"","arg_string":"who"}],"synopsis":"Documentation
                                    for library ``Test Libdoc File``.","html_doc":"&lt;p&gt;Documentation for library
                                    &lt;code&gt;Test Libdoc File&lt;/code&gt;.&lt;/p&gt;"},{"name":"test_res_lib_dir","type":"RESOURCE","version":"","scope":"GLOBAL","named_args":null,"path":"C:\\repo\\rfhub2\\tests\\acceptance\\resources\\..\\..\\fixtures\\initial\\LibWithInit\\test_res_lib_dir.resource","doc":"File
                                    with .resource extension with two test
                                    keywords","doc_format":"ROBOT","id":6,"keywords":[{"name":"Keyword 1 Imported From
                                    Resource From Lib Dir File","doc":"This keyword was imported from file\nwith
                                    .resource extension, available since RFWK
                                    3.1","args":"","tags":[],"id":13,"synopsis":"This keyword was imported from
                                    file","html_doc":"&lt;p&gt;This keyword was imported from file with .resource
                                    extension, available since RFWK 3.1&lt;/p&gt;","arg_string":""},{"name":"Keyword 2
                                    Imported From Resource From Lib Dir File","doc":"This keyword was imported from
                                    file\nwith .resource extension, available since RFWK 3.1","args":"[\"arg_1\",
                                    \"arg_2\"]","tags":[],"id":14,"synopsis":"This keyword was imported from
                                    file","html_doc":"&lt;p&gt;This keyword was imported from file with .resource
                                    extension, available since RFWK 3.1&lt;/p&gt;","arg_string":"arg_1,
                                    arg_2"}],"synopsis":"File with .resource extension with two test
                                    keywords","html_doc":"&lt;p&gt;File with .resource extension with two test keywords&lt;/p&gt;"},{"name":"test_resource","type":"RESOURCE","version":"","scope":"GLOBAL","named_args":null,"path":"C:\\repo\\rfhub2\\tests\\acceptance\\resources\\..\\..\\fixtures\\initial\\test_resource.resource","doc":"File
                                    with .resource extension with two test
                                    keywords","doc_format":"ROBOT","id":7,"keywords":[{"name":"Keyword 1 Imported From
                                    Resource File","doc":"This keyword was imported from file\nwith .resource extension,
                                    available since RFWK 3.1","args":"","tags":["first_tag"],"id":15,"synopsis":"This
                                    keyword was imported from file","html_doc":"&lt;p&gt;This keyword was imported from
                                    file with .resource extension, available since RFWK 3.1&lt;/p&gt;","arg_string":""},{"name":"Keyword
                                    2 Imported From Resource File","doc":"This keyword was imported from file\nwith
                                    .resource extension, available since RFWK 3.1","args":"[\"arg_1\",
                                    \"arg_2\"]","tags":["first_tag","second_tag"],"id":16,"synopsis":"This keyword was
                                    imported from file","html_doc":"&lt;p&gt;This keyword was imported from file with
                                    .resource extension, available since RFWK 3.1&lt;/p&gt;","arg_string":"arg_1,
                                    arg_2"}],"synopsis":"File with .resource extension with two test
                                    keywords","html_doc":"&lt;p&gt;File with .resource extension with two test keywords&lt;/p&gt;"},{"name":"test_robot","type":"RESOURCE","version":"","scope":"GLOBAL","named_args":null,"path":"C:\\repo\\rfhub2\\tests\\acceptance\\resources\\..\\..\\fixtures\\initial\\test_robot.robot","doc":"File
                                    with .robot extension with two test
                                    keywords","doc_format":"ROBOT","id":8,"keywords":[{"name":"Keyword 1 Imported From
                                    Robot File","doc":"This keyword was imported from file\nwith .robot
                                    extension","args":"","tags":["first_tag","second_tag"],"id":17,"synopsis":"This
                                    keyword was imported from file","html_doc":"&lt;p&gt;This keyword was imported from
                                    file with .robot extension&lt;/p&gt;","arg_string":""},{"name":"Keyword 2 Imported
                                    From Robot File","doc":"This keyword was imported from file\nwith .robot
                                    extension","args":"[\"arg_1\",
                                    \"arg_2\"]","tags":["first_tag","second_tag","third_tag"],"id":18,"synopsis":"This
                                    keyword was imported from file","html_doc":"&lt;p&gt;This keyword was imported from
                                    file with .robot extension&lt;/p&gt;","arg_string":"arg_1, arg_2"},{"name":"Keyword
                                    With Args With Double Quotation Mark","doc":"Keyword With Args With Double Quotation
                                    Mark","args":"[\"ok_argument\",
                                    \"not_ok_argument=Kill.${app.replace(-, _)}\"]","tags":["fifth_tag","fouth_tag"],"id":19,"synopsis":"Keyword
                                    With Args With Double Quotation Mark","html_doc":"&lt;p&gt;Keyword With Args With
                                    Double Quotation Mark&lt;/p&gt;","arg_string":"ok_argument,
                                    not_ok_argument=Kill.${app.replace(-, _)}"},{"name":"Keyword With Args With Single
                                    Quotation Mark","doc":"Keyword With Args With Single Quotation
                                    Mark","args":"[\"ok_argument\",
                                    \"not_ok_argument=Kill.${app.replace(-, _)}\"]","tags":["fouth_tag","third_tag"],"id":20,"synopsis":"Keyword
                                    With Args With Single Quotation Mark","html_doc":"&lt;p&gt;Keyword With Args With
                                    Single Quotation Mark&lt;/p&gt;","arg_string":"ok_argument,
                                    not_ok_argument=Kill.${app.replace(-, _)}"}],"synopsis":"File with .robot extension
                                    with two test ke... (set the log level to DEBUG or TRACE to see the full content)
                                </msg>
                                <msg timestamp="20210830 17:35:18.811" level="INFO">${response} = &lt;Response
                                    [200]&gt;
                                </msg>
                                <status status="PASS" starttime="20210830 17:35:18.780"
                                        endtime="20210830 17:35:18.811"/>
                            </kw>
                            <kw name="Should Be Equal As Integers" library="BuiltIn">
                                <arg>${response.status_code}</arg>
                                <arg>200</arg>
                                <doc>Fails if objects are unequal after converting them to integers.</doc>
                                <msg timestamp="20210830 17:35:18.813" level="INFO">Argument types are:
                                    &lt;class 'int'&gt;
                                    &lt;type 'unicode'&gt;
                                </msg>
                                <status status="PASS" starttime="20210830 17:35:18.811"
                                        endtime="20210830 17:35:18.813"/>
                            </kw>
                            <msg timestamp="20210830 17:35:18.816" level="INFO">${response} = [{'name':
                                'LibWithEmptyInit1', 'type': 'LIBRARY', 'version': '2.1.0', 'scope': 'TEST',
                                'named_args': None, 'path':
                                'C:\\repo\\rfhub2\\tests\\acceptance\\resources\\..\\..\\fixtures\\initial\\LibsWithE...
                            </msg>
                            <status status="PASS" starttime="20210830 17:35:18.778" endtime="20210830 17:35:18.816"/>
                        </kw>
                        <kw name="Length Should Be" library="BuiltIn">
                            <arg>${response}</arg>
                            <arg>${n}</arg>
                            <doc>Verifies that the length of the given item is correct.</doc>
                            <msg timestamp="20210830 17:35:18.817" level="INFO">Length is 8</msg>
                            <status status="PASS" starttime="20210830 17:35:18.816" endtime="20210830 17:35:18.817"/>
                        </kw>
                        <status status="PASS" starttime="20210830 17:35:18.777" endtime="20210830 17:35:18.817"/>
                    </kw>
                    <kw name="keywords Endpoint Should Have ${m} Items" library="keywords"
                        sourcename="${endpoint} Endpoint Should Have ${n} Items">
                        <kw name="Get Request For Endpoint" library="keywords">
                            <var>${response}</var>
                            <arg>endpoint=${endpoint}</arg>
                            <kw name="Create Session" library="RequestsLibrary">
                                <arg>tmp</arg>
                                <arg>http://${HOST}:8000/api/v1</arg>
                                <doc>Create Session: create a HTTP session to a server</doc>
                                <msg timestamp="20210830 17:35:18.819" level="INFO">Creating Session using : alias=tmp,
                                    url=http://127.0.0.1:8000/api/v1, headers={}, cookies={}, auth=None, timeout=None,
                                    proxies=None, verify=False, debug=0
                                </msg>
                                <status status="PASS" starttime="20210830 17:35:18.819"
                                        endtime="20210830 17:35:18.819"/>
                            </kw>
                            <kw name="Get On Session" library="RequestsLibrary">
                                <var>${response}</var>
                                <arg>tmp</arg>
                                <arg>${endpoint}/</arg>
                                <arg>params=${params}</arg>
                                <doc>Sends a GET request on a previously created HTTP Session.</doc>
                                <msg timestamp="20210830 17:35:18.857" level="INFO">GET Request :
                                    url=http://127.0.0.1:8000/api/v1/keywords/?None
                                    path_url=/api/v1/keywords/?None
                                    headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate',
                                    'Accept': '*/*', 'Connection': 'keep-alive'}
                                    body=None
                                </msg>
                                <msg timestamp="20210830 17:35:18.857" level="INFO">GET Response :
                                    url=http://127.0.0.1:8000/api/v1/keywords/?None
                                    status=200, reason=OK
                                    headers={'date': 'Mon, 30 Aug 2021 15:35:18 GMT', 'server': 'uvicorn',
                                    'content-length': '6859', 'content-type': 'application/json'}
                                    body=[{"name":"Keyword 1 Imported From Resource File","doc":"This keyword was
                                    imported from file\nwith .resource extension, available since RFWK
                                    3.1","args":"","tags":["first_tag"],"id":15,"synopsis":"This keyword was imported
                                    from file","html_doc":"&lt;p&gt;This keyword was imported from file with .resource
                                    extension, available since RFWK 3.1&lt;/p&gt;","arg_string":"","collection":{"id":7,"name":"test_resource"}},{"name":"Keyword
                                    1 Imported From Resource From Lib Dir File","doc":"This keyword was imported from
                                    file\nwith .resource extension, available since RFWK
                                    3.1","args":"","tags":[],"id":13,"synopsis":"This keyword was imported from
                                    file","html_doc":"&lt;p&gt;This keyword was imported from file with .resource
                                    extension, available since RFWK 3.1&lt;/p&gt;","arg_string":"","collection":{"id":6,"name":"test_res_lib_dir"}},{"name":"Keyword
                                    1 Imported From Robot File","doc":"This keyword was imported from file\nwith .robot
                                    extension","args":"","tags":["first_tag","second_tag"],"id":17,"synopsis":"This
                                    keyword was imported from file","html_doc":"&lt;p&gt;This keyword was imported from
                                    file with .robot extension&lt;/p&gt;","arg_string":"","collection":{"id":8,"name":"test_robot"}},{"name":"Keyword
                                    2 Imported From Resource File","doc":"This keyword was imported from file\nwith
                                    .resource extension, available since RFWK 3.1","args":"[\"arg_1\",
                                    \"arg_2\"]","tags":["first_tag","second_tag"],"id":16,"synopsis":"This keyword was
                                    imported from file","html_doc":"&lt;p&gt;This keyword was imported from file with
                                    .resource extension, available since RFWK 3.1&lt;/p&gt;","arg_string":"arg_1,
                                    arg_2","collection":{"id":7,"name":"test_resource"}},{"name":"Keyword 2 Imported
                                    From Resource From Lib Dir File","doc":"This keyword was imported from file\nwith
                                    .resource extension, available since RFWK 3.1","args":"[\"arg_1\",
                                    \"arg_2\"]","tags":[],"id":14,"synopsis":"This keyword was imported from
                                    file","html_doc":"&lt;p&gt;This keyword was imported from file with .resource
                                    extension, available since RFWK 3.1&lt;/p&gt;","arg_string":"arg_1,
                                    arg_2","collection":{"id":6,"name":"test_res_lib_dir"}},{"name":"Keyword 2 Imported
                                    From Robot File","doc":"This keyword was imported from file\nwith .robot
                                    extension","args":"[\"arg_1\",
                                    \"arg_2\"]","tags":["first_tag","second_tag","third_tag"],"id":18,"synopsis":"This
                                    keyword was imported from file","html_doc":"&lt;p&gt;This keyword was imported from
                                    file with .robot extension&lt;/p&gt;","arg_string":"arg_1,
                                    arg_2","collection":{"id":8,"name":"test_robot"}},{"name":"Keyword With Args With
                                    Double Quotation Mark","doc":"Keyword With Args With Double Quotation
                                    Mark","args":"[\"ok_argument\",
                                    \"not_ok_argument=Kill.${app.replace(-, _)}\"]","tags":["fifth_tag","fouth_tag"],"id":19,"synopsis":"Keyword
                                    With Args With Double Quotation Mark","html_doc":"&lt;p&gt;Keyword With Args With
                                    Double Quotation Mark&lt;/p&gt;","arg_string":"ok_argument,
                                    not_ok_argument=Kill.${app.replace(-, _)}","collection":{"id":8,"name":"test_robot"}},{"name":"Keyword
                                    With Args With Single Quotation Mark","doc":"Keyword With Args With Single Quotation
                                    Mark","args":"[\"ok_argument\",
                                    \"not_ok_argument=Kill.${app.replace(-, _)}\"]","tags":["fouth_tag","third_tag"],"id":20,"synopsis":"Keyword
                                    With Args With Single Quotation Mark","html_doc":"&lt;p&gt;Keyword With Args With
                                    Single Quotation Mark&lt;/p&gt;","arg_string":"ok_argument,
                                    not_ok_argument=Kill.${app.replace(-, _)}","collection":{"id":8,"name":"test_robot"}},{"name":"Lib
                                    With Empty Init 1 Method 1","doc":"Docstring for
                                    lib_with_empty_init_1_method_1","args":"","tags":[],"id":1,"synopsis":"Docstring for
                                    lib_with_empty_init_1_method_1","html_doc":"&lt;p&gt;Docstring for
                                    lib_with_empty_init_1_method_1&lt;/p&gt;","arg_string":"","collection":{"id":1,"name":"LibWithEmptyInit1"}},{"name":"Lib
                                    With Empty Init 1 Method 2","doc":"Docstring for
                                    lib_with_empty_init_1_method_2","args":"","tags":[],"id":2,"synopsis":"Docstring for
                                    lib_with_empty_init_1_method_2","html_doc":"&lt;p&gt;Docstring for
                                    lib_with_empty_init_1_method_2&lt;/p&gt;","arg_string":"","collection":{"id":1,"name":"LibWithEmptyInit1"}},{"name":"Lib
                                    With Empty Init 2 Method 1","doc":"Docstring for
                                    lib_with_empty_init_2_method_1","args":"","tags":[],"id":3,"synopsis":"Docstring for
                                    lib_with_empty_init_2_method_1","html_doc":"&lt;p&gt;Docstring for
                                    lib_with_empty_init_2_method_1&lt;/p&gt;","arg_string":"","collection":{"id":2,"name":"LibWithEmptyInit2"}},{"name":"Lib
                                    With Empty Init 2 Method 2","doc":"Docstring for
                                    lib_with_empty_init_2_method_2","args":"","tags":[],"id":4,"synopsis":"Docstring for
                                    lib_with_empty_init_2_method_2","html_doc":"&lt;p&gt;Docstring for
                                    lib_with_empty_init_2_method_2&lt;/p&gt;","arg_string":"","collection":{"id":2,"name":"LibWithEmptyInit2"}},{"name":"Lib
                                    With Init 1 Method 1","doc":"Docstring for
                                    lib_with_init_1_method_1","args":"","tags":[],"id":5,"synopsis":"Docstring for
                                    lib_with_init_1_method_1","html_doc":"&lt;p&gt;Docstring for
                                    lib_with_init_1_method_1&lt;/p&gt;","arg_string":"","collection":{"id":3,"name":"LibWithInit"}},{"name":"Lib
                                    With Init 1 Method 2","doc":"Docstring for
                                    lib_with_init_1_method_2","args":"","tags":[],"id":6,"synopsis":"Docstring for
                                    lib_with_init_1_method_2","html_doc":"&lt;p&gt;Docstring for
                                    lib_with_init_1_method_2&lt;/p&gt;","arg_string":"","collection":{"id":3,"name":"LibWithInit"}},{"name":"Lib
                                    With Init 2 Method 1","doc":"Docstring for
                                    lib_with_init_2_method_1","args":"","tags":[],"id":7,"synopsis":"Docstring for
                                    lib_with_init_2_method_1","html_doc":"&lt;p&gt;Docstring for
                                    lib_with_init_2_method_1&lt;/p&gt;","arg_string":"","collection":{"id":3,"name":"LibWithInit"}},{"name":"Lib
                                    With Init 2 Method 2","doc":"Docstring for
                                    lib_with_init_2_method_2","args":"","tags":[],"id":8,"synopsis":"Docstring for
                                    lib_with_init_2_method_2","html_doc":"&lt;p&gt;Docstring for
                                    lib_with_init_2_method_2&lt;/p&gt;","arg_string":"","collection":{"id":3,"name":"LibWithInit"}},{"name":"Single
                                    Class Lib Method 1","doc":"Docstring for
                                    single_class_lib_method_1","args":"","tags":["tag_1","tag_2"],"id":9,"synopsis":"Docstring
                                    for single_class_lib_method_1","html_doc":"&lt;p&gt;Docstring for
                                    single_class_lib_method_1&lt;/p&gt;","arg_string":"","collection":{"id":4,"name":"SingleClassLib"}},{"name":"Single
                                    Class Lib Method 2","doc":"Docstring for
                                    single_class_lib_method_2","args":"","tags":[],"id":10,"synopsis":"Docstring for
                                    single_class_lib_method_2","html_doc":"&lt;p&gt;Docstring for
                                    single_class_lib_method_2&lt;/p&gt;","arg_string":"","collection":{"id":4,"name":"SingleClassLib"}},{"name":"Single
                                    Class Lib Method 3","doc":"Docstring for single_class_lib_method_3 with two
                                    params","args":"[\"param_1\", \"param_2\"]","tags":[],"id":11,"synopsis":"Docstring
                                    for single_class_lib_method_3 with two params","html_doc":"&lt;p&gt;Docstring for
                                    single_class_lib_method_3 with two params&lt;/p&gt;","arg_string":"param_1,
                                    param_2","collection":{"id":4,"name":"SingleClassLib"}},{"name":"Someone Shall
                                    Pass","doc":"","args":"[\"who\"]","tags":[],"id":12,"synopsis":"","html_doc":"","arg_string":"who","collection":{"id":5,"name":"Test
                                    Libdoc File"}}]
                                </msg>
                                <msg timestamp="20210830 17:35:18.857" level="INFO">${response} = &lt;Response
                                    [200]&gt;
                                </msg>
                                <status status="PASS" starttime="20210830 17:35:18.820"
                                        endtime="20210830 17:35:18.857"/>
                            </kw>
                            <kw name="Should Be Equal As Integers" library="BuiltIn">
                                <arg>${response.status_code}</arg>
                                <arg>200</arg>
                                <doc>Fails if objects are unequal after converting them to integers.</doc>
                                <msg timestamp="20210830 17:35:18.860" level="INFO">Argument types are:
                                    &lt;class 'int'&gt;
                                    &lt;type 'unicode'&gt;
                                </msg>
                                <status status="PASS" starttime="20210830 17:35:18.858"
                                        endtime="20210830 17:35:18.860"/>
                            </kw>
                            <msg timestamp="20210830 17:35:18.863" level="INFO">${response} = [{'name': 'Keyword 1
                                Imported From Resource File', 'doc': 'This keyword was imported from file\nwith
                                .resource extension, available since RFWK 3.1', 'args': '', 'tags': ['first_tag'], 'id':
                                15, 'synop...
                            </msg>
                            <status status="PASS" starttime="20210830 17:35:18.818" endtime="20210830 17:35:18.863"/>
                        </kw>
                        <kw name="Length Should Be" library="BuiltIn">
                            <arg>${response}</arg>
                            <arg>${n}</arg>
                            <doc>Verifies that the length of the given item is correct.</doc>
                            <msg timestamp="20210830 17:35:18.863" level="INFO">Length is 20</msg>
                            <status status="PASS" starttime="20210830 17:35:18.863" endtime="20210830 17:35:18.864"/>
                        </kw>
                        <status status="PASS" starttime="20210830 17:35:18.817" endtime="20210830 17:35:18.864"/>
                    </kw>
                    <status status="PASS" starttime="20210830 17:35:18.777" endtime="20210830 17:35:18.864"/>
                </kw>
                <doc>Cli Should Populate App With Keywords From Provided Paths Only</doc>
                <tag>rfhub2-153</tag>
                <status status="PASS" starttime="20210830 17:35:16.115" endtime="20210830 17:35:18.864"/>
            </test>
            <test id="s1-s2-t2" name="Cli Should Populate App With Installed Keywords">
                <kw name="Run Cli Package With Options" library="keywords">
                    <arg>--load-mode=insert</arg>
                    <doc>Attempt to run the rfhub2-cli package with the given options
                        The stdout of the process will be in a test suite
                        variable named ${output}
                    </doc>
                    <kw name="Run" library="OperatingSystem">
                        <var>${output}</var>
                        <arg>${ACTIVATE_VENV} rfhub2-cli -a http://${HOST}:8000 ${options}</arg>
                        <doc>Runs the given command in the system and returns the output.</doc>
                        <msg timestamp="20210830 17:35:19.022" level="INFO">Running command ' rfhub2-cli -a
                            http://127.0.0.1:8000 --load-mode=insert 2&gt;&amp;1'.
                        </msg>
                        <msg timestamp="20210830 17:35:31.648" level="INFO">${output} = BuiltIn library with 108
                            keywords loaded.
                            Collections library with 43 keywords loaded.
                            DateTime library with 8 keywords loaded.
                            Easter library with 1 keywords loaded.
                            OperatingSystem library with 56 k...
                        </msg>
                        <status status="PASS" starttime="20210830 17:35:18.867" endtime="20210830 17:35:31.648"/>
                    </kw>
                    <kw name="Set Suite Variable" library="BuiltIn">
                        <arg>${output}</arg>
                        <doc>Makes a variable available everywhere within the scope of the current suite.</doc>
                        <msg timestamp="20210830 17:35:31.649" level="INFO">${output} = BuiltIn library with 108
                            keywords loaded.
                            Collections library with 43 keywords loaded.
                            DateTime library with 8 keywords loaded.
                            Easter library with 1 keywords loaded.
                            OperatingSystem library with 56 k...
                        </msg>
                        <status status="PASS" starttime="20210830 17:35:31.648" endtime="20210830 17:35:31.649"/>
                    </kw>
                    <status status="PASS" starttime="20210830 17:35:18.866" endtime="20210830 17:35:31.649"/>
                </kw>
                <kw name="Output Should Contain" library="keywords">
                    <arg>Collections library with 43 keywords loaded.</arg>
                    <arg>XML library with 37 keywords loaded.</arg>
                    <arg>Easter library with 1 keywords loaded.</arg>
                    <arg>Process library with 15 keywords loaded.</arg>
                    <arg>String library with 32 keywords loaded.</arg>
                    <arg>DateTime library with 8 keywords loaded.</arg>
                    <arg>OperatingSystem library with 56 keywords loaded.</arg>
                    <arg>Screenshot library with 3 keywords loaded.</arg>
                    <arg>BuiltIn library with 108 keywords loaded.</arg>
                    <arg>Telnet library with 20 keywords loaded.</arg>
                    <arg>Successfully loaded 10 collections with 323 keywords.</arg>
                    <doc>Fail if the output from the previous command doesn't contain the given string
                        This keyword assumes the output of the command is in
                        a test suite variable named ${output}
                    </doc>
                    <kw name="Create Dictionary" library="BuiltIn">
                        <var>${ns}</var>
                        <arg>output=${output}</arg>
                        <doc>Creates and returns a dictionary based on the given ``items``.</doc>
                        <msg timestamp="20210830 17:35:31.651" level="INFO">${ns} = {'output': 'BuiltIn library with 108
                            keywords loaded.\nCollections library with 43 keywords loaded.\nDateTime library with 8
                            keywords loaded.\nEaster library with 1 keywords loaded.\nOperatingSystem l...
                        </msg>
                        <status status="PASS" starttime="20210830 17:35:31.650" endtime="20210830 17:35:31.651"/>
                    </kw>
                    <kw name="Evaluate" library="BuiltIn">
                        <var>${clean_output}</var>
                        <arg>" ".join(l.strip() for l in output.splitlines())</arg>
                        <arg>namespace=${ns}</arg>
                        <doc>Evaluates the given expression in Python and returns the result.</doc>
                        <msg timestamp="20210830 17:35:31.652" level="INFO">${clean_output} = BuiltIn library with 108
                            keywords loaded. Collections library with 43 keywords loaded. DateTime library with 8
                            keywords loaded. Easter library with 1 keywords loaded. OperatingSystem library with 56 k...
                        </msg>
                        <status status="PASS" starttime="20210830 17:35:31.651" endtime="20210830 17:35:31.652"/>
                    </kw>
                    <for flavor="IN">
                        <var>${pattern}</var>
                        <value>@{patterns}</value>
                        <iter>
                            <var name="${pattern}">Collections library with 43 keywords loaded.</var>
                            <kw name="Run Keyword If" library="BuiltIn">
                                <arg>'''${pattern}''' not in '''${clean_output}'''</arg>
                                <arg>Fail</arg>
                                <arg>Output did not contain '${pattern}'. \n${clean_output}</arg>
                                <doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
                                <status status="PASS" starttime="20210830 17:35:31.653"
                                        endtime="20210830 17:35:31.653"/>
                            </kw>
                            <status status="PASS" starttime="20210830 17:35:31.652" endtime="20210830 17:35:31.653"/>
                        </iter>
                        <iter>
                            <var name="${pattern}">XML library with 37 keywords loaded.</var>
                            <kw name="Run Keyword If" library="BuiltIn">
                                <arg>'''${pattern}''' not in '''${clean_output}'''</arg>
                                <arg>Fail</arg>
                                <arg>Output did not contain '${pattern}'. \n${clean_output}</arg>
                                <doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
                                <status status="PASS" starttime="20210830 17:35:31.653"
                                        endtime="20210830 17:35:31.654"/>
                            </kw>
                            <status status="PASS" starttime="20210830 17:35:31.653" endtime="20210830 17:35:31.654"/>
                        </iter>
                        <iter>
                            <var name="${pattern}">Easter library with 1 keywords loaded.</var>
                            <kw name="Run Keyword If" library="BuiltIn">
                                <arg>'''${pattern}''' not in '''${clean_output}'''</arg>
                                <arg>Fail</arg>
                                <arg>Output did not contain '${pattern}'. \n${clean_output}</arg>
                                <doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
                                <status status="PASS" starttime="20210830 17:35:31.654"
                                        endtime="20210830 17:35:31.655"/>
                            </kw>
                            <status status="PASS" starttime="20210830 17:35:31.654" endtime="20210830 17:35:31.655"/>
                        </iter>
                        <iter>
                            <var name="${pattern}">Process library with 15 keywords loaded.</var>
                            <kw name="Run Keyword If" library="BuiltIn">
                                <arg>'''${pattern}''' not in '''${clean_output}'''</arg>
                                <arg>Fail</arg>
                                <arg>Output did not contain '${pattern}'. \n${clean_output}</arg>
                                <doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
                                <status status="PASS" starttime="20210830 17:35:31.655"
                                        endtime="20210830 17:35:31.656"/>
                            </kw>
                            <status status="PASS" starttime="20210830 17:35:31.655" endtime="20210830 17:35:31.656"/>
                        </iter>
                        <iter>
                            <var name="${pattern}">String library with 32 keywords loaded.</var>
                            <kw name="Run Keyword If" library="BuiltIn">
                                <arg>'''${pattern}''' not in '''${clean_output}'''</arg>
                                <arg>Fail</arg>
                                <arg>Output did not contain '${pattern}'. \n${clean_output}</arg>
                                <doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
                                <status status="PASS" starttime="20210830 17:35:31.656"
                                        endtime="20210830 17:35:31.657"/>
                            </kw>
                            <status status="PASS" starttime="20210830 17:35:31.656" endtime="20210830 17:35:31.657"/>
                        </iter>
                        <iter>
                            <var name="${pattern}">DateTime library with 8 keywords loaded.</var>
                            <kw name="Run Keyword If" library="BuiltIn">
                                <arg>'''${pattern}''' not in '''${clean_output}'''</arg>
                                <arg>Fail</arg>
                                <arg>Output did not contain '${pattern}'. \n${clean_output}</arg>
                                <doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
                                <status status="PASS" starttime="20210830 17:35:31.658"
                                        endtime="20210830 17:35:31.658"/>
                            </kw>
                            <status status="PASS" starttime="20210830 17:35:31.657" endtime="20210830 17:35:31.658"/>
                        </iter>
                        <iter>
                            <var name="${pattern}">OperatingSystem library with 56 keywords loaded.</var>
                            <kw name="Run Keyword If" library="BuiltIn">
                                <arg>'''${pattern}''' not in '''${clean_output}'''</arg>
                                <arg>Fail</arg>
                                <arg>Output did not contain '${pattern}'. \n${clean_output}</arg>
                                <doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
                                <status status="PASS" starttime="20210830 17:35:31.658"
                                        endtime="20210830 17:35:31.659"/>
                            </kw>
                            <status status="PASS" starttime="20210830 17:35:31.658" endtime="20210830 17:35:31.659"/>
                        </iter>
                        <iter>
                            <var name="${pattern}">Screenshot library with 3 keywords loaded.</var>
                            <kw name="Run Keyword If" library="BuiltIn">
                                <arg>'''${pattern}''' not in '''${clean_output}'''</arg>
                                <arg>Fail</arg>
                                <arg>Output did not contain '${pattern}'. \n${clean_output}</arg>
                                <doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
                                <status status="PASS" starttime="20210830 17:35:31.659"
                                        endtime="20210830 17:35:31.660"/>
                            </kw>
                            <status status="PASS" starttime="20210830 17:35:31.659" endtime="20210830 17:35:31.660"/>
                        </iter>
                        <iter>
                            <var name="${pattern}">BuiltIn library with 108 keywords loaded.</var>
                            <kw name="Run Keyword If" library="BuiltIn">
                                <arg>'''${pattern}''' not in '''${clean_output}'''</arg>
                                <arg>Fail</arg>
                                <arg>Output did not contain '${pattern}'. \n${clean_output}</arg>
                                <doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
                                <status status="PASS" starttime="20210830 17:35:31.660"
                                        endtime="20210830 17:35:31.661"/>
                            </kw>
                            <status status="PASS" starttime="20210830 17:35:31.660" endtime="20210830 17:35:31.661"/>
                        </iter>
                        <iter>
                            <var name="${pattern}">Telnet library with 20 keywords loaded.</var>
                            <kw name="Run Keyword If" library="BuiltIn">
                                <arg>'''${pattern}''' not in '''${clean_output}'''</arg>
                                <arg>Fail</arg>
                                <arg>Output did not contain '${pattern}'. \n${clean_output}</arg>
                                <doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
                                <status status="PASS" starttime="20210830 17:35:31.661"
                                        endtime="20210830 17:35:31.662"/>
                            </kw>
                            <status status="PASS" starttime="20210830 17:35:31.661" endtime="20210830 17:35:31.662"/>
                        </iter>
                        <iter>
                            <var name="${pattern}">Successfully loaded 10 collections with 323 keywords.</var>
                            <kw name="Run Keyword If" library="BuiltIn">
                                <arg>'''${pattern}''' not in '''${clean_output}'''</arg>
                                <arg>Fail</arg>
                                <arg>Output did not contain '${pattern}'. \n${clean_output}</arg>
                                <doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
                                <status status="PASS" starttime="20210830 17:35:31.662"
                                        endtime="20210830 17:35:31.663"/>
                            </kw>
                            <status status="PASS" starttime="20210830 17:35:31.662" endtime="20210830 17:35:31.663"/>
                        </iter>
                        <status status="PASS" starttime="20210830 17:35:31.652" endtime="20210830 17:35:31.663"/>
                    </for>
                    <status status="PASS" starttime="20210830 17:35:31.649" endtime="20210830 17:35:31.663"/>
                </kw>
                <kw name="Api Should Have 10 Collections And 100 Keywords"
                    sourcename="Api Should Have ${n} Collections And ${m} Keywords">
                    <kw name="collections Endpoint Should Have ${n} Items" library="keywords"
                        sourcename="${endpoint} Endpoint Should Have ${n} Items">
                        <kw name="Get Request For Endpoint" library="keywords">
                            <var>${response}</var>
                            <arg>endpoint=${endpoint}</arg>
                            <kw name="Create Session" library="RequestsLibrary">
                                <arg>tmp</arg>
                                <arg>http://${HOST}:8000/api/v1</arg>
                                <doc>Create Session: create a HTTP session to a server</doc>
                                <msg timestamp="20210830 17:35:31.666" level="INFO">Creating Session using : alias=tmp,
                                    url=http://127.0.0.1:8000/api/v1, headers={}, cookies={}, auth=None, timeout=None,
                                    proxies=None, verify=False, debug=0
                                </msg>
                                <status status="PASS" starttime="20210830 17:35:31.665"
                                        endtime="20210830 17:35:31.666"/>
                            </kw>
                            <kw name="Get On Session" library="RequestsLibrary">
                                <var>${response}</var>
                                <arg>tmp</arg>
                                <arg>${endpoint}/</arg>
                                <arg>params=${params}</arg>
                                <doc>Sends a GET request on a previously created HTTP Session.</doc>
                                <msg timestamp="20210830 17:35:32.061" level="INFO">GET Request :
                                    url=http://127.0.0.1:8000/api/v1/collections/?None
                                    path_url=/api/v1/collections/?None
                                    headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate',
                                    'Accept': '*/*', 'Connection': 'keep-alive'}
                                    body=None
                                </msg>
                                <msg timestamp="20210830 17:35:32.063" level="INFO">GET Response :
                                    url=http://127.0.0.1:8000/api/v1/collections/?None
                                    status=200, reason=OK
                                    headers={'date': 'Mon, 30 Aug 2021 15:35:31 GMT', 'server': 'uvicorn',
                                    'content-length': '745617', 'content-type': 'application/json'}
                                    body=[{"name":"BuiltIn","type":"LIBRARY","version":"4.1","scope":"GLOBAL","named_args":null,"path":"c:\\program
                                    files
                                    (x86)\\python36-32\\lib\\site-packages\\robot\\libraries\\BuiltIn.py","doc":"An
                                    always available standard library with often needed keywords.\n\n``BuiltIn`` is
                                    Robot Framework's standard library that provides a set\nof generic keywords needed
                                    often. It is imported automatically and\nthus always available. The provided
                                    keywords can be used, for example,\nfor verifications (e.g. `Should Be Equal`,
                                    `Should Contain`),\nconversions (e.g. `Convert To Integer`) and for various other
                                    purposes\n(e.g. `Log`, `Sleep`, `Run Keyword If`, `Set Global Variable`).\n\n==
                                    Table of contents ==\n\n- `HTML error messages`\n- `Evaluating expressions`\n-
                                    `Boolean arguments`\n- `Pattern matching`\n- `Multiline string comparison`\n-
                                    `String representations`\n- `Keywords`\n\n= HTML error messages =\n\nMany of the
                                    keywords accept an optional error message to use if the keyword\nfails, and it is
                                    possible to use HTML in these messages by prefixing them\nwith ``*HTML*``. See
                                    `Fail` keyword for a usage example. Notice that using\nHTML in messages is not
                                    limited to BuiltIn library but works with any\nerror message.\n\n= Evaluating
                                    expressions =\n\nMany keywords, such as `Evaluate`, `Run Keyword If` and `Should Be
                                    True`,\naccept an expression that is evaluated in Python.\n\n== Evaluation namespace
                                    ==\n\nExpressions are evaluated using
                                    Python's\n[http://docs.python.org/library/functions.html#eval|eval] function
                                    so\nthat all Python built-ins like ``len()`` and ``int()`` are available.\nIn
                                    addition to that, all unrecognized variables are considered to be\nmodules that are
                                    automatically imported. It is possible to use all\navailable Python modules,
                                    including the standard modules and the installed\nthird party
                                    modules.\n\nExamples:\n| `Should Be True` | len('${result}') &gt; 3 |\n| `Run
                                    Keyword If` | os.sep == '/' | Non-Windows Keyword |\n| ${robot version} = |
                                    `Evaluate` | robot.__version__ |\n\n`Evaluate` also allows configuring the execution
                                    namespace with a custom\nnamespace and with custom modules to be imported. The
                                    latter functionality\nis useful in special cases where the automatic module import
                                    does not work\nsuch as when using nested modules like ``rootmod.submod`` or
                                    list\ncomprehensions. See the documentation of the `Evaluate` keyword for
                                    mode\ndetails.\n\n*NOTE:* Automatic module import is a new feature in Robot
                                    Framework 3.2.\nEarlier modules needed to be explicitly taken into use when using
                                    the\n`Evaluate` keyword and other keywords only had access to ``sys`` and\n``os``
                                    modules.\n\n== Using variables ==\n\nWhen a variable is used in the expressing using
                                    the normal ``${variable}``\nsyntax, its value is replaced before the expression is
                                    evaluated. This\nmeans that the value used in the expression will be the
                                    string\nrepresentation of the variable value, not the variable value itself.\nThis
                                    is not a problem with numbers and other objects that have a string\nrepresentation
                                    that can be evaluated directly, but with other objects\nthe behavior depends on the
                                    string representation. Most importantly,\nstrings must always be quoted, and if they
                                    can contain newlines, they must\nbe triple quoted.\n\nExamples:\n| `Should Be True`
                                    | ${rc} &lt; 10 | Return code greater than 10 |\n| `Run Keyword If` | '${status}' ==
                                    'PASS' | Log | Passed |\n| `Run Keyword If` | 'FAIL' in '''${output}''' | Log |
                                    Output contains FAIL |\n\nActual variables values are also available in the
                                    evaluation namespace.\nThey can be accessed using special variable syntax without
                                    the curly\nbraces like ``$variable``. These variables should never be
                                    quoted.\n\nExamples:\n| `Should Be True` | $rc &lt; 10 | Return code greater than 10
                                    |\n| `Run Keyword If` | $status == 'PASS' | `Log` | Passed |\n| `Run Keyword If` |
                                    'FAIL' in $output | `Log` | Output contains FAIL |\n| `Should Be True` |
                                    len($result) &gt; 1 and $result[1] == 'OK' |\n| `Should Be True` | $result is not
                                    None |\n\nUsing the ``$variable`` syntax slows down expression evaluation a
                                    little.\nThis should not typically matter, but should be taken into account
                                    if\ncomplex expressions are evaluated often and there are strict
                                    time\nconstrains.\n\nNotice that instead of creating complicated expressions, it is
                                    often better\nto move the logic into a test library. That eases maintenance and can
                                    also\nenhance execution speed.\n\n= Boolean arguments =\n\nSome keywords accept
                                    arguments that are handled as Boolean values true or\nfalse. If such an argument is
                                    given as a string, it is considered false if\nit is an empty string or equal to
                                    ``FALSE``, ``NONE``, ``NO``, ``OFF`` or\n``0``, case-insensitively. Keywords
                                    verifying something that allow dropping\nactual and expected values from the
                                    possible error message also consider\nstring ``no values`` to be false. Other
                                    strings are considered true unless\nthe keyword documentation explicitly states
                                    otherwise, and other argument\ntypes are tested using the
                                    same\n[http://docs.python.org/library/stdtypes.html#truth|rules as in
                                    Python].\n\nTrue examples:\n| `Should Be Equal` | ${x} | ${y} | Custom error |
                                    values=True | # Strings are generally true. |\n| `Should Be Equal` | ${x} | ${y} |
                                    Custom error | values=yes | # Same as the above. |\n| `Should Be Equal` | ${x} |
                                    ${y} | Custom error | values=${TRUE} | # Python ``True`` is true. |\n| `Should Be
                                    Equal` | ${x} | ${y} | Custom error | values=${42} | # Numbers other than 0 are
                                    true. |\n\nFalse examples:\n| `Should Be Equal` | ${x} | ${y} | Custom error |
                                    values=False | # String ``false`` is false. |\n| `Should Be Equal` | ${x} | ${y} |
                                    Custom error | values=no | # Also string ``no`` is false. |\n| `Should Be Equal` |
                                    ${x} | ${y} | Custom error | values=${EMPTY} | # Empty string is false. |\n| `Should
                                    Be Equal` | ${x} | ${y} | Custom error | values=${FALSE} | # Python ``False`` is
                                    false. |\n| `Should Be Equal` | ${x} | ${y} | Custom error | values=no values | #
                                    ``no values`` works with ``values`` argument |\n\n= Pattern matching =\n\nMany
                                    keywords accepts arguments as either glob or regular expression\npatterns.\n\n==
                                    Glob patterns ==\n\nSome keywords, for example `Should Match`, support so
                                    called\n[http://en.wikipedia.org/wiki/Glob_(programming)|glob patterns] where:\n\n|
                                    ``*`` | matches any string, even an empty string |\n| ``?`` | matches any single
                                    character |\n| ``[chars]`` | matches one character in the bracket |\n| ``[!chars]``
                                    | matches one character not in the bracket |\n| ``[a-z]`` | matches one character
                                    from the range in the bracket |\n| ``[!a-z]`` | matches one character not from the
                                    range in the bracket |\n\nUnlike with glob patterns normally, path separator
                                    characters ``/`` and\n``\\`` and the newline character ``\\n`` are matches by the
                                    above\nwildcards.\n\n== Regular expressions ==\n\nSome keywords, for example `Should
                                    Match Regexp`, support\n[http://en.wikipedia.org/wiki/Regular_expression|regular
                                    expressions]\nthat are more powerful but also more complicated that glob
                                    patterns.\nThe regular expression support is implemented using
                                    Python's\n[http://docs.python.org/library/re.html|re module] and its
                                    documentation\nshould be consulted for more information about the syntax.\n\nBecause
                                    the backslash character (``\\``) is an escape character in\nRobot Framework test
                                    data, possible backslash characters in regular\nexpressions need to be escaped with
                                    another backslash like ``\\\\d\\\\w+``.\nStrings that may contain special characters
                                    but should be handled\nas literal strings, can be escaped with the `Regexp Escape`
                                    keyword.\n\n= Multiline string comparison =\n\n`Should Be Equal` and `Should Be
                                    Equal As Strings` report the failures
                                    using\n[http://en.wikipedia.org/wiki/Diff_utility#Unified_format|unified
                                    diff\nformat] if both strings have more than two lines.\n\nExample:\n| ${first} = |
                                    `Catenate` | SEPARATOR=\\n | Not in second | Same | Differs | Same |\n| ${second} =
                                    | `Catenate` | SEPARATOR=\\n | Same | Differs2 | Same | Not in first |\n| `Should Be
                                    Equal` | ${first} | ${second} |\n\nResults in the following error message:\n\n|
                                    Multiline strings are different:\n| --- first\n| +++ second\n| @@ -1,4 +1,4 @@\n|
                                    -Not in second\n| Same\n| -Differs\n| +Differs2\n| Same\n| +Not in first\n\n= String
                                    representations =\n\nSeveral keywords log values explicitly (e.g. `Log`) or
                                    implicitly (e.g.\n`Should Be Equal` when there are failures). By default keywords
                                    log values\nusing \"human readable\" string representation, which means that
                                    strings\nlike ``Hello`` and numbers like ``42`` are logged as-is. Most of the
                                    time\nthis is the desired behavior, but there are some problems as well:\n\n- It is
                                    not possible to see difference between different objects that\n have same string
                                    representation like string ``42`` and integer ``42``.\n `Should Be Equal` and some
                                    other keywords add the type information to\n the error message in these cases,
                                    though.\n\n- Non-printable characters such as the null byte are not visible.\n\n-
                                    Trailing whitespace is not visible.\n\n- Different newlines (``\\r\\n`` on Windows,
                                    ``\\n`` elsewhere) cannot\n be separated from each others.\n\n- There are several
                                    Unicode characters that are different but look the\n same. One example is the Latin
                                    ``a`` (``\\u0061``) and the Cyrillic\n ``а`` (``\\u0430``). Error messages like ``a
                                    != а`` are\n not very helpful.\n\n- Some Unicode characters can be represented
                                    using\n [https://en.wikipedia.org/wiki/Unicode_equivalence|different forms].\n For
                                    example, ``ä`` can be represented either as a single code point\n ``\\u00e4`` or
                                    using two code points ``\\u0061`` and ``\\u0308`` combined\n together. Such forms
                                    are considered canonically equivalent, but strings\n containing them are not
                                    considered equal when compared in Pyt... (set the log level to DEBUG or TRACE to see
                                    the full content)
                                </msg>
                                <msg timestamp="20210830 17:35:32.063" level="INFO">${response} = &lt;Response
                                    [200]&gt;
                                </msg>
                                <status status="PASS" starttime="20210830 17:35:31.666"
                                        endtime="20210830 17:35:32.063"/>
                            </kw>
                            <kw name="Should Be Equal As Integers" library="BuiltIn">
                                <arg>${response.status_code}</arg>
                                <arg>200</arg>
                                <doc>Fails if objects are unequal after converting them to integers.</doc>
                                <msg timestamp="20210830 17:35:32.066" level="INFO">Argument types are:
                                    &lt;class 'int'&gt;
                                    &lt;type 'unicode'&gt;
                                </msg>
                                <status status="PASS" starttime="20210830 17:35:32.064"
                                        endtime="20210830 17:35:32.066"/>
                            </kw>
                            <msg timestamp="20210830 17:35:32.121" level="INFO">${response} = [{'name': 'BuiltIn',
                                'type': 'LIBRARY', 'version': '4.1', 'scope': 'GLOBAL', 'named_args': None, 'path':
                                'c:\\program files
                                (x86)\\python36-32\\lib\\site-packages\\robot\\libraries\\BuiltIn.py', 'doc'...
                            </msg>
                            <status status="PASS" starttime="20210830 17:35:31.664" endtime="20210830 17:35:32.121"/>
                        </kw>
                        <kw name="Length Should Be" library="BuiltIn">
                            <arg>${response}</arg>
                            <arg>${n}</arg>
                            <doc>Verifies that the length of the given item is correct.</doc>
                            <msg timestamp="20210830 17:35:32.122" level="INFO">Length is 10</msg>
                            <status status="PASS" starttime="20210830 17:35:32.121" endtime="20210830 17:35:32.122"/>
                        </kw>
                        <status status="PASS" starttime="20210830 17:35:31.664" endtime="20210830 17:35:32.122"/>
                    </kw>
                    <kw name="keywords Endpoint Should Have ${m} Items" library="keywords"
                        sourcename="${endpoint} Endpoint Should Have ${n} Items">
                        <kw name="Get Request For Endpoint" library="keywords">
                            <var>${response}</var>
                            <arg>endpoint=${endpoint}</arg>
                            <kw name="Create Session" library="RequestsLibrary">
                                <arg>tmp</arg>
                                <arg>http://${HOST}:8000/api/v1</arg>
                                <doc>Create Session: create a HTTP session to a server</doc>
                                <msg timestamp="20210830 17:35:32.125" level="INFO">Creating Session using : alias=tmp,
                                    url=http://127.0.0.1:8000/api/v1, headers={}, cookies={}, auth=None, timeout=None,
                                    proxies=None, verify=False, debug=0
                                </msg>
                                <status status="PASS" starttime="20210830 17:35:32.124"
                                        endtime="20210830 17:35:32.125"/>
                            </kw>
                            <kw name="Get On Session" library="RequestsLibrary">
                                <var>${response}</var>
                                <arg>tmp</arg>
                                <arg>${endpoint}/</arg>
                                <arg>params=${params}</arg>
                                <doc>Sends a GET request on a previously created HTTP Session.</doc>
                                <msg timestamp="20210830 17:35:32.245" level="INFO">GET Request :
                                    url=http://127.0.0.1:8000/api/v1/keywords/?None
                                    path_url=/api/v1/keywords/?None
                                    headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate',
                                    'Accept': '*/*', 'Connection': 'keep-alive'}
                                    body=None
                                </msg>
                                <msg timestamp="20210830 17:35:32.245" level="INFO">GET Response :
                                    url=http://127.0.0.1:8000/api/v1/keywords/?None
                                    status=200, reason=OK
                                    headers={'date': 'Mon, 30 Aug 2021 15:35:31 GMT', 'server': 'uvicorn',
                                    'content-length': '168693', 'content-type': 'application/json'}
                                    body=[{"name":"Add Element","doc":"Adds a child element to the specified
                                    element.\n\nThe element to whom to add the new element is specified using
                                    ``source``\nand ``xpath``. They have exactly the same semantics as with `Get
                                    Element`\nkeyword. The resulting XML structure is returned, and if the
                                    ``source``\nis an already parsed XML structure, it is also modified in place.\n\nThe
                                    ``element`` to add can be specified as a path to an XML file or\nas a string
                                    containing XML, or it can be an already parsed XML element.\nThe element is copied
                                    before adding so modifying either the original\nor the added element has no effect
                                    on the other\n.\nThe element is added as the last child by default, but a custom
                                    index\ncan be used to alter the position. Indices start from zero (0 =
                                    first\nposition, 1 = second position, etc.), and negative numbers refer
                                    to\npositions at the end (-1 = second last position, -2 = third last,
                                    etc.).\n\nExamples using ``${XML}`` structure from `Example`:\n| Add Element |
                                    ${XML} | &lt;new id=\"x\"&gt;&lt;c1/&gt;&lt;/new&gt; |\n| Add Element | ${XML} |
                                    &lt;c2/&gt; | xpath=new |\n| Add Element | ${XML} | &lt;c3/&gt; | index=1 |
                                    xpath=new |\n| ${new} = | Get Element | ${XML} | new |\n| Elements Should Be Equal |
                                    ${new} | &lt;new id=\"x\"&gt;&lt;c1/&gt;&lt;c3/&gt;&lt;c2/&gt;&lt;/new&gt; |\n\nUse
                                    `Remove Element` or `Remove Elements` to remove elements.","args":"[\"source\",
                                    \"element\", \"index=None\", \"xpath=.\"]","tags":[],"id":287,"synopsis":"Adds a
                                    child element to the specified element.","html_doc":"&lt;p&gt;Adds a child element
                                    to the specified element.&lt;/p&gt;\n&lt;p&gt;The element to whom to add the new
                                    element is specified using &lt;code&gt;source&lt;/code&gt; and &lt;code&gt;xpath&lt;/code&gt;.
                                    They have exactly the same semantics as with `Get Element` keyword. The resulting
                                    XML structure is returned, and if the &lt;code&gt;source&lt;/code&gt; is an already
                                    parsed XML structure, it is also modified in place.&lt;/p&gt;\n&lt;p&gt;The &lt;code&gt;element&lt;/code&gt;
                                    to add can be specified as a path to an XML file or as a string containing XML, or
                                    it can be an already parsed XML element. The element is copied before adding so
                                    modifying either the original or the added element has no effect on the other . The
                                    element is added as the last child by default, but a custom index can be used to
                                    alter the position. Indices start from zero (0 = first position, 1 = second
                                    position, etc.), and negative numbers refer to positions at the end (-1 = second
                                    last position, -2 = third last, etc.).&lt;/p&gt;\n&lt;p&gt;Examples using &lt;code&gt;${XML}&lt;/code&gt;
                                    structure from `Example`:&lt;/p&gt;\n&lt;table border=\"1\"&gt;\n&lt;tr&gt;\n&lt;td&gt;Add
                                    Element&lt;/td&gt;\n&lt;td&gt;${XML}&lt;/td&gt;\n&lt;td&gt;&amp;lt;new id=\"x\"&amp;gt;&amp;lt;c1/&amp;gt;&amp;lt;/new&amp;gt;&lt;/td&gt;\n&lt;td&gt;&lt;/td&gt;\n&lt;td&gt;&lt;/td&gt;\n&lt;/tr&gt;\n&lt;tr&gt;\n&lt;td&gt;Add
                                    Element&lt;/td&gt;\n&lt;td&gt;${XML}&lt;/td&gt;\n&lt;td&gt;&amp;lt;c2/&amp;gt;&lt;/td&gt;\n&lt;td&gt;xpath=new&lt;/td&gt;\n&lt;td&gt;&lt;/td&gt;\n&lt;/tr&gt;\n&lt;tr&gt;\n&lt;td&gt;Add
                                    Element&lt;/td&gt;\n&lt;td&gt;${XML}&lt;/td&gt;\n&lt;td&gt;&amp;lt;c3/&amp;gt;&lt;/td&gt;\n&lt;td&gt;index=1&lt;/td&gt;\n&lt;td&gt;xpath=new&lt;/td&gt;\n&lt;/tr&gt;\n&lt;tr&gt;\n&lt;td&gt;${new}
                                    =&lt;/td&gt;\n&lt;td&gt;Get Element&lt;/td&gt;\n&lt;td&gt;${XML}&lt;/td&gt;\n&lt;td&gt;new&lt;/td&gt;\n&lt;td&gt;&lt;/td&gt;\n&lt;/tr&gt;\n&lt;tr&gt;\n&lt;td&gt;Elements
                                    Should Be Equal&lt;/td&gt;\n&lt;td&gt;${new}&lt;/td&gt;\n&lt;td&gt;&amp;lt;new
                                    id=\"x\"&amp;gt;&amp;lt;c1/&amp;gt;&amp;lt;c3/&amp;gt;&amp;lt;c2/&amp;gt;&amp;lt;/new&amp;gt;&lt;/td&gt;\n&lt;td&gt;&lt;/td&gt;\n&lt;td&gt;&lt;/td&gt;\n&lt;/tr&gt;\n&lt;/table&gt;\n&lt;p&gt;Use
                                    `Remove Element` or `Remove Elements` to remove elements.&lt;/p&gt;","arg_string":"source,
                                    element, index=None, xpath=.","collection":{"id":10,"name":"XML"}},{"name":"Add Time
                                    To Date","doc":"Adds time to date and returns the resulting date.\n\nArguments:\n-
                                    ``date:`` Date to add time to in one of the supported\n `date formats`.\n- ``time:``
                                    Time that is added in one of the supported\n `time formats`.\n- ``result_format:``
                                    Format of the returned date.\n- ``exclude_millis:`` When set to any true value,
                                    rounds and drops\n milliseconds as explained in `millisecond handling`.\n-
                                    ``date_format:`` Possible `custom timestamp` format of ``date``.\n\nExamples:\n|
                                    ${date} = | Add Time To Date | 2014-05-28 12:05:03.111 | 7 days |\n| Should Be Equal
                                    | ${date} | 2014-06-04 12:05:03.111 | |\n| ${date} = | Add Time To Date | 2014-05-28
                                    12:05:03.111 | 01:02:03:004 |\n| Should Be Equal | ${date} | 2014-05-28 13:07:06.115
                                    |","args":"[\"date\", \"time\", \"result_format=timestamp\",
                                    \"exclude_millis=False\", \"date_format=None\"]","tags":[],"id":152,"synopsis":"Adds
                                    time to date and returns the resulting date.","html_doc":"&lt;p&gt;Adds time to date
                                    and returns the resulting date.&lt;/p&gt;\n&lt;p&gt;Arguments:&lt;/p&gt;\n&lt;ul&gt;\n&lt;li&gt;&lt;code&gt;date:&lt;/code&gt;
                                    Date to add time to in one of the supported `date formats`.&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;time:&lt;/code&gt;
                                    Time that is added in one of the supported `time formats`.&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;result_format:&lt;/code&gt;
                                    Format of the returned date.&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;exclude_millis:&lt;/code&gt;
                                    When set to any true value, rounds and drops milliseconds as explained in
                                    `millisecond handling`.&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;date_format:&lt;/code&gt;
                                    Possible `custom timestamp` format of &lt;code&gt;date&lt;/code&gt;.&lt;/li&gt;\n&lt;/ul&gt;\n&lt;p&gt;Examples:&lt;/p&gt;\n&lt;table
                                    border=\"1\"&gt;\n&lt;tr&gt;\n&lt;td&gt;${date} =&lt;/td&gt;\n&lt;td&gt;Add Time To
                                    Date&lt;/td&gt;\n&lt;td&gt;2014-05-28 12:05:03.111&lt;/td&gt;\n&lt;td&gt;7 days&lt;/td&gt;\n&lt;/tr&gt;\n&lt;tr&gt;\n&lt;td&gt;Should
                                    Be Equal&lt;/td&gt;\n&lt;td&gt;${date}&lt;/td&gt;\n&lt;td&gt;2014-06-04 12:05:03.111&lt;/td&gt;\n&lt;td&gt;&lt;/td&gt;\n&lt;/tr&gt;\n&lt;tr&gt;\n&lt;td&gt;${date}
                                    =&lt;/td&gt;\n&lt;td&gt;Add Time To Date&lt;/td&gt;\n&lt;td&gt;2014-05-28
                                    12:05:03.111&lt;/td&gt;\n&lt;td&gt;01:02:03:004&lt;/td&gt;\n&lt;/tr&gt;\n&lt;tr&gt;\n&lt;td&gt;Should
                                    Be Equal&lt;/td&gt;\n&lt;td&gt;${date}&lt;/td&gt;\n&lt;td&gt;2014-05-28 13:07:06.115&lt;/td&gt;\n&lt;td&gt;&lt;/td&gt;\n&lt;/tr&gt;\n&lt;/table&gt;","arg_string":"date,
                                    time, result_format=timestamp, exclude_millis=False,
                                    date_format=None","collection":{"id":3,"name":"DateTime"}},{"name":"Add Time To
                                    Time","doc":"Adds time to another time and returns the resulting
                                    time.\n\nArguments:\n- ``time1:`` First time in one of the supported `time
                                    formats`.\n- ``time2:`` Second time in one of the supported `time formats`.\n-
                                    ``result_format:`` Format of the returned time.\n- ``exclude_millis:`` When set to
                                    any true value, rounds and drops\n milliseconds as explained in `millisecond
                                    handling`.\n\nExamples:\n| ${time} = | Add Time To Time | 1 minute | 42 |\n| Should
                                    Be Equal | ${time} | ${102} |\n| ${time} = | Add Time To Time | 3 hours 5 minutes |
                                    01:02:03 | timer | exclude_millis=yes |\n| Should Be Equal | ${time} | 04:07:03
                                    |","args":"[\"time1\", \"time2\", \"result_format=number\",
                                    \"exclude_millis=False\"]","tags":[],"id":153,"synopsis":"Adds time to another time
                                    and returns the resulting time.","html_doc":"&lt;p&gt;Adds time to another time and
                                    returns the resulting time.&lt;/p&gt;\n&lt;p&gt;Arguments:&lt;/p&gt;\n&lt;ul&gt;\n&lt;li&gt;&lt;code&gt;time1:&lt;/code&gt;
                                    First time in one of the supported `time formats`.&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;time2:&lt;/code&gt;
                                    Second time in one of the supported `time formats`.&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;result_format:&lt;/code&gt;
                                    Format of the returned time.&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;exclude_millis:&lt;/code&gt;
                                    When set to any true value, rounds and drops milliseconds as explained in
                                    `millisecond handling`.&lt;/li&gt;\n&lt;/ul&gt;\n&lt;p&gt;Examples:&lt;/p&gt;\n&lt;table
                                    border=\"1\"&gt;\n&lt;tr&gt;\n&lt;td&gt;${time} =&lt;/td&gt;\n&lt;td&gt;Add Time To
                                    Time&lt;/td&gt;\n&lt;td&gt;1 minute&lt;/td&gt;\n&lt;td&gt;42&lt;/td&gt;\n&lt;td&gt;&lt;/td&gt;\n&lt;td&gt;&lt;/td&gt;\n&lt;/tr&gt;\n&lt;tr&gt;\n&lt;td&gt;Should
                                    Be Equal&lt;/td&gt;\n&lt;td&gt;${time}&lt;/td&gt;\n&lt;td&gt;${102}&lt;/td&gt;\n&lt;td&gt;&lt;/td&gt;\n&lt;td&gt;&lt;/td&gt;\n&lt;td&gt;&lt;/td&gt;\n&lt;/tr&gt;\n&lt;tr&gt;\n&lt;td&gt;${time}
                                    =&lt;/td&gt;\n&lt;td&gt;Add Time To Time&lt;/td&gt;\n&lt;td&gt;3 hours 5 minutes&lt;/td&gt;\n&lt;td&gt;01:02:03&lt;/td&gt;\n&lt;td&gt;timer&lt;/td&gt;\n&lt;td&gt;exclude_millis=yes&lt;/td&gt;\n&lt;/tr&gt;\n&lt;tr&gt;\n&lt;td&gt;Should
                                    Be Equal&lt;/td&gt;\n&lt;td&gt;${time}&lt;/td&gt;\n&lt;td&gt;04:07:03&lt;/td&gt;\n&lt;td&gt;&lt;/td&gt;\n&lt;td&gt;&lt;/td&gt;\n&lt;td&gt;&lt;/td&gt;\n&lt;/tr&gt;\n&lt;/table&gt;","arg_string":"time1,
                                    time2, result_format=number,
                                    exclude_millis=False","collection":{"id":3,"name":"DateTime"}},{"name":"Append To
                                    Environment Variable","doc":"Appends given ``values`` to environment variable
                                    ``name``.\n\nIf the environment variable already exists, values are added after
                                    it,\nand otherwise a new environment variable is created.\n\nValues are, by default,
                                    joined together using the operating system\npath separator (``;`` on Windows, ``:``
                                    elsewhere). This can be changed\nby giving a separator after the values like
                                    ``separator=value``. No\nother configuration parameters are accepted.\n\nExamples
                                    (assuming ``NAME`` and ``NAME2`` do not exist initially):\n| Append To Environment
                                    Variable | NAME | first | |\n| Should Be Equal | %{NAME} | first | |\n| Append To
                                    Environment Variable | NAME | second | third |\n| Should Be Equal | %{NAME} |
                                    first${:}second${:}third |\n| Append To Environment Variable | NAME2 | first |
                                    separator=- |\n| Should Be Equal | %{NAME2} | first | |\n| Append To Environment
                                    Variable | NAME2 | second | separator=- |\n| Should Be Equal | %{NAME2} |
                                    first-second |","args":"[\"name\", \"*values\",
                                    \"**config\"]","tags":[],"id":161,"synopsis":"Appends given ``values`` to
                                    environment variable ``name``.","html_doc":"&lt;p&gt;Appends given &lt;code&gt;values&lt;/code&gt;
                                    to environment variable &lt;code&gt;name&lt;/code&gt;.&lt;/p&gt;\n&lt;p&gt;If the
                                    environment variable already exists, values are added after it, and otherwise a new
                                    environment variable is created.&lt;/p&gt;\n&lt;p&gt;Values are, by default, joined
                                    together using the operating system path separator (&lt;code&gt;;&lt;/code&gt; on
                                    Windows, &lt;code&gt;:&lt;/code&gt; elsewhere). This can be changed by giving a
                                    separator after the values like &lt;code&gt;separator=value&lt;/code&gt;. No other
                                    configuration parameters are accepted.&lt;/p&gt;\n&lt;p&gt;Examples (assuming &lt;code&gt;NAME&lt;/code&gt;
                                    and &lt;code&gt;NAME2&lt;/code&gt; do not exist initially):&lt;/p&gt;\n&lt;table
                                    border=\"1\"&gt;\n&lt;tr&gt;\n&lt;td&gt;Append To Environment Variable&lt;/td&gt;\n&lt;td&gt;NAME&lt;/td&gt;\n&lt;td&gt;first&lt;/td&gt;\n&lt;td&gt;&lt;/td&gt;\n&lt;/tr&gt;\n&lt;tr&gt;\n&lt;td&gt;Should
                                    Be Equal&lt;/td&gt;\n&lt;td&gt;%{NAME}&lt;/td&gt;\n&lt;td&gt;first&lt;/td&gt;\n&lt;td&gt;&lt;/td&gt;\n&lt;/tr&gt;\n&lt;tr&gt;\n&lt;td&gt;Append
                                    To Environment Variable&lt;/td&gt;\n&lt;td&gt;NAME&lt;/td&gt;\n&lt;td&gt;second&lt;/td&gt;\n&lt;td&gt;third&lt;/td&gt;\n&lt;/tr&gt;\n&lt;tr&gt;\n&lt;td&gt;Should
                                    Be Equal&lt;/td&gt;\n&lt;td&gt;%{NAME}&lt;/td&gt;\n&lt;td&gt;first${:}second${:}third&lt;/td&gt;\n&lt;td&gt;&lt;/td&gt;\n&lt;/tr&gt;\n&lt;tr&gt;\n&lt;td&gt;Append
                                    To Environment Variable&lt;/td&gt;\n&lt;td&gt;NAME2&lt;/td&gt;\n&lt;td&gt;first&lt;/td&gt;\n&lt;...
                                    (set the log level to DEBUG or TRACE to see the full content)
                                </msg>
                                <msg timestamp="20210830 17:35:32.246" level="INFO">${response} = &lt;Response
                                    [200]&gt;
                                </msg>
                                <status status="PASS" starttime="20210830 17:35:32.125"
                                        endtime="20210830 17:35:32.246"/>
                            </kw>
                            <kw name="Should Be Equal As Integers" library="BuiltIn">
                                <arg>${response.status_code}</arg>
                                <arg>200</arg>
                                <doc>Fails if objects are unequal after converting them to integers.</doc>
                                <msg timestamp="20210830 17:35:32.248" level="INFO">Argument types are:
                                    &lt;class 'int'&gt;
                                    &lt;type 'unicode'&gt;
                                </msg>
                                <status status="PASS" starttime="20210830 17:35:32.246"
                                        endtime="20210830 17:35:32.248"/>
                            </kw>
                            <msg timestamp="20210830 17:35:32.256" level="INFO">${response} = [{'name': 'Add Element',
                                'doc': 'Adds a child element to the specified element.\n\nThe element to whom to add the
                                new element is specified using ``source``\nand ``xpath``. They have exactly the same
                                s...
                            </msg>
                            <status status="PASS" starttime="20210830 17:35:32.124" endtime="20210830 17:35:32.256"/>
                        </kw>
                        <kw name="Length Should Be" library="BuiltIn">
                            <arg>${response}</arg>
                            <arg>${n}</arg>
                            <doc>Verifies that the length of the given item is correct.</doc>
                            <msg timestamp="20210830 17:35:32.257" level="INFO">Length is 100</msg>
                            <status status="PASS" starttime="20210830 17:35:32.256" endtime="20210830 17:35:32.257"/>
                        </kw>
                        <status status="PASS" starttime="20210830 17:35:32.123" endtime="20210830 17:35:32.257"/>
                    </kw>
                    <status status="PASS" starttime="20210830 17:35:31.663" endtime="20210830 17:35:32.257"/>
                </kw>
                <doc>Cli Should Populate App With Installed Keywords</doc>
                <status status="PASS" starttime="20210830 17:35:18.865" endtime="20210830 17:35:32.257"/>
            </test>
            <test id="s1-s2-t3" name="Cli Should Preserve All Keywords When Paths And Append Set">
                <kw name="Run Cli Package With Options" library="keywords">
                    <arg>--load-mode=append --no-installed-keywords</arg>
                    <doc>Attempt to run the rfhub2-cli package with the given options
                        The stdout of the process will be in a test suite
                        variable named ${output}
                    </doc>
                    <kw name="Run" library="OperatingSystem">
                        <var>${output}</var>
                        <arg>${ACTIVATE_VENV} rfhub2-cli -a http://${HOST}:8000 ${options}</arg>
                        <doc>Runs the given command in the system and returns the output.</doc>
                        <msg timestamp="20210830 17:35:32.413" level="INFO">Running command ' rfhub2-cli -a
                            http://127.0.0.1:8000 --load-mode=append --no-installed-keywords 2&gt;&amp;1'.
                        </msg>
                        <msg timestamp="20210830 17:35:34.225" level="INFO">${output} =
                            Successfully loaded 0 collections with 0 keywords.
                        </msg>
                        <status status="PASS" starttime="20210830 17:35:32.260" endtime="20210830 17:35:34.225"/>
                    </kw>
                    <kw name="Set Suite Variable" library="BuiltIn">
                        <arg>${output}</arg>
                        <doc>Makes a variable available everywhere within the scope of the current suite.</doc>
                        <msg timestamp="20210830 17:35:34.226" level="INFO">${output} =
                            Successfully loaded 0 collections with 0 keywords.
                        </msg>
                        <status status="PASS" starttime="20210830 17:35:34.225" endtime="20210830 17:35:34.226"/>
                    </kw>
                    <status status="PASS" starttime="20210830 17:35:32.260" endtime="20210830 17:35:34.226"/>
                </kw>
                <kw name="Output Should Contain" library="keywords">
                    <arg>Successfully loaded 0 collections with 0 keywords.</arg>
                    <doc>Fail if the output from the previous command doesn't contain the given string
                        This keyword assumes the output of the command is in
                        a test suite variable named ${output}
                    </doc>
                    <kw name="Create Dictionary" library="BuiltIn">
                        <var>${ns}</var>
                        <arg>output=${output}</arg>
                        <doc>Creates and returns a dictionary based on the given ``items``.</doc>
                        <msg timestamp="20210830 17:35:34.228" level="INFO">${ns} = {'output': '\nSuccessfully loaded 0
                            collections with 0 keywords.'}
                        </msg>
                        <status status="PASS" starttime="20210830 17:35:34.227" endtime="20210830 17:35:34.228"/>
                    </kw>
                    <kw name="Evaluate" library="BuiltIn">
                        <var>${clean_output}</var>
                        <arg>" ".join(l.strip() for l in output.splitlines())</arg>
                        <arg>namespace=${ns}</arg>
                        <doc>Evaluates the given expression in Python and returns the result.</doc>
                        <msg timestamp="20210830 17:35:34.229" level="INFO">${clean_output} = Successfully loaded 0
                            collections with 0 keywords.
                        </msg>
                        <status status="PASS" starttime="20210830 17:35:34.228" endtime="20210830 17:35:34.229"/>
                    </kw>
                    <for flavor="IN">
                        <var>${pattern}</var>
                        <value>@{patterns}</value>
                        <iter>
                            <var name="${pattern}">Successfully loaded 0 collections with 0 keywords.</var>
                            <kw name="Run Keyword If" library="BuiltIn">
                                <arg>'''${pattern}''' not in '''${clean_output}'''</arg>
                                <arg>Fail</arg>
                                <arg>Output did not contain '${pattern}'. \n${clean_output}</arg>
                                <doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
                                <status status="PASS" starttime="20210830 17:35:34.230"
                                        endtime="20210830 17:35:34.230"/>
                            </kw>
                            <status status="PASS" starttime="20210830 17:35:34.229" endtime="20210830 17:35:34.230"/>
                        </iter>
                        <status status="PASS" starttime="20210830 17:35:34.229" endtime="20210830 17:35:34.230"/>
                    </for>
                    <status status="PASS" starttime="20210830 17:35:34.226" endtime="20210830 17:35:34.231"/>
                </kw>
                <kw name="Api Should Have 10 Collections And 100 Keywords"
                    sourcename="Api Should Have ${n} Collections And ${m} Keywords">
                    <kw name="collections Endpoint Should Have ${n} Items" library="keywords"
                        sourcename="${endpoint} Endpoint Should Have ${n} Items">
                        <kw name="Get Request For Endpoint" library="keywords">
                            <var>${response}</var>
                            <arg>endpoint=${endpoint}</arg>
                            <kw name="Create Session" library="RequestsLibrary">
                                <arg>tmp</arg>
                                <arg>http://${HOST}:8000/api/v1</arg>
                                <doc>Create Session: create a HTTP session to a server</doc>
                                <msg timestamp="20210830 17:35:34.233" level="INFO">Creating Session using : alias=tmp,
                                    url=http://127.0.0.1:8000/api/v1, headers={}, cookies={}, auth=None, timeout=None,
                                    proxies=None, verify=False, debug=0
                                </msg>
                                <status status="PASS" starttime="20210830 17:35:34.233"
                                        endtime="20210830 17:35:34.234"/>
                            </kw>
                            <kw name="Get On Session" library="RequestsLibrary">
                                <var>${response}</var>
                                <arg>tmp</arg>
                                <arg>${endpoint}/</arg>
                                <arg>params=${params}</arg>
                                <doc>Sends a GET request on a previously created HTTP Session.</doc>
                                <msg timestamp="20210830 17:35:34.586" level="INFO">GET Request :
                                    url=http://127.0.0.1:8000/api/v1/collections/?None
                                    path_url=/api/v1/collections/?None
                                    headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate',
                                    'Accept': '*/*', 'Connection': 'keep-alive'}
                                    body=None
                                </msg>
                                <msg timestamp="20210830 17:35:34.587" level="INFO">GET Response :
                                    url=http://127.0.0.1:8000/api/v1/collections/?None
                                    status=200, reason=OK
                                    headers={'date': 'Mon, 30 Aug 2021 15:35:33 GMT', 'server': 'uvicorn',
                                    'content-length': '745617', 'content-type': 'application/json'}
                                    body=[{"name":"BuiltIn","type":"LIBRARY","version":"4.1","scope":"GLOBAL","named_args":null,"path":"c:\\program
                                    files
                                    (x86)\\python36-32\\lib\\site-packages\\robot\\libraries\\BuiltIn.py","doc":"An
                                    always available standard library with often needed keywords.\n\n``BuiltIn`` is
                                    Robot Framework's standard library that provides a set\nof generic keywords needed
                                    often. It is imported automatically and\nthus always available. The provided
                                    keywords can be used, for example,\nfor verifications (e.g. `Should Be Equal`,
                                    `Should Contain`),\nconversions (e.g. `Convert To Integer`) and for various other
                                    purposes\n(e.g. `Log`, `Sleep`, `Run Keyword If`, `Set Global Variable`).\n\n==
                                    Table of contents ==\n\n- `HTML error messages`\n- `Evaluating expressions`\n-
                                    `Boolean arguments`\n- `Pattern matching`\n- `Multiline string comparison`\n-
                                    `String representations`\n- `Keywords`\n\n= HTML error messages =\n\nMany of the
                                    keywords accept an optional error message to use if the keyword\nfails, and it is
                                    possible to use HTML in these messages by prefixing them\nwith ``*HTML*``. See
                                    `Fail` keyword for a usage example. Notice that using\nHTML in messages is not
                                    limited to BuiltIn library but works with any\nerror message.\n\n= Evaluating
                                    expressions =\n\nMany keywords, such as `Evaluate`, `Run Keyword If` and `Should Be
                                    True`,\naccept an expression that is evaluated in Python.\n\n== Evaluation namespace
                                    ==\n\nExpressions are evaluated using
                                    Python's\n[http://docs.python.org/library/functions.html#eval|eval] function
                                    so\nthat all Python built-ins like ``len()`` and ``int()`` are available.\nIn
                                    addition to that, all unrecognized variables are considered to be\nmodules that are
                                    automatically imported. It is possible to use all\navailable Python modules,
                                    including the standard modules and the installed\nthird party
                                    modules.\n\nExamples:\n| `Should Be True` | len('${result}') &gt; 3 |\n| `Run
                                    Keyword If` | os.sep == '/' | Non-Windows Keyword |\n| ${robot version} = |
                                    `Evaluate` | robot.__version__ |\n\n`Evaluate` also allows configuring the execution
                                    namespace with a custom\nnamespace and with custom modules to be imported. The
                                    latter functionality\nis useful in special cases where the automatic module import
                                    does not work\nsuch as when using nested modules like ``rootmod.submod`` or
                                    list\ncomprehensions. See the documentation of the `Evaluate` keyword for
                                    mode\ndetails.\n\n*NOTE:* Automatic module import is a new feature in Robot
                                    Framework 3.2.\nEarlier modules needed to be explicitly taken into use when using
                                    the\n`Evaluate` keyword and other keywords only had access to ``sys`` and\n``os``
                                    modules.\n\n== Using variables ==\n\nWhen a variable is used in the expressing using
                                    the normal ``${variable}``\nsyntax, its value is replaced before the expression is
                                    evaluated. This\nmeans that the value used in the expression will be the
                                    string\nrepresentation of the variable value, not the variable value itself.\nThis
                                    is not a problem with numbers and other objects that have a string\nrepresentation
                                    that can be evaluated directly, but with other objects\nthe behavior depends on the
                                    string representation. Most importantly,\nstrings must always be quoted, and if they
                                    can contain newlines, they must\nbe triple quoted.\n\nExamples:\n| `Should Be True`
                                    | ${rc} &lt; 10 | Return code greater than 10 |\n| `Run Keyword If` | '${status}' ==
                                    'PASS' | Log | Passed |\n| `Run Keyword If` | 'FAIL' in '''${output}''' | Log |
                                    Output contains FAIL |\n\nActual variables values are also available in the
                                    evaluation namespace.\nThey can be accessed using special variable syntax without
                                    the curly\nbraces like ``$variable``. These variables should never be
                                    quoted.\n\nExamples:\n| `Should Be True` | $rc &lt; 10 | Return code greater than 10
                                    |\n| `Run Keyword If` | $status == 'PASS' | `Log` | Passed |\n| `Run Keyword If` |
                                    'FAIL' in $output | `Log` | Output contains FAIL |\n| `Should Be True` |
                                    len($result) &gt; 1 and $result[1] == 'OK' |\n| `Should Be True` | $result is not
                                    None |\n\nUsing the ``$variable`` syntax slows down expression evaluation a
                                    little.\nThis should not typically matter, but should be taken into account
                                    if\ncomplex expressions are evaluated often and there are strict
                                    time\nconstrains.\n\nNotice that instead of creating complicated expressions, it is
                                    often better\nto move the logic into a test library. That eases maintenance and can
                                    also\nenhance execution speed.\n\n= Boolean arguments =\n\nSome keywords accept
                                    arguments that are handled as Boolean values true or\nfalse. If such an argument is
                                    given as a string, it is considered false if\nit is an empty string or equal to
                                    ``FALSE``, ``NONE``, ``NO``, ``OFF`` or\n``0``, case-insensitively. Keywords
                                    verifying something that allow dropping\nactual and expected values from the
                                    possible error message also consider\nstring ``no values`` to be false. Other
                                    strings are considered true unless\nthe keyword documentation explicitly states
                                    otherwise, and other argument\ntypes are tested using the
                                    same\n[http://docs.python.org/library/stdtypes.html#truth|rules as in
                                    Python].\n\nTrue examples:\n| `Should Be Equal` | ${x} | ${y} | Custom error |
                                    values=True | # Strings are generally true. |\n| `Should Be Equal` | ${x} | ${y} |
                                    Custom error | values=yes | # Same as the above. |\n| `Should Be Equal` | ${x} |
                                    ${y} | Custom error | values=${TRUE} | # Python ``True`` is true. |\n| `Should Be
                                    Equal` | ${x} | ${y} | Custom error | values=${42} | # Numbers other than 0 are
                                    true. |\n\nFalse examples:\n| `Should Be Equal` | ${x} | ${y} | Custom error |
                                    values=False | # String ``false`` is false. |\n| `Should Be Equal` | ${x} | ${y} |
                                    Custom error | values=no | # Also string ``no`` is false. |\n| `Should Be Equal` |
                                    ${x} | ${y} | Custom error | values=${EMPTY} | # Empty string is false. |\n| `Should
                                    Be Equal` | ${x} | ${y} | Custom error | values=${FALSE} | # Python ``False`` is
                                    false. |\n| `Should Be Equal` | ${x} | ${y} | Custom error | values=no values | #
                                    ``no values`` works with ``values`` argument |\n\n= Pattern matching =\n\nMany
                                    keywords accepts arguments as either glob or regular expression\npatterns.\n\n==
                                    Glob patterns ==\n\nSome keywords, for example `Should Match`, support so
                                    called\n[http://en.wikipedia.org/wiki/Glob_(programming)|glob patterns] where:\n\n|
                                    ``*`` | matches any string, even an empty string |\n| ``?`` | matches any single
                                    character |\n| ``[chars]`` | matches one character in the bracket |\n| ``[!chars]``
                                    | matches one character not in the bracket |\n| ``[a-z]`` | matches one character
                                    from the range in the bracket |\n| ``[!a-z]`` | matches one character not from the
                                    range in the bracket |\n\nUnlike with glob patterns normally, path separator
                                    characters ``/`` and\n``\\`` and the newline character ``\\n`` are matches by the
                                    above\nwildcards.\n\n== Regular expressions ==\n\nSome keywords, for example `Should
                                    Match Regexp`, support\n[http://en.wikipedia.org/wiki/Regular_expression|regular
                                    expressions]\nthat are more powerful but also more complicated that glob
                                    patterns.\nThe regular expression support is implemented using
                                    Python's\n[http://docs.python.org/library/re.html|re module] and its
                                    documentation\nshould be consulted for more information about the syntax.\n\nBecause
                                    the backslash character (``\\``) is an escape character in\nRobot Framework test
                                    data, possible backslash characters in regular\nexpressions need to be escaped with
                                    another backslash like ``\\\\d\\\\w+``.\nStrings that may contain special characters
                                    but should be handled\nas literal strings, can be escaped with the `Regexp Escape`
                                    keyword.\n\n= Multiline string comparison =\n\n`Should Be Equal` and `Should Be
                                    Equal As Strings` report the failures
                                    using\n[http://en.wikipedia.org/wiki/Diff_utility#Unified_format|unified
                                    diff\nformat] if both strings have more than two lines.\n\nExample:\n| ${first} = |
                                    `Catenate` | SEPARATOR=\\n | Not in second | Same | Differs | Same |\n| ${second} =
                                    | `Catenate` | SEPARATOR=\\n | Same | Differs2 | Same | Not in first |\n| `Should Be
                                    Equal` | ${first} | ${second} |\n\nResults in the following error message:\n\n|
                                    Multiline strings are different:\n| --- first\n| +++ second\n| @@ -1,4 +1,4 @@\n|
                                    -Not in second\n| Same\n| -Differs\n| +Differs2\n| Same\n| +Not in first\n\n= String
                                    representations =\n\nSeveral keywords log values explicitly (e.g. `Log`) or
                                    implicitly (e.g.\n`Should Be Equal` when there are failures). By default keywords
                                    log values\nusing \"human readable\" string representation, which means that
                                    strings\nlike ``Hello`` and numbers like ``42`` are logged as-is. Most of the
                                    time\nthis is the desired behavior, but there are some problems as well:\n\n- It is
                                    not possible to see difference between different objects that\n have same string
                                    representation like string ``42`` and integer ``42``.\n `Should Be Equal` and some
                                    other keywords add the type information to\n the error message in these cases,
                                    though.\n\n- Non-printable characters such as the null byte are not visible.\n\n-
                                    Trailing whitespace is not visible.\n\n- Different newlines (``\\r\\n`` on Windows,
                                    ``\\n`` elsewhere) cannot\n be separated from each others.\n\n- There are several
                                    Unicode characters that are different but look the\n same. One example is the Latin
                                    ``a`` (``\\u0061``) and the Cyrillic\n ``а`` (``\\u0430``). Error messages like ``a
                                    != а`` are\n not very helpful.\n\n- Some Unicode characters can be represented
                                    using\n [https://en.wikipedia.org/wiki/Unicode_equivalence|different forms].\n For
                                    example, ``ä`` can be represented either as a single code point\n ``\\u00e4`` or
                                    using two code points ``\\u0061`` and ``\\u0308`` combined\n together. Such forms
                                    are considered canonically equivalent, but strings\n containing them are not
                                    considered equal when compared in Pyt... (set the log level to DEBUG or TRACE to see
                                    the full content)
                                </msg>
                                <msg timestamp="20210830 17:35:34.588" level="INFO">${response} = &lt;Response
                                    [200]&gt;
                                </msg>
                                <status status="PASS" starttime="20210830 17:35:34.234"
                                        endtime="20210830 17:35:34.588"/>
                            </kw>
                            <kw name="Should Be Equal As Integers" library="BuiltIn">
                                <arg>${response.status_code}</arg>
                                <arg>200</arg>
                                <doc>Fails if objects are unequal after converting them to integers.</doc>
                                <msg timestamp="20210830 17:35:34.590" level="INFO">Argument types are:
                                    &lt;class 'int'&gt;
                                    &lt;type 'unicode'&gt;
                                </msg>
                                <status status="PASS" starttime="20210830 17:35:34.588"
                                        endtime="20210830 17:35:34.591"/>
                            </kw>
                            <msg timestamp="20210830 17:35:34.645" level="INFO">${response} = [{'name': 'BuiltIn',
                                'type': 'LIBRARY', 'version': '4.1', 'scope': 'GLOBAL', 'named_args': None, 'path':
                                'c:\\program files
                                (x86)\\python36-32\\lib\\site-packages\\robot\\libraries\\BuiltIn.py', 'doc'...
                            </msg>
                            <status status="PASS" starttime="20210830 17:35:34.232" endtime="20210830 17:35:34.645"/>
                        </kw>
                        <kw name="Length Should Be" library="BuiltIn">
                            <arg>${response}</arg>
                            <arg>${n}</arg>
                            <doc>Verifies that the length of the given item is correct.</doc>
                            <msg timestamp="20210830 17:35:34.646" level="INFO">Length is 10</msg>
                            <status status="PASS" starttime="20210830 17:35:34.646" endtime="20210830 17:35:34.646"/>
                        </kw>
                        <status status="PASS" starttime="20210830 17:35:34.231" endtime="20210830 17:35:34.647"/>
                    </kw>
                    <kw name="keywords Endpoint Should Have ${m} Items" library="keywords"
                        sourcename="${endpoint} Endpoint Should Have ${n} Items">
                        <kw name="Get Request For Endpoint" library="keywords">
                            <var>${response}</var>
                            <arg>endpoint=${endpoint}</arg>
                            <kw name="Create Session" library="RequestsLibrary">
                                <arg>tmp</arg>
                                <arg>http://${HOST}:8000/api/v1</arg>
                                <doc>Create Session: create a HTTP session to a server</doc>
                                <msg timestamp="20210830 17:35:34.649" level="INFO">Creating Session using : alias=tmp,
                                    url=http://127.0.0.1:8000/api/v1, headers={}, cookies={}, auth=None, timeout=None,
                                    proxies=None, verify=False, debug=0
                                </msg>
                                <status status="PASS" starttime="20210830 17:35:34.649"
                                        endtime="20210830 17:35:34.649"/>
                            </kw>
                            <kw name="Get On Session" library="RequestsLibrary">
                                <var>${response}</var>
                                <arg>tmp</arg>
                                <arg>${endpoint}/</arg>
                                <arg>params=${params}</arg>
                                <doc>Sends a GET request on a previously created HTTP Session.</doc>
                                <msg timestamp="20210830 17:35:34.772" level="INFO">GET Request :
                                    url=http://127.0.0.1:8000/api/v1/keywords/?None
                                    path_url=/api/v1/keywords/?None
                                    headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate',
                                    'Accept': '*/*', 'Connection': 'keep-alive'}
                                    body=None
                                </msg>
                                <msg timestamp="20210830 17:35:34.772" level="INFO">GET Response :
                                    url=http://127.0.0.1:8000/api/v1/keywords/?None
                                    status=200, reason=OK
                                    headers={'date': 'Mon, 30 Aug 2021 15:35:34 GMT', 'server': 'uvicorn',
                                    'content-length': '168693', 'content-type': 'application/json'}
                                    body=[{"name":"Add Element","doc":"Adds a child element to the specified
                                    element.\n\nThe element to whom to add the new element is specified using
                                    ``source``\nand ``xpath``. They have exactly the same semantics as with `Get
                                    Element`\nkeyword. The resulting XML structure is returned, and if the
                                    ``source``\nis an already parsed XML structure, it is also modified in place.\n\nThe
                                    ``element`` to add can be specified as a path to an XML file or\nas a string
                                    containing XML, or it can be an already parsed XML element.\nThe element is copied
                                    before adding so modifying either the original\nor the added element has no effect
                                    on the other\n.\nThe element is added as the last child by default, but a custom
                                    index\ncan be used to alter the position. Indices start from zero (0 =
                                    first\nposition, 1 = second position, etc.), and negative numbers refer
                                    to\npositions at the end (-1 = second last position, -2 = third last,
                                    etc.).\n\nExamples using ``${XML}`` structure from `Example`:\n| Add Element |
                                    ${XML} | &lt;new id=\"x\"&gt;&lt;c1/&gt;&lt;/new&gt; |\n| Add Element | ${XML} |
                                    &lt;c2/&gt; | xpath=new |\n| Add Element | ${XML} | &lt;c3/&gt; | index=1 |
                                    xpath=new |\n| ${new} = | Get Element | ${XML} | new |\n| Elements Should Be Equal |
                                    ${new} | &lt;new id=\"x\"&gt;&lt;c1/&gt;&lt;c3/&gt;&lt;c2/&gt;&lt;/new&gt; |\n\nUse
                                    `Remove Element` or `Remove Elements` to remove elements.","args":"[\"source\",
                                    \"element\", \"index=None\", \"xpath=.\"]","tags":[],"id":287,"synopsis":"Adds a
                                    child element to the specified element.","html_doc":"&lt;p&gt;Adds a child element
                                    to the specified element.&lt;/p&gt;\n&lt;p&gt;The element to whom to add the new
                                    element is specified using &lt;code&gt;source&lt;/code&gt; and &lt;code&gt;xpath&lt;/code&gt;.
                                    They have exactly the same semantics as with `Get Element` keyword. The resulting
                                    XML structure is returned, and if the &lt;code&gt;source&lt;/code&gt; is an already
                                    parsed XML structure, it is also modified in place.&lt;/p&gt;\n&lt;p&gt;The &lt;code&gt;element&lt;/code&gt;
                                    to add can be specified as a path to an XML file or as a string containing XML, or
                                    it can be an already parsed XML element. The element is copied before adding so
                                    modifying either the original or the added element has no effect on the other . The
                                    element is added as the last child by default, but a custom index can be used to
                                    alter the position. Indices start from zero (0 = first position, 1 = second
                                    position, etc.), and negative numbers refer to positions at the end (-1 = second
                                    last position, -2 = third last, etc.).&lt;/p&gt;\n&lt;p&gt;Examples using &lt;code&gt;${XML}&lt;/code&gt;
                                    structure from `Example`:&lt;/p&gt;\n&lt;table border=\"1\"&gt;\n&lt;tr&gt;\n&lt;td&gt;Add
                                    Element&lt;/td&gt;\n&lt;td&gt;${XML}&lt;/td&gt;\n&lt;td&gt;&amp;lt;new id=\"x\"&amp;gt;&amp;lt;c1/&amp;gt;&amp;lt;/new&amp;gt;&lt;/td&gt;\n&lt;td&gt;&lt;/td&gt;\n&lt;td&gt;&lt;/td&gt;\n&lt;/tr&gt;\n&lt;tr&gt;\n&lt;td&gt;Add
                                    Element&lt;/td&gt;\n&lt;td&gt;${XML}&lt;/td&gt;\n&lt;td&gt;&amp;lt;c2/&amp;gt;&lt;/td&gt;\n&lt;td&gt;xpath=new&lt;/td&gt;\n&lt;td&gt;&lt;/td&gt;\n&lt;/tr&gt;\n&lt;tr&gt;\n&lt;td&gt;Add
                                    Element&lt;/td&gt;\n&lt;td&gt;${XML}&lt;/td&gt;\n&lt;td&gt;&amp;lt;c3/&amp;gt;&lt;/td&gt;\n&lt;td&gt;index=1&lt;/td&gt;\n&lt;td&gt;xpath=new&lt;/td&gt;\n&lt;/tr&gt;\n&lt;tr&gt;\n&lt;td&gt;${new}
                                    =&lt;/td&gt;\n&lt;td&gt;Get Element&lt;/td&gt;\n&lt;td&gt;${XML}&lt;/td&gt;\n&lt;td&gt;new&lt;/td&gt;\n&lt;td&gt;&lt;/td&gt;\n&lt;/tr&gt;\n&lt;tr&gt;\n&lt;td&gt;Elements
                                    Should Be Equal&lt;/td&gt;\n&lt;td&gt;${new}&lt;/td&gt;\n&lt;td&gt;&amp;lt;new
                                    id=\"x\"&amp;gt;&amp;lt;c1/&amp;gt;&amp;lt;c3/&amp;gt;&amp;lt;c2/&amp;gt;&amp;lt;/new&amp;gt;&lt;/td&gt;\n&lt;td&gt;&lt;/td&gt;\n&lt;td&gt;&lt;/td&gt;\n&lt;/tr&gt;\n&lt;/table&gt;\n&lt;p&gt;Use
                                    `Remove Element` or `Remove Elements` to remove elements.&lt;/p&gt;","arg_string":"source,
                                    element, index=None, xpath=.","collection":{"id":10,"name":"XML"}},{"name":"Add Time
                                    To Date","doc":"Adds time to date and returns the resulting date.\n\nArguments:\n-
                                    ``date:`` Date to add time to in one of the supported\n `date formats`.\n- ``time:``
                                    Time that is added in one of the supported\n `time formats`.\n- ``result_format:``
                                    Format of the returned date.\n- ``exclude_millis:`` When set to any true value,
                                    rounds and drops\n milliseconds as explained in `millisecond handling`.\n-
                                    ``date_format:`` Possible `custom timestamp` format of ``date``.\n\nExamples:\n|
                                    ${date} = | Add Time To Date | 2014-05-28 12:05:03.111 | 7 days |\n| Should Be Equal
                                    | ${date} | 2014-06-04 12:05:03.111 | |\n| ${date} = | Add Time To Date | 2014-05-28
                                    12:05:03.111 | 01:02:03:004 |\n| Should Be Equal | ${date} | 2014-05-28 13:07:06.115
                                    |","args":"[\"date\", \"time\", \"result_format=timestamp\",
                                    \"exclude_millis=False\", \"date_format=None\"]","tags":[],"id":152,"synopsis":"Adds
                                    time to date and returns the resulting date.","html_doc":"&lt;p&gt;Adds time to date
                                    and returns the resulting date.&lt;/p&gt;\n&lt;p&gt;Arguments:&lt;/p&gt;\n&lt;ul&gt;\n&lt;li&gt;&lt;code&gt;date:&lt;/code&gt;
                                    Date to add time to in one of the supported `date formats`.&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;time:&lt;/code&gt;
                                    Time that is added in one of the supported `time formats`.&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;result_format:&lt;/code&gt;
                                    Format of the returned date.&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;exclude_millis:&lt;/code&gt;
                                    When set to any true value, rounds and drops milliseconds as explained in
                                    `millisecond handling`.&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;date_format:&lt;/code&gt;
                                    Possible `custom timestamp` format of &lt;code&gt;date&lt;/code&gt;.&lt;/li&gt;\n&lt;/ul&gt;\n&lt;p&gt;Examples:&lt;/p&gt;\n&lt;table
                                    border=\"1\"&gt;\n&lt;tr&gt;\n&lt;td&gt;${date} =&lt;/td&gt;\n&lt;td&gt;Add Time To
                                    Date&lt;/td&gt;\n&lt;td&gt;2014-05-28 12:05:03.111&lt;/td&gt;\n&lt;td&gt;7 days&lt;/td&gt;\n&lt;/tr&gt;\n&lt;tr&gt;\n&lt;td&gt;Should
                                    Be Equal&lt;/td&gt;\n&lt;td&gt;${date}&lt;/td&gt;\n&lt;td&gt;2014-06-04 12:05:03.111&lt;/td&gt;\n&lt;td&gt;&lt;/td&gt;\n&lt;/tr&gt;\n&lt;tr&gt;\n&lt;td&gt;${date}
                                    =&lt;/td&gt;\n&lt;td&gt;Add Time To Date&lt;/td&gt;\n&lt;td&gt;2014-05-28
                                    12:05:03.111&lt;/td&gt;\n&lt;td&gt;01:02:03:004&lt;/td&gt;\n&lt;/tr&gt;\n&lt;tr&gt;\n&lt;td&gt;Should
                                    Be Equal&lt;/td&gt;\n&lt;td&gt;${date}&lt;/td&gt;\n&lt;td&gt;2014-05-28 13:07:06.115&lt;/td&gt;\n&lt;td&gt;&lt;/td&gt;\n&lt;/tr&gt;\n&lt;/table&gt;","arg_string":"date,
                                    time, result_format=timestamp, exclude_millis=False,
                                    date_format=None","collection":{"id":3,"name":"DateTime"}},{"name":"Add Time To
                                    Time","doc":"Adds time to another time and returns the resulting
                                    time.\n\nArguments:\n- ``time1:`` First time in one of the supported `time
                                    formats`.\n- ``time2:`` Second time in one of the supported `time formats`.\n-
                                    ``result_format:`` Format of the returned time.\n- ``exclude_millis:`` When set to
                                    any true value, rounds and drops\n milliseconds as explained in `millisecond
                                    handling`.\n\nExamples:\n| ${time} = | Add Time To Time | 1 minute | 42 |\n| Should
                                    Be Equal | ${time} | ${102} |\n| ${time} = | Add Time To Time | 3 hours 5 minutes |
                                    01:02:03 | timer | exclude_millis=yes |\n| Should Be Equal | ${time} | 04:07:03
                                    |","args":"[\"time1\", \"time2\", \"result_format=number\",
                                    \"exclude_millis=False\"]","tags":[],"id":153,"synopsis":"Adds time to another time
                                    and returns the resulting time.","html_doc":"&lt;p&gt;Adds time to another time and
                                    returns the resulting time.&lt;/p&gt;\n&lt;p&gt;Arguments:&lt;/p&gt;\n&lt;ul&gt;\n&lt;li&gt;&lt;code&gt;time1:&lt;/code&gt;
                                    First time in one of the supported `time formats`.&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;time2:&lt;/code&gt;
                                    Second time in one of the supported `time formats`.&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;result_format:&lt;/code&gt;
                                    Format of the returned time.&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;exclude_millis:&lt;/code&gt;
                                    When set to any true value, rounds and drops milliseconds as explained in
                                    `millisecond handling`.&lt;/li&gt;\n&lt;/ul&gt;\n&lt;p&gt;Examples:&lt;/p&gt;\n&lt;table
                                    border=\"1\"&gt;\n&lt;tr&gt;\n&lt;td&gt;${time} =&lt;/td&gt;\n&lt;td&gt;Add Time To
                                    Time&lt;/td&gt;\n&lt;td&gt;1 minute&lt;/td&gt;\n&lt;td&gt;42&lt;/td&gt;\n&lt;td&gt;&lt;/td&gt;\n&lt;td&gt;&lt;/td&gt;\n&lt;/tr&gt;\n&lt;tr&gt;\n&lt;td&gt;Should
                                    Be Equal&lt;/td&gt;\n&lt;td&gt;${time}&lt;/td&gt;\n&lt;td&gt;${102}&lt;/td&gt;\n&lt;td&gt;&lt;/td&gt;\n&lt;td&gt;&lt;/td&gt;\n&lt;td&gt;&lt;/td&gt;\n&lt;/tr&gt;\n&lt;tr&gt;\n&lt;td&gt;${time}
                                    =&lt;/td&gt;\n&lt;td&gt;Add Time To Time&lt;/td&gt;\n&lt;td&gt;3 hours 5 minutes&lt;/td&gt;\n&lt;td&gt;01:02:03&lt;/td&gt;\n&lt;td&gt;timer&lt;/td&gt;\n&lt;td&gt;exclude_millis=yes&lt;/td&gt;\n&lt;/tr&gt;\n&lt;tr&gt;\n&lt;td&gt;Should
                                    Be Equal&lt;/td&gt;\n&lt;td&gt;${time}&lt;/td&gt;\n&lt;td&gt;04:07:03&lt;/td&gt;\n&lt;td&gt;&lt;/td&gt;\n&lt;td&gt;&lt;/td&gt;\n&lt;td&gt;&lt;/td&gt;\n&lt;/tr&gt;\n&lt;/table&gt;","arg_string":"time1,
                                    time2, result_format=number,
                                    exclude_millis=False","collection":{"id":3,"name":"DateTime"}},{"name":"Append To
                                    Environment Variable","doc":"Appends given ``values`` to environment variable
                                    ``name``.\n\nIf the environment variable already exists, values are added after
                                    it,\nand otherwise a new environment variable is created.\n\nValues are, by default,
                                    joined together using the operating system\npath separator (``;`` on Windows, ``:``
                                    elsewhere). This can be changed\nby giving a separator after the values like
                                    ``separator=value``. No\nother configuration parameters are accepted.\n\nExamples
                                    (assuming ``NAME`` and ``NAME2`` do not exist initially):\n| Append To Environment
                                    Variable | NAME | first | |\n| Should Be Equal | %{NAME} | first | |\n| Append To
                                    Environment Variable | NAME | second | third |\n| Should Be Equal | %{NAME} |
                                    first${:}second${:}third |\n| Append To Environment Variable | NAME2 | first |
                                    separator=- |\n| Should Be Equal | %{NAME2} | first | |\n| Append To Environment
                                    Variable | NAME2 | second | separator=- |\n| Should Be Equal | %{NAME2} |
                                    first-second |","args":"[\"name\", \"*values\",
                                    \"**config\"]","tags":[],"id":161,"synopsis":"Appends given ``values`` to
                                    environment variable ``name``.","html_doc":"&lt;p&gt;Appends given &lt;code&gt;values&lt;/code&gt;
                                    to environment variable &lt;code&gt;name&lt;/code&gt;.&lt;/p&gt;\n&lt;p&gt;If the
                                    environment variable already exists, values are added after it, and otherwise a new
                                    environment variable is created.&lt;/p&gt;\n&lt;p&gt;Values are, by default, joined
                                    together using the operating system path separator (&lt;code&gt;;&lt;/code&gt; on
                                    Windows, &lt;code&gt;:&lt;/code&gt; elsewhere). This can be changed by giving a
                                    separator after the values like &lt;code&gt;separator=value&lt;/code&gt;. No other
                                    configuration parameters are accepted.&lt;/p&gt;\n&lt;p&gt;Examples (assuming &lt;code&gt;NAME&lt;/code&gt;
                                    and &lt;code&gt;NAME2&lt;/code&gt; do not exist initially):&lt;/p&gt;\n&lt;table
                                    border=\"1\"&gt;\n&lt;tr&gt;\n&lt;td&gt;Append To Environment Variable&lt;/td&gt;\n&lt;td&gt;NAME&lt;/td&gt;\n&lt;td&gt;first&lt;/td&gt;\n&lt;td&gt;&lt;/td&gt;\n&lt;/tr&gt;\n&lt;tr&gt;\n&lt;td&gt;Should
                                    Be Equal&lt;/td&gt;\n&lt;td&gt;%{NAME}&lt;/td&gt;\n&lt;td&gt;first&lt;/td&gt;\n&lt;td&gt;&lt;/td&gt;\n&lt;/tr&gt;\n&lt;tr&gt;\n&lt;td&gt;Append
                                    To Environment Variable&lt;/td&gt;\n&lt;td&gt;NAME&lt;/td&gt;\n&lt;td&gt;second&lt;/td&gt;\n&lt;td&gt;third&lt;/td&gt;\n&lt;/tr&gt;\n&lt;tr&gt;\n&lt;td&gt;Should
                                    Be Equal&lt;/td&gt;\n&lt;td&gt;%{NAME}&lt;/td&gt;\n&lt;td&gt;first${:}second${:}third&lt;/td&gt;\n&lt;td&gt;&lt;/td&gt;\n&lt;/tr&gt;\n&lt;tr&gt;\n&lt;td&gt;Append
                                    To Environment Variable&lt;/td&gt;\n&lt;td&gt;NAME2&lt;/td&gt;\n&lt;td&gt;first&lt;/td&gt;\n&lt;...
                                    (set the log level to DEBUG or TRACE to see the full content)
                                </msg>
                                <msg timestamp="20210830 17:35:34.773" level="INFO">${response} = &lt;Response
                                    [200]&gt;
                                </msg>
                                <status status="PASS" starttime="20210830 17:35:34.650"
                                        endtime="20210830 17:35:34.773"/>
                            </kw>
                            <kw name="Should Be Equal As Integers" library="BuiltIn">
                                <arg>${response.status_code}</arg>
                                <arg>200</arg>
                                <doc>Fails if objects are unequal after converting them to integers.</doc>
                                <msg timestamp="20210830 17:35:34.776" level="INFO">Argument types are:
                                    &lt;class 'int'&gt;
                                    &lt;type 'unicode'&gt;
                                </msg>
                                <status status="PASS" starttime="20210830 17:35:34.773"
                                        endtime="20210830 17:35:34.776"/>
                            </kw>
                            <msg timestamp="20210830 17:35:34.783" level="INFO">${response} = [{'name': 'Add Element',
                                'doc': 'Adds a child element to the specified element.\n\nThe element to whom to add the
                                new element is specified using ``source``\nand ``xpath``. They have exactly the same
                                s...
                            </msg>
                            <status status="PASS" starttime="20210830 17:35:34.648" endtime="20210830 17:35:34.783"/>
                        </kw>
                        <kw name="Length Should Be" library="BuiltIn">
                            <arg>${response}</arg>
                            <arg>${n}</arg>
                            <doc>Verifies that the length of the given item is correct.</doc>
                            <msg timestamp="20210830 17:35:34.784" level="INFO">Length is 100</msg>
                            <status status="PASS" starttime="20210830 17:35:34.784" endtime="20210830 17:35:34.784"/>
                        </kw>
                        <status status="PASS" starttime="20210830 17:35:34.647" endtime="20210830 17:35:34.784"/>
                    </kw>
                    <status status="PASS" starttime="20210830 17:35:34.231" endtime="20210830 17:35:34.785"/>
                </kw>
                <doc>Cli Should Preserve All Keywords When Paths And Append Set
                    This test is dependant on one above:
                    'Cli Should Populate App With Installed Keywords'
                </doc>
                <status status="PASS" starttime="20210830 17:35:32.258" endtime="20210830 17:35:34.785"/>
            </test>
            <test id="s1-s2-t4" name="Cli Should Delete All Keywords When Paths And No Installed Keywords Set">
                <kw name="Run Cli Package With Options" library="keywords">
                    <arg>--load-mode=insert --no-installed-keywords</arg>
                    <doc>Attempt to run the rfhub2-cli package with the given options
                        The stdout of the process will be in a test suite
                        variable named ${output}
                    </doc>
                    <kw name="Run" library="OperatingSystem">
                        <var>${output}</var>
                        <arg>${ACTIVATE_VENV} rfhub2-cli -a http://${HOST}:8000 ${options}</arg>
                        <doc>Runs the given command in the system and returns the output.</doc>
                        <msg timestamp="20210830 17:35:34.939" level="INFO">Running command ' rfhub2-cli -a
                            http://127.0.0.1:8000 --load-mode=insert --no-installed-keywords 2&gt;&amp;1'.
                        </msg>
                        <msg timestamp="20210830 17:35:36.760" level="INFO">${output} =
                            Successfully loaded 0 collections with 0 keywords.
                        </msg>
                        <status status="PASS" starttime="20210830 17:35:34.787" endtime="20210830 17:35:36.760"/>
                    </kw>
                    <kw name="Set Suite Variable" library="BuiltIn">
                        <arg>${output}</arg>
                        <doc>Makes a variable available everywhere within the scope of the current suite.</doc>
                        <msg timestamp="20210830 17:35:36.761" level="INFO">${output} =
                            Successfully loaded 0 collections with 0 keywords.
                        </msg>
                        <status status="PASS" starttime="20210830 17:35:36.760" endtime="20210830 17:35:36.761"/>
                    </kw>
                    <status status="PASS" starttime="20210830 17:35:34.787" endtime="20210830 17:35:36.761"/>
                </kw>
                <kw name="Output Should Contain" library="keywords">
                    <arg>Successfully loaded 0 collections with 0 keywords.</arg>
                    <doc>Fail if the output from the previous command doesn't contain the given string
                        This keyword assumes the output of the command is in
                        a test suite variable named ${output}
                    </doc>
                    <kw name="Create Dictionary" library="BuiltIn">
                        <var>${ns}</var>
                        <arg>output=${output}</arg>
                        <doc>Creates and returns a dictionary based on the given ``items``.</doc>
                        <msg timestamp="20210830 17:35:36.763" level="INFO">${ns} = {'output': '\nSuccessfully loaded 0
                            collections with 0 keywords.'}
                        </msg>
                        <status status="PASS" starttime="20210830 17:35:36.762" endtime="20210830 17:35:36.763"/>
                    </kw>
                    <kw name="Evaluate" library="BuiltIn">
                        <var>${clean_output}</var>
                        <arg>" ".join(l.strip() for l in output.splitlines())</arg>
                        <arg>namespace=${ns}</arg>
                        <doc>Evaluates the given expression in Python and returns the result.</doc>
                        <msg timestamp="20210830 17:35:36.764" level="INFO">${clean_output} = Successfully loaded 0
                            collections with 0 keywords.
                        </msg>
                        <status status="PASS" starttime="20210830 17:35:36.763" endtime="20210830 17:35:36.764"/>
                    </kw>
                    <for flavor="IN">
                        <var>${pattern}</var>
                        <value>@{patterns}</value>
                        <iter>
                            <var name="${pattern}">Successfully loaded 0 collections with 0 keywords.</var>
                            <kw name="Run Keyword If" library="BuiltIn">
                                <arg>'''${pattern}''' not in '''${clean_output}'''</arg>
                                <arg>Fail</arg>
                                <arg>Output did not contain '${pattern}'. \n${clean_output}</arg>
                                <doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
                                <status status="PASS" starttime="20210830 17:35:36.765"
                                        endtime="20210830 17:35:36.765"/>
                            </kw>
                            <status status="PASS" starttime="20210830 17:35:36.765" endtime="20210830 17:35:36.765"/>
                        </iter>
                        <status status="PASS" starttime="20210830 17:35:36.764" endtime="20210830 17:35:36.765"/>
                    </for>
                    <status status="PASS" starttime="20210830 17:35:36.762" endtime="20210830 17:35:36.766"/>
                </kw>
                <kw name="Api Should Have 0 Collections And 0 Keywords"
                    sourcename="Api Should Have ${n} Collections And ${m} Keywords">
                    <kw name="collections Endpoint Should Have ${n} Items" library="keywords"
                        sourcename="${endpoint} Endpoint Should Have ${n} Items">
                        <kw name="Get Request For Endpoint" library="keywords">
                            <var>${response}</var>
                            <arg>endpoint=${endpoint}</arg>
                            <kw name="Create Session" library="RequestsLibrary">
                                <arg>tmp</arg>
                                <arg>http://${HOST}:8000/api/v1</arg>
                                <doc>Create Session: create a HTTP session to a server</doc>
                                <msg timestamp="20210830 17:35:36.769" level="INFO">Creating Session using : alias=tmp,
                                    url=http://127.0.0.1:8000/api/v1, headers={}, cookies={}, auth=None, timeout=None,
                                    proxies=None, verify=False, debug=0
                                </msg>
                                <status status="PASS" starttime="20210830 17:35:36.768"
                                        endtime="20210830 17:35:36.769"/>
                            </kw>
                            <kw name="Get On Session" library="RequestsLibrary">
                                <var>${response}</var>
                                <arg>tmp</arg>
                                <arg>${endpoint}/</arg>
                                <arg>params=${params}</arg>
                                <doc>Sends a GET request on a previously created HTTP Session.</doc>
                                <msg timestamp="20210830 17:35:36.780" level="INFO">GET Request :
                                    url=http://127.0.0.1:8000/api/v1/collections/?None
                                    path_url=/api/v1/collections/?None
                                    headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate',
                                    'Accept': '*/*', 'Connection': 'keep-alive'}
                                    body=None
                                </msg>
                                <msg timestamp="20210830 17:35:36.780" level="INFO">GET Response :
                                    url=http://127.0.0.1:8000/api/v1/collections/?None
                                    status=200, reason=OK
                                    headers={'date': 'Mon, 30 Aug 2021 15:35:36 GMT', 'server': 'uvicorn',
                                    'content-length': '2', 'content-type': 'application/json'}
                                    body=[]
                                </msg>
                                <msg timestamp="20210830 17:35:36.780" level="INFO">${response} = &lt;Response
                                    [200]&gt;
                                </msg>
                                <status status="PASS" starttime="20210830 17:35:36.769"
                                        endtime="20210830 17:35:36.780"/>
                            </kw>
                            <kw name="Should Be Equal As Integers" library="BuiltIn">
                                <arg>${response.status_code}</arg>
                                <arg>200</arg>
                                <doc>Fails if objects are unequal after converting them to integers.</doc>
                                <msg timestamp="20210830 17:35:36.783" level="INFO">Argument types are:
                                    &lt;class 'int'&gt;
                                    &lt;type 'unicode'&gt;
                                </msg>
                                <status status="PASS" starttime="20210830 17:35:36.781"
                                        endtime="20210830 17:35:36.783"/>
                            </kw>
                            <msg timestamp="20210830 17:35:36.785" level="INFO">${response} = []</msg>
                            <status status="PASS" starttime="20210830 17:35:36.767" endtime="20210830 17:35:36.785"/>
                        </kw>
                        <kw name="Length Should Be" library="BuiltIn">
                            <arg>${response}</arg>
                            <arg>${n}</arg>
                            <doc>Verifies that the length of the given item is correct.</doc>
                            <msg timestamp="20210830 17:35:36.786" level="INFO">Length is 0</msg>
                            <status status="PASS" starttime="20210830 17:35:36.785" endtime="20210830 17:35:36.786"/>
                        </kw>
                        <status status="PASS" starttime="20210830 17:35:36.767" endtime="20210830 17:35:36.786"/>
                    </kw>
                    <kw name="keywords Endpoint Should Have ${m} Items" library="keywords"
                        sourcename="${endpoint} Endpoint Should Have ${n} Items">
                        <kw name="Get Request For Endpoint" library="keywords">
                            <var>${response}</var>
                            <arg>endpoint=${endpoint}</arg>
                            <kw name="Create Session" library="RequestsLibrary">
                                <arg>tmp</arg>
                                <arg>http://${HOST}:8000/api/v1</arg>
                                <doc>Create Session: create a HTTP session to a server</doc>
                                <msg timestamp="20210830 17:35:36.788" level="INFO">Creating Session using : alias=tmp,
                                    url=http://127.0.0.1:8000/api/v1, headers={}, cookies={}, auth=None, timeout=None,
                                    proxies=None, verify=False, debug=0
                                </msg>
                                <status status="PASS" starttime="20210830 17:35:36.788"
                                        endtime="20210830 17:35:36.789"/>
                            </kw>
                            <kw name="Get On Session" library="RequestsLibrary">
                                <var>${response}</var>
                                <arg>tmp</arg>
                                <arg>${endpoint}/</arg>
                                <arg>params=${params}</arg>
                                <doc>Sends a GET request on a previously created HTTP Session.</doc>
                                <msg timestamp="20210830 17:35:36.799" level="INFO">GET Request :
                                    url=http://127.0.0.1:8000/api/v1/keywords/?None
                                    path_url=/api/v1/keywords/?None
                                    headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate',
                                    'Accept': '*/*', 'Connection': 'keep-alive'}
                                    body=None
                                </msg>
                                <msg timestamp="20210830 17:35:36.799" level="INFO">GET Response :
                                    url=http://127.0.0.1:8000/api/v1/keywords/?None
                                    status=200, reason=OK
                                    headers={'date': 'Mon, 30 Aug 2021 15:35:36 GMT', 'server': 'uvicorn',
                                    'content-length': '2', 'content-type': 'application/json'}
                                    body=[]
                                </msg>
                                <msg timestamp="20210830 17:35:36.799" level="INFO">${response} = &lt;Response
                                    [200]&gt;
                                </msg>
                                <status status="PASS" starttime="20210830 17:35:36.789"
                                        endtime="20210830 17:35:36.799"/>
                            </kw>
                            <kw name="Should Be Equal As Integers" library="BuiltIn">
                                <arg>${response.status_code}</arg>
                                <arg>200</arg>
                                <doc>Fails if objects are unequal after converting them to integers.</doc>
                                <msg timestamp="20210830 17:35:36.802" level="INFO">Argument types are:
                                    &lt;class 'int'&gt;
                                    &lt;type 'unicode'&gt;
                                </msg>
                                <status status="PASS" starttime="20210830 17:35:36.800"
                                        endtime="20210830 17:35:36.802"/>
                            </kw>
                            <msg timestamp="20210830 17:35:36.804" level="INFO">${response} = []</msg>
                            <status status="PASS" starttime="20210830 17:35:36.787" endtime="20210830 17:35:36.804"/>
                        </kw>
                        <kw name="Length Should Be" library="BuiltIn">
                            <arg>${response}</arg>
                            <arg>${n}</arg>
                            <doc>Verifies that the length of the given item is correct.</doc>
                            <msg timestamp="20210830 17:35:36.805" level="INFO">Length is 0</msg>
                            <status status="PASS" starttime="20210830 17:35:36.804" endtime="20210830 17:35:36.805"/>
                        </kw>
                        <status status="PASS" starttime="20210830 17:35:36.787" endtime="20210830 17:35:36.805"/>
                    </kw>
                    <status status="PASS" starttime="20210830 17:35:36.766" endtime="20210830 17:35:36.805"/>
                </kw>
                <doc>Cli Should Delete All Keywords When Paths And No Installed Keywords Set</doc>
                <status status="PASS" starttime="20210830 17:35:34.786" endtime="20210830 17:35:36.806"/>
            </test>
            <test id="s1-s2-t5" name="Cli Should Return Unauthorised When Wrong User Given">
                <kw name="Run Cli Package With Options" library="keywords">
                    <arg>-u wrong_user</arg>
                    <doc>Attempt to run the rfhub2-cli package with the given options
                        The stdout of the process will be in a test suite
                        variable named ${output}
                    </doc>
                    <kw name="Run" library="OperatingSystem">
                        <var>${output}</var>
                        <arg>${ACTIVATE_VENV} rfhub2-cli -a http://${HOST}:8000 ${options}</arg>
                        <doc>Runs the given command in the system and returns the output.</doc>
                        <msg timestamp="20210830 17:35:36.962" level="INFO">Running command ' rfhub2-cli -a
                            http://127.0.0.1:8000 -u wrong_user 2&gt;&amp;1'.
                        </msg>
                        <msg timestamp="20210830 17:35:39.576" level="INFO">${output} = Unauthorized to perform this
                            action
                            Traceback (most recent call last):
                            File "C:\Program Files (x86)\Python36-32\Scripts\rfhub2-cli-script.py", line 11, in &lt;module&gt;
                            load_entry_point('rfhub2', 'co...
                        </msg>
                        <status status="PASS" starttime="20210830 17:35:36.808" endtime="20210830 17:35:39.576"/>
                    </kw>
                    <kw name="Set Suite Variable" library="BuiltIn">
                        <arg>${output}</arg>
                        <doc>Makes a variable available everywhere within the scope of the current suite.</doc>
                        <msg timestamp="20210830 17:35:39.577" level="INFO">${output} = Unauthorized to perform this
                            action
                            Traceback (most recent call last):
                            File "C:\Program Files (x86)\Python36-32\Scripts\rfhub2-cli-script.py", line 11, in &lt;module&gt;
                            load_entry_point('rfhub2', 'co...
                        </msg>
                        <status status="PASS" starttime="20210830 17:35:39.576" endtime="20210830 17:35:39.577"/>
                    </kw>
                    <status status="PASS" starttime="20210830 17:35:36.808" endtime="20210830 17:35:39.577"/>
                </kw>
                <kw name="Output Should Contain" library="keywords">
                    <arg>Unauthorized to perform this action</arg>
                    <doc>Fail if the output from the previous command doesn't contain the given string
                        This keyword assumes the output of the command is in
                        a test suite variable named ${output}
                    </doc>
                    <kw name="Create Dictionary" library="BuiltIn">
                        <var>${ns}</var>
                        <arg>output=${output}</arg>
                        <doc>Creates and returns a dictionary based on the given ``items``.</doc>
                        <msg timestamp="20210830 17:35:39.579" level="INFO">${ns} = {'output': 'Unauthorized to perform
                            this action\nTraceback (most recent call last):\n File "C:\\Program Files
                            (x86)\\Python36-32\\Scripts\\rfhub2-cli-script.py", line 11, in &lt;module&gt;\n
                            load_entry_...
                        </msg>
                        <status status="PASS" starttime="20210830 17:35:39.578" endtime="20210830 17:35:39.579"/>
                    </kw>
                    <kw name="Evaluate" library="BuiltIn">
                        <var>${clean_output}</var>
                        <arg>" ".join(l.strip() for l in output.splitlines())</arg>
                        <arg>namespace=${ns}</arg>
                        <doc>Evaluates the given expression in Python and returns the result.</doc>
                        <msg timestamp="20210830 17:35:39.580" level="INFO">${clean_output} = Unauthorized to perform
                            this action Traceback (most recent call last): File "C:\Program Files
                            (x86)\Python36-32\Scripts\rfhub2-cli-script.py", line 11, in &lt;module&gt;
                            load_entry_point('rfhub2', 'console_...
                        </msg>
                        <status status="PASS" starttime="20210830 17:35:39.579" endtime="20210830 17:35:39.580"/>
                    </kw>
                    <for flavor="IN">
                        <var>${pattern}</var>
                        <value>@{patterns}</value>
                        <iter>
                            <var name="${pattern}">Unauthorized to perform this action</var>
                            <kw name="Run Keyword If" library="BuiltIn">
                                <arg>'''${pattern}''' not in '''${clean_output}'''</arg>
                                <arg>Fail</arg>
                                <arg>Output did not contain '${pattern}'. \n${clean_output}</arg>
                                <doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
                                <status status="PASS" starttime="20210830 17:35:39.580"
                                        endtime="20210830 17:35:39.581"/>
                            </kw>
                            <status status="PASS" starttime="20210830 17:35:39.580" endtime="20210830 17:35:39.581"/>
                        </iter>
                        <status status="PASS" starttime="20210830 17:35:39.580" endtime="20210830 17:35:39.581"/>
                    </for>
                    <status status="PASS" starttime="20210830 17:35:39.577" endtime="20210830 17:35:39.581"/>
                </kw>
                <doc>Cli Should Return Unauthorised When Wrong User Given</doc>
                <status status="PASS" starttime="20210830 17:35:36.807" endtime="20210830 17:35:39.582"/>
            </test>
            <test id="s1-s2-t6" name="Cli Should Return Unauthorised When Wrong Password Given">
                <kw name="Run Cli Package With Options" library="keywords">
                    <arg>-p wrong_pass</arg>
                    <doc>Attempt to run the rfhub2-cli package with the given options
                        The stdout of the process will be in a test suite
                        variable named ${output}
                    </doc>
                    <kw name="Run" library="OperatingSystem">
                        <var>${output}</var>
                        <arg>${ACTIVATE_VENV} rfhub2-cli -a http://${HOST}:8000 ${options}</arg>
                        <doc>Runs the given command in the system and returns the output.</doc>
                        <msg timestamp="20210830 17:35:39.740" level="INFO">Running command ' rfhub2-cli -a
                            http://127.0.0.1:8000 -p wrong_pass 2&gt;&amp;1'.
                        </msg>
                        <msg timestamp="20210830 17:35:42.361" level="INFO">${output} = Unauthorized to perform this
                            action
                            Traceback (most recent call last):
                            File "C:\Program Files (x86)\Python36-32\Scripts\rfhub2-cli-script.py", line 11, in &lt;module&gt;
                            load_entry_point('rfhub2', 'co...
                        </msg>
                        <status status="PASS" starttime="20210830 17:35:39.584" endtime="20210830 17:35:42.361"/>
                    </kw>
                    <kw name="Set Suite Variable" library="BuiltIn">
                        <arg>${output}</arg>
                        <doc>Makes a variable available everywhere within the scope of the current suite.</doc>
                        <msg timestamp="20210830 17:35:42.362" level="INFO">${output} = Unauthorized to perform this
                            action
                            Traceback (most recent call last):
                            File "C:\Program Files (x86)\Python36-32\Scripts\rfhub2-cli-script.py", line 11, in &lt;module&gt;
                            load_entry_point('rfhub2', 'co...
                        </msg>
                        <status status="PASS" starttime="20210830 17:35:42.362" endtime="20210830 17:35:42.362"/>
                    </kw>
                    <status status="PASS" starttime="20210830 17:35:39.584" endtime="20210830 17:35:42.363"/>
                </kw>
                <kw name="Output Should Contain" library="keywords">
                    <arg>Unauthorized to perform this action</arg>
                    <doc>Fail if the output from the previous command doesn't contain the given string
                        This keyword assumes the output of the command is in
                        a test suite variable named ${output}
                    </doc>
                    <kw name="Create Dictionary" library="BuiltIn">
                        <var>${ns}</var>
                        <arg>output=${output}</arg>
                        <doc>Creates and returns a dictionary based on the given ``items``.</doc>
                        <msg timestamp="20210830 17:35:42.364" level="INFO">${ns} = {'output': 'Unauthorized to perform
                            this action\nTraceback (most recent call last):\n File "C:\\Program Files
                            (x86)\\Python36-32\\Scripts\\rfhub2-cli-script.py", line 11, in &lt;module&gt;\n
                            load_entry_...
                        </msg>
                        <status status="PASS" starttime="20210830 17:35:42.363" endtime="20210830 17:35:42.364"/>
                    </kw>
                    <kw name="Evaluate" library="BuiltIn">
                        <var>${clean_output}</var>
                        <arg>" ".join(l.strip() for l in output.splitlines())</arg>
                        <arg>namespace=${ns}</arg>
                        <doc>Evaluates the given expression in Python and returns the result.</doc>
                        <msg timestamp="20210830 17:35:42.365" level="INFO">${clean_output} = Unauthorized to perform
                            this action Traceback (most recent call last): File "C:\Program Files
                            (x86)\Python36-32\Scripts\rfhub2-cli-script.py", line 11, in &lt;module&gt;
                            load_entry_point('rfhub2', 'console_...
                        </msg>
                        <status status="PASS" starttime="20210830 17:35:42.364" endtime="20210830 17:35:42.365"/>
                    </kw>
                    <for flavor="IN">
                        <var>${pattern}</var>
                        <value>@{patterns}</value>
                        <iter>
                            <var name="${pattern}">Unauthorized to perform this action</var>
                            <kw name="Run Keyword If" library="BuiltIn">
                                <arg>'''${pattern}''' not in '''${clean_output}'''</arg>
                                <arg>Fail</arg>
                                <arg>Output did not contain '${pattern}'. \n${clean_output}</arg>
                                <doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
                                <status status="PASS" starttime="20210830 17:35:42.366"
                                        endtime="20210830 17:35:42.366"/>
                            </kw>
                            <status status="PASS" starttime="20210830 17:35:42.365" endtime="20210830 17:35:42.367"/>
                        </iter>
                        <status status="PASS" starttime="20210830 17:35:42.365" endtime="20210830 17:35:42.367"/>
                    </for>
                    <status status="PASS" starttime="20210830 17:35:42.363" endtime="20210830 17:35:42.367"/>
                </kw>
                <doc>Cli Should Return Unauthorised When Wrong Password Given</doc>
                <status status="PASS" starttime="20210830 17:35:39.583" endtime="20210830 17:35:42.367"/>
            </test>
            <test id="s1-s2-t7" name="Cli Should Return Connection Error When Wrong Url Given">
                <kw name="Run Cli Package With Options" library="keywords">
                    <arg>-a 123.456.789.123:666</arg>
                    <doc>Attempt to run the rfhub2-cli package with the given options
                        The stdout of the process will be in a test suite
                        variable named ${output}
                    </doc>
                    <kw name="Run" library="OperatingSystem">
                        <var>${output}</var>
                        <arg>${ACTIVATE_VENV} rfhub2-cli -a http://${HOST}:8000 ${options}</arg>
                        <doc>Runs the given command in the system and returns the output.</doc>
                        <msg timestamp="20210830 17:35:42.523" level="INFO">Running command ' rfhub2-cli -a
                            http://127.0.0.1:8000 -a 123.456.789.123:666 2&gt;&amp;1'.
                        </msg>
                        <msg timestamp="20210830 17:35:45.139" level="INFO">${output} = Traceback (most recent call
                            last):
                            File "C:\Program Files (x86)\Python36-32\Scripts\rfhub2-cli-script.py", line 11, in &lt;module&gt;
                            load_entry_point('rfhub2', 'console_scripts', 'rfhub2-cli')()
                            Fi...
                        </msg>
                        <status status="PASS" starttime="20210830 17:35:42.370" endtime="20210830 17:35:45.139"/>
                    </kw>
                    <kw name="Set Suite Variable" library="BuiltIn">
                        <arg>${output}</arg>
                        <doc>Makes a variable available everywhere within the scope of the current suite.</doc>
                        <msg timestamp="20210830 17:35:45.140" level="INFO">${output} = Traceback (most recent call
                            last):
                            File "C:\Program Files (x86)\Python36-32\Scripts\rfhub2-cli-script.py", line 11, in &lt;module&gt;
                            load_entry_point('rfhub2', 'console_scripts', 'rfhub2-cli')()
                            Fi...
                        </msg>
                        <status status="PASS" starttime="20210830 17:35:45.139" endtime="20210830 17:35:45.140"/>
                    </kw>
                    <status status="PASS" starttime="20210830 17:35:42.369" endtime="20210830 17:35:45.140"/>
                </kw>
                <kw name="Should Contain" library="BuiltIn">
                    <arg>${output}</arg>
                    <arg>No connection adapters were found</arg>
                    <doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
                    <status status="PASS" starttime="20210830 17:35:45.140" endtime="20210830 17:35:45.141"/>
                </kw>
                <doc>Cli Should Return Connection Error When Wrong Url Given</doc>
                <status status="PASS" starttime="20210830 17:35:42.368" endtime="20210830 17:35:45.141"/>
            </test>
            <test id="s1-s2-t8" name="Cli Should Update Existing Collections, Delete Obsolete And Add New">
                <kw name="Run Keywords" library="BuiltIn" type="SETUP">
                    <arg>Run Cli Package Without Installed Keywords</arg>
                    <arg>Backup And Switch Initial With Updated Fixtures</arg>
                    <doc>Executes all the given keywords in a sequence.</doc>
                    <kw name="Run Cli Package Without Installed Keywords" library="keywords">
                        <kw name="Run Cli Package With Options" library="keywords">
                            <arg>--load-mode=insert --no-installed-keywords ${INITIAL_FIXTURES}</arg>
                            <doc>Attempt to run the rfhub2-cli package with the given options
                                The stdout of the process will be in a test suite
                                variable named ${output}
                            </doc>
                            <kw name="Run" library="OperatingSystem">
                                <var>${output}</var>
                                <arg>${ACTIVATE_VENV} rfhub2-cli -a http://${HOST}:8000 ${options}</arg>
                                <doc>Runs the given command in the system and returns the output.</doc>
                                <msg timestamp="20210830 17:35:45.299" level="INFO">Running command ' rfhub2-cli -a
                                    http://127.0.0.1:8000 --load-mode=insert --no-installed-keywords
                                    C:\repo\rfhub2\tests\acceptance\resources\..\..\fixtures/initial/ 2&gt;&amp;1'.
                                </msg>
                                <msg timestamp="20210830 17:35:47.842" level="INFO">${output} = usage:
                                    script_for_system_exit [-h] -c CONF
                                    script_for_system_exit: error: the following arguments are required: -c/--conf
                                    Failed to create collection from path C:\repo\rfhub2\tests\acceptance\resource...
                                </msg>
                                <status status="PASS" starttime="20210830 17:35:45.145"
                                        endtime="20210830 17:35:47.842"/>
                            </kw>
                            <kw name="Set Suite Variable" library="BuiltIn">
                                <arg>${output}</arg>
                                <doc>Makes a variable available everywhere within the scope of the current suite.</doc>
                                <msg timestamp="20210830 17:35:47.843" level="INFO">${output} = usage:
                                    script_for_system_exit [-h] -c CONF
                                    script_for_system_exit: error: the following arguments are required: -c/--conf
                                    Failed to create collection from path C:\repo\rfhub2\tests\acceptance\resource...
                                </msg>
                                <status status="PASS" starttime="20210830 17:35:47.843"
                                        endtime="20210830 17:35:47.843"/>
                            </kw>
                            <status status="PASS" starttime="20210830 17:35:45.145" endtime="20210830 17:35:47.844"/>
                        </kw>
                        <status status="PASS" starttime="20210830 17:35:45.144" endtime="20210830 17:35:47.844"/>
                    </kw>
                    <kw name="Backup And Switch Initial With Updated Fixtures" library="keywords">
                        <kw name="Move Directory" library="OperatingSystem">
                            <arg>${INITIAL_FIXTURES}</arg>
                            <arg>${BACKUP_FIXTURES}</arg>
                            <doc>Moves the source directory into a destination.</doc>
                            <msg timestamp="20210830 17:35:47.848" level="INFO" html="true">Moved directory from '&lt;a
                                href="file://C:\repo\rfhub2\tests\fixtures\initial"&gt;C:\repo\rfhub2\tests\fixtures\initial&lt;/a&gt;'
                                to '&lt;a href="file://C:\repo\rfhub2\tests\fixtures\initial_bkp"&gt;C:\repo\rfhub2\tests\fixtures\initial_bkp&lt;/a&gt;'.
                            </msg>
                            <status status="PASS" starttime="20210830 17:35:47.845" endtime="20210830 17:35:47.848"/>
                        </kw>
                        <kw name="Copy Directory" library="OperatingSystem">
                            <arg>${UPDATED_FIXTURES}</arg>
                            <arg>${INITIAL_FIXTURES}</arg>
                            <doc>Copies the source directory into the destination.</doc>
                            <msg timestamp="20210830 17:35:47.902" level="INFO" html="true">Copied directory from '&lt;a
                                href="file://C:\repo\rfhub2\tests\fixtures\updated"&gt;C:\repo\rfhub2\tests\fixtures\updated&lt;/a&gt;'
                                to '&lt;a href="file://C:\repo\rfhub2\tests\fixtures\initial"&gt;C:\repo\rfhub2\tests\fixtures\initial&lt;/a&gt;'.
                            </msg>
                            <status status="PASS" starttime="20210830 17:35:47.849" endtime="20210830 17:35:47.902"/>
                        </kw>
                        <status status="PASS" starttime="20210830 17:35:47.844" endtime="20210830 17:35:47.902"/>
                    </kw>
                    <status status="PASS" starttime="20210830 17:35:45.143" endtime="20210830 17:35:47.902"/>
                </kw>
                <kw name="Run Cli Package With Options" library="keywords">
                    <arg>--load-mode=update --no-installed-keywords ${INITIAL_FIXTURES}</arg>
                    <doc>Attempt to run the rfhub2-cli package with the given options
                        The stdout of the process will be in a test suite
                        variable named ${output}
                    </doc>
                    <kw name="Run" library="OperatingSystem">
                        <var>${output}</var>
                        <arg>${ACTIVATE_VENV} rfhub2-cli -a http://${HOST}:8000 ${options}</arg>
                        <doc>Runs the given command in the system and returns the output.</doc>
                        <msg timestamp="20210830 17:35:48.057" level="INFO">Running command ' rfhub2-cli -a
                            http://127.0.0.1:8000 --load-mode=update --no-installed-keywords
                            C:\repo\rfhub2\tests\acceptance\resources\..\..\fixtures/initial/ 2&gt;&amp;1'.
                        </msg>
                        <msg timestamp="20210830 17:35:50.316" level="INFO">${output} = SingleClassLib library with 4
                            keywords loaded.
                            Test Libdoc File library with 1 keywords loaded.
                            test_resource library with 2 keywords loaded.
                            Test Libdoc File Copy library with 1 keywords loaded.

                            Suc...
                        </msg>
                        <status status="PASS" starttime="20210830 17:35:47.904" endtime="20210830 17:35:50.316"/>
                    </kw>
                    <kw name="Set Suite Variable" library="BuiltIn">
                        <arg>${output}</arg>
                        <doc>Makes a variable available everywhere within the scope of the current suite.</doc>
                        <msg timestamp="20210830 17:35:50.317" level="INFO">${output} = SingleClassLib library with 4
                            keywords loaded.
                            Test Libdoc File library with 1 keywords loaded.
                            test_resource library with 2 keywords loaded.
                            Test Libdoc File Copy library with 1 keywords loaded.

                            Suc...
                        </msg>
                        <status status="PASS" starttime="20210830 17:35:50.317" endtime="20210830 17:35:50.317"/>
                    </kw>
                    <status status="PASS" starttime="20210830 17:35:47.903" endtime="20210830 17:35:50.318"/>
                </kw>
                <kw name="Output Should Contain" library="keywords">
                    <arg>SingleClassLib library with 4 keywords loaded.</arg>
                    <arg>test_resource library with 2 keywords loaded.</arg>
                    <arg>Test Libdoc File library with 1 keywords loaded.</arg>
                    <arg>Test Libdoc File Copy library with 1 keywords loaded.</arg>
                    <doc>Fail if the output from the previous command doesn't contain the given string
                        This keyword assumes the output of the command is in
                        a test suite variable named ${output}
                    </doc>
                    <kw name="Create Dictionary" library="BuiltIn">
                        <var>${ns}</var>
                        <arg>output=${output}</arg>
                        <doc>Creates and returns a dictionary based on the given ``items``.</doc>
                        <msg timestamp="20210830 17:35:50.319" level="INFO">${ns} = {'output': 'SingleClassLib library
                            with 4 keywords loaded.\nTest Libdoc File library with 1 keywords loaded.\ntest_resource
                            library with 2 keywords loaded.\nTest Libdoc File Copy library with 1 keywor...
                        </msg>
                        <status status="PASS" starttime="20210830 17:35:50.319" endtime="20210830 17:35:50.319"/>
                    </kw>
                    <kw name="Evaluate" library="BuiltIn">
                        <var>${clean_output}</var>
                        <arg>" ".join(l.strip() for l in output.splitlines())</arg>
                        <arg>namespace=${ns}</arg>
                        <doc>Evaluates the given expression in Python and returns the result.</doc>
                        <msg timestamp="20210830 17:35:50.320" level="INFO">${clean_output} = SingleClassLib library
                            with 4 keywords loaded. Test Libdoc File library with 1 keywords loaded. test_resource
                            library with 2 keywords loaded. Test Libdoc File Copy library with 1 keywords loaded. Suc...
                        </msg>
                        <status status="PASS" starttime="20210830 17:35:50.320" endtime="20210830 17:35:50.320"/>
                    </kw>
                    <for flavor="IN">
                        <var>${pattern}</var>
                        <value>@{patterns}</value>
                        <iter>
                            <var name="${pattern}">SingleClassLib library with 4 keywords loaded.</var>
                            <kw name="Run Keyword If" library="BuiltIn">
                                <arg>'''${pattern}''' not in '''${clean_output}'''</arg>
                                <arg>Fail</arg>
                                <arg>Output did not contain '${pattern}'. \n${clean_output}</arg>
                                <doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
                                <status status="PASS" starttime="20210830 17:35:50.321"
                                        endtime="20210830 17:35:50.322"/>
                            </kw>
                            <status status="PASS" starttime="20210830 17:35:50.321" endtime="20210830 17:35:50.322"/>
                        </iter>
                        <iter>
                            <var name="${pattern}">test_resource library with 2 keywords loaded.</var>
                            <kw name="Run Keyword If" library="BuiltIn">
                                <arg>'''${pattern}''' not in '''${clean_output}'''</arg>
                                <arg>Fail</arg>
                                <arg>Output did not contain '${pattern}'. \n${clean_output}</arg>
                                <doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
                                <status status="PASS" starttime="20210830 17:35:50.322"
                                        endtime="20210830 17:35:50.322"/>
                            </kw>
                            <status status="PASS" starttime="20210830 17:35:50.322" endtime="20210830 17:35:50.323"/>
                        </iter>
                        <iter>
                            <var name="${pattern}">Test Libdoc File library with 1 keywords loaded.</var>
                            <kw name="Run Keyword If" library="BuiltIn">
                                <arg>'''${pattern}''' not in '''${clean_output}'''</arg>
                                <arg>Fail</arg>
                                <arg>Output did not contain '${pattern}'. \n${clean_output}</arg>
                                <doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
                                <status status="PASS" starttime="20210830 17:35:50.323"
                                        endtime="20210830 17:35:50.323"/>
                            </kw>
                            <status status="PASS" starttime="20210830 17:35:50.323" endtime="20210830 17:35:50.323"/>
                        </iter>
                        <iter>
                            <var name="${pattern}">Test Libdoc File Copy library with 1 keywords loaded.</var>
                            <kw name="Run Keyword If" library="BuiltIn">
                                <arg>'''${pattern}''' not in '''${clean_output}'''</arg>
                                <arg>Fail</arg>
                                <arg>Output did not contain '${pattern}'. \n${clean_output}</arg>
                                <doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
                                <status status="PASS" starttime="20210830 17:35:50.324"
                                        endtime="20210830 17:35:50.324"/>
                            </kw>
                            <status status="PASS" starttime="20210830 17:35:50.324" endtime="20210830 17:35:50.325"/>
                        </iter>
                        <status status="PASS" starttime="20210830 17:35:50.321" endtime="20210830 17:35:50.325"/>
                    </for>
                    <status status="PASS" starttime="20210830 17:35:50.318" endtime="20210830 17:35:50.325"/>
                </kw>
                <doc>Cli Should Update Existing Collections,
                    Delete Obsolete And Add New.
                </doc>
                <tag>rfhub2-64</tag>
                <status status="PASS" starttime="20210830 17:35:45.142" endtime="20210830 17:35:50.325"/>
            </test>
            <test id="s1-s2-t9" name="Cli Update Load Mode Should Leave Application With New Set Of Collections">
                <kw name="Api Should Have 7 Collections And 16 Keywords"
                    sourcename="Api Should Have ${n} Collections And ${m} Keywords">
                    <kw name="collections Endpoint Should Have ${n} Items" library="keywords"
                        sourcename="${endpoint} Endpoint Should Have ${n} Items">
                        <kw name="Get Request For Endpoint" library="keywords">
                            <var>${response}</var>
                            <arg>endpoint=${endpoint}</arg>
                            <kw name="Create Session" library="RequestsLibrary">
                                <arg>tmp</arg>
                                <arg>http://${HOST}:8000/api/v1</arg>
                                <doc>Create Session: create a HTTP session to a server</doc>
                                <msg timestamp="20210830 17:35:50.329" level="INFO">Creating Session using : alias=tmp,
                                    url=http://127.0.0.1:8000/api/v1, headers={}, cookies={}, auth=None, timeout=None,
                                    proxies=None, verify=False, debug=0
                                </msg>
                                <status status="PASS" starttime="20210830 17:35:50.329"
                                        endtime="20210830 17:35:50.330"/>
                            </kw>
                            <kw name="Get On Session" library="RequestsLibrary">
                                <var>${response}</var>
                                <arg>tmp</arg>
                                <arg>${endpoint}/</arg>
                                <arg>params=${params}</arg>
                                <doc>Sends a GET request on a previously created HTTP Session.</doc>
                                <msg timestamp="20210830 17:35:50.357" level="INFO">GET Request :
                                    url=http://127.0.0.1:8000/api/v1/collections/?None
                                    path_url=/api/v1/collections/?None
                                    headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate',
                                    'Accept': '*/*', 'Connection': 'keep-alive'}
                                    body=None
                                </msg>
                                <msg timestamp="20210830 17:35:50.357" level="INFO">GET Response :
                                    url=http://127.0.0.1:8000/api/v1/collections/?None
                                    status=200, reason=OK
                                    headers={'date': 'Mon, 30 Aug 2021 15:35:50 GMT', 'server': 'uvicorn',
                                    'content-length': '7842', 'content-type': 'application/json'}
                                    body=[{"name":"LibWithEmptyInit1","type":"LIBRARY","version":"2.1.0","scope":"TEST","named_args":null,"path":"C:\\repo\\rfhub2\\tests\\acceptance\\resources\\..\\..\\fixtures\\initial\\LibsWithEmptyInit\\LibWithEmptyInit1.py","doc":"Overview
                                    that should be imported for
                                    LibWithEmptyInit1.","doc_format":"ROBOT","id":1,"keywords":[{"name":"Lib With Empty
                                    Init 1 Method 1","doc":"Docstring for
                                    lib_with_empty_init_1_method_1","args":"","tags":[],"id":1,"synopsis":"Docstring for
                                    lib_with_empty_init_1_method_1","html_doc":"&lt;p&gt;Docstring for
                                    lib_with_empty_init_1_method_1&lt;/p&gt;","arg_string":""},{"name":"Lib With Empty
                                    Init 1 Method 2","doc":"Docstring for
                                    lib_with_empty_init_1_method_2","args":"","tags":[],"id":2,"synopsis":"Docstring for
                                    lib_with_empty_init_1_method_2","html_doc":"&lt;p&gt;Docstring for
                                    lib_with_empty_init_1_method_2&lt;/p&gt;","arg_string":""}],"synopsis":"Overview
                                    that should be imported for LibWithEmptyInit1.","html_doc":"&lt;p&gt;Overview that
                                    should be imported for LibWithEmptyInit1.&lt;/p&gt;"},{"name":"LibWithEmptyInit2","type":"LIBRARY","version":"1.0.0","scope":"TEST","named_args":null,"path":"C:\\repo\\rfhub2\\tests\\acceptance\\resources\\..\\..\\fixtures\\initial\\LibsWithEmptyInit\\LibWithEmptyInit2.py","doc":"Overview
                                    that should be imported for
                                    LibWithEmptyInit2.","doc_format":"ROBOT","id":2,"keywords":[{"name":"Lib With Empty
                                    Init 2 Method 1","doc":"Docstring for
                                    lib_with_empty_init_2_method_1","args":"","tags":[],"id":3,"synopsis":"Docstring for
                                    lib_with_empty_init_2_method_1","html_doc":"&lt;p&gt;Docstring for
                                    lib_with_empty_init_2_method_1&lt;/p&gt;","arg_string":""},{"name":"Lib With Empty
                                    Init 2 Method 2","doc":"Docstring for
                                    lib_with_empty_init_2_method_2","args":"","tags":[],"id":4,"synopsis":"Docstring for
                                    lib_with_empty_init_2_method_2","html_doc":"&lt;p&gt;Docstring for
                                    lib_with_empty_init_2_method_2&lt;/p&gt;","arg_string":""}],"synopsis":"Overview
                                    that should be imported for LibWithEmptyInit2.","html_doc":"&lt;p&gt;Overview that
                                    should be imported for LibWithEmptyInit2.&lt;/p&gt;"},{"name":"LibWithInit","type":"LIBRARY","version":"6.6.6","scope":"GLOBAL","named_args":null,"path":"C:\\repo\\rfhub2\\tests\\acceptance\\resources\\..\\..\\fixtures\\initial\\LibWithInit","doc":"This
                                    is a docstring that should be imported as overview\n\nHere goes some docs that
                                    should appear on rfhub2 if init is parametrised\n\nThe library
                                    import:\n\nExamples:\n| Library LibWithInit dummy=../one # add one dummy\n| Library
                                    LibWithInit path=../one,/global # add two
                                    dummies","doc_format":"ROBOT","id":3,"keywords":[{"name":"Lib With Init 1 Method
                                    1","doc":"Docstring for
                                    lib_with_init_1_method_1","args":"","tags":[],"id":5,"synopsis":"Docstring for
                                    lib_with_init_1_method_1","html_doc":"&lt;p&gt;Docstring for
                                    lib_with_init_1_method_1&lt;/p&gt;","arg_string":""},{"name":"Lib With Init 1 Method
                                    2","doc":"Docstring for
                                    lib_with_init_1_method_2","args":"","tags":[],"id":6,"synopsis":"Docstring for
                                    lib_with_init_1_method_2","html_doc":"&lt;p&gt;Docstring for
                                    lib_with_init_1_method_2&lt;/p&gt;","arg_string":""},{"name":"Lib With Init 2 Method
                                    1","doc":"Docstring for
                                    lib_with_init_2_method_1","args":"","tags":[],"id":7,"synopsis":"Docstring for
                                    lib_with_init_2_method_1","html_doc":"&lt;p&gt;Docstring for
                                    lib_with_init_2_method_1&lt;/p&gt;","arg_string":""},{"name":"Lib With Init 2 Method
                                    2","doc":"Docstring for
                                    lib_with_init_2_method_2","args":"","tags":[],"id":8,"synopsis":"Docstring for
                                    lib_with_init_2_method_2","html_doc":"&lt;p&gt;Docstring for
                                    lib_with_init_2_method_2&lt;/p&gt;","arg_string":""}],"synopsis":"This is a
                                    docstring that should be imported as overview","html_doc":"&lt;p&gt;This is a
                                    docstring that should be imported as overview&lt;/p&gt;\n&lt;p&gt;Here goes some
                                    docs that should appear on rfhub2 if init is parametrised&lt;/p&gt;\n&lt;p&gt;The
                                    library import:&lt;/p&gt;\n&lt;p&gt;Examples:&lt;/p&gt;\n&lt;pre&gt;\nLibrary
                                    LibWithInit dummy=../one # add one dummy\nLibrary LibWithInit path=../one,/global #
                                    add two dummies\n&lt;/pre&gt;"},{"name":"SingleClassLib","type":"LIBRARY","version":"1.2.8","scope":"TEST","named_args":null,"path":"C:\\repo\\rfhub2\\tests\\acceptance\\resources\\..\\..\\fixtures\\initial\\SingleClassLib\\SingleClassLib.py","doc":"Overview
                                    that should be imported for
                                    SingleClassLib.","doc_format":"ROBOT","id":9,"keywords":[{"name":"Single Class Lib
                                    Method 1","doc":"Docstring for
                                    single_class_lib_method_1","args":"","tags":[],"id":21,"synopsis":"Docstring for
                                    single_class_lib_method_1","html_doc":"&lt;p&gt;Docstring for
                                    single_class_lib_method_1&lt;/p&gt;","arg_string":""},{"name":"Single Class Lib
                                    Method 2","doc":"Docstring for
                                    single_class_lib_method_2","args":"","tags":[],"id":22,"synopsis":"Docstring for
                                    single_class_lib_method_2","html_doc":"&lt;p&gt;Docstring for
                                    single_class_lib_method_2&lt;/p&gt;","arg_string":""},{"name":"Single Class Lib
                                    Method 4","doc":"Docstring for single_class_lib_method_4 with two
                                    params","args":"[\"param_1\", \"param_2\"]","tags":[],"id":23,"synopsis":"Docstring
                                    for single_class_lib_method_4 with two params","html_doc":"&lt;p&gt;Docstring for
                                    single_class_lib_method_4 with two params&lt;/p&gt;","arg_string":"param_1,
                                    param_2"},{"name":"Single Class Lib Method 5","doc":"Docstring for
                                    single_class_lib_method_5 with two params","args":"[\"param_1\",
                                    \"param_2\"]","tags":[],"id":24,"synopsis":"Docstring for single_class_lib_method_5
                                    with two params","html_doc":"&lt;p&gt;Docstring for single_class_lib_method_5 with
                                    two params&lt;/p&gt;","arg_string":"param_1, param_2"}],"synopsis":"Overview that
                                    should be imported for SingleClassLib.","html_doc":"&lt;p&gt;Overview that should be
                                    imported for SingleClassLib.&lt;/p&gt;"},{"name":"Test Libdoc
                                    File","type":"LIBRARY","version":"3.2.1","scope":"GLOBAL","named_args":null,"path":"C:\\repo\\rfhub2\\tests\\acceptance\\resources\\..\\..\\fixtures\\initial\\test_libdoc_file.xml","doc":"Documentation
                                    for library ``Test Libdoc
                                    File``.","doc_format":"ROBOT","id":10,"keywords":[{"name":"Someone Shall
                                    Pass","doc":"","args":"[\"who\"]","tags":[],"id":25,"synopsis":"","html_doc":"","arg_string":"who"}],"synopsis":"Documentation
                                    for library ``Test Libdoc File``.","html_doc":"&lt;p&gt;Documentation for library
                                    &lt;code&gt;Test Libdoc File&lt;/code&gt;.&lt;/p&gt;"},{"name":"Test Libdoc File
                                    Copy","type":"LIBRARY","version":"3.2.0","scope":"GLOBAL","named_args":null,"path":"C:\\repo\\rfhub2\\tests\\acceptance\\resources\\..\\..\\fixtures\\initial\\test_libdoc_file_copy.xml","doc":"Documentation
                                    for library ``Test Libdoc File
                                    Copy``.","doc_format":"ROBOT","id":12,"keywords":[{"name":"Someone Shall
                                    Pass","doc":"","args":"[\"who\"]","tags":[],"id":28,"synopsis":"","html_doc":"","arg_string":"who"}],"synopsis":"Documentation
                                    for library ``Test Libdoc File Copy``.","html_doc":"&lt;p&gt;Documentation for
                                    library &lt;code&gt;Test Libdoc File Copy&lt;/code&gt;.&lt;/p&gt;"},{"name":"test_resource","type":"RESOURCE","version":"","scope":"GLOBAL","named_args":null,"path":"C:\\repo\\rfhub2\\tests\\acceptance\\resources\\..\\..\\fixtures\\initial\\test_resource.resource","doc":"File
                                    with .resource extension with two test
                                    keywords","doc_format":"ROBOT","id":11,"keywords":[{"name":"Keyword 1 Imported From
                                    Resource File Updated","doc":"This keyword was imported from file\nwith .resource
                                    extension, available since RFWK 3.1","args":"","tags":[],"id":26,"synopsis":"This
                                    keyword was imported from file","html_doc":"&lt;p&gt;This keyword was imported from
                                    file with .resource extension, available since RFWK 3.1&lt;/p&gt;","arg_string":""},{"name":"Keyword
                                    2 Imported From Resource File Updated","doc":"This keyword was imported from
                                    file\nwith .resource extension, available since RFWK 3.1","args":"[\"arg_1\",
                                    \"arg_2\"]","tags":[],"id":27,"synopsis":"This keyword was imported from
                                    file","html_doc":"&lt;p&gt;This keyword was imported from file with .resource
                                    extension, available since RFWK 3.1&lt;/p&gt;","arg_string":"arg_1,
                                    arg_2"}],"synopsis":"File with .resource extension with two test
                                    keywords","html_doc":"&lt;p&gt;File with .resource extension with two test keywords&lt;/p&gt;"}]
                                </msg>
                                <msg timestamp="20210830 17:35:50.357" level="INFO">${response} = &lt;Response
                                    [200]&gt;
                                </msg>
                                <status status="PASS" starttime="20210830 17:35:50.330"
                                        endtime="20210830 17:35:50.357"/>
                            </kw>
                            <kw name="Should Be Equal As Integers" library="BuiltIn">
                                <arg>${response.status_code}</arg>
                                <arg>200</arg>
                                <doc>Fails if objects are unequal after converting them to integers.</doc>
                                <msg timestamp="20210830 17:35:50.360" level="INFO">Argument types are:
                                    &lt;class 'int'&gt;
                                    &lt;type 'unicode'&gt;
                                </msg>
                                <status status="PASS" starttime="20210830 17:35:50.357"
                                        endtime="20210830 17:35:50.360"/>
                            </kw>
                            <msg timestamp="20210830 17:35:50.363" level="INFO">${response} = [{'name':
                                'LibWithEmptyInit1', 'type': 'LIBRARY', 'version': '2.1.0', 'scope': 'TEST',
                                'named_args': None, 'path':
                                'C:\\repo\\rfhub2\\tests\\acceptance\\resources\\..\\..\\fixtures\\initial\\LibsWithE...
                            </msg>
                            <status status="PASS" starttime="20210830 17:35:50.328" endtime="20210830 17:35:50.363"/>
                        </kw>
                        <kw name="Length Should Be" library="BuiltIn">
                            <arg>${response}</arg>
                            <arg>${n}</arg>
                            <doc>Verifies that the length of the given item is correct.</doc>
                            <msg timestamp="20210830 17:35:50.363" level="INFO">Length is 7</msg>
                            <status status="PASS" starttime="20210830 17:35:50.363" endtime="20210830 17:35:50.363"/>
                        </kw>
                        <status status="PASS" starttime="20210830 17:35:50.328" endtime="20210830 17:35:50.364"/>
                    </kw>
                    <kw name="keywords Endpoint Should Have ${m} Items" library="keywords"
                        sourcename="${endpoint} Endpoint Should Have ${n} Items">
                        <kw name="Get Request For Endpoint" library="keywords">
                            <var>${response}</var>
                            <arg>endpoint=${endpoint}</arg>
                            <kw name="Create Session" library="RequestsLibrary">
                                <arg>tmp</arg>
                                <arg>http://${HOST}:8000/api/v1</arg>
                                <doc>Create Session: create a HTTP session to a server</doc>
                                <msg timestamp="20210830 17:35:50.369" level="INFO">Creating Session using : alias=tmp,
                                    url=http://127.0.0.1:8000/api/v1, headers={}, cookies={}, auth=None, timeout=None,
                                    proxies=None, verify=False, debug=0
                                </msg>
                                <status status="PASS" starttime="20210830 17:35:50.366"
                                        endtime="20210830 17:35:50.369"/>
                            </kw>
                            <kw name="Get On Session" library="RequestsLibrary">
                                <var>${response}</var>
                                <arg>tmp</arg>
                                <arg>${endpoint}/</arg>
                                <arg>params=${params}</arg>
                                <doc>Sends a GET request on a previously created HTTP Session.</doc>
                                <msg timestamp="20210830 17:35:50.397" level="INFO">GET Request :
                                    url=http://127.0.0.1:8000/api/v1/keywords/?None
                                    path_url=/api/v1/keywords/?None
                                    headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate',
                                    'Accept': '*/*', 'Connection': 'keep-alive'}
                                    body=None
                                </msg>
                                <msg timestamp="20210830 17:35:50.397" level="INFO">GET Response :
                                    url=http://127.0.0.1:8000/api/v1/keywords/?None
                                    status=200, reason=OK
                                    headers={'date': 'Mon, 30 Aug 2021 15:35:50 GMT', 'server': 'uvicorn',
                                    'content-length': '4874', 'content-type': 'application/json'}
                                    body=[{"name":"Keyword 1 Imported From Resource File Updated","doc":"This keyword
                                    was imported from file\nwith .resource extension, available since RFWK
                                    3.1","args":"","tags":[],"id":26,"synopsis":"This keyword was imported from
                                    file","html_doc":"&lt;p&gt;This keyword was imported from file with .resource
                                    extension, available since RFWK 3.1&lt;/p&gt;","arg_string":"","collection":{"id":11,"name":"test_resource"}},{"name":"Keyword
                                    2 Imported From Resource File Updated","doc":"This keyword was imported from
                                    file\nwith .resource extension, available since RFWK 3.1","args":"[\"arg_1\",
                                    \"arg_2\"]","tags":[],"id":27,"synopsis":"This keyword was imported from
                                    file","html_doc":"&lt;p&gt;This keyword was imported from file with .resource
                                    extension, available since RFWK 3.1&lt;/p&gt;","arg_string":"arg_1,
                                    arg_2","collection":{"id":11,"name":"test_resource"}},{"name":"Lib With Empty Init 1
                                    Method 1","doc":"Docstring for
                                    lib_with_empty_init_1_method_1","args":"","tags":[],"id":1,"synopsis":"Docstring for
                                    lib_with_empty_init_1_method_1","html_doc":"&lt;p&gt;Docstring for
                                    lib_with_empty_init_1_method_1&lt;/p&gt;","arg_string":"","collection":{"id":1,"name":"LibWithEmptyInit1"}},{"name":"Lib
                                    With Empty Init 1 Method 2","doc":"Docstring for
                                    lib_with_empty_init_1_method_2","args":"","tags":[],"id":2,"synopsis":"Docstring for
                                    lib_with_empty_init_1_method_2","html_doc":"&lt;p&gt;Docstring for
                                    lib_with_empty_init_1_method_2&lt;/p&gt;","arg_string":"","collection":{"id":1,"name":"LibWithEmptyInit1"}},{"name":"Lib
                                    With Empty Init 2 Method 1","doc":"Docstring for
                                    lib_with_empty_init_2_method_1","args":"","tags":[],"id":3,"synopsis":"Docstring for
                                    lib_with_empty_init_2_method_1","html_doc":"&lt;p&gt;Docstring for
                                    lib_with_empty_init_2_method_1&lt;/p&gt;","arg_string":"","collection":{"id":2,"name":"LibWithEmptyInit2"}},{"name":"Lib
                                    With Empty Init 2 Method 2","doc":"Docstring for
                                    lib_with_empty_init_2_method_2","args":"","tags":[],"id":4,"synopsis":"Docstring for
                                    lib_with_empty_init_2_method_2","html_doc":"&lt;p&gt;Docstring for
                                    lib_with_empty_init_2_method_2&lt;/p&gt;","arg_string":"","collection":{"id":2,"name":"LibWithEmptyInit2"}},{"name":"Lib
                                    With Init 1 Method 1","doc":"Docstring for
                                    lib_with_init_1_method_1","args":"","tags":[],"id":5,"synopsis":"Docstring for
                                    lib_with_init_1_method_1","html_doc":"&lt;p&gt;Docstring for
                                    lib_with_init_1_method_1&lt;/p&gt;","arg_string":"","collection":{"id":3,"name":"LibWithInit"}},{"name":"Lib
                                    With Init 1 Method 2","doc":"Docstring for
                                    lib_with_init_1_method_2","args":"","tags":[],"id":6,"synopsis":"Docstring for
                                    lib_with_init_1_method_2","html_doc":"&lt;p&gt;Docstring for
                                    lib_with_init_1_method_2&lt;/p&gt;","arg_string":"","collection":{"id":3,"name":"LibWithInit"}},{"name":"Lib
                                    With Init 2 Method 1","doc":"Docstring for
                                    lib_with_init_2_method_1","args":"","tags":[],"id":7,"synopsis":"Docstring for
                                    lib_with_init_2_method_1","html_doc":"&lt;p&gt;Docstring for
                                    lib_with_init_2_method_1&lt;/p&gt;","arg_string":"","collection":{"id":3,"name":"LibWithInit"}},{"name":"Lib
                                    With Init 2 Method 2","doc":"Docstring for
                                    lib_with_init_2_method_2","args":"","tags":[],"id":8,"synopsis":"Docstring for
                                    lib_with_init_2_method_2","html_doc":"&lt;p&gt;Docstring for
                                    lib_with_init_2_method_2&lt;/p&gt;","arg_string":"","collection":{"id":3,"name":"LibWithInit"}},{"name":"Single
                                    Class Lib Method 1","doc":"Docstring for
                                    single_class_lib_method_1","args":"","tags":[],"id":21,"synopsis":"Docstring for
                                    single_class_lib_method_1","html_doc":"&lt;p&gt;Docstring for
                                    single_class_lib_method_1&lt;/p&gt;","arg_string":"","collection":{"id":9,"name":"SingleClassLib"}},{"name":"Single
                                    Class Lib Method 2","doc":"Docstring for
                                    single_class_lib_method_2","args":"","tags":[],"id":22,"synopsis":"Docstring for
                                    single_class_lib_method_2","html_doc":"&lt;p&gt;Docstring for
                                    single_class_lib_method_2&lt;/p&gt;","arg_string":"","collection":{"id":9,"name":"SingleClassLib"}},{"name":"Single
                                    Class Lib Method 4","doc":"Docstring for single_class_lib_method_4 with two
                                    params","args":"[\"param_1\", \"param_2\"]","tags":[],"id":23,"synopsis":"Docstring
                                    for single_class_lib_method_4 with two params","html_doc":"&lt;p&gt;Docstring for
                                    single_class_lib_method_4 with two params&lt;/p&gt;","arg_string":"param_1,
                                    param_2","collection":{"id":9,"name":"SingleClassLib"}},{"name":"Single Class Lib
                                    Method 5","doc":"Docstring for single_class_lib_method_5 with two
                                    params","args":"[\"param_1\", \"param_2\"]","tags":[],"id":24,"synopsis":"Docstring
                                    for single_class_lib_method_5 with two params","html_doc":"&lt;p&gt;Docstring for
                                    single_class_lib_method_5 with two params&lt;/p&gt;","arg_string":"param_1,
                                    param_2","collection":{"id":9,"name":"SingleClassLib"}},{"name":"Someone Shall
                                    Pass","doc":"","args":"[\"who\"]","tags":[],"id":25,"synopsis":"","html_doc":"","arg_string":"who","collection":{"id":10,"name":"Test
                                    Libdoc File"}},{"name":"Someone Shall
                                    Pass","doc":"","args":"[\"who\"]","tags":[],"id":28,"synopsis":"","html_doc":"","arg_string":"who","collection":{"id":12,"name":"Test
                                    Libdoc File Copy"}}]
                                </msg>
                                <msg timestamp="20210830 17:35:50.398" level="INFO">${response} = &lt;Response
                                    [200]&gt;
                                </msg>
                                <status status="PASS" starttime="20210830 17:35:50.369"
                                        endtime="20210830 17:35:50.398"/>
                            </kw>
                            <kw name="Should Be Equal As Integers" library="BuiltIn">
                                <arg>${response.status_code}</arg>
                                <arg>200</arg>
                                <doc>Fails if objects are unequal after converting them to integers.</doc>
                                <msg timestamp="20210830 17:35:50.400" level="INFO">Argument types are:
                                    &lt;class 'int'&gt;
                                    &lt;type 'unicode'&gt;
                                </msg>
                                <status status="PASS" starttime="20210830 17:35:50.398"
                                        endtime="20210830 17:35:50.401"/>
                            </kw>
                            <msg timestamp="20210830 17:35:50.403" level="INFO">${response} = [{'name': 'Keyword 1
                                Imported From Resource File Updated', 'doc': 'This keyword was imported from file\nwith
                                .resource extension, available since RFWK 3.1', 'args': '', 'tags': [], 'id': 26,
                                'synopsis...
                            </msg>
                            <status status="PASS" starttime="20210830 17:35:50.365" endtime="20210830 17:35:50.403"/>
                        </kw>
                        <kw name="Length Should Be" library="BuiltIn">
                            <arg>${response}</arg>
                            <arg>${n}</arg>
                            <doc>Verifies that the length of the given item is correct.</doc>
                            <msg timestamp="20210830 17:35:50.404" level="INFO">Length is 16</msg>
                            <status status="PASS" starttime="20210830 17:35:50.403" endtime="20210830 17:35:50.404"/>
                        </kw>
                        <status status="PASS" starttime="20210830 17:35:50.364" endtime="20210830 17:35:50.404"/>
                    </kw>
                    <status status="PASS" starttime="20210830 17:35:50.327" endtime="20210830 17:35:50.404"/>
                </kw>
                <doc>Cli Update Load Mode Should Leave Application
                    With New Set Of Collections. This test bases on
                    'Cli Should Update Existing Collections, Delete Obsolete And Add New'
                    to speed up execution
                </doc>
                <tag>rfhub2-64</tag>
                <tag>update</tag>
                <status status="PASS" starttime="20210830 17:35:50.326" endtime="20210830 17:35:50.405"/>
            </test>
            <test id="s1-s2-t10" name="Running Cli Update Load Mode Second Time Should Leave Collections Untouched">
                <kw name="Run Cli Package With Options" library="keywords">
                    <arg>--load-mode=update --no-installed-keywords ${INITIAL_FIXTURES}</arg>
                    <doc>Attempt to run the rfhub2-cli package with the given options
                        The stdout of the process will be in a test suite
                        variable named ${output}
                    </doc>
                    <kw name="Run" library="OperatingSystem">
                        <var>${output}</var>
                        <arg>${ACTIVATE_VENV} rfhub2-cli -a http://${HOST}:8000 ${options}</arg>
                        <doc>Runs the given command in the system and returns the output.</doc>
                        <msg timestamp="20210830 17:35:50.562" level="INFO">Running command ' rfhub2-cli -a
                            http://127.0.0.1:8000 --load-mode=update --no-installed-keywords
                            C:\repo\rfhub2\tests\acceptance\resources\..\..\fixtures/initial/ 2&gt;&amp;1'.
                        </msg>
                        <msg timestamp="20210830 17:35:52.457" level="INFO">${output} =
                            Successfully loaded 0 collections with 0 keywords.
                        </msg>
                        <status status="PASS" starttime="20210830 17:35:50.407" endtime="20210830 17:35:52.457"/>
                    </kw>
                    <kw name="Set Suite Variable" library="BuiltIn">
                        <arg>${output}</arg>
                        <doc>Makes a variable available everywhere within the scope of the current suite.</doc>
                        <msg timestamp="20210830 17:35:52.458" level="INFO">${output} =
                            Successfully loaded 0 collections with 0 keywords.
                        </msg>
                        <status status="PASS" starttime="20210830 17:35:52.458" endtime="20210830 17:35:52.458"/>
                    </kw>
                    <status status="PASS" starttime="20210830 17:35:50.406" endtime="20210830 17:35:52.459"/>
                </kw>
                <kw name="Output Should Contain" library="keywords">
                    <arg>Successfully loaded 0 collections with 0 keywords.</arg>
                    <doc>Fail if the output from the previous command doesn't contain the given string
                        This keyword assumes the output of the command is in
                        a test suite variable named ${output}
                    </doc>
                    <kw name="Create Dictionary" library="BuiltIn">
                        <var>${ns}</var>
                        <arg>output=${output}</arg>
                        <doc>Creates and returns a dictionary based on the given ``items``.</doc>
                        <msg timestamp="20210830 17:35:52.460" level="INFO">${ns} = {'output': '\nSuccessfully loaded 0
                            collections with 0 keywords.'}
                        </msg>
                        <status status="PASS" starttime="20210830 17:35:52.460" endtime="20210830 17:35:52.460"/>
                    </kw>
                    <kw name="Evaluate" library="BuiltIn">
                        <var>${clean_output}</var>
                        <arg>" ".join(l.strip() for l in output.splitlines())</arg>
                        <arg>namespace=${ns}</arg>
                        <doc>Evaluates the given expression in Python and returns the result.</doc>
                        <msg timestamp="20210830 17:35:52.461" level="INFO">${clean_output} = Successfully loaded 0
                            collections with 0 keywords.
                        </msg>
                        <status status="PASS" starttime="20210830 17:35:52.461" endtime="20210830 17:35:52.461"/>
                    </kw>
                    <for flavor="IN">
                        <var>${pattern}</var>
                        <value>@{patterns}</value>
                        <iter>
                            <var name="${pattern}">Successfully loaded 0 collections with 0 keywords.</var>
                            <kw name="Run Keyword If" library="BuiltIn">
                                <arg>'''${pattern}''' not in '''${clean_output}'''</arg>
                                <arg>Fail</arg>
                                <arg>Output did not contain '${pattern}'. \n${clean_output}</arg>
                                <doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
                                <status status="PASS" starttime="20210830 17:35:52.462"
                                        endtime="20210830 17:35:52.463"/>
                            </kw>
                            <status status="PASS" starttime="20210830 17:35:52.462" endtime="20210830 17:35:52.463"/>
                        </iter>
                        <status status="PASS" starttime="20210830 17:35:52.462" endtime="20210830 17:35:52.463"/>
                    </for>
                    <status status="PASS" starttime="20210830 17:35:52.459" endtime="20210830 17:35:52.463"/>
                </kw>
                <kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
                    <arg>Restore Initial Fixtures</arg>
                    <arg>AND</arg>
                    <arg>Run Cli Package With Options</arg>
                    <arg>--load-mode=insert --no-installed-keywords</arg>
                    <doc>Executes all the given keywords in a sequence.</doc>
                    <kw name="Restore Initial Fixtures" library="keywords">
                        <kw name="Remove Directory" library="OperatingSystem">
                            <arg>${INITIAL_FIXTURES}</arg>
                            <arg>recursive=True</arg>
                            <doc>Removes the directory pointed to by the given ``path``.</doc>
                            <msg timestamp="20210830 17:35:52.480" level="INFO" html="true">Removed directory '&lt;a
                                href="file://C:\repo\rfhub2\tests\fixtures\initial"&gt;C:\repo\rfhub2\tests\fixtures\initial&lt;/a&gt;'.
                            </msg>
                            <status status="PASS" starttime="20210830 17:35:52.464" endtime="20210830 17:35:52.480"/>
                        </kw>
                        <kw name="Copy Directory" library="OperatingSystem">
                            <arg>${BACKUP_FIXTURES}</arg>
                            <arg>${INITIAL_FIXTURES}</arg>
                            <doc>Copies the source directory into the destination.</doc>
                            <msg timestamp="20210830 17:35:52.554" level="INFO" html="true">Copied directory from '&lt;a
                                href="file://C:\repo\rfhub2\tests\fixtures\initial_bkp"&gt;C:\repo\rfhub2\tests\fixtures\initial_bkp&lt;/a&gt;'
                                to '&lt;a href="file://C:\repo\rfhub2\tests\fixtures\initial"&gt;C:\repo\rfhub2\tests\fixtures\initial&lt;/a&gt;'.
                            </msg>
                            <status status="PASS" starttime="20210830 17:35:52.480" endtime="20210830 17:35:52.554"/>
                        </kw>
                        <kw name="Remove Directory" library="OperatingSystem">
                            <arg>${BACKUP_FIXTURES}</arg>
                            <arg>recursive=True</arg>
                            <doc>Removes the directory pointed to by the given ``path``.</doc>
                            <msg timestamp="20210830 17:35:52.594" level="INFO" html="true">Removed directory '&lt;a
                                href="file://C:\repo\rfhub2\tests\fixtures\initial_bkp"&gt;C:\repo\rfhub2\tests\fixtures\initial_bkp&lt;/a&gt;'.
                            </msg>
                            <status status="PASS" starttime="20210830 17:35:52.555" endtime="20210830 17:35:52.594"/>
                        </kw>
                        <status status="PASS" starttime="20210830 17:35:52.464" endtime="20210830 17:35:52.595"/>
                    </kw>
                    <kw name="Run Cli Package With Options" library="keywords">
                        <arg>--load-mode=insert --no-installed-keywords</arg>
                        <doc>Attempt to run the rfhub2-cli package with the given options
                            The stdout of the process will be in a test suite
                            variable named ${output}
                        </doc>
                        <kw name="Run" library="OperatingSystem">
                            <var>${output}</var>
                            <arg>${ACTIVATE_VENV} rfhub2-cli -a http://${HOST}:8000 ${options}</arg>
                            <doc>Runs the given command in the system and returns the output.</doc>
                            <msg timestamp="20210830 17:35:52.750" level="INFO">Running command ' rfhub2-cli -a
                                http://127.0.0.1:8000 --load-mode=insert --no-installed-keywords 2&gt;&amp;1'.
                            </msg>
                            <msg timestamp="20210830 17:35:54.565" level="INFO">${output} =
                                Successfully loaded 0 collections with 0 keywords.
                            </msg>
                            <status status="PASS" starttime="20210830 17:35:52.596" endtime="20210830 17:35:54.565"/>
                        </kw>
                        <kw name="Set Suite Variable" library="BuiltIn">
                            <arg>${output}</arg>
                            <doc>Makes a variable available everywhere within the scope of the current suite.</doc>
                            <msg timestamp="20210830 17:35:54.566" level="INFO">${output} =
                                Successfully loaded 0 collections with 0 keywords.
                            </msg>
                            <status status="PASS" starttime="20210830 17:35:54.566" endtime="20210830 17:35:54.566"/>
                        </kw>
                        <status status="PASS" starttime="20210830 17:35:52.595" endtime="20210830 17:35:54.567"/>
                    </kw>
                    <status status="PASS" starttime="20210830 17:35:52.463" endtime="20210830 17:35:54.567"/>
                </kw>
                <doc>Running Cli Update Load Mode Second Time
                    Should Leave Collections Untouched. This test bases on
                    'Cli Should Update Existing Collections, Delete Obsolete And Add New'
                    to speed up execution
                </doc>
                <tag>rfhub2-64</tag>
                <tag>update</tag>
                <status status="PASS" starttime="20210830 17:35:50.405" endtime="20210830 17:35:54.567"/>
            </test>
            <test id="s1-s2-t11"
                  name="Cli Merge Load Mode Should Update Existing Libraries And Do Not Remove Not Provided Paths">
                <kw name="Run Keywords" library="BuiltIn" type="SETUP">
                    <arg>Run Cli Package Without Installed Keywords</arg>
                    <arg>Backup And Switch Initial With Merged Fixtures</arg>
                    <doc>Executes all the given keywords in a sequence.</doc>
                    <kw name="Run Cli Package Without Installed Keywords" library="keywords">
                        <kw name="Run Cli Package With Options" library="keywords">
                            <arg>--load-mode=insert --no-installed-keywords ${INITIAL_FIXTURES}</arg>
                            <doc>Attempt to run the rfhub2-cli package with the given options
                                The stdout of the process will be in a test suite
                                variable named ${output}
                            </doc>
                            <kw name="Run" library="OperatingSystem">
                                <var>${output}</var>
                                <arg>${ACTIVATE_VENV} rfhub2-cli -a http://${HOST}:8000 ${options}</arg>
                                <doc>Runs the given command in the system and returns the output.</doc>
                                <msg timestamp="20210830 17:35:54.722" level="INFO">Running command ' rfhub2-cli -a
                                    http://127.0.0.1:8000 --load-mode=insert --no-installed-keywords
                                    C:\repo\rfhub2\tests\acceptance\resources\..\..\fixtures/initial/ 2&gt;&amp;1'.
                                </msg>
                                <msg timestamp="20210830 17:35:57.260" level="INFO">${output} = usage:
                                    script_for_system_exit [-h] -c CONF
                                    script_for_system_exit: error: the following arguments are required: -c/--conf
                                    Failed to create collection from path C:\repo\rfhub2\tests\acceptance\resource...
                                </msg>
                                <status status="PASS" starttime="20210830 17:35:54.571"
                                        endtime="20210830 17:35:57.261"/>
                            </kw>
                            <kw name="Set Suite Variable" library="BuiltIn">
                                <arg>${output}</arg>
                                <doc>Makes a variable available everywhere within the scope of the current suite.</doc>
                                <msg timestamp="20210830 17:35:57.261" level="INFO">${output} = usage:
                                    script_for_system_exit [-h] -c CONF
                                    script_for_system_exit: error: the following arguments are required: -c/--conf
                                    Failed to create collection from path C:\repo\rfhub2\tests\acceptance\resource...
                                </msg>
                                <status status="PASS" starttime="20210830 17:35:57.261"
                                        endtime="20210830 17:35:57.262"/>
                            </kw>
                            <status status="PASS" starttime="20210830 17:35:54.570" endtime="20210830 17:35:57.262"/>
                        </kw>
                        <status status="PASS" starttime="20210830 17:35:54.569" endtime="20210830 17:35:57.262"/>
                    </kw>
                    <kw name="Backup And Switch Initial With Merged Fixtures" library="keywords">
                        <kw name="Move Directory" library="OperatingSystem">
                            <arg>${INITIAL_FIXTURES}</arg>
                            <arg>${BACKUP_FIXTURES}</arg>
                            <doc>Moves the source directory into a destination.</doc>
                            <msg timestamp="20210830 17:35:57.266" level="INFO" html="true">Moved directory from '&lt;a
                                href="file://C:\repo\rfhub2\tests\fixtures\initial"&gt;C:\repo\rfhub2\tests\fixtures\initial&lt;/a&gt;'
                                to '&lt;a href="file://C:\repo\rfhub2\tests\fixtures\initial_bkp"&gt;C:\repo\rfhub2\tests\fixtures\initial_bkp&lt;/a&gt;'.
                            </msg>
                            <status status="PASS" starttime="20210830 17:35:57.263" endtime="20210830 17:35:57.266"/>
                        </kw>
                        <kw name="Copy Directory" library="OperatingSystem">
                            <arg>${MERGED_FIXTURES}</arg>
                            <arg>${INITIAL_FIXTURES}</arg>
                            <doc>Copies the source directory into the destination.</doc>
                            <msg timestamp="20210830 17:35:57.285" level="INFO" html="true">Copied directory from '&lt;a
                                href="file://C:\repo\rfhub2\tests\fixtures\merged"&gt;C:\repo\rfhub2\tests\fixtures\merged&lt;/a&gt;'
                                to '&lt;a href="file://C:\repo\rfhub2\tests\fixtures\initial"&gt;C:\repo\rfhub2\tests\fixtures\initial&lt;/a&gt;'.
                            </msg>
                            <status status="PASS" starttime="20210830 17:35:57.266" endtime="20210830 17:35:57.285"/>
                        </kw>
                        <status status="PASS" starttime="20210830 17:35:57.262" endtime="20210830 17:35:57.285"/>
                    </kw>
                    <status status="PASS" starttime="20210830 17:35:54.569" endtime="20210830 17:35:57.285"/>
                </kw>
                <kw name="Run Cli Package With Options" library="keywords">
                    <arg>--load-mode=merge --no-installed-keywords ${INITIAL_FIXTURES}</arg>
                    <doc>Attempt to run the rfhub2-cli package with the given options
                        The stdout of the process will be in a test suite
                        variable named ${output}
                    </doc>
                    <kw name="Run" library="OperatingSystem">
                        <var>${output}</var>
                        <arg>${ACTIVATE_VENV} rfhub2-cli -a http://${HOST}:8000 ${options}</arg>
                        <doc>Runs the given command in the system and returns the output.</doc>
                        <msg timestamp="20210830 17:35:57.440" level="INFO">Running command ' rfhub2-cli -a
                            http://127.0.0.1:8000 --load-mode=merge --no-installed-keywords
                            C:\repo\rfhub2\tests\acceptance\resources\..\..\fixtures/initial/ 2&gt;&amp;1'.
                        </msg>
                        <msg timestamp="20210830 17:35:59.482" level="INFO">${output} = SingleClassLib library with 4
                            keywords loaded.
                            MySuperLib library with 1 keywords loaded.

                            Successfully loaded 2 collections with 5 keywords.
                        </msg>
                        <status status="PASS" starttime="20210830 17:35:57.286" endtime="20210830 17:35:59.483"/>
                    </kw>
                    <kw name="Set Suite Variable" library="BuiltIn">
                        <arg>${output}</arg>
                        <doc>Makes a variable available everywhere within the scope of the current suite.</doc>
                        <msg timestamp="20210830 17:35:59.483" level="INFO">${output} = SingleClassLib library with 4
                            keywords loaded.
                            MySuperLib library with 1 keywords loaded.

                            Successfully loaded 2 collections with 5 keywords.
                        </msg>
                        <status status="PASS" starttime="20210830 17:35:59.483" endtime="20210830 17:35:59.483"/>
                    </kw>
                    <status status="PASS" starttime="20210830 17:35:57.286" endtime="20210830 17:35:59.484"/>
                </kw>
                <kw name="Api Should Have 9 Collections And 22 Keywords"
                    sourcename="Api Should Have ${n} Collections And ${m} Keywords">
                    <kw name="collections Endpoint Should Have ${n} Items" library="keywords"
                        sourcename="${endpoint} Endpoint Should Have ${n} Items">
                        <kw name="Get Request For Endpoint" library="keywords">
                            <var>${response}</var>
                            <arg>endpoint=${endpoint}</arg>
                            <kw name="Create Session" library="RequestsLibrary">
                                <arg>tmp</arg>
                                <arg>http://${HOST}:8000/api/v1</arg>
                                <doc>Create Session: create a HTTP session to a server</doc>
                                <msg timestamp="20210830 17:35:59.487" level="INFO">Creating Session using : alias=tmp,
                                    url=http://127.0.0.1:8000/api/v1, headers={}, cookies={}, auth=None, timeout=None,
                                    proxies=None, verify=False, debug=0
                                </msg>
                                <status status="PASS" starttime="20210830 17:35:59.486"
                                        endtime="20210830 17:35:59.487"/>
                            </kw>
                            <kw name="Get On Session" library="RequestsLibrary">
                                <var>${response}</var>
                                <arg>tmp</arg>
                                <arg>${endpoint}/</arg>
                                <arg>params=${params}</arg>
                                <doc>Sends a GET request on a previously created HTTP Session.</doc>
                                <msg timestamp="20210830 17:35:59.519" level="INFO">GET Request :
                                    url=http://127.0.0.1:8000/api/v1/collections/?None
                                    path_url=/api/v1/collections/?None
                                    headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate',
                                    'Accept': '*/*', 'Connection': 'keep-alive'}
                                    body=None
                                </msg>
                                <msg timestamp="20210830 17:35:59.519" level="INFO">GET Response :
                                    url=http://127.0.0.1:8000/api/v1/collections/?None
                                    status=200, reason=OK
                                    headers={'date': 'Mon, 30 Aug 2021 15:35:59 GMT', 'server': 'uvicorn',
                                    'content-length': '11116', 'content-type': 'application/json'}
                                    body=[{"name":"LibWithEmptyInit1","type":"LIBRARY","version":"2.1.0","scope":"TEST","named_args":null,"path":"C:\\repo\\rfhub2\\tests\\acceptance\\resources\\..\\..\\fixtures\\initial\\LibsWithEmptyInit\\LibWithEmptyInit1.py","doc":"Overview
                                    that should be imported for
                                    LibWithEmptyInit1.","doc_format":"ROBOT","id":1,"keywords":[{"name":"Lib With Empty
                                    Init 1 Method 1","doc":"Docstring for
                                    lib_with_empty_init_1_method_1","args":"","tags":[],"id":1,"synopsis":"Docstring for
                                    lib_with_empty_init_1_method_1","html_doc":"&lt;p&gt;Docstring for
                                    lib_with_empty_init_1_method_1&lt;/p&gt;","arg_string":""},{"name":"Lib With Empty
                                    Init 1 Method 2","doc":"Docstring for
                                    lib_with_empty_init_1_method_2","args":"","tags":[],"id":2,"synopsis":"Docstring for
                                    lib_with_empty_init_1_method_2","html_doc":"&lt;p&gt;Docstring for
                                    lib_with_empty_init_1_method_2&lt;/p&gt;","arg_string":""}],"synopsis":"Overview
                                    that should be imported for LibWithEmptyInit1.","html_doc":"&lt;p&gt;Overview that
                                    should be imported for LibWithEmptyInit1.&lt;/p&gt;"},{"name":"LibWithEmptyInit2","type":"LIBRARY","version":"1.0.0","scope":"TEST","named_args":null,"path":"C:\\repo\\rfhub2\\tests\\acceptance\\resources\\..\\..\\fixtures\\initial\\LibsWithEmptyInit\\LibWithEmptyInit2.py","doc":"Overview
                                    that should be imported for
                                    LibWithEmptyInit2.","doc_format":"ROBOT","id":2,"keywords":[{"name":"Lib With Empty
                                    Init 2 Method 1","doc":"Docstring for
                                    lib_with_empty_init_2_method_1","args":"","tags":[],"id":3,"synopsis":"Docstring for
                                    lib_with_empty_init_2_method_1","html_doc":"&lt;p&gt;Docstring for
                                    lib_with_empty_init_2_method_1&lt;/p&gt;","arg_string":""},{"name":"Lib With Empty
                                    Init 2 Method 2","doc":"Docstring for
                                    lib_with_empty_init_2_method_2","args":"","tags":[],"id":4,"synopsis":"Docstring for
                                    lib_with_empty_init_2_method_2","html_doc":"&lt;p&gt;Docstring for
                                    lib_with_empty_init_2_method_2&lt;/p&gt;","arg_string":""}],"synopsis":"Overview
                                    that should be imported for LibWithEmptyInit2.","html_doc":"&lt;p&gt;Overview that
                                    should be imported for LibWithEmptyInit2.&lt;/p&gt;"},{"name":"LibWithInit","type":"LIBRARY","version":"6.6.6","scope":"GLOBAL","named_args":null,"path":"C:\\repo\\rfhub2\\tests\\acceptance\\resources\\..\\..\\fixtures\\initial\\LibWithInit","doc":"This
                                    is a docstring that should be imported as overview\n\nHere goes some docs that
                                    should appear on rfhub2 if init is parametrised\n\nThe library
                                    import:\n\nExamples:\n| Library LibWithInit dummy=../one # add one dummy\n| Library
                                    LibWithInit path=../one,/global # add two
                                    dummies","doc_format":"ROBOT","id":3,"keywords":[{"name":"Lib With Init 1 Method
                                    1","doc":"Docstring for
                                    lib_with_init_1_method_1","args":"","tags":[],"id":5,"synopsis":"Docstring for
                                    lib_with_init_1_method_1","html_doc":"&lt;p&gt;Docstring for
                                    lib_with_init_1_method_1&lt;/p&gt;","arg_string":""},{"name":"Lib With Init 1 Method
                                    2","doc":"Docstring for
                                    lib_with_init_1_method_2","args":"","tags":[],"id":6,"synopsis":"Docstring for
                                    lib_with_init_1_method_2","html_doc":"&lt;p&gt;Docstring for
                                    lib_with_init_1_method_2&lt;/p&gt;","arg_string":""},{"name":"Lib With Init 2 Method
                                    1","doc":"Docstring for
                                    lib_with_init_2_method_1","args":"","tags":[],"id":7,"synopsis":"Docstring for
                                    lib_with_init_2_method_1","html_doc":"&lt;p&gt;Docstring for
                                    lib_with_init_2_method_1&lt;/p&gt;","arg_string":""},{"name":"Lib With Init 2 Method
                                    2","doc":"Docstring for
                                    lib_with_init_2_method_2","args":"","tags":[],"id":8,"synopsis":"Docstring for
                                    lib_with_init_2_method_2","html_doc":"&lt;p&gt;Docstring for
                                    lib_with_init_2_method_2&lt;/p&gt;","arg_string":""}],"synopsis":"This is a
                                    docstring that should be imported as overview","html_doc":"&lt;p&gt;This is a
                                    docstring that should be imported as overview&lt;/p&gt;\n&lt;p&gt;Here goes some
                                    docs that should appear on rfhub2 if init is parametrised&lt;/p&gt;\n&lt;p&gt;The
                                    library import:&lt;/p&gt;\n&lt;p&gt;Examples:&lt;/p&gt;\n&lt;pre&gt;\nLibrary
                                    LibWithInit dummy=../one # add one dummy\nLibrary LibWithInit path=../one,/global #
                                    add two dummies\n&lt;/pre&gt;"},{"name":"MySuperLib","type":"LIBRARY","version":"6.9.6","scope":"GLOBAL","named_args":null,"path":"C:\\repo\\rfhub2\\tests\\acceptance\\resources\\..\\..\\fixtures\\initial\\MySuperLib\\MySuperLib.py","doc":"This
                                    is a docstring that should be imported as
                                    overview\nMySuperLib","doc_format":"ROBOT","id":10,"keywords":[{"name":"My Awesome
                                    Keyword","doc":"Docstring for
                                    my_awesome_keyword","args":"[\"arg1\"]","tags":[],"id":25,"synopsis":"Docstring for
                                    my_awesome_keyword","html_doc":"&lt;p&gt;Docstring for my_awesome_keyword&lt;/p&gt;","arg_string":"arg1"}],"synopsis":"This
                                    is a docstring that should be imported as overview","html_doc":"&lt;p&gt;This is a
                                    docstring that should be imported as overview MySuperLib&lt;/p&gt;"},{"name":"SingleClassLib","type":"LIBRARY","version":"1.2.9","scope":"TEST","named_args":null,"path":"C:\\repo\\rfhub2\\tests\\acceptance\\resources\\..\\..\\fixtures\\initial\\SingleClassLib\\SingleClassLib.py","doc":"Overview
                                    that should be imported for
                                    SingleClassLib.","doc_format":"ROBOT","id":9,"keywords":[{"name":"Single Class Lib
                                    Method 1","doc":"Docstring for
                                    single_class_lib_method_1","args":"","tags":["tag_1","tag_2"],"id":21,"synopsis":"Docstring
                                    for single_class_lib_method_1","html_doc":"&lt;p&gt;Docstring for
                                    single_class_lib_method_1&lt;/p&gt;","arg_string":""},{"name":"Single Class Lib
                                    Method 2","doc":"Docstring for
                                    single_class_lib_method_2","args":"","tags":[],"id":22,"synopsis":"Docstring for
                                    single_class_lib_method_2","html_doc":"&lt;p&gt;Docstring for
                                    single_class_lib_method_2&lt;/p&gt;","arg_string":""},{"name":"Single Class Lib
                                    Method 3","doc":"Docstring for single_class_lib_method_3 with two
                                    params","args":"[\"param_1\", \"param_2\"]","tags":[],"id":23,"synopsis":"Docstring
                                    for single_class_lib_method_3 with two params","html_doc":"&lt;p&gt;Docstring for
                                    single_class_lib_method_3 with two params&lt;/p&gt;","arg_string":"param_1,
                                    param_2"},{"name":"Single Class Lib Method 4","doc":"Docstring for
                                    single_class_lib_method_4 with two params","args":"[\"param_1\",
                                    \"param_2\"]","tags":[],"id":24,"synopsis":"Docstring for single_class_lib_method_4
                                    with two params","html_doc":"&lt;p&gt;Docstring for single_class_lib_method_4 with
                                    two params&lt;/p&gt;","arg_string":"param_1, param_2"}],"synopsis":"Overview that
                                    should be imported for SingleClassLib.","html_doc":"&lt;p&gt;Overview that should be
                                    imported for SingleClassLib.&lt;/p&gt;"},{"name":"Test Libdoc
                                    File","type":"LIBRARY","version":"3.2.0","scope":"GLOBAL","named_args":null,"path":"C:\\repo\\rfhub2\\tests\\acceptance\\resources\\..\\..\\fixtures\\initial\\test_libdoc_file.xml","doc":"Documentation
                                    for library ``Test Libdoc
                                    File``.","doc_format":"ROBOT","id":5,"keywords":[{"name":"Someone Shall
                                    Pass","doc":"","args":"[\"who\"]","tags":[],"id":12,"synopsis":"","html_doc":"","arg_string":"who"}],"synopsis":"Documentation
                                    for library ``Test Libdoc File``.","html_doc":"&lt;p&gt;Documentation for library
                                    &lt;code&gt;Test Libdoc File&lt;/code&gt;.&lt;/p&gt;"},{"name":"test_res_lib_dir","type":"RESOURCE","version":"","scope":"GLOBAL","named_args":null,"path":"C:\\repo\\rfhub2\\tests\\acceptance\\resources\\..\\..\\fixtures\\initial\\LibWithInit\\test_res_lib_dir.resource","doc":"File
                                    with .resource extension with two test
                                    keywords","doc_format":"ROBOT","id":6,"keywords":[{"name":"Keyword 1 Imported From
                                    Resource From Lib Dir File","doc":"This keyword was imported from file\nwith
                                    .resource extension, available since RFWK
                                    3.1","args":"","tags":[],"id":13,"synopsis":"This keyword was imported from
                                    file","html_doc":"&lt;p&gt;This keyword was imported from file with .resource
                                    extension, available since RFWK 3.1&lt;/p&gt;","arg_string":""},{"name":"Keyword 2
                                    Imported From Resource From Lib Dir File","doc":"This keyword was imported from
                                    file\nwith .resource extension, available since RFWK 3.1","args":"[\"arg_1\",
                                    \"arg_2\"]","tags":[],"id":14,"synopsis":"This keyword was imported from
                                    file","html_doc":"&lt;p&gt;This keyword was imported from file with .resource
                                    extension, available since RFWK 3.1&lt;/p&gt;","arg_string":"arg_1,
                                    arg_2"}],"synopsis":"File with .resource extension with two test
                                    keywords","html_doc":"&lt;p&gt;File with .resource extension with two test keywords&lt;/p&gt;"},{"name":"test_resource","type":"RESOURCE","version":"","scope":"GLOBAL","named_args":null,"path":"C:\\repo\\rfhub2\\tests\\acceptance\\resources\\..\\..\\fixtures\\initial\\test_resource.resource","doc":"File
                                    with .resource extension with two test
                                    keywords","doc_format":"ROBOT","id":7,"keywords":[{"name":"Keyword 1 Imported From
                                    Resource File","doc":"This keyword was imported from file\nwith .resource extension,
                                    available since RFWK 3.1","args":"","tags":["first_tag"],"id":15,"synopsis":"This
                                    keyword was imported from file","html_doc":"&lt;p&gt;This keyword was imported from
                                    file with .resource extension, available since RFWK 3.1&lt;/p&gt;","arg_string":""},{"name":"Keyword
                                    2 Imported From Resource File","doc":"This keyword was imported from file\nwith
                                    .resource extension, available since RFWK 3.1","args":"[\"arg_1\",
                                    \"arg_2\"]","tags":["first_tag","second_tag"],"id":16,"synopsis":"This keyword was
                                    imported from file","html_doc":"&lt;p&gt;This keyword was imported from file with
                                    .resource extension, available since RFWK 3.1&lt;/p&gt;","arg_string":"arg_1,
                                    arg_2"}],"synopsis":"File with .resource extension with two test
                                    keywords","html_doc":"&lt;p&gt;File with .resource extension with two test keywords&lt;/p&gt;"},{"name":"test_robot","type":"RESOURCE","version":"","scope":"GLOBAL","named_args":null,"path":"C:\\repo\\rfhub2\\tests\\acceptance\\resources\\..\\..\\fixtures\\initial\\test_robot.robot","doc":"File
                                    with .robot extension with two test
                                    keywords","doc_format":"ROBOT","id":8,"keywords":[{"name":"Keyword 1 Imported From
                                    Robot File","doc":"This keyword was imported from file\nwith .robot
                                    extension","args":"","tags":["first_tag","second_tag"],"id":17,"synopsis":"This
                                    keyword was imported from file","html_doc":"&lt;p&gt;This keyword was imported from
                                    file with .robot extension&lt;/p&gt;","arg_string":""},{"name":"Keyword 2 Imported
                                    From Robot File","doc":"This keyword was imported from file\nwith .robot
                                    extension","args":"[\"arg_1\",
                                    \"arg_2\"]","tags":["first_tag","second_tag","third_tag"],"id":18,"synopsis... (set
                                    the log level to DEBUG or TRACE to see the full content)
                                </msg>
                                <msg timestamp="20210830 17:35:59.520" level="INFO">${response} = &lt;Response
                                    [200]&gt;
                                </msg>
                                <status status="PASS" starttime="20210830 17:35:59.487"
                                        endtime="20210830 17:35:59.520"/>
                            </kw>
                            <kw name="Should Be Equal As Integers" library="BuiltIn">
                                <arg>${response.status_code}</arg>
                                <arg>200</arg>
                                <doc>Fails if objects are unequal after converting them to integers.</doc>
                                <msg timestamp="20210830 17:35:59.522" level="INFO">Argument types are:
                                    &lt;class 'int'&gt;
                                    &lt;type 'unicode'&gt;
                                </msg>
                                <status status="PASS" starttime="20210830 17:35:59.520"
                                        endtime="20210830 17:35:59.523"/>
                            </kw>
                            <msg timestamp="20210830 17:35:59.525" level="INFO">${response} = [{'name':
                                'LibWithEmptyInit1', 'type': 'LIBRARY', 'version': '2.1.0', 'scope': 'TEST',
                                'named_args': None, 'path':
                                'C:\\repo\\rfhub2\\tests\\acceptance\\resources\\..\\..\\fixtures\\initial\\LibsWithE...
                            </msg>
                            <status status="PASS" starttime="20210830 17:35:59.485" endtime="20210830 17:35:59.525"/>
                        </kw>
                        <kw name="Length Should Be" library="BuiltIn">
                            <arg>${response}</arg>
                            <arg>${n}</arg>
                            <doc>Verifies that the length of the given item is correct.</doc>
                            <msg timestamp="20210830 17:35:59.526" level="INFO">Length is 9</msg>
                            <status status="PASS" starttime="20210830 17:35:59.525" endtime="20210830 17:35:59.526"/>
                        </kw>
                        <status status="PASS" starttime="20210830 17:35:59.484" endtime="20210830 17:35:59.526"/>
                    </kw>
                    <kw name="keywords Endpoint Should Have ${m} Items" library="keywords"
                        sourcename="${endpoint} Endpoint Should Have ${n} Items">
                        <kw name="Get Request For Endpoint" library="keywords">
                            <var>${response}</var>
                            <arg>endpoint=${endpoint}</arg>
                            <kw name="Create Session" library="RequestsLibrary">
                                <arg>tmp</arg>
                                <arg>http://${HOST}:8000/api/v1</arg>
                                <doc>Create Session: create a HTTP session to a server</doc>
                                <msg timestamp="20210830 17:35:59.528" level="INFO">Creating Session using : alias=tmp,
                                    url=http://127.0.0.1:8000/api/v1, headers={}, cookies={}, auth=None, timeout=None,
                                    proxies=None, verify=False, debug=0
                                </msg>
                                <status status="PASS" starttime="20210830 17:35:59.528"
                                        endtime="20210830 17:35:59.529"/>
                            </kw>
                            <kw name="Get On Session" library="RequestsLibrary">
                                <var>${response}</var>
                                <arg>tmp</arg>
                                <arg>${endpoint}/</arg>
                                <arg>params=${params}</arg>
                                <doc>Sends a GET request on a previously created HTTP Session.</doc>
                                <msg timestamp="20210830 17:35:59.563" level="INFO">GET Request :
                                    url=http://127.0.0.1:8000/api/v1/keywords/?None
                                    path_url=/api/v1/keywords/?None
                                    headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate',
                                    'Accept': '*/*', 'Connection': 'keep-alive'}
                                    body=None
                                </msg>
                                <msg timestamp="20210830 17:35:59.563" level="INFO">GET Response :
                                    url=http://127.0.0.1:8000/api/v1/keywords/?None
                                    status=200, reason=OK
                                    headers={'date': 'Mon, 30 Aug 2021 15:35:59 GMT', 'server': 'uvicorn',
                                    'content-length': '7509', 'content-type': 'application/json'}
                                    body=[{"name":"Keyword 1 Imported From Resource File","doc":"This keyword was
                                    imported from file\nwith .resource extension, available since RFWK
                                    3.1","args":"","tags":["first_tag"],"id":15,"synopsis":"This keyword was imported
                                    from file","html_doc":"&lt;p&gt;This keyword was imported from file with .resource
                                    extension, available since RFWK 3.1&lt;/p&gt;","arg_string":"","collection":{"id":7,"name":"test_resource"}},{"name":"Keyword
                                    1 Imported From Resource From Lib Dir File","doc":"This keyword was imported from
                                    file\nwith .resource extension, available since RFWK
                                    3.1","args":"","tags":[],"id":13,"synopsis":"This keyword was imported from
                                    file","html_doc":"&lt;p&gt;This keyword was imported from file with .resource
                                    extension, available since RFWK 3.1&lt;/p&gt;","arg_string":"","collection":{"id":6,"name":"test_res_lib_dir"}},{"name":"Keyword
                                    1 Imported From Robot File","doc":"This keyword was imported from file\nwith .robot
                                    extension","args":"","tags":["first_tag","second_tag"],"id":17,"synopsis":"This
                                    keyword was imported from file","html_doc":"&lt;p&gt;This keyword was imported from
                                    file with .robot extension&lt;/p&gt;","arg_string":"","collection":{"id":8,"name":"test_robot"}},{"name":"Keyword
                                    2 Imported From Resource File","doc":"This keyword was imported from file\nwith
                                    .resource extension, available since RFWK 3.1","args":"[\"arg_1\",
                                    \"arg_2\"]","tags":["first_tag","second_tag"],"id":16,"synopsis":"This keyword was
                                    imported from file","html_doc":"&lt;p&gt;This keyword was imported from file with
                                    .resource extension, available since RFWK 3.1&lt;/p&gt;","arg_string":"arg_1,
                                    arg_2","collection":{"id":7,"name":"test_resource"}},{"name":"Keyword 2 Imported
                                    From Resource From Lib Dir File","doc":"This keyword was imported from file\nwith
                                    .resource extension, available since RFWK 3.1","args":"[\"arg_1\",
                                    \"arg_2\"]","tags":[],"id":14,"synopsis":"This keyword was imported from
                                    file","html_doc":"&lt;p&gt;This keyword was imported from file with .resource
                                    extension, available since RFWK 3.1&lt;/p&gt;","arg_string":"arg_1,
                                    arg_2","collection":{"id":6,"name":"test_res_lib_dir"}},{"name":"Keyword 2 Imported
                                    From Robot File","doc":"This keyword was imported from file\nwith .robot
                                    extension","args":"[\"arg_1\",
                                    \"arg_2\"]","tags":["first_tag","second_tag","third_tag"],"id":18,"synopsis":"This
                                    keyword was imported from file","html_doc":"&lt;p&gt;This keyword was imported from
                                    file with .robot extension&lt;/p&gt;","arg_string":"arg_1,
                                    arg_2","collection":{"id":8,"name":"test_robot"}},{"name":"Keyword With Args With
                                    Double Quotation Mark","doc":"Keyword With Args With Double Quotation
                                    Mark","args":"[\"ok_argument\",
                                    \"not_ok_argument=Kill.${app.replace(-, _)}\"]","tags":["fifth_tag","fouth_tag"],"id":19,"synopsis":"Keyword
                                    With Args With Double Quotation Mark","html_doc":"&lt;p&gt;Keyword With Args With
                                    Double Quotation Mark&lt;/p&gt;","arg_string":"ok_argument,
                                    not_ok_argument=Kill.${app.replace(-, _)}","collection":{"id":8,"name":"test_robot"}},{"name":"Keyword
                                    With Args With Single Quotation Mark","doc":"Keyword With Args With Single Quotation
                                    Mark","args":"[\"ok_argument\",
                                    \"not_ok_argument=Kill.${app.replace(-, _)}\"]","tags":["fouth_tag","third_tag"],"id":20,"synopsis":"Keyword
                                    With Args With Single Quotation Mark","html_doc":"&lt;p&gt;Keyword With Args With
                                    Single Quotation Mark&lt;/p&gt;","arg_string":"ok_argument,
                                    not_ok_argument=Kill.${app.replace(-, _)}","collection":{"id":8,"name":"test_robot"}},{"name":"Lib
                                    With Empty Init 1 Method 1","doc":"Docstring for
                                    lib_with_empty_init_1_method_1","args":"","tags":[],"id":1,"synopsis":"Docstring for
                                    lib_with_empty_init_1_method_1","html_doc":"&lt;p&gt;Docstring for
                                    lib_with_empty_init_1_method_1&lt;/p&gt;","arg_string":"","collection":{"id":1,"name":"LibWithEmptyInit1"}},{"name":"Lib
                                    With Empty Init 1 Method 2","doc":"Docstring for
                                    lib_with_empty_init_1_method_2","args":"","tags":[],"id":2,"synopsis":"Docstring for
                                    lib_with_empty_init_1_method_2","html_doc":"&lt;p&gt;Docstring for
                                    lib_with_empty_init_1_method_2&lt;/p&gt;","arg_string":"","collection":{"id":1,"name":"LibWithEmptyInit1"}},{"name":"Lib
                                    With Empty Init 2 Method 1","doc":"Docstring for
                                    lib_with_empty_init_2_method_1","args":"","tags":[],"id":3,"synopsis":"Docstring for
                                    lib_with_empty_init_2_method_1","html_doc":"&lt;p&gt;Docstring for
                                    lib_with_empty_init_2_method_1&lt;/p&gt;","arg_string":"","collection":{"id":2,"name":"LibWithEmptyInit2"}},{"name":"Lib
                                    With Empty Init 2 Method 2","doc":"Docstring for
                                    lib_with_empty_init_2_method_2","args":"","tags":[],"id":4,"synopsis":"Docstring for
                                    lib_with_empty_init_2_method_2","html_doc":"&lt;p&gt;Docstring for
                                    lib_with_empty_init_2_method_2&lt;/p&gt;","arg_string":"","collection":{"id":2,"name":"LibWithEmptyInit2"}},{"name":"Lib
                                    With Init 1 Method 1","doc":"Docstring for
                                    lib_with_init_1_method_1","args":"","tags":[],"id":5,"synopsis":"Docstring for
                                    lib_with_init_1_method_1","html_doc":"&lt;p&gt;Docstring for
                                    lib_with_init_1_method_1&lt;/p&gt;","arg_string":"","collection":{"id":3,"name":"LibWithInit"}},{"name":"Lib
                                    With Init 1 Method 2","doc":"Docstring for
                                    lib_with_init_1_method_2","args":"","tags":[],"id":6,"synopsis":"Docstring for
                                    lib_with_init_1_method_2","html_doc":"&lt;p&gt;Docstring for
                                    lib_with_init_1_method_2&lt;/p&gt;","arg_string":"","collection":{"id":3,"name":"LibWithInit"}},{"name":"Lib
                                    With Init 2 Method 1","doc":"Docstring for
                                    lib_with_init_2_method_1","args":"","tags":[],"id":7,"synopsis":"Docstring for
                                    lib_with_init_2_method_1","html_doc":"&lt;p&gt;Docstring for
                                    lib_with_init_2_method_1&lt;/p&gt;","arg_string":"","collection":{"id":3,"name":"LibWithInit"}},{"name":"Lib
                                    With Init 2 Method 2","doc":"Docstring for
                                    lib_with_init_2_method_2","args":"","tags":[],"id":8,"synopsis":"Docstring for
                                    lib_with_init_2_method_2","html_doc":"&lt;p&gt;Docstring for
                                    lib_with_init_2_method_2&lt;/p&gt;","arg_string":"","collection":{"id":3,"name":"LibWithInit"}},{"name":"My
                                    Awesome Keyword","doc":"Docstring for
                                    my_awesome_keyword","args":"[\"arg1\"]","tags":[],"id":25,"synopsis":"Docstring for
                                    my_awesome_keyword","html_doc":"&lt;p&gt;Docstring for my_awesome_keyword&lt;/p&gt;","arg_string":"arg1","collection":{"id":10,"name":"MySuperLib"}},{"name":"Single
                                    Class Lib Method 1","doc":"Docstring for
                                    single_class_lib_method_1","args":"","tags":["tag_1","tag_2"],"id":21,"synopsis":"Docstring
                                    for single_class_lib_method_1","html_doc":"&lt;p&gt;Docstring for
                                    single_class_lib_method_1&lt;/p&gt;","arg_string":"","collection":{"id":9,"name":"SingleClassLib"}},{"name":"Single
                                    Class Lib Method 2","doc":"Docstring for
                                    single_class_lib_method_2","args":"","tags":[],"id":22,"synopsis":"Docstring for
                                    single_class_lib_method_2","html_doc":"&lt;p&gt;Docstring for
                                    single_class_lib_method_2&lt;/p&gt;","arg_string":"","collection":{"id":9,"name":"SingleClassLib"}},{"name":"Single
                                    Class Lib Method 3","doc":"Docstring for single_class_lib_method_3 with two
                                    params","args":"[\"param_1\", \"param_2\"]","tags":[],"id":23,"synopsis":"Docstring
                                    for single_class_lib_method_3 with two params","html_doc":"&lt;p&gt;Docstring for
                                    single_class_lib_method_3 with two params&lt;/p&gt;","arg_string":"param_1,
                                    param_2","collection":{"id":9,"name":"SingleClassLib"}},{"name":"Single Class Lib
                                    Method 4","doc":"Docstring for single_class_lib_method_4 with two
                                    params","args":"[\"param_1\", \"param_2\"]","tags":[],"id":24,"synopsis":"Docstring
                                    for single_class_lib_method_4 with two params","html_doc":"&lt;p&gt;Docstring for
                                    single_class_lib_method_4 with two params&lt;/p&gt;","arg_string":"param_1,
                                    param_2","collection":{"id":9,"name":"SingleClassLib"}},{"name":"Someone Shall
                                    Pass","doc":"","args":"[\"who\"]","tags":[],"id":12,"synopsis":"","html_doc":"","arg_string":"who","collection":{"id":5,"name":"Test
                                    Libdoc File"}}]
                                </msg>
                                <msg timestamp="20210830 17:35:59.564" level="INFO">${response} = &lt;Response
                                    [200]&gt;
                                </msg>
                                <status status="PASS" starttime="20210830 17:35:59.529"
                                        endtime="20210830 17:35:59.564"/>
                            </kw>
                            <kw name="Should Be Equal As Integers" library="BuiltIn">
                                <arg>${response.status_code}</arg>
                                <arg>200</arg>
                                <doc>Fails if objects are unequal after converting them to integers.</doc>
                                <msg timestamp="20210830 17:35:59.566" level="INFO">Argument types are:
                                    &lt;class 'int'&gt;
                                    &lt;type 'unicode'&gt;
                                </msg>
                                <status status="PASS" starttime="20210830 17:35:59.564"
                                        endtime="20210830 17:35:59.566"/>
                            </kw>
                            <msg timestamp="20210830 17:35:59.569" level="INFO">${response} = [{'name': 'Keyword 1
                                Imported From Resource File', 'doc': 'This keyword was imported from file\nwith
                                .resource extension, available since RFWK 3.1', 'args': '', 'tags': ['first_tag'], 'id':
                                15, 'synop...
                            </msg>
                            <status status="PASS" starttime="20210830 17:35:59.527" endtime="20210830 17:35:59.569"/>
                        </kw>
                        <kw name="Length Should Be" library="BuiltIn">
                            <arg>${response}</arg>
                            <arg>${n}</arg>
                            <doc>Verifies that the length of the given item is correct.</doc>
                            <msg timestamp="20210830 17:35:59.570" level="INFO">Length is 22</msg>
                            <status status="PASS" starttime="20210830 17:35:59.569" endtime="20210830 17:35:59.570"/>
                        </kw>
                        <status status="PASS" starttime="20210830 17:35:59.526" endtime="20210830 17:35:59.570"/>
                    </kw>
                    <status status="PASS" starttime="20210830 17:35:59.484" endtime="20210830 17:35:59.570"/>
                </kw>
                <doc>Cli Merge Load Mode Should Leave Application
                    With Matched Collections Updated Without Not Matched Collection Removal
                </doc>
                <tag>merge</tag>
                <tag>rfhub2-64</tag>
                <status status="PASS" starttime="20210830 17:35:54.568" endtime="20210830 17:35:59.571"/>
            </test>
            <test id="s1-s2-t12"
                  name="Cli Merge Load Mode Should Update Existing Resources And Do Not Remove Not Provided Paths">
                <kw name="Switch Merged With Merged_2 Fixtures" library="keywords" type="SETUP">
                    <kw name="Remove Directory" library="OperatingSystem">
                        <arg>${INITIAL_FIXTURES}</arg>
                        <arg>recursive=True</arg>
                        <doc>Removes the directory pointed to by the given ``path``.</doc>
                        <msg timestamp="20210830 17:35:59.579" level="INFO" html="true">Removed directory '&lt;a
                            href="file://C:\repo\rfhub2\tests\fixtures\initial"&gt;C:\repo\rfhub2\tests\fixtures\initial&lt;/a&gt;'.
                        </msg>
                        <status status="PASS" starttime="20210830 17:35:59.573" endtime="20210830 17:35:59.579"/>
                    </kw>
                    <kw name="Copy Directory" library="OperatingSystem">
                        <arg>${MERGED_2_FIXTURES}</arg>
                        <arg>${INITIAL_FIXTURES}</arg>
                        <doc>Copies the source directory into the destination.</doc>
                        <msg timestamp="20210830 17:35:59.609" level="INFO" html="true">Copied directory from '&lt;a
                            href="file://C:\repo\rfhub2\tests\fixtures\merged_2"&gt;C:\repo\rfhub2\tests\fixtures\merged_2&lt;/a&gt;'
                            to '&lt;a href="file://C:\repo\rfhub2\tests\fixtures\initial"&gt;C:\repo\rfhub2\tests\fixtures\initial&lt;/a&gt;'.
                        </msg>
                        <status status="PASS" starttime="20210830 17:35:59.579" endtime="20210830 17:35:59.609"/>
                    </kw>
                    <status status="PASS" starttime="20210830 17:35:59.573" endtime="20210830 17:35:59.610"/>
                </kw>
                <kw name="Run Cli Package With Options" library="keywords">
                    <arg>--load-mode=merge --no-installed-keywords ${INITIAL_FIXTURES}</arg>
                    <doc>Attempt to run the rfhub2-cli package with the given options
                        The stdout of the process will be in a test suite
                        variable named ${output}
                    </doc>
                    <kw name="Run" library="OperatingSystem">
                        <var>${output}</var>
                        <arg>${ACTIVATE_VENV} rfhub2-cli -a http://${HOST}:8000 ${options}</arg>
                        <doc>Runs the given command in the system and returns the output.</doc>
                        <msg timestamp="20210830 17:35:59.764" level="INFO">Running command ' rfhub2-cli -a
                            http://127.0.0.1:8000 --load-mode=merge --no-installed-keywords
                            C:\repo\rfhub2\tests\acceptance\resources\..\..\fixtures/initial/ 2&gt;&amp;1'.
                        </msg>
                        <msg timestamp="20210830 17:36:01.826" level="INFO">${output} = test_resource library with 1
                            keywords loaded.
                            test_robot library with 4 keywords loaded.

                            Successfully loaded 2 collections with 5 keywords.
                        </msg>
                        <status status="PASS" starttime="20210830 17:35:59.611" endtime="20210830 17:36:01.826"/>
                    </kw>
                    <kw name="Set Suite Variable" library="BuiltIn">
                        <arg>${output}</arg>
                        <doc>Makes a variable available everywhere within the scope of the current suite.</doc>
                        <msg timestamp="20210830 17:36:01.827" level="INFO">${output} = test_resource library with 1
                            keywords loaded.
                            test_robot library with 4 keywords loaded.

                            Successfully loaded 2 collections with 5 keywords.
                        </msg>
                        <status status="PASS" starttime="20210830 17:36:01.827" endtime="20210830 17:36:01.827"/>
                    </kw>
                    <status status="PASS" starttime="20210830 17:35:59.610" endtime="20210830 17:36:01.827"/>
                </kw>
                <kw name="Api Should Have 9 Collections And 21 Keywords"
                    sourcename="Api Should Have ${n} Collections And ${m} Keywords">
                    <kw name="collections Endpoint Should Have ${n} Items" library="keywords"
                        sourcename="${endpoint} Endpoint Should Have ${n} Items">
                        <kw name="Get Request For Endpoint" library="keywords">
                            <var>${response}</var>
                            <arg>endpoint=${endpoint}</arg>
                            <kw name="Create Session" library="RequestsLibrary">
                                <arg>tmp</arg>
                                <arg>http://${HOST}:8000/api/v1</arg>
                                <doc>Create Session: create a HTTP session to a server</doc>
                                <msg timestamp="20210830 17:36:01.830" level="INFO">Creating Session using : alias=tmp,
                                    url=http://127.0.0.1:8000/api/v1, headers={}, cookies={}, auth=None, timeout=None,
                                    proxies=None, verify=False, debug=0
                                </msg>
                                <status status="PASS" starttime="20210830 17:36:01.830"
                                        endtime="20210830 17:36:01.831"/>
                            </kw>
                            <kw name="Get On Session" library="RequestsLibrary">
                                <var>${response}</var>
                                <arg>tmp</arg>
                                <arg>${endpoint}/</arg>
                                <arg>params=${params}</arg>
                                <doc>Sends a GET request on a previously created HTTP Session.</doc>
                                <msg timestamp="20210830 17:36:01.861" level="INFO">GET Request :
                                    url=http://127.0.0.1:8000/api/v1/collections/?None
                                    path_url=/api/v1/collections/?None
                                    headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate',
                                    'Accept': '*/*', 'Connection': 'keep-alive'}
                                    body=None
                                </msg>
                                <msg timestamp="20210830 17:36:01.861" level="INFO">GET Response :
                                    url=http://127.0.0.1:8000/api/v1/collections/?None
                                    status=200, reason=OK
                                    headers={'date': 'Mon, 30 Aug 2021 15:36:01 GMT', 'server': 'uvicorn',
                                    'content-length': '10790', 'content-type': 'application/json'}
                                    body=[{"name":"LibWithEmptyInit1","type":"LIBRARY","version":"2.1.0","scope":"TEST","named_args":null,"path":"C:\\repo\\rfhub2\\tests\\acceptance\\resources\\..\\..\\fixtures\\initial\\LibsWithEmptyInit\\LibWithEmptyInit1.py","doc":"Overview
                                    that should be imported for
                                    LibWithEmptyInit1.","doc_format":"ROBOT","id":1,"keywords":[{"name":"Lib With Empty
                                    Init 1 Method 1","doc":"Docstring for
                                    lib_with_empty_init_1_method_1","args":"","tags":[],"id":1,"synopsis":"Docstring for
                                    lib_with_empty_init_1_method_1","html_doc":"&lt;p&gt;Docstring for
                                    lib_with_empty_init_1_method_1&lt;/p&gt;","arg_string":""},{"name":"Lib With Empty
                                    Init 1 Method 2","doc":"Docstring for
                                    lib_with_empty_init_1_method_2","args":"","tags":[],"id":2,"synopsis":"Docstring for
                                    lib_with_empty_init_1_method_2","html_doc":"&lt;p&gt;Docstring for
                                    lib_with_empty_init_1_method_2&lt;/p&gt;","arg_string":""}],"synopsis":"Overview
                                    that should be imported for LibWithEmptyInit1.","html_doc":"&lt;p&gt;Overview that
                                    should be imported for LibWithEmptyInit1.&lt;/p&gt;"},{"name":"LibWithEmptyInit2","type":"LIBRARY","version":"1.0.0","scope":"TEST","named_args":null,"path":"C:\\repo\\rfhub2\\tests\\acceptance\\resources\\..\\..\\fixtures\\initial\\LibsWithEmptyInit\\LibWithEmptyInit2.py","doc":"Overview
                                    that should be imported for
                                    LibWithEmptyInit2.","doc_format":"ROBOT","id":2,"keywords":[{"name":"Lib With Empty
                                    Init 2 Method 1","doc":"Docstring for
                                    lib_with_empty_init_2_method_1","args":"","tags":[],"id":3,"synopsis":"Docstring for
                                    lib_with_empty_init_2_method_1","html_doc":"&lt;p&gt;Docstring for
                                    lib_with_empty_init_2_method_1&lt;/p&gt;","arg_string":""},{"name":"Lib With Empty
                                    Init 2 Method 2","doc":"Docstring for
                                    lib_with_empty_init_2_method_2","args":"","tags":[],"id":4,"synopsis":"Docstring for
                                    lib_with_empty_init_2_method_2","html_doc":"&lt;p&gt;Docstring for
                                    lib_with_empty_init_2_method_2&lt;/p&gt;","arg_string":""}],"synopsis":"Overview
                                    that should be imported for LibWithEmptyInit2.","html_doc":"&lt;p&gt;Overview that
                                    should be imported for LibWithEmptyInit2.&lt;/p&gt;"},{"name":"LibWithInit","type":"LIBRARY","version":"6.6.6","scope":"GLOBAL","named_args":null,"path":"C:\\repo\\rfhub2\\tests\\acceptance\\resources\\..\\..\\fixtures\\initial\\LibWithInit","doc":"This
                                    is a docstring that should be imported as overview\n\nHere goes some docs that
                                    should appear on rfhub2 if init is parametrised\n\nThe library
                                    import:\n\nExamples:\n| Library LibWithInit dummy=../one # add one dummy\n| Library
                                    LibWithInit path=../one,/global # add two
                                    dummies","doc_format":"ROBOT","id":3,"keywords":[{"name":"Lib With Init 1 Method
                                    1","doc":"Docstring for
                                    lib_with_init_1_method_1","args":"","tags":[],"id":5,"synopsis":"Docstring for
                                    lib_with_init_1_method_1","html_doc":"&lt;p&gt;Docstring for
                                    lib_with_init_1_method_1&lt;/p&gt;","arg_string":""},{"name":"Lib With Init 1 Method
                                    2","doc":"Docstring for
                                    lib_with_init_1_method_2","args":"","tags":[],"id":6,"synopsis":"Docstring for
                                    lib_with_init_1_method_2","html_doc":"&lt;p&gt;Docstring for
                                    lib_with_init_1_method_2&lt;/p&gt;","arg_string":""},{"name":"Lib With Init 2 Method
                                    1","doc":"Docstring for
                                    lib_with_init_2_method_1","args":"","tags":[],"id":7,"synopsis":"Docstring for
                                    lib_with_init_2_method_1","html_doc":"&lt;p&gt;Docstring for
                                    lib_with_init_2_method_1&lt;/p&gt;","arg_string":""},{"name":"Lib With Init 2 Method
                                    2","doc":"Docstring for
                                    lib_with_init_2_method_2","args":"","tags":[],"id":8,"synopsis":"Docstring for
                                    lib_with_init_2_method_2","html_doc":"&lt;p&gt;Docstring for
                                    lib_with_init_2_method_2&lt;/p&gt;","arg_string":""}],"synopsis":"This is a
                                    docstring that should be imported as overview","html_doc":"&lt;p&gt;This is a
                                    docstring that should be imported as overview&lt;/p&gt;\n&lt;p&gt;Here goes some
                                    docs that should appear on rfhub2 if init is parametrised&lt;/p&gt;\n&lt;p&gt;The
                                    library import:&lt;/p&gt;\n&lt;p&gt;Examples:&lt;/p&gt;\n&lt;pre&gt;\nLibrary
                                    LibWithInit dummy=../one # add one dummy\nLibrary LibWithInit path=../one,/global #
                                    add two dummies\n&lt;/pre&gt;"},{"name":"MySuperLib","type":"LIBRARY","version":"6.9.6","scope":"GLOBAL","named_args":null,"path":"C:\\repo\\rfhub2\\tests\\acceptance\\resources\\..\\..\\fixtures\\initial\\MySuperLib\\MySuperLib.py","doc":"This
                                    is a docstring that should be imported as
                                    overview\nMySuperLib","doc_format":"ROBOT","id":10,"keywords":[{"name":"My Awesome
                                    Keyword","doc":"Docstring for
                                    my_awesome_keyword","args":"[\"arg1\"]","tags":[],"id":25,"synopsis":"Docstring for
                                    my_awesome_keyword","html_doc":"&lt;p&gt;Docstring for my_awesome_keyword&lt;/p&gt;","arg_string":"arg1"}],"synopsis":"This
                                    is a docstring that should be imported as overview","html_doc":"&lt;p&gt;This is a
                                    docstring that should be imported as overview MySuperLib&lt;/p&gt;"},{"name":"SingleClassLib","type":"LIBRARY","version":"1.2.9","scope":"TEST","named_args":null,"path":"C:\\repo\\rfhub2\\tests\\acceptance\\resources\\..\\..\\fixtures\\initial\\SingleClassLib\\SingleClassLib.py","doc":"Overview
                                    that should be imported for
                                    SingleClassLib.","doc_format":"ROBOT","id":9,"keywords":[{"name":"Single Class Lib
                                    Method 1","doc":"Docstring for
                                    single_class_lib_method_1","args":"","tags":["tag_1","tag_2"],"id":21,"synopsis":"Docstring
                                    for single_class_lib_method_1","html_doc":"&lt;p&gt;Docstring for
                                    single_class_lib_method_1&lt;/p&gt;","arg_string":""},{"name":"Single Class Lib
                                    Method 2","doc":"Docstring for
                                    single_class_lib_method_2","args":"","tags":[],"id":22,"synopsis":"Docstring for
                                    single_class_lib_method_2","html_doc":"&lt;p&gt;Docstring for
                                    single_class_lib_method_2&lt;/p&gt;","arg_string":""},{"name":"Single Class Lib
                                    Method 3","doc":"Docstring for single_class_lib_method_3 with two
                                    params","args":"[\"param_1\", \"param_2\"]","tags":[],"id":23,"synopsis":"Docstring
                                    for single_class_lib_method_3 with two params","html_doc":"&lt;p&gt;Docstring for
                                    single_class_lib_method_3 with two params&lt;/p&gt;","arg_string":"param_1,
                                    param_2"},{"name":"Single Class Lib Method 4","doc":"Docstring for
                                    single_class_lib_method_4 with two params","args":"[\"param_1\",
                                    \"param_2\"]","tags":[],"id":24,"synopsis":"Docstring for single_class_lib_method_4
                                    with two params","html_doc":"&lt;p&gt;Docstring for single_class_lib_method_4 with
                                    two params&lt;/p&gt;","arg_string":"param_1, param_2"}],"synopsis":"Overview that
                                    should be imported for SingleClassLib.","html_doc":"&lt;p&gt;Overview that should be
                                    imported for SingleClassLib.&lt;/p&gt;"},{"name":"Test Libdoc
                                    File","type":"LIBRARY","version":"3.2.0","scope":"GLOBAL","named_args":null,"path":"C:\\repo\\rfhub2\\tests\\acceptance\\resources\\..\\..\\fixtures\\initial\\test_libdoc_file.xml","doc":"Documentation
                                    for library ``Test Libdoc
                                    File``.","doc_format":"ROBOT","id":5,"keywords":[{"name":"Someone Shall
                                    Pass","doc":"","args":"[\"who\"]","tags":[],"id":12,"synopsis":"","html_doc":"","arg_string":"who"}],"synopsis":"Documentation
                                    for library ``Test Libdoc File``.","html_doc":"&lt;p&gt;Documentation for library
                                    &lt;code&gt;Test Libdoc File&lt;/code&gt;.&lt;/p&gt;"},{"name":"test_res_lib_dir","type":"RESOURCE","version":"","scope":"GLOBAL","named_args":null,"path":"C:\\repo\\rfhub2\\tests\\acceptance\\resources\\..\\..\\fixtures\\initial\\LibWithInit\\test_res_lib_dir.resource","doc":"File
                                    with .resource extension with two test
                                    keywords","doc_format":"ROBOT","id":6,"keywords":[{"name":"Keyword 1 Imported From
                                    Resource From Lib Dir File","doc":"This keyword was imported from file\nwith
                                    .resource extension, available since RFWK
                                    3.1","args":"","tags":[],"id":13,"synopsis":"This keyword was imported from
                                    file","html_doc":"&lt;p&gt;This keyword was imported from file with .resource
                                    extension, available since RFWK 3.1&lt;/p&gt;","arg_string":""},{"name":"Keyword 2
                                    Imported From Resource From Lib Dir File","doc":"This keyword was imported from
                                    file\nwith .resource extension, available since RFWK 3.1","args":"[\"arg_1\",
                                    \"arg_2\"]","tags":[],"id":14,"synopsis":"This keyword was imported from
                                    file","html_doc":"&lt;p&gt;This keyword was imported from file with .resource
                                    extension, available since RFWK 3.1&lt;/p&gt;","arg_string":"arg_1,
                                    arg_2"}],"synopsis":"File with .resource extension with two test
                                    keywords","html_doc":"&lt;p&gt;File with .resource extension with two test keywords&lt;/p&gt;"},{"name":"test_resource","type":"RESOURCE","version":"","scope":"GLOBAL","named_args":null,"path":"C:\\repo\\rfhub2\\tests\\acceptance\\resources\\..\\..\\fixtures\\initial\\test_resource.resource","doc":"File
                                    with .resource extension with two test
                                    keywords","doc_format":"ROBOT","id":11,"keywords":[{"name":"Keyword 2 Imported From
                                    Resource File","doc":"This keyword was imported from file\nwith .resource extension,
                                    available since RFWK 3.1","args":"[\"arg_1\",
                                    \"arg_2\"]","tags":["first_tag","second_tag"],"id":26,"synopsis":"This keyword was
                                    imported from file","html_doc":"&lt;p&gt;This keyword was imported from file with
                                    .resource extension, available since RFWK 3.1&lt;/p&gt;","arg_string":"arg_1,
                                    arg_2"}],"synopsis":"File with .resource extension with two test
                                    keywords","html_doc":"&lt;p&gt;File with .resource extension with two test keywords&lt;/p&gt;"},{"name":"test_robot","type":"RESOURCE","version":"","scope":"GLOBAL","named_args":null,"path":"C:\\repo\\rfhub2\\tests\\acceptance\\resources\\..\\..\\fixtures\\initial\\test_robot.robot","doc":"File
                                    with .robot extension with two test
                                    keywords","doc_format":"ROBOT","id":12,"keywords":[{"name":"Keyword 1 Imported From
                                    Robot File","doc":"This keyword was imported from file\nwith .robot
                                    extension","args":"","tags":["first_tag","second_tag"],"id":27,"synopsis":"This
                                    keyword was imported from file","html_doc":"&lt;p&gt;This keyword was imported from
                                    file with .robot extension&lt;/p&gt;","arg_string":""},{"name":"Keyword 2 Imported
                                    From Robot File","doc":"This keyword was imported from file\nwith .robot
                                    extension","args":"[\"arg_1\",
                                    \"arg_2\"]","tags":["first_tag","second_tag","third_tag"],"id":28,"synopsis":"This
                                    keyword was imported from file","html_doc":"&lt;p&gt;This keyword was imported from
                                    file with .robot extension&lt;/p&gt;","arg_string":"arg_1, arg_2"},{"name":"Keyword
                                    With Args With Double Quotation Mark Merged","doc":"Keyword With Args With Double
                                    Quotation Mark Merged","args":"[\"ok_argument\",
                                    \"not_ok_argument=Kill.${app.replace(-, _)}\"]","tags":["fi... (set the log level to
                                    DEBUG or TRACE to see the full content)
                                </msg>
                                <msg timestamp="20210830 17:36:01.862" level="INFO">${response} = &lt;Response
                                    [200]&gt;
                                </msg>
                                <status status="PASS" starttime="20210830 17:36:01.831"
                                        endtime="20210830 17:36:01.862"/>
                            </kw>
                            <kw name="Should Be Equal As Integers" library="BuiltIn">
                                <arg>${response.status_code}</arg>
                                <arg>200</arg>
                                <doc>Fails if objects are unequal after converting them to integers.</doc>
                                <msg timestamp="20210830 17:36:01.864" level="INFO">Argument types are:
                                    &lt;class 'int'&gt;
                                    &lt;type 'unicode'&gt;
                                </msg>
                                <status status="PASS" starttime="20210830 17:36:01.862"
                                        endtime="20210830 17:36:01.865"/>
                            </kw>
                            <msg timestamp="20210830 17:36:01.867" level="INFO">${response} = [{'name':
                                'LibWithEmptyInit1', 'type': 'LIBRARY', 'version': '2.1.0', 'scope': 'TEST',
                                'named_args': None, 'path':
                                'C:\\repo\\rfhub2\\tests\\acceptance\\resources\\..\\..\\fixtures\\initial\\LibsWithE...
                            </msg>
                            <status status="PASS" starttime="20210830 17:36:01.829" endtime="20210830 17:36:01.867"/>
                        </kw>
                        <kw name="Length Should Be" library="BuiltIn">
                            <arg>${response}</arg>
                            <arg>${n}</arg>
                            <doc>Verifies that the length of the given item is correct.</doc>
                            <msg timestamp="20210830 17:36:01.868" level="INFO">Length is 9</msg>
                            <status status="PASS" starttime="20210830 17:36:01.867" endtime="20210830 17:36:01.868"/>
                        </kw>
                        <status status="PASS" starttime="20210830 17:36:01.828" endtime="20210830 17:36:01.868"/>
                    </kw>
                    <kw name="keywords Endpoint Should Have ${m} Items" library="keywords"
                        sourcename="${endpoint} Endpoint Should Have ${n} Items">
                        <kw name="Get Request For Endpoint" library="keywords">
                            <var>${response}</var>
                            <arg>endpoint=${endpoint}</arg>
                            <kw name="Create Session" library="RequestsLibrary">
                                <arg>tmp</arg>
                                <arg>http://${HOST}:8000/api/v1</arg>
                                <doc>Create Session: create a HTTP session to a server</doc>
                                <msg timestamp="20210830 17:36:01.870" level="INFO">Creating Session using : alias=tmp,
                                    url=http://127.0.0.1:8000/api/v1, headers={}, cookies={}, auth=None, timeout=None,
                                    proxies=None, verify=False, debug=0
                                </msg>
                                <status status="PASS" starttime="20210830 17:36:01.870"
                                        endtime="20210830 17:36:01.870"/>
                            </kw>
                            <kw name="Get On Session" library="RequestsLibrary">
                                <var>${response}</var>
                                <arg>tmp</arg>
                                <arg>${endpoint}/</arg>
                                <arg>params=${params}</arg>
                                <doc>Sends a GET request on a previously created HTTP Session.</doc>
                                <msg timestamp="20210830 17:36:01.903" level="INFO">GET Request :
                                    url=http://127.0.0.1:8000/api/v1/keywords/?None
                                    path_url=/api/v1/keywords/?None
                                    headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate',
                                    'Accept': '*/*', 'Connection': 'keep-alive'}
                                    body=None
                                </msg>
                                <msg timestamp="20210830 17:36:01.904" level="INFO">GET Response :
                                    url=http://127.0.0.1:8000/api/v1/keywords/?None
                                    status=200, reason=OK
                                    headers={'date': 'Mon, 30 Aug 2021 15:36:01 GMT', 'server': 'uvicorn',
                                    'content-length': '7141', 'content-type': 'application/json'}
                                    body=[{"name":"Keyword 1 Imported From Resource From Lib Dir File","doc":"This
                                    keyword was imported from file\nwith .resource extension, available since RFWK
                                    3.1","args":"","tags":[],"id":13,"synopsis":"This keyword was imported from
                                    file","html_doc":"&lt;p&gt;This keyword was imported from file with .resource
                                    extension, available since RFWK 3.1&lt;/p&gt;","arg_string":"","collection":{"id":6,"name":"test_res_lib_dir"}},{"name":"Keyword
                                    1 Imported From Robot File","doc":"This keyword was imported from file\nwith .robot
                                    extension","args":"","tags":["first_tag","second_tag"],"id":27,"synopsis":"This
                                    keyword was imported from file","html_doc":"&lt;p&gt;This keyword was imported from
                                    file with .robot extension&lt;/p&gt;","arg_string":"","collection":{"id":12,"name":"test_robot"}},{"name":"Keyword
                                    2 Imported From Resource File","doc":"This keyword was imported from file\nwith
                                    .resource extension, available since RFWK 3.1","args":"[\"arg_1\",
                                    \"arg_2\"]","tags":["first_tag","second_tag"],"id":26,"synopsis":"This keyword was
                                    imported from file","html_doc":"&lt;p&gt;This keyword was imported from file with
                                    .resource extension, available since RFWK 3.1&lt;/p&gt;","arg_string":"arg_1,
                                    arg_2","collection":{"id":11,"name":"test_resource"}},{"name":"Keyword 2 Imported
                                    From Resource From Lib Dir File","doc":"This keyword was imported from file\nwith
                                    .resource extension, available since RFWK 3.1","args":"[\"arg_1\",
                                    \"arg_2\"]","tags":[],"id":14,"synopsis":"This keyword was imported from
                                    file","html_doc":"&lt;p&gt;This keyword was imported from file with .resource
                                    extension, available since RFWK 3.1&lt;/p&gt;","arg_string":"arg_1,
                                    arg_2","collection":{"id":6,"name":"test_res_lib_dir"}},{"name":"Keyword 2 Imported
                                    From Robot File","doc":"This keyword was imported from file\nwith .robot
                                    extension","args":"[\"arg_1\",
                                    \"arg_2\"]","tags":["first_tag","second_tag","third_tag"],"id":28,"synopsis":"This
                                    keyword was imported from file","html_doc":"&lt;p&gt;This keyword was imported from
                                    file with .robot extension&lt;/p&gt;","arg_string":"arg_1,
                                    arg_2","collection":{"id":12,"name":"test_robot"}},{"name":"Keyword With Args With
                                    Double Quotation Mark Merged","doc":"Keyword With Args With Double Quotation Mark
                                    Merged","args":"[\"ok_argument\",
                                    \"not_ok_argument=Kill.${app.replace(-, _)}\"]","tags":["fifth_tag","fouth_tag"],"id":29,"synopsis":"Keyword
                                    With Args With Double Quotation Mark Merged","html_doc":"&lt;p&gt;Keyword With Args
                                    With Double Quotation Mark Merged&lt;/p&gt;","arg_string":"ok_argument,
                                    not_ok_argument=Kill.${app.replace(-, _)}","collection":{"id":12,"name":"test_robot"}},{"name":"Keyword
                                    With Args With Single Quotation Mark","doc":"Keyword With Args With Single Quotation
                                    Mark","args":"[\"ok_argument\",
                                    \"not_ok_argument=Kill.${app.replace(-, _)}\"]","tags":["fouth_tag","third_tag"],"id":30,"synopsis":"Keyword
                                    With Args With Single Quotation Mark","html_doc":"&lt;p&gt;Keyword With Args With
                                    Single Quotation Mark&lt;/p&gt;","arg_string":"ok_argument,
                                    not_ok_argument=Kill.${app.replace(-, _)}","collection":{"id":12,"name":"test_robot"}},{"name":"Lib
                                    With Empty Init 1 Method 1","doc":"Docstring for
                                    lib_with_empty_init_1_method_1","args":"","tags":[],"id":1,"synopsis":"Docstring for
                                    lib_with_empty_init_1_method_1","html_doc":"&lt;p&gt;Docstring for
                                    lib_with_empty_init_1_method_1&lt;/p&gt;","arg_string":"","collection":{"id":1,"name":"LibWithEmptyInit1"}},{"name":"Lib
                                    With Empty Init 1 Method 2","doc":"Docstring for
                                    lib_with_empty_init_1_method_2","args":"","tags":[],"id":2,"synopsis":"Docstring for
                                    lib_with_empty_init_1_method_2","html_doc":"&lt;p&gt;Docstring for
                                    lib_with_empty_init_1_method_2&lt;/p&gt;","arg_string":"","collection":{"id":1,"name":"LibWithEmptyInit1"}},{"name":"Lib
                                    With Empty Init 2 Method 1","doc":"Docstring for
                                    lib_with_empty_init_2_method_1","args":"","tags":[],"id":3,"synopsis":"Docstring for
                                    lib_with_empty_init_2_method_1","html_doc":"&lt;p&gt;Docstring for
                                    lib_with_empty_init_2_method_1&lt;/p&gt;","arg_string":"","collection":{"id":2,"name":"LibWithEmptyInit2"}},{"name":"Lib
                                    With Empty Init 2 Method 2","doc":"Docstring for
                                    lib_with_empty_init_2_method_2","args":"","tags":[],"id":4,"synopsis":"Docstring for
                                    lib_with_empty_init_2_method_2","html_doc":"&lt;p&gt;Docstring for
                                    lib_with_empty_init_2_method_2&lt;/p&gt;","arg_string":"","collection":{"id":2,"name":"LibWithEmptyInit2"}},{"name":"Lib
                                    With Init 1 Method 1","doc":"Docstring for
                                    lib_with_init_1_method_1","args":"","tags":[],"id":5,"synopsis":"Docstring for
                                    lib_with_init_1_method_1","html_doc":"&lt;p&gt;Docstring for
                                    lib_with_init_1_method_1&lt;/p&gt;","arg_string":"","collection":{"id":3,"name":"LibWithInit"}},{"name":"Lib
                                    With Init 1 Method 2","doc":"Docstring for
                                    lib_with_init_1_method_2","args":"","tags":[],"id":6,"synopsis":"Docstring for
                                    lib_with_init_1_method_2","html_doc":"&lt;p&gt;Docstring for
                                    lib_with_init_1_method_2&lt;/p&gt;","arg_string":"","collection":{"id":3,"name":"LibWithInit"}},{"name":"Lib
                                    With Init 2 Method 1","doc":"Docstring for
                                    lib_with_init_2_method_1","args":"","tags":[],"id":7,"synopsis":"Docstring for
                                    lib_with_init_2_method_1","html_doc":"&lt;p&gt;Docstring for
                                    lib_with_init_2_method_1&lt;/p&gt;","arg_string":"","collection":{"id":3,"name":"LibWithInit"}},{"name":"Lib
                                    With Init 2 Method 2","doc":"Docstring for
                                    lib_with_init_2_method_2","args":"","tags":[],"id":8,"synopsis":"Docstring for
                                    lib_with_init_2_method_2","html_doc":"&lt;p&gt;Docstring for
                                    lib_with_init_2_method_2&lt;/p&gt;","arg_string":"","collection":{"id":3,"name":"LibWithInit"}},{"name":"My
                                    Awesome Keyword","doc":"Docstring for
                                    my_awesome_keyword","args":"[\"arg1\"]","tags":[],"id":25,"synopsis":"Docstring for
                                    my_awesome_keyword","html_doc":"&lt;p&gt;Docstring for my_awesome_keyword&lt;/p&gt;","arg_string":"arg1","collection":{"id":10,"name":"MySuperLib"}},{"name":"Single
                                    Class Lib Method 1","doc":"Docstring for
                                    single_class_lib_method_1","args":"","tags":["tag_1","tag_2"],"id":21,"synopsis":"Docstring
                                    for single_class_lib_method_1","html_doc":"&lt;p&gt;Docstring for
                                    single_class_lib_method_1&lt;/p&gt;","arg_string":"","collection":{"id":9,"name":"SingleClassLib"}},{"name":"Single
                                    Class Lib Method 2","doc":"Docstring for
                                    single_class_lib_method_2","args":"","tags":[],"id":22,"synopsis":"Docstring for
                                    single_class_lib_method_2","html_doc":"&lt;p&gt;Docstring for
                                    single_class_lib_method_2&lt;/p&gt;","arg_string":"","collection":{"id":9,"name":"SingleClassLib"}},{"name":"Single
                                    Class Lib Method 3","doc":"Docstring for single_class_lib_method_3 with two
                                    params","args":"[\"param_1\", \"param_2\"]","tags":[],"id":23,"synopsis":"Docstring
                                    for single_class_lib_method_3 with two params","html_doc":"&lt;p&gt;Docstring for
                                    single_class_lib_method_3 with two params&lt;/p&gt;","arg_string":"param_1,
                                    param_2","collection":{"id":9,"name":"SingleClassLib"}},{"name":"Single Class Lib
                                    Method 4","doc":"Docstring for single_class_lib_method_4 with two
                                    params","args":"[\"param_1\", \"param_2\"]","tags":[],"id":24,"synopsis":"Docstring
                                    for single_class_lib_method_4 with two params","html_doc":"&lt;p&gt;Docstring for
                                    single_class_lib_method_4 with two params&lt;/p&gt;","arg_string":"param_1,
                                    param_2","collection":{"id":9,"name":"SingleClassLib"}},{"name":"Someone Shall
                                    Pass","doc":"","args":"[\"who\"]","tags":[],"id":12,"synopsis":"","html_doc":"","arg_string":"who","collection":{"id":5,"name":"Test
                                    Libdoc File"}}]
                                </msg>
                                <msg timestamp="20210830 17:36:01.904" level="INFO">${response} = &lt;Response
                                    [200]&gt;
                                </msg>
                                <status status="PASS" starttime="20210830 17:36:01.871"
                                        endtime="20210830 17:36:01.904"/>
                            </kw>
                            <kw name="Should Be Equal As Integers" library="BuiltIn">
                                <arg>${response.status_code}</arg>
                                <arg>200</arg>
                                <doc>Fails if objects are unequal after converting them to integers.</doc>
                                <msg timestamp="20210830 17:36:01.907" level="INFO">Argument types are:
                                    &lt;class 'int'&gt;
                                    &lt;type 'unicode'&gt;
                                </msg>
                                <status status="PASS" starttime="20210830 17:36:01.904"
                                        endtime="20210830 17:36:01.907"/>
                            </kw>
                            <msg timestamp="20210830 17:36:01.909" level="INFO">${response} = [{'name': 'Keyword 1
                                Imported From Resource From Lib Dir File', 'doc': 'This keyword was imported from
                                file\nwith .resource extension, available since RFWK 3.1', 'args': '', 'tags': [], 'id':
                                13, 'syn...
                            </msg>
                            <status status="PASS" starttime="20210830 17:36:01.869" endtime="20210830 17:36:01.909"/>
                        </kw>
                        <kw name="Length Should Be" library="BuiltIn">
                            <arg>${response}</arg>
                            <arg>${n}</arg>
                            <doc>Verifies that the length of the given item is correct.</doc>
                            <msg timestamp="20210830 17:36:01.910" level="INFO">Length is 21</msg>
                            <status status="PASS" starttime="20210830 17:36:01.909" endtime="20210830 17:36:01.910"/>
                        </kw>
                        <status status="PASS" starttime="20210830 17:36:01.868" endtime="20210830 17:36:01.910"/>
                    </kw>
                    <status status="PASS" starttime="20210830 17:36:01.828" endtime="20210830 17:36:01.910"/>
                </kw>
                <doc>Cli Merge Load Mode Should Leave Application
                    With Matched Collections Updated Without Not Matched Collection Removal
                    This test bases on
                    'Cli Merge Load Mode Should Update Existing Libraries And Do Not Remove Not Provided Paths'
                    to speed up execution
                </doc>
                <tag>merge</tag>
                <tag>rfhub2-64</tag>
                <status status="PASS" starttime="20210830 17:35:59.571" endtime="20210830 17:36:01.911"/>
            </test>
            <test id="s1-s2-t13" name="Running Cli Merge Load Mode Second Time Should Leave Collections Untouched">
                <kw name="Run Cli Package With Options" library="keywords">
                    <arg>--load-mode=merge --no-installed-keywords ${INITIAL_FIXTURES}</arg>
                    <doc>Attempt to run the rfhub2-cli package with the given options
                        The stdout of the process will be in a test suite
                        variable named ${output}
                    </doc>
                    <kw name="Run" library="OperatingSystem">
                        <var>${output}</var>
                        <arg>${ACTIVATE_VENV} rfhub2-cli -a http://${HOST}:8000 ${options}</arg>
                        <doc>Runs the given command in the system and returns the output.</doc>
                        <msg timestamp="20210830 17:36:02.067" level="INFO">Running command ' rfhub2-cli -a
                            http://127.0.0.1:8000 --load-mode=merge --no-installed-keywords
                            C:\repo\rfhub2\tests\acceptance\resources\..\..\fixtures/initial/ 2&gt;&amp;1'.
                        </msg>
                        <msg timestamp="20210830 17:36:03.939" level="INFO">${output} =
                            Successfully loaded 0 collections with 0 keywords.
                        </msg>
                        <status status="PASS" starttime="20210830 17:36:01.913" endtime="20210830 17:36:03.939"/>
                    </kw>
                    <kw name="Set Suite Variable" library="BuiltIn">
                        <arg>${output}</arg>
                        <doc>Makes a variable available everywhere within the scope of the current suite.</doc>
                        <msg timestamp="20210830 17:36:03.940" level="INFO">${output} =
                            Successfully loaded 0 collections with 0 keywords.
                        </msg>
                        <status status="PASS" starttime="20210830 17:36:03.939" endtime="20210830 17:36:03.940"/>
                    </kw>
                    <status status="PASS" starttime="20210830 17:36:01.913" endtime="20210830 17:36:03.940"/>
                </kw>
                <kw name="Output Should Contain" library="keywords">
                    <arg>Successfully loaded 0 collections with 0 keywords.</arg>
                    <doc>Fail if the output from the previous command doesn't contain the given string
                        This keyword assumes the output of the command is in
                        a test suite variable named ${output}
                    </doc>
                    <kw name="Create Dictionary" library="BuiltIn">
                        <var>${ns}</var>
                        <arg>output=${output}</arg>
                        <doc>Creates and returns a dictionary based on the given ``items``.</doc>
                        <msg timestamp="20210830 17:36:03.942" level="INFO">${ns} = {'output': '\nSuccessfully loaded 0
                            collections with 0 keywords.'}
                        </msg>
                        <status status="PASS" starttime="20210830 17:36:03.941" endtime="20210830 17:36:03.942"/>
                    </kw>
                    <kw name="Evaluate" library="BuiltIn">
                        <var>${clean_output}</var>
                        <arg>" ".join(l.strip() for l in output.splitlines())</arg>
                        <arg>namespace=${ns}</arg>
                        <doc>Evaluates the given expression in Python and returns the result.</doc>
                        <msg timestamp="20210830 17:36:03.943" level="INFO">${clean_output} = Successfully loaded 0
                            collections with 0 keywords.
                        </msg>
                        <status status="PASS" starttime="20210830 17:36:03.942" endtime="20210830 17:36:03.943"/>
                    </kw>
                    <for flavor="IN">
                        <var>${pattern}</var>
                        <value>@{patterns}</value>
                        <iter>
                            <var name="${pattern}">Successfully loaded 0 collections with 0 keywords.</var>
                            <kw name="Run Keyword If" library="BuiltIn">
                                <arg>'''${pattern}''' not in '''${clean_output}'''</arg>
                                <arg>Fail</arg>
                                <arg>Output did not contain '${pattern}'. \n${clean_output}</arg>
                                <doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
                                <status status="PASS" starttime="20210830 17:36:03.944"
                                        endtime="20210830 17:36:03.944"/>
                            </kw>
                            <status status="PASS" starttime="20210830 17:36:03.943" endtime="20210830 17:36:03.944"/>
                        </iter>
                        <status status="PASS" starttime="20210830 17:36:03.943" endtime="20210830 17:36:03.944"/>
                    </for>
                    <status status="PASS" starttime="20210830 17:36:03.940" endtime="20210830 17:36:03.945"/>
                </kw>
                <kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
                    <arg>Restore Initial Fixtures</arg>
                    <arg>AND</arg>
                    <arg>Run Cli Package With Options</arg>
                    <arg>--load-mode=insert --no-installed-keywords</arg>
                    <doc>Executes all the given keywords in a sequence.</doc>
                    <kw name="Restore Initial Fixtures" library="keywords">
                        <kw name="Remove Directory" library="OperatingSystem">
                            <arg>${INITIAL_FIXTURES}</arg>
                            <arg>recursive=True</arg>
                            <doc>Removes the directory pointed to by the given ``path``.</doc>
                            <msg timestamp="20210830 17:36:03.957" level="INFO" html="true">Removed directory '&lt;a
                                href="file://C:\repo\rfhub2\tests\fixtures\initial"&gt;C:\repo\rfhub2\tests\fixtures\initial&lt;/a&gt;'.
                            </msg>
                            <status status="PASS" starttime="20210830 17:36:03.946" endtime="20210830 17:36:03.957"/>
                        </kw>
                        <kw name="Copy Directory" library="OperatingSystem">
                            <arg>${BACKUP_FIXTURES}</arg>
                            <arg>${INITIAL_FIXTURES}</arg>
                            <doc>Copies the source directory into the destination.</doc>
                            <msg timestamp="20210830 17:36:04.031" level="INFO" html="true">Copied directory from '&lt;a
                                href="file://C:\repo\rfhub2\tests\fixtures\initial_bkp"&gt;C:\repo\rfhub2\tests\fixtures\initial_bkp&lt;/a&gt;'
                                to '&lt;a href="file://C:\repo\rfhub2\tests\fixtures\initial"&gt;C:\repo\rfhub2\tests\fixtures\initial&lt;/a&gt;'.
                            </msg>
                            <status status="PASS" starttime="20210830 17:36:03.958" endtime="20210830 17:36:04.031"/>
                        </kw>
                        <kw name="Remove Directory" library="OperatingSystem">
                            <arg>${BACKUP_FIXTURES}</arg>
                            <arg>recursive=True</arg>
                            <doc>Removes the directory pointed to by the given ``path``.</doc>
                            <msg timestamp="20210830 17:36:04.072" level="INFO" html="true">Removed directory '&lt;a
                                href="file://C:\repo\rfhub2\tests\fixtures\initial_bkp"&gt;C:\repo\rfhub2\tests\fixtures\initial_bkp&lt;/a&gt;'.
                            </msg>
                            <status status="PASS" starttime="20210830 17:36:04.031" endtime="20210830 17:36:04.072"/>
                        </kw>
                        <status status="PASS" starttime="20210830 17:36:03.945" endtime="20210830 17:36:04.072"/>
                    </kw>
                    <kw name="Run Cli Package With Options" library="keywords">
                        <arg>--load-mode=insert --no-installed-keywords</arg>
                        <doc>Attempt to run the rfhub2-cli package with the given options
                            The stdout of the process will be in a test suite
                            variable named ${output}
                        </doc>
                        <kw name="Run" library="OperatingSystem">
                            <var>${output}</var>
                            <arg>${ACTIVATE_VENV} rfhub2-cli -a http://${HOST}:8000 ${options}</arg>
                            <doc>Runs the given command in the system and returns the output.</doc>
                            <msg timestamp="20210830 17:36:04.225" level="INFO">Running command ' rfhub2-cli -a
                                http://127.0.0.1:8000 --load-mode=insert --no-installed-keywords 2&gt;&amp;1'.
                            </msg>
                            <msg timestamp="20210830 17:36:06.045" level="INFO">${output} =
                                Successfully loaded 0 collections with 0 keywords.
                            </msg>
                            <status status="PASS" starttime="20210830 17:36:04.073" endtime="20210830 17:36:06.045"/>
                        </kw>
                        <kw name="Set Suite Variable" library="BuiltIn">
                            <arg>${output}</arg>
                            <doc>Makes a variable available everywhere within the scope of the current suite.</doc>
                            <msg timestamp="20210830 17:36:06.046" level="INFO">${output} =
                                Successfully loaded 0 collections with 0 keywords.
                            </msg>
                            <status status="PASS" starttime="20210830 17:36:06.045" endtime="20210830 17:36:06.046"/>
                        </kw>
                        <status status="PASS" starttime="20210830 17:36:04.072" endtime="20210830 17:36:06.046"/>
                    </kw>
                    <status status="PASS" starttime="20210830 17:36:03.945" endtime="20210830 17:36:06.046"/>
                </kw>
                <doc>Running Cli Update Load Mode Second Time
                    Should Leave Collections Untouched. This test bases on
                    'Cli Merge Load Mode Should Update Existing Resources And Do Not Remove Not Provided Paths'
                    to speed up execution
                </doc>
                <tag>merge</tag>
                <tag>rfhub2-64</tag>
                <status status="PASS" starttime="20210830 17:36:01.912" endtime="20210830 17:36:06.047"/>
            </test>
            <test id="s1-s2-t14" name="Running Cli With Library Names Instead Of Paths Should Populate App">
                <kw name="Run Cli Package With Options" library="keywords">
                    <arg>--load-mode=insert --no-installed-keywords RequestsLibrary</arg>
                    <doc>Attempt to run the rfhub2-cli package with the given options
                        The stdout of the process will be in a test suite
                        variable named ${output}
                    </doc>
                    <kw name="Run" library="OperatingSystem">
                        <var>${output}</var>
                        <arg>${ACTIVATE_VENV} rfhub2-cli -a http://${HOST}:8000 ${options}</arg>
                        <doc>Runs the given command in the system and returns the output.</doc>
                        <msg timestamp="20210830 17:36:06.201" level="INFO">Running command ' rfhub2-cli -a
                            http://127.0.0.1:8000 --load-mode=insert --no-installed-keywords RequestsLibrary 2&gt;&amp;1'.
                        </msg>
                        <msg timestamp="20210830 17:36:09.025" level="INFO">${output} = RequestsLibrary library with 33
                            keywords loaded.

                            Successfully loaded 1 collections with 33 keywords.
                        </msg>
                        <status status="PASS" starttime="20210830 17:36:06.049" endtime="20210830 17:36:09.025"/>
                    </kw>
                    <kw name="Set Suite Variable" library="BuiltIn">
                        <arg>${output}</arg>
                        <doc>Makes a variable available everywhere within the scope of the current suite.</doc>
                        <msg timestamp="20210830 17:36:09.026" level="INFO">${output} = RequestsLibrary library with 33
                            keywords loaded.

                            Successfully loaded 1 collections with 33 keywords.
                        </msg>
                        <status status="PASS" starttime="20210830 17:36:09.025" endtime="20210830 17:36:09.026"/>
                    </kw>
                    <status status="PASS" starttime="20210830 17:36:06.049" endtime="20210830 17:36:09.026"/>
                </kw>
                <kw name="Output Should Contain" library="keywords">
                    <arg>Successfully loaded 1 collections with 33 keywords.</arg>
                    <doc>Fail if the output from the previous command doesn't contain the given string
                        This keyword assumes the output of the command is in
                        a test suite variable named ${output}
                    </doc>
                    <kw name="Create Dictionary" library="BuiltIn">
                        <var>${ns}</var>
                        <arg>output=${output}</arg>
                        <doc>Creates and returns a dictionary based on the given ``items``.</doc>
                        <msg timestamp="20210830 17:36:09.028" level="INFO">${ns} = {'output': 'RequestsLibrary library
                            with 33 keywords loaded.\n\nSuccessfully loaded 1 collections with 33 keywords.'}
                        </msg>
                        <status status="PASS" starttime="20210830 17:36:09.027" endtime="20210830 17:36:09.028"/>
                    </kw>
                    <kw name="Evaluate" library="BuiltIn">
                        <var>${clean_output}</var>
                        <arg>" ".join(l.strip() for l in output.splitlines())</arg>
                        <arg>namespace=${ns}</arg>
                        <doc>Evaluates the given expression in Python and returns the result.</doc>
                        <msg timestamp="20210830 17:36:09.029" level="INFO">${clean_output} = RequestsLibrary library
                            with 33 keywords loaded. Successfully loaded 1 collections with 33 keywords.
                        </msg>
                        <status status="PASS" starttime="20210830 17:36:09.028" endtime="20210830 17:36:09.029"/>
                    </kw>
                    <for flavor="IN">
                        <var>${pattern}</var>
                        <value>@{patterns}</value>
                        <iter>
                            <var name="${pattern}">Successfully loaded 1 collections with 33 keywords.</var>
                            <kw name="Run Keyword If" library="BuiltIn">
                                <arg>'''${pattern}''' not in '''${clean_output}'''</arg>
                                <arg>Fail</arg>
                                <arg>Output did not contain '${pattern}'. \n${clean_output}</arg>
                                <doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
                                <status status="PASS" starttime="20210830 17:36:09.030"
                                        endtime="20210830 17:36:09.030"/>
                            </kw>
                            <status status="PASS" starttime="20210830 17:36:09.029" endtime="20210830 17:36:09.030"/>
                        </iter>
                        <status status="PASS" starttime="20210830 17:36:09.029" endtime="20210830 17:36:09.030"/>
                    </for>
                    <status status="PASS" starttime="20210830 17:36:09.026" endtime="20210830 17:36:09.030"/>
                </kw>
                <kw name="Api Should Have 1 Collections And 33 Keywords"
                    sourcename="Api Should Have ${n} Collections And ${m} Keywords">
                    <kw name="collections Endpoint Should Have ${n} Items" library="keywords"
                        sourcename="${endpoint} Endpoint Should Have ${n} Items">
                        <kw name="Get Request For Endpoint" library="keywords">
                            <var>${response}</var>
                            <arg>endpoint=${endpoint}</arg>
                            <kw name="Create Session" library="RequestsLibrary">
                                <arg>tmp</arg>
                                <arg>http://${HOST}:8000/api/v1</arg>
                                <doc>Create Session: create a HTTP session to a server</doc>
                                <msg timestamp="20210830 17:36:09.033" level="INFO">Creating Session using : alias=tmp,
                                    url=http://127.0.0.1:8000/api/v1, headers={}, cookies={}, auth=None, timeout=None,
                                    proxies=None, verify=False, debug=0
                                </msg>
                                <status status="PASS" starttime="20210830 17:36:09.033"
                                        endtime="20210830 17:36:09.034"/>
                            </kw>
                            <kw name="Get On Session" library="RequestsLibrary">
                                <var>${response}</var>
                                <arg>tmp</arg>
                                <arg>${endpoint}/</arg>
                                <arg>params=${params}</arg>
                                <doc>Sends a GET request on a previously created HTTP Session.</doc>
                                <msg timestamp="20210830 17:36:09.084" level="INFO">GET Request :
                                    url=http://127.0.0.1:8000/api/v1/collections/?None
                                    path_url=/api/v1/collections/?None
                                    headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate',
                                    'Accept': '*/*', 'Connection': 'keep-alive'}
                                    body=None
                                </msg>
                                <msg timestamp="20210830 17:36:09.084" level="INFO">GET Response :
                                    url=http://127.0.0.1:8000/api/v1/collections/?None
                                    status=200, reason=OK
                                    headers={'date': 'Mon, 30 Aug 2021 15:36:08 GMT', 'server': 'uvicorn',
                                    'content-length': '86417', 'content-type': 'application/json'}
                                    body=[{"name":"RequestsLibrary","type":"LIBRARY","version":"0.9.1","scope":"GLOBAL","named_args":null,"path":"c:\\program
                                    files
                                    (x86)\\python36-32\\lib\\site-packages\\RequestsLibrary","doc":"RequestsLibrary is a
                                    Robot Framework library aimed to provide HTTP api testing functionalities\nby
                                    wrapping the well known Python Requests Library.\n\n == Table of contents ==\n\n-
                                    `Usage`\n- `Response Object`\n- `Keywords`\n\n = Usage =\n\n The quickest way to
                                    start is using the requests keywords and urls see below examples:\n\n | *** Settings
                                    ***\n | Library RequestsLibrary\n |\n | *** Test Cases ***\n | Quick Get Request
                                    Test\n | ${response}= GET https://www.google.com\n |\n | Quick Get Request With
                                    Parameters Test\n | ${response}= GET https://www.google.com/search params=query=ciao
                                    expected_status=200\n |\n | Quick Get A JSON Body Test\n | ${response}= GET
                                    https://jsonplaceholder.typicode.com/posts/1\n | Should Be Equal As Strings 1
                                    ${response.json()}[id]\n\n In order to share the HTTP Session (with the same url,
                                    headers, cookies, etc.) among multiple requests,\n a new connection needs to be
                                    prepared with ``Create Session`` and passed to the `* On Session` keywords.\n You
                                    can then execute any `* On Session` keywords on the shared session by passing the
                                    created session alias\n name, this will increase performances since the connection
                                    and ssl handshake is recycled and not repeated for\n each requests.\n Below some
                                    more advanced examples:\n\n | *** Settings ***\n | Library Collections\n | Library
                                    RequestsLibrary\n |\n | Suite Setup Create Session jsonplaceholder
                                    https://jsonplaceholder.typicode.com\n |\n | *** Test Cases ***\n |\n | Get Request
                                    Test\n | Create Session google http://www.google.com\n |\n | ${resp_google}= GET On
                                    Session google / expected_status=200\n | ${resp_json}= GET On Session
                                    jsonplaceholder /posts/1\n |\n | Should Be Equal As Strings ${resp_google.reason}
                                    OK\n | Dictionary Should Contain Value ${resp_json.json()} sunt aut facere repellat
                                    provident\n |\n | Post Request Test\n | &amp;{data}= Create dictionary
                                    title=Robotframework requests body=This is a test! userId=1\n | ${resp}= POST On
                                    Session jsonplaceholder /posts json=${data} expected_status=anything\n |\n | Status
                                    Should Be 201 ${resp}\n | Dictionary Should Contain Key ${resp.json()} id\n\n =
                                    Response Object =\n\n All the HTTP requests keywords (GET, POST, PUT, etc.) return
                                    an extremely useful Response object.\n The Response object contains a server's
                                    response to an HTTP request.\n\n You can access the different attributes with the
                                    dot notation in this way: ``${response.json()}`` or\n ``${response.text}``. Below
                                    the list of the most useful attributes:\n\n | = Attributes = | = Explanation = |\n |
                                    content | Content of the response, in bytes. |\n | cookies | A CookieJar of Cookies
                                    the server sent back. |\n | elapsed | The amount of time elapsed between sending the
                                    request and the arrival of the response (as a timedelta). This property specifically
                                    measures the time taken between sending the first byte of the request and finishing
                                    parsing the headers. It is therefore unaffected by consuming the response content or
                                    the value of the stream keyword argument. |\n | encoding | Encoding to decode with
                                    when accessing ``response.text.`` |\n | headers | Case-insensitive Dictionary of
                                    Response Headers. For example, ``headers['content-encoding']`` will return the value
                                    of a `Content-Encoding' response header. |\n | history | A list of Response objects
                                    from the history of the Request. Any redirect responses will end up here. The list
                                    is sorted from the oldest to the most recent request. |\n | json | Returns the
                                    json-encoded content of a response, if any. Parameters: ``**kwargs`` - Optional
                                    arguments that json.loads takes. Raises: ValueError ? If the response body does not
                                    contain valid json. |\n | ok | Returns True if status_code is less than 400, False
                                    if not. |\n | reason | Textual reason of responded HTTP Status, e.g. ``Not Found``
                                    or ``OK``. |\n | status_code | Integer Code of responded HTTP Status, e.g. 404 or
                                    200. |\n | text | Content of the response, in unicode. If ``response.encoding`` is
                                    ``None``, encoding will be guessed using chardet. The encoding of the response
                                    content is determined based solely on HTTP headers, following RFC 2616 to the
                                    letter. If you can take advantage of non-HTTP knowledge to make a better guess at
                                    the encoding, you should set ``response.encoding`` appropriately before accessing
                                    this property. |\n | url | Final URL location of Response. |\n
                                    ","doc_format":"ROBOT","id":1,"keywords":[{"name":"Create Client Cert
                                    Session","doc":"Create Session: create a HTTP session to a server\n\n``url`` Base
                                    url of the server\n\n``alias`` Robot Framework alias to identify the
                                    session\n\n``headers`` Dictionary of default headers\n\n``cookies`` Dictionary of
                                    cookies\n\n``client_certs`` ['client certificate', 'client key'] PEM files
                                    containing the client key and certificate\n\n``timeout`` Connection
                                    timeout\n\n``proxies`` Dictionary that contains proxy urls for HTTP and HTTPS
                                    communication\n\n``verify`` Whether the SSL cert will be verified. A CA_BUNDLE path
                                    can also be provided.\n Defaults to False.\n\n``debug`` Enable http verbosity option
                                    more information\n
                                    https://docs.python.org/2/library/httplib.html#httplib.HTTPConnection.set_debuglevel\n\n``max_retries``
                                    Number of maximum retries each connection should attempt.\n By default it will retry
                                    3 times in case of connection errors only.\n A 0 value will disable any kind of
                                    retries regardless of other retry settings.\n In case the number of retries is
                                    reached a retry exception is raised.\n\n``disable_warnings`` Disable requests
                                    warning useful when you have large number of testcases\n\n``backoff_factor``
                                    Introduces a delay time between retries that is longer after each retry.\n eg. if
                                    backoff_factor is set to 0.1\n the sleep between attemps will be: 0.0, 0.2, 0.4\n
                                    More info here:
                                    https://urllib3.readthedocs.io/en/latest/reference/urllib3.util.html\n\n``retry_method_list``
                                    List of uppercased HTTP method verbs where retries are allowed.\n By default retries
                                    are allowed only on HTTP requests methods that are considered to be\n idempotent
                                    (multiple requests with the same parameters end with the same state).\n eg. set to
                                    ['POST', 'GET'] to retry only those kind of requests.\n\n``retry_status_list`` List
                                    of integer HTTP status codes that, if returned, a retry is attempted.\n eg. set to
                                    [502, 503] to retry requests if those status are returned.\n Note that max_retries
                                    must be greater than 0.","args":"[\"alias\", \"url\", \"headers={}\",
                                    \"cookies={}\", \"client_certs=None\", \"timeout=None\", \"proxies=None\",
                                    \"verify=False\", \"debug=0\", \"max_retries=3\", \"backoff_factor=0.1\",
                                    \"disable_warnings=0\", \"retry_status_list=[]\", \"retry_method_list=[DELETE, PUT,
                                    HEAD, OPTIONS, TRACE, GET]\"]","tags":[],"id":1,"synopsis":"Create Session: create a
                                    HTTP session to a server","html_doc":"&lt;p&gt;Create Session: create a HTTP session
                                    to a server&lt;/p&gt;\n&lt;p&gt;&lt;code&gt;url&lt;/code&gt; Base url of the server&lt;/p&gt;\n&lt;p&gt;&lt;code&gt;alias&lt;/code&gt;
                                    Robot Framework alias to identify the session&lt;/p&gt;\n&lt;p&gt;&lt;code&gt;headers&lt;/code&gt;
                                    Dictionary of default headers&lt;/p&gt;\n&lt;p&gt;&lt;code&gt;cookies&lt;/code&gt;
                                    Dictionary of cookies&lt;/p&gt;\n&lt;p&gt;&lt;code&gt;client_certs&lt;/code&gt;
                                    ['client certificate', 'client key'] PEM files containing the client key and
                                    certificate&lt;/p&gt;\n&lt;p&gt;&lt;code&gt;timeout&lt;/code&gt; Connection timeout&lt;/p&gt;\n&lt;p&gt;&lt;code&gt;proxies&lt;/code&gt;
                                    Dictionary that contains proxy urls for HTTP and HTTPS communication&lt;/p&gt;\n&lt;p&gt;&lt;code&gt;verify&lt;/code&gt;
                                    Whether the SSL cert will be verified. A CA_BUNDLE path can also be provided.
                                    Defaults to False.&lt;/p&gt;\n&lt;p&gt;&lt;code&gt;debug&lt;/code&gt; Enable http
                                    verbosity option more information &lt;a
                                    href=\"https://docs.python.org/2/library/httplib.html#httplib.HTTPConnection.set_debuglevel\"&gt;https://docs.python.org/2/library/httplib.html#httplib.HTTPConnection.set_debuglevel&lt;/a&gt;&lt;/p&gt;\n&lt;p&gt;&lt;code&gt;max_retries&lt;/code&gt;
                                    Number of maximum retries each connection should attempt. By default it will retry 3
                                    times in case of connection errors only. A 0 value will disable any kind of retries
                                    regardless of other retry settings. In case the number of retries is reached a retry
                                    exception is raised.&lt;/p&gt;\n&lt;p&gt;&lt;code&gt;disable_warnings&lt;/code&gt;
                                    Disable requests warning useful when you have large number of testcases&lt;/p&gt;\n&lt;p&gt;&lt;code&gt;backoff_factor&lt;/code&gt;
                                    Introduces a delay time between retries that is longer after each retry. eg. if
                                    backoff_factor is set to 0.1 the sleep between attemps will be: 0.0, 0.2, 0.4 More
                                    info here: &lt;a
                                    href=\"https://urllib3.readthedocs.io/en/latest/reference/urllib3.util.html\"&gt;https://urllib3.readthedocs.io/en/latest/reference/urllib3.util.html&lt;/a&gt;&lt;/p&gt;\n&lt;p&gt;&lt;code&gt;retry_method_list&lt;/code&gt;
                                    List of uppercased HTTP method verbs where retries are allowed. By default retries
                                    are allowed only on HTTP requests methods that are considered to be idempotent
                                    (multiple requests with the same parameters end with the same state). eg. set to
                                    ['POST', 'GET'] to retry only those kind of requests.&lt;/p&gt;\n&lt;p&gt;&lt;code&gt;retry_status_list&lt;/code&gt;
                                    List of integer HTTP status codes that, if returned, a retry is attempted. eg. set
                                    to [502, 503] to retry requests if those status are returned. Note that max_retries
                                    must be greater than 0.&lt;/p&gt;","arg_string":"alias, url, headers={}, cookies={},
                                    client_certs=None, timeout=None, proxies=None, verify=False, debug=0, max_retries=3,
                                    backoff_factor=0.1, disable_warnings=0, retry_status_list=[], retry_method_list=...
                                    (set the log level to DEBUG or TRACE to see the full content)
                                </msg>
                                <msg timestamp="20210830 17:36:09.085" level="INFO">${response} = &lt;Response
                                    [200]&gt;
                                </msg>
                                <status status="PASS" starttime="20210830 17:36:09.034"
                                        endtime="20210830 17:36:09.085"/>
                            </kw>
                            <kw name="Should Be Equal As Integers" library="BuiltIn">
                                <arg>${response.status_code}</arg>
                                <arg>200</arg>
                                <doc>Fails if objects are unequal after converting them to integers.</doc>
                                <msg timestamp="20210830 17:36:09.087" level="INFO">Argument types are:
                                    &lt;class 'int'&gt;
                                    &lt;type 'unicode'&gt;
                                </msg>
                                <status status="PASS" starttime="20210830 17:36:09.085"
                                        endtime="20210830 17:36:09.087"/>
                            </kw>
                            <msg timestamp="20210830 17:36:09.092" level="INFO">${response} = [{'name':
                                'RequestsLibrary', 'type': 'LIBRARY', 'version': '0.9.1', 'scope': 'GLOBAL',
                                'named_args': None, 'path': 'c:\\program files
                                (x86)\\python36-32\\lib\\site-packages\\RequestsLibrary', 'doc': "...
                            </msg>
                            <status status="PASS" starttime="20210830 17:36:09.032" endtime="20210830 17:36:09.092"/>
                        </kw>
                        <kw name="Length Should Be" library="BuiltIn">
                            <arg>${response}</arg>
                            <arg>${n}</arg>
                            <doc>Verifies that the length of the given item is correct.</doc>
                            <msg timestamp="20210830 17:36:09.092" level="INFO">Length is 1</msg>
                            <status status="PASS" starttime="20210830 17:36:09.092" endtime="20210830 17:36:09.093"/>
                        </kw>
                        <status status="PASS" starttime="20210830 17:36:09.031" endtime="20210830 17:36:09.093"/>
                    </kw>
                    <kw name="keywords Endpoint Should Have ${m} Items" library="keywords"
                        sourcename="${endpoint} Endpoint Should Have ${n} Items">
                        <kw name="Get Request For Endpoint" library="keywords">
                            <var>${response}</var>
                            <arg>endpoint=${endpoint}</arg>
                            <kw name="Create Session" library="RequestsLibrary">
                                <arg>tmp</arg>
                                <arg>http://${HOST}:8000/api/v1</arg>
                                <doc>Create Session: create a HTTP session to a server</doc>
                                <msg timestamp="20210830 17:36:09.095" level="INFO">Creating Session using : alias=tmp,
                                    url=http://127.0.0.1:8000/api/v1, headers={}, cookies={}, auth=None, timeout=None,
                                    proxies=None, verify=False, debug=0
                                </msg>
                                <status status="PASS" starttime="20210830 17:36:09.095"
                                        endtime="20210830 17:36:09.095"/>
                            </kw>
                            <kw name="Get On Session" library="RequestsLibrary">
                                <var>${response}</var>
                                <arg>tmp</arg>
                                <arg>${endpoint}/</arg>
                                <arg>params=${params}</arg>
                                <doc>Sends a GET request on a previously created HTTP Session.</doc>
                                <msg timestamp="20210830 17:36:09.147" level="INFO">GET Request :
                                    url=http://127.0.0.1:8000/api/v1/keywords/?None
                                    path_url=/api/v1/keywords/?None
                                    headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate',
                                    'Accept': '*/*', 'Connection': 'keep-alive'}
                                    body=None
                                </msg>
                                <msg timestamp="20210830 17:36:09.147" level="INFO">GET Response :
                                    url=http://127.0.0.1:8000/api/v1/keywords/?None
                                    status=200, reason=OK
                                    headers={'date': 'Mon, 30 Aug 2021 15:36:09 GMT', 'server': 'uvicorn',
                                    'content-length': '77714', 'content-type': 'application/json'}
                                    body=[{"name":"Create Client Cert Session","doc":"Create Session: create a HTTP
                                    session to a server\n\n``url`` Base url of the server\n\n``alias`` Robot Framework
                                    alias to identify the session\n\n``headers`` Dictionary of default
                                    headers\n\n``cookies`` Dictionary of cookies\n\n``client_certs`` ['client
                                    certificate', 'client key'] PEM files containing the client key and
                                    certificate\n\n``timeout`` Connection timeout\n\n``proxies`` Dictionary that
                                    contains proxy urls for HTTP and HTTPS communication\n\n``verify`` Whether the SSL
                                    cert will be verified. A CA_BUNDLE path can also be provided.\n Defaults to
                                    False.\n\n``debug`` Enable http verbosity option more information\n
                                    https://docs.python.org/2/library/httplib.html#httplib.HTTPConnection.set_debuglevel\n\n``max_retries``
                                    Number of maximum retries each connection should attempt.\n By default it will retry
                                    3 times in case of connection errors only.\n A 0 value will disable any kind of
                                    retries regardless of other retry settings.\n In case the number of retries is
                                    reached a retry exception is raised.\n\n``disable_warnings`` Disable requests
                                    warning useful when you have large number of testcases\n\n``backoff_factor``
                                    Introduces a delay time between retries that is longer after each retry.\n eg. if
                                    backoff_factor is set to 0.1\n the sleep between attemps will be: 0.0, 0.2, 0.4\n
                                    More info here:
                                    https://urllib3.readthedocs.io/en/latest/reference/urllib3.util.html\n\n``retry_method_list``
                                    List of uppercased HTTP method verbs where retries are allowed.\n By default retries
                                    are allowed only on HTTP requests methods that are considered to be\n idempotent
                                    (multiple requests with the same parameters end with the same state).\n eg. set to
                                    ['POST', 'GET'] to retry only those kind of requests.\n\n``retry_status_list`` List
                                    of integer HTTP status codes that, if returned, a retry is attempted.\n eg. set to
                                    [502, 503] to retry requests if those status are returned.\n Note that max_retries
                                    must be greater than 0.","args":"[\"alias\", \"url\", \"headers={}\",
                                    \"cookies={}\", \"client_certs=None\", \"timeout=None\", \"proxies=None\",
                                    \"verify=False\", \"debug=0\", \"max_retries=3\", \"backoff_factor=0.1\",
                                    \"disable_warnings=0\", \"retry_status_list=[]\", \"retry_method_list=[DELETE, PUT,
                                    HEAD, OPTIONS, TRACE, GET]\"]","tags":[],"id":1,"synopsis":"Create Session: create a
                                    HTTP session to a server","html_doc":"&lt;p&gt;Create Session: create a HTTP session
                                    to a server&lt;/p&gt;\n&lt;p&gt;&lt;code&gt;url&lt;/code&gt; Base url of the server&lt;/p&gt;\n&lt;p&gt;&lt;code&gt;alias&lt;/code&gt;
                                    Robot Framework alias to identify the session&lt;/p&gt;\n&lt;p&gt;&lt;code&gt;headers&lt;/code&gt;
                                    Dictionary of default headers&lt;/p&gt;\n&lt;p&gt;&lt;code&gt;cookies&lt;/code&gt;
                                    Dictionary of cookies&lt;/p&gt;\n&lt;p&gt;&lt;code&gt;client_certs&lt;/code&gt;
                                    ['client certificate', 'client key'] PEM files containing the client key and
                                    certificate&lt;/p&gt;\n&lt;p&gt;&lt;code&gt;timeout&lt;/code&gt; Connection timeout&lt;/p&gt;\n&lt;p&gt;&lt;code&gt;proxies&lt;/code&gt;
                                    Dictionary that contains proxy urls for HTTP and HTTPS communication&lt;/p&gt;\n&lt;p&gt;&lt;code&gt;verify&lt;/code&gt;
                                    Whether the SSL cert will be verified. A CA_BUNDLE path can also be provided.
                                    Defaults to False.&lt;/p&gt;\n&lt;p&gt;&lt;code&gt;debug&lt;/code&gt; Enable http
                                    verbosity option more information &lt;a
                                    href=\"https://docs.python.org/2/library/httplib.html#httplib.HTTPConnection.set_debuglevel\"&gt;https://docs.python.org/2/library/httplib.html#httplib.HTTPConnection.set_debuglevel&lt;/a&gt;&lt;/p&gt;\n&lt;p&gt;&lt;code&gt;max_retries&lt;/code&gt;
                                    Number of maximum retries each connection should attempt. By default it will retry 3
                                    times in case of connection errors only. A 0 value will disable any kind of retries
                                    regardless of other retry settings. In case the number of retries is reached a retry
                                    exception is raised.&lt;/p&gt;\n&lt;p&gt;&lt;code&gt;disable_warnings&lt;/code&gt;
                                    Disable requests warning useful when you have large number of testcases&lt;/p&gt;\n&lt;p&gt;&lt;code&gt;backoff_factor&lt;/code&gt;
                                    Introduces a delay time between retries that is longer after each retry. eg. if
                                    backoff_factor is set to 0.1 the sleep between attemps will be: 0.0, 0.2, 0.4 More
                                    info here: &lt;a
                                    href=\"https://urllib3.readthedocs.io/en/latest/reference/urllib3.util.html\"&gt;https://urllib3.readthedocs.io/en/latest/reference/urllib3.util.html&lt;/a&gt;&lt;/p&gt;\n&lt;p&gt;&lt;code&gt;retry_method_list&lt;/code&gt;
                                    List of uppercased HTTP method verbs where retries are allowed. By default retries
                                    are allowed only on HTTP requests methods that are considered to be idempotent
                                    (multiple requests with the same parameters end with the same state). eg. set to
                                    ['POST', 'GET'] to retry only those kind of requests.&lt;/p&gt;\n&lt;p&gt;&lt;code&gt;retry_status_list&lt;/code&gt;
                                    List of integer HTTP status codes that, if returned, a retry is attempted. eg. set
                                    to [502, 503] to retry requests if those status are returned. Note that max_retries
                                    must be greater than 0.&lt;/p&gt;","arg_string":"alias, url, headers={}, cookies={},
                                    client_certs=None, timeout=None, proxies=None, verify=False, debug=0, max_retries=3,
                                    backoff_factor=0.1, disable_warnings=0, retry_status_list=[],
                                    retry_method_list=[DELETE, PUT, HEAD, OPTIONS, TRACE,
                                    GET]","collection":{"id":1,"name":"RequestsLibrary"}},{"name":"Create Custom
                                    Session","doc":"Create Session: create a HTTP session to a server\n\n``url`` Base
                                    url of the server\n\n``alias`` Robot Framework alias to identify the
                                    session\n\n``headers`` Dictionary of default headers\n\n``cookies`` Dictionary of
                                    cookies\n\n``auth`` A Custom Authentication object to be passed on to the requests
                                    library.\n
                                    http://docs.python-requests.org/en/master/user/advanced/#custom-authentication\n\n``timeout``
                                    Connection timeout\n\n``proxies`` Dictionary that contains proxy urls for HTTP and
                                    HTTPS communication\n\n``verify`` Whether the SSL cert will be verified. A CA_BUNDLE
                                    path can also be provided.\n Defaults to False.\n\n``debug`` Enable http verbosity
                                    option more information\n
                                    https://docs.python.org/2/library/httplib.html#httplib.HTTPConnection.set_debuglevel\n\n``max_retries``
                                    Number of maximum retries each connection should attempt.\n By default it will retry
                                    3 times in case of connection errors only.\n A 0 value will disable any kind of
                                    retries regardless of other retry settings.\n In case the number of retries is
                                    reached a retry exception is raised.\n\n``disable_warnings`` Disable requests
                                    warning useful when you have large number of testcases\n\n``backoff_factor``
                                    Introduces a delay time between retries that is longer after each retry.\n eg. if
                                    backoff_factor is set to 0.1\n the sleep between attemps will be: 0.0, 0.2, 0.4\n
                                    More info here:
                                    https://urllib3.readthedocs.io/en/latest/reference/urllib3.util.html\n\n``retry_method_list``
                                    List of uppercased HTTP method verbs where retries are allowed.\n By default retries
                                    are allowed only on HTTP requests methods that are considered to be\n idempotent
                                    (multiple requests with the same parameters end with the same state).\n eg. set to
                                    ['POST', 'GET'] to retry only those kind of requests.\n\n``retry_status_list`` List
                                    of integer HTTP status codes that, if returned, a retry is attempted.\n eg. set to
                                    [502, 503] to retry requests if those status are returned.\n Note that max_retries
                                    must be greater than 0.","args":"[\"alias\", \"url\", \"auth\", \"headers={}\",
                                    \"cookies={}\", \"timeout=None\", \"proxies=None\", \"verify=False\", \"debug=0\",
                                    \"max_retries=3\", \"backoff_factor=0.1\", \"disable_warnings=0\",
                                    \"retry_status_list=[]\", \"retry_method_list=[DELETE, PUT, HEAD, OPTIONS, TRACE,
                                    GET]\"]","tags":[],"id":2,"synopsis":"Create Session: create a HTTP session to a
                                    server","html_doc":"&lt;p&gt;Create Session: create a HTTP session to a server&lt;/p&gt;\n&lt;p&gt;&lt;code&gt;url&lt;/code&gt;
                                    Base url of the server&lt;/p&gt;\n&lt;p&gt;&lt;code&gt;alias&lt;/code&gt; Robot
                                    Framework alias to identify the session&lt;/p&gt;\n&lt;p&gt;&lt;code&gt;headers&lt;/code&gt;
                                    Dictionary of default headers&lt;/p&gt;\n&lt;p&gt;&lt;code&gt;cookies&lt;/code&gt;
                                    Dictionary of cookies&lt;/p&gt;\n&lt;p&gt;&lt;code&gt;auth&lt;/code&gt; A Custom
                                    Authentication object to be passed on to the requests library. &lt;a
                                    href=\"http://docs.python-requests.org/en/master/user/advanced/#custom-authentication\"&gt;http://docs.python-requests.org/en/master/user/advanced/#custom-authentication&lt;/a&gt;&lt;/p&gt;\n&lt;p&gt;&lt;code&gt;timeout&lt;/code&gt;
                                    Connection timeout&lt;/p&gt;\n&lt;p&gt;&lt;code&gt;proxies&lt;/code&gt; Dictionary
                                    that contains proxy urls for HTTP and HTTPS communication&lt;/p&gt;\n&lt;p&gt;&lt;code&gt;verify&lt;/code&gt;
                                    Whether the SSL cert will be verified. A CA_BUNDLE path can also be provided.
                                    Defaults to False.&lt;/p&gt;\n&lt;p&gt;&lt;code&gt;debug&lt;/code&gt; Enable http
                                    verbosity option more information &lt;a
                                    href=\"https://docs.python.org/2/library/httplib.html#httplib.HTTPConnection.set_debuglevel\"&gt;https://docs.python.org/2/library/httplib.html#httplib.HTTPConnection.set_debuglevel&lt;/a&gt;&lt;/p&gt;\n&lt;p&gt;&lt;code&gt;max_retries&lt;/code&gt;
                                    Number of maximum retries each connection should attempt. By default it will retry 3
                                    times in case of connection errors only. A 0 value will disable any kind of retries
                                    regardless of other retry settings. In case the number of retries is reached a retry
                                    exception is raised.&lt;/p&gt;\n&lt;p&gt;&lt;code&gt;disable_warnings&lt;/code&gt;
                                    Disable requests warning useful when you have large number of testcases&lt;/p&gt;\n&lt;p&gt;&lt;code&gt;backoff_factor&lt;/code&gt;
                                    Introduces a delay time between retries that is longer after each retry. eg. if
                                    backoff_factor is set to 0.1 the sleep between attemps will be: 0.0, 0.2, 0.4 More
                                    info here: &lt;a
                                    href=\"https://urllib3.readthedocs.io/en/latest/reference/urllib3.util.html\"&gt;https://urllib3.readthedocs.io/en/latest/reference/urllib3.util.html&lt;/a&gt;&lt;/p&gt;\n&lt;p&gt;&lt;code&gt;retry_method_list&lt;/code&gt;
                                    List of uppercased HTTP method verbs where retries are allowed. By default retries
                                    are allowed only on HTTP requests methods that are considered to be idempotent
                                    (multiple requests with the same parameters end with the same state). eg. set to
                                    ['POST', 'GET'] to retry on... (set the log level to DEBUG or TRACE to see the full
                                    content)
                                </msg>
                                <msg timestamp="20210830 17:36:09.148" level="INFO">${response} = &lt;Response
                                    [200]&gt;
                                </msg>
                                <status status="PASS" starttime="20210830 17:36:09.095"
                                        endtime="20210830 17:36:09.148"/>
                            </kw>
                            <kw name="Should Be Equal As Integers" library="BuiltIn">
                                <arg>${response.status_code}</arg>
                                <arg>200</arg>
                                <doc>Fails if objects are unequal after converting them to integers.</doc>
                                <msg timestamp="20210830 17:36:09.150" level="INFO">Argument types are:
                                    &lt;class 'int'&gt;
                                    &lt;type 'unicode'&gt;
                                </msg>
                                <status status="PASS" starttime="20210830 17:36:09.148"
                                        endtime="20210830 17:36:09.150"/>
                            </kw>
                            <msg timestamp="20210830 17:36:09.155" level="INFO">${response} = [{'name': 'Create Client
                                Cert Session', 'doc': "Create Session: create a HTTP session to a server\n\n``url`` Base
                                url of the server\n\n``alias`` Robot Framework alias to identify the
                                session\n\n``head...
                            </msg>
                            <status status="PASS" starttime="20210830 17:36:09.094" endtime="20210830 17:36:09.155"/>
                        </kw>
                        <kw name="Length Should Be" library="BuiltIn">
                            <arg>${response}</arg>
                            <arg>${n}</arg>
                            <doc>Verifies that the length of the given item is correct.</doc>
                            <msg timestamp="20210830 17:36:09.155" level="INFO">Length is 33</msg>
                            <status status="PASS" starttime="20210830 17:36:09.155" endtime="20210830 17:36:09.155"/>
                        </kw>
                        <status status="PASS" starttime="20210830 17:36:09.093" endtime="20210830 17:36:09.156"/>
                    </kw>
                    <status status="PASS" starttime="20210830 17:36:09.031" endtime="20210830 17:36:09.156"/>
                </kw>
                <doc>Tests loading installed library using given name,
                    instead of full path.
                </doc>
                <tag>installed_libs</tag>
                <tag>rfhub2-342</tag>
                <status status="PASS" starttime="20210830 17:36:06.047" endtime="20210830 17:36:09.156"/>
            </test>
            <test id="s1-s2-t15" name="Running Cli With Non Existing Library Names Should Load Only Found Libraries">
                <kw name="Run Cli Package With Options" library="keywords">
                    <arg>--load-mode=insert --no-installed-keywords NonExistingLibrary</arg>
                    <doc>Attempt to run the rfhub2-cli package with the given options
                        The stdout of the process will be in a test suite
                        variable named ${output}
                    </doc>
                    <kw name="Run" library="OperatingSystem">
                        <var>${output}</var>
                        <arg>${ACTIVATE_VENV} rfhub2-cli -a http://${HOST}:8000 ${options}</arg>
                        <doc>Runs the given command in the system and returns the output.</doc>
                        <msg timestamp="20210830 17:36:09.312" level="INFO">Running command ' rfhub2-cli -a
                            http://127.0.0.1:8000 --load-mode=insert --no-installed-keywords NonExistingLibrary 2&gt;&amp;1'.
                        </msg>
                        <msg timestamp="20210830 17:36:11.094" level="INFO">${output} = Collection NonExistingLibrary
                            was neither valid path nor valid module name.

                            Successfully loaded 0 collections with 0 keywords.
                        </msg>
                        <status status="PASS" starttime="20210830 17:36:09.159" endtime="20210830 17:36:11.094"/>
                    </kw>
                    <kw name="Set Suite Variable" library="BuiltIn">
                        <arg>${output}</arg>
                        <doc>Makes a variable available everywhere within the scope of the current suite.</doc>
                        <msg timestamp="20210830 17:36:11.094" level="INFO">${output} = Collection NonExistingLibrary
                            was neither valid path nor valid module name.

                            Successfully loaded 0 collections with 0 keywords.
                        </msg>
                        <status status="PASS" starttime="20210830 17:36:11.094" endtime="20210830 17:36:11.094"/>
                    </kw>
                    <status status="PASS" starttime="20210830 17:36:09.158" endtime="20210830 17:36:11.094"/>
                </kw>
                <kw name="Output Should Contain" library="keywords">
                    <arg>Successfully loaded 0 collections with 0 keywords.</arg>
                    <doc>Fail if the output from the previous command doesn't contain the given string
                        This keyword assumes the output of the command is in
                        a test suite variable named ${output}
                    </doc>
                    <kw name="Create Dictionary" library="BuiltIn">
                        <var>${ns}</var>
                        <arg>output=${output}</arg>
                        <doc>Creates and returns a dictionary based on the given ``items``.</doc>
                        <msg timestamp="20210830 17:36:11.094" level="INFO">${ns} = {'output': 'Collection
                            NonExistingLibrary was neither valid path nor valid module name.\n\nSuccessfully loaded 0
                            collections with 0 keywords.'}
                        </msg>
                        <status status="PASS" starttime="20210830 17:36:11.094" endtime="20210830 17:36:11.094"/>
                    </kw>
                    <kw name="Evaluate" library="BuiltIn">
                        <var>${clean_output}</var>
                        <arg>" ".join(l.strip() for l in output.splitlines())</arg>
                        <arg>namespace=${ns}</arg>
                        <doc>Evaluates the given expression in Python and returns the result.</doc>
                        <msg timestamp="20210830 17:36:11.094" level="INFO">${clean_output} = Collection
                            NonExistingLibrary was neither valid path nor valid module name. Successfully loaded 0
                            collections with 0 keywords.
                        </msg>
                        <status status="PASS" starttime="20210830 17:36:11.094" endtime="20210830 17:36:11.094"/>
                    </kw>
                    <for flavor="IN">
                        <var>${pattern}</var>
                        <value>@{patterns}</value>
                        <iter>
                            <var name="${pattern}">Successfully loaded 0 collections with 0 keywords.</var>
                            <kw name="Run Keyword If" library="BuiltIn">
                                <arg>'''${pattern}''' not in '''${clean_output}'''</arg>
                                <arg>Fail</arg>
                                <arg>Output did not contain '${pattern}'. \n${clean_output}</arg>
                                <doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
                                <status status="PASS" starttime="20210830 17:36:11.094"
                                        endtime="20210830 17:36:11.094"/>
                            </kw>
                            <status status="PASS" starttime="20210830 17:36:11.094" endtime="20210830 17:36:11.094"/>
                        </iter>
                        <status status="PASS" starttime="20210830 17:36:11.094" endtime="20210830 17:36:11.094"/>
                    </for>
                    <status status="PASS" starttime="20210830 17:36:11.094" endtime="20210830 17:36:11.094"/>
                </kw>
                <kw name="Api Should Have 0 Collections And 0 Keywords"
                    sourcename="Api Should Have ${n} Collections And ${m} Keywords">
                    <kw name="collections Endpoint Should Have ${n} Items" library="keywords"
                        sourcename="${endpoint} Endpoint Should Have ${n} Items">
                        <kw name="Get Request For Endpoint" library="keywords">
                            <var>${response}</var>
                            <arg>endpoint=${endpoint}</arg>
                            <kw name="Create Session" library="RequestsLibrary">
                                <arg>tmp</arg>
                                <arg>http://${HOST}:8000/api/v1</arg>
                                <doc>Create Session: create a HTTP session to a server</doc>
                                <msg timestamp="20210830 17:36:11.104" level="INFO">Creating Session using : alias=tmp,
                                    url=http://127.0.0.1:8000/api/v1, headers={}, cookies={}, auth=None, timeout=None,
                                    proxies=None, verify=False, debug=0
                                </msg>
                                <status status="PASS" starttime="20210830 17:36:11.104"
                                        endtime="20210830 17:36:11.104"/>
                            </kw>
                            <kw name="Get On Session" library="RequestsLibrary">
                                <var>${response}</var>
                                <arg>tmp</arg>
                                <arg>${endpoint}/</arg>
                                <arg>params=${params}</arg>
                                <doc>Sends a GET request on a previously created HTTP Session.</doc>
                                <msg timestamp="20210830 17:36:11.114" level="INFO">GET Request :
                                    url=http://127.0.0.1:8000/api/v1/collections/?None
                                    path_url=/api/v1/collections/?None
                                    headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate',
                                    'Accept': '*/*', 'Connection': 'keep-alive'}
                                    body=None
                                </msg>
                                <msg timestamp="20210830 17:36:11.114" level="INFO">GET Response :
                                    url=http://127.0.0.1:8000/api/v1/collections/?None
                                    status=200, reason=OK
                                    headers={'date': 'Mon, 30 Aug 2021 15:36:10 GMT', 'server': 'uvicorn',
                                    'content-length': '2', 'content-type': 'application/json'}
                                    body=[]
                                </msg>
                                <msg timestamp="20210830 17:36:11.114" level="INFO">${response} = &lt;Response
                                    [200]&gt;
                                </msg>
                                <status status="PASS" starttime="20210830 17:36:11.104"
                                        endtime="20210830 17:36:11.114"/>
                            </kw>
                            <kw name="Should Be Equal As Integers" library="BuiltIn">
                                <arg>${response.status_code}</arg>
                                <arg>200</arg>
                                <doc>Fails if objects are unequal after converting them to integers.</doc>
                                <msg timestamp="20210830 17:36:11.114" level="INFO">Argument types are:
                                    &lt;class 'int'&gt;
                                    &lt;type 'unicode'&gt;
                                </msg>
                                <status status="PASS" starttime="20210830 17:36:11.114"
                                        endtime="20210830 17:36:11.114"/>
                            </kw>
                            <msg timestamp="20210830 17:36:11.114" level="INFO">${response} = []</msg>
                            <status status="PASS" starttime="20210830 17:36:11.094" endtime="20210830 17:36:11.114"/>
                        </kw>
                        <kw name="Length Should Be" library="BuiltIn">
                            <arg>${response}</arg>
                            <arg>${n}</arg>
                            <doc>Verifies that the length of the given item is correct.</doc>
                            <msg timestamp="20210830 17:36:11.114" level="INFO">Length is 0</msg>
                            <status status="PASS" starttime="20210830 17:36:11.114" endtime="20210830 17:36:11.114"/>
                        </kw>
                        <status status="PASS" starttime="20210830 17:36:11.094" endtime="20210830 17:36:11.114"/>
                    </kw>
                    <kw name="keywords Endpoint Should Have ${m} Items" library="keywords"
                        sourcename="${endpoint} Endpoint Should Have ${n} Items">
                        <kw name="Get Request For Endpoint" library="keywords">
                            <var>${response}</var>
                            <arg>endpoint=${endpoint}</arg>
                            <kw name="Create Session" library="RequestsLibrary">
                                <arg>tmp</arg>
                                <arg>http://${HOST}:8000/api/v1</arg>
                                <doc>Create Session: create a HTTP session to a server</doc>
                                <msg timestamp="20210830 17:36:11.114" level="INFO">Creating Session using : alias=tmp,
                                    url=http://127.0.0.1:8000/api/v1, headers={}, cookies={}, auth=None, timeout=None,
                                    proxies=None, verify=False, debug=0
                                </msg>
                                <status status="PASS" starttime="20210830 17:36:11.114"
                                        endtime="20210830 17:36:11.114"/>
                            </kw>
                            <kw name="Get On Session" library="RequestsLibrary">
                                <var>${response}</var>
                                <arg>tmp</arg>
                                <arg>${endpoint}/</arg>
                                <arg>params=${params}</arg>
                                <doc>Sends a GET request on a previously created HTTP Session.</doc>
                                <msg timestamp="20210830 17:36:11.134" level="INFO">GET Request :
                                    url=http://127.0.0.1:8000/api/v1/keywords/?None
                                    path_url=/api/v1/keywords/?None
                                    headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate',
                                    'Accept': '*/*', 'Connection': 'keep-alive'}
                                    body=None
                                </msg>
                                <msg timestamp="20210830 17:36:11.134" level="INFO">GET Response :
                                    url=http://127.0.0.1:8000/api/v1/keywords/?None
                                    status=200, reason=OK
                                    headers={'date': 'Mon, 30 Aug 2021 15:36:11 GMT', 'server': 'uvicorn',
                                    'content-length': '2', 'content-type': 'application/json'}
                                    body=[]
                                </msg>
                                <msg timestamp="20210830 17:36:11.134" level="INFO">${response} = &lt;Response
                                    [200]&gt;
                                </msg>
                                <status status="PASS" starttime="20210830 17:36:11.114"
                                        endtime="20210830 17:36:11.134"/>
                            </kw>
                            <kw name="Should Be Equal As Integers" library="BuiltIn">
                                <arg>${response.status_code}</arg>
                                <arg>200</arg>
                                <doc>Fails if objects are unequal after converting them to integers.</doc>
                                <msg timestamp="20210830 17:36:11.134" level="INFO">Argument types are:
                                    &lt;class 'int'&gt;
                                    &lt;type 'unicode'&gt;
                                </msg>
                                <status status="PASS" starttime="20210830 17:36:11.134"
                                        endtime="20210830 17:36:11.134"/>
                            </kw>
                            <msg timestamp="20210830 17:36:11.134" level="INFO">${response} = []</msg>
                            <status status="PASS" starttime="20210830 17:36:11.114" endtime="20210830 17:36:11.134"/>
                        </kw>
                        <kw name="Length Should Be" library="BuiltIn">
                            <arg>${response}</arg>
                            <arg>${n}</arg>
                            <doc>Verifies that the length of the given item is correct.</doc>
                            <msg timestamp="20210830 17:36:11.134" level="INFO">Length is 0</msg>
                            <status status="PASS" starttime="20210830 17:36:11.134" endtime="20210830 17:36:11.134"/>
                        </kw>
                        <status status="PASS" starttime="20210830 17:36:11.114" endtime="20210830 17:36:11.134"/>
                    </kw>
                    <status status="PASS" starttime="20210830 17:36:11.094" endtime="20210830 17:36:11.134"/>
                </kw>
                <doc>Tests loading installed library using given name,
                    instead of full path.
                </doc>
                <tag>installed_libs</tag>
                <tag>rfhub2-342</tag>
                <status status="PASS" starttime="20210830 17:36:09.157" endtime="20210830 17:36:11.134"/>
            </test>
            <test id="s1-s2-t16" name="Running Cli Without Include Or Exclude Options Should Load All Keywords">
                <kw name="Run Keywords" library="BuiltIn" type="SETUP">
                    <arg>Backup And Switch Initial With Include_Exclude Fixtures</arg>
                    <doc>Executes all the given keywords in a sequence.</doc>
                    <kw name="Backup And Switch Initial With Include_Exclude Fixtures" library="keywords">
                        <kw name="Move Directory" library="OperatingSystem">
                            <arg>${INITIAL_FIXTURES}</arg>
                            <arg>${BACKUP_FIXTURES}</arg>
                            <doc>Moves the source directory into a destination.</doc>
                            <msg timestamp="20210830 17:36:11.144" level="INFO" html="true">Moved directory from '&lt;a
                                href="file://C:\repo\rfhub2\tests\fixtures\initial"&gt;C:\repo\rfhub2\tests\fixtures\initial&lt;/a&gt;'
                                to '&lt;a href="file://C:\repo\rfhub2\tests\fixtures\initial_bkp"&gt;C:\repo\rfhub2\tests\fixtures\initial_bkp&lt;/a&gt;'.
                            </msg>
                            <status status="PASS" starttime="20210830 17:36:11.134" endtime="20210830 17:36:11.144"/>
                        </kw>
                        <kw name="Copy Directory" library="OperatingSystem">
                            <arg>${INCLUDE_EXCLUDE_FIXTURES}</arg>
                            <arg>${INITIAL_FIXTURES}</arg>
                            <doc>Copies the source directory into the destination.</doc>
                            <msg timestamp="20210830 17:36:11.161" level="INFO" html="true">Copied directory from '&lt;a
                                href="file://C:\repo\rfhub2\tests\fixtures\include_exclude"&gt;C:\repo\rfhub2\tests\fixtures\include_exclude&lt;/a&gt;'
                                to '&lt;a href="file://C:\repo\rfhub2\tests\fixtures\initial"&gt;C:\repo\rfhub2\tests\fixtures\initial&lt;/a&gt;'.
                            </msg>
                            <status status="PASS" starttime="20210830 17:36:11.144" endtime="20210830 17:36:11.161"/>
                        </kw>
                        <status status="PASS" starttime="20210830 17:36:11.134" endtime="20210830 17:36:11.162"/>
                    </kw>
                    <status status="PASS" starttime="20210830 17:36:11.134" endtime="20210830 17:36:11.162"/>
                </kw>
                <kw name="Run Cli With Options --load-mode=insert --no-installed-keywords ${INITIAL_FIXTURES} And Expect Api To Have 3 Collections And 11 Keywords"
                    sourcename="Run Cli With Options ${options} And Expect Api To Have ${n} Collections And ${m} Keywords">
                    <doc>Run pkg from CLI and expect a certain amount of collections
                        and keywords
                    </doc>
                    <kw name="Run Cli Package With Options" library="keywords">
                        <arg>${options}</arg>
                        <doc>Attempt to run the rfhub2-cli package with the given options
                            The stdout of the process will be in a test suite
                            variable named ${output}
                        </doc>
                        <kw name="Run" library="OperatingSystem">
                            <var>${output}</var>
                            <arg>${ACTIVATE_VENV} rfhub2-cli -a http://${HOST}:8000 ${options}</arg>
                            <doc>Runs the given command in the system and returns the output.</doc>
                            <msg timestamp="20210830 17:36:11.314" level="INFO">Running command ' rfhub2-cli -a
                                http://127.0.0.1:8000 --load-mode=insert --no-installed-keywords
                                C:\repo\rfhub2\tests\acceptance\resources\..\..\fixtures/initial/ 2&gt;&amp;1'.
                            </msg>
                            <msg timestamp="20210830 17:36:13.384" level="INFO">${output} = PyLibrary library with 3
                                keywords loaded.
                                ResourceLibrary1 library with 3 keywords loaded.
                                ResourceLibrary2 library with 5 keywords loaded.

                                Successfully loaded 3 collections with 11 keywords.
                            </msg>
                            <status status="PASS" starttime="20210830 17:36:11.163" endtime="20210830 17:36:13.384"/>
                        </kw>
                        <kw name="Set Suite Variable" library="BuiltIn">
                            <arg>${output}</arg>
                            <doc>Makes a variable available everywhere within the scope of the current suite.</doc>
                            <msg timestamp="20210830 17:36:13.384" level="INFO">${output} = PyLibrary library with 3
                                keywords loaded.
                                ResourceLibrary1 library with 3 keywords loaded.
                                ResourceLibrary2 library with 5 keywords loaded.

                                Successfully loaded 3 collections with 11 keywords.
                            </msg>
                            <status status="PASS" starttime="20210830 17:36:13.384" endtime="20210830 17:36:13.384"/>
                        </kw>
                        <status status="PASS" starttime="20210830 17:36:11.163" endtime="20210830 17:36:13.384"/>
                    </kw>
                    <kw name="Api Should Have ${n} Collections And ${m} Keywords"
                        sourcename="Api Should Have ${n} Collections And ${m} Keywords">
                        <kw name="collections Endpoint Should Have ${n} Items" library="keywords"
                            sourcename="${endpoint} Endpoint Should Have ${n} Items">
                            <kw name="Get Request For Endpoint" library="keywords">
                                <var>${response}</var>
                                <arg>endpoint=${endpoint}</arg>
                                <kw name="Create Session" library="RequestsLibrary">
                                    <arg>tmp</arg>
                                    <arg>http://${HOST}:8000/api/v1</arg>
                                    <doc>Create Session: create a HTTP session to a server</doc>
                                    <msg timestamp="20210830 17:36:13.394" level="INFO">Creating Session using :
                                        alias=tmp, url=http://127.0.0.1:8000/api/v1, headers={}, cookies={}, auth=None,
                                        timeout=None, proxies=None, verify=False, debug=0
                                    </msg>
                                    <status status="PASS" starttime="20210830 17:36:13.394"
                                            endtime="20210830 17:36:13.394"/>
                                </kw>
                                <kw name="Get On Session" library="RequestsLibrary">
                                    <var>${response}</var>
                                    <arg>tmp</arg>
                                    <arg>${endpoint}/</arg>
                                    <arg>params=${params}</arg>
                                    <doc>Sends a GET request on a previously created HTTP Session.</doc>
                                    <msg timestamp="20210830 17:36:13.414" level="INFO">GET Request :
                                        url=http://127.0.0.1:8000/api/v1/collections/?None
                                        path_url=/api/v1/collections/?None
                                        headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip,
                                        deflate', 'Accept': '*/*', 'Connection': 'keep-alive'}
                                        body=None
                                    </msg>
                                    <msg timestamp="20210830 17:36:13.414" level="INFO">GET Response :
                                        url=http://127.0.0.1:8000/api/v1/collections/?None
                                        status=200, reason=OK
                                        headers={'date': 'Mon, 30 Aug 2021 15:36:13 GMT', 'server': 'uvicorn',
                                        'content-length': '2672', 'content-type': 'application/json'}
                                        body=[{"name":"PyLibrary","type":"LIBRARY","version":"1.0.0","scope":"TEST","named_args":null,"path":"C:\\repo\\rfhub2\\tests\\acceptance\\resources\\..\\..\\fixtures\\initial\\PyLibrary","doc":"Documentation
                                        for library
                                        ``PyLibrary``.","doc_format":"ROBOT","id":1,"keywords":[{"name":"Keyword Heart
                                        Engine","doc":"","args":"","tags":["❤️","🚂"],"id":1,"synopsis":"","html_doc":"","arg_string":""},{"name":"Keyword
                                        Heart
                                        Skull","doc":"","args":"","tags":["❤️","💀"],"id":2,"synopsis":"","html_doc":"","arg_string":""},{"name":"Keyword
                                        No
                                        Tag","doc":"","args":"","tags":[],"id":3,"synopsis":"","html_doc":"","arg_string":""}],"synopsis":"Documentation
                                        for library ``PyLibrary``.","html_doc":"&lt;p&gt;Documentation for library &lt;code&gt;PyLibrary&lt;/code&gt;.&lt;/p&gt;"},{"name":"ResourceLibrary1","type":"RESOURCE","version":"","scope":"GLOBAL","named_args":null,"path":"C:\\repo\\rfhub2\\tests\\acceptance\\resources\\..\\..\\fixtures\\initial\\ResourceLibrary1.resource","doc":"Documentation
                                        for resource file
                                        ``ResourceLibrary1``.","doc_format":"ROBOT","id":2,"keywords":[{"name":"Keyword
                                        Ghost","doc":"","args":"","tags":["👻"],"id":4,"synopsis":"","html_doc":"","arg_string":""},{"name":"Keyword
                                        Ghost Heart
                                        Rocket","doc":"","args":"","tags":["❤️","👻","🚀"],"id":5,"synopsis":"","html_doc":"","arg_string":""},{"name":"Keyword
                                        Rocket","doc":"","args":"","tags":["🚀"],"id":6,"synopsis":"","html_doc":"","arg_string":""}],"synopsis":"Documentation
                                        for resource file ``ResourceLibrary1``.","html_doc":"&lt;p&gt;Documentation for
                                        resource file &lt;code&gt;ResourceLibrary1&lt;/code&gt;.&lt;/p&gt;"},{"name":"ResourceLibrary2","type":"RESOURCE","version":"","scope":"GLOBAL","named_args":null,"path":"C:\\repo\\rfhub2\\tests\\acceptance\\resources\\..\\..\\fixtures\\initial\\ResourceLibrary2.resource","doc":"Documentation
                                        for resource file
                                        ``ResourceLibrary2``.","doc_format":"ROBOT","id":3,"keywords":[{"name":"Keyword
                                        Airplane In The
                                        Clouds","doc":"","args":"","tags":["☁️⛅️☁️✈️☁️☁️"],"id":7,"synopsis":"","html_doc":"","arg_string":""},{"name":"Keyword
                                        No
                                        Tag","doc":"","args":"","tags":[],"id":8,"synopsis":"","html_doc":"","arg_string":""},{"name":"Keyword
                                        Rocket","doc":"","args":"","tags":["🚀"],"id":9,"synopsis":"","html_doc":"","arg_string":""},{"name":"Keyword
                                        Rocket Moon
                                        Heart","doc":"","args":"","tags":["❤️","🌑","🚀"],"id":10,"synopsis":"","html_doc":"","arg_string":""},{"name":"Keyword
                                        TextualTag","doc":"","args":"","tags":["STR_tag"],"id":11,"synopsis":"","html_doc":"","arg_string":""}],"synopsis":"Documentation
                                        for resource file ``ResourceLibrary2``.","html_doc":"&lt;p&gt;Documentation for
                                        resource file &lt;code&gt;ResourceLibrary2&lt;/code&gt;.&lt;/p&gt;"}]
                                    </msg>
                                    <msg timestamp="20210830 17:36:13.414" level="INFO">${response} = &lt;Response [200]&gt;</msg>
                                    <status status="PASS" starttime="20210830 17:36:13.394"
                                            endtime="20210830 17:36:13.414"/>
                                </kw>
                                <kw name="Should Be Equal As Integers" library="BuiltIn">
                                    <arg>${response.status_code}</arg>
                                    <arg>200</arg>
                                    <doc>Fails if objects are unequal after converting them to integers.</doc>
                                    <msg timestamp="20210830 17:36:13.414" level="INFO">Argument types are:
                                        &lt;class 'int'&gt;
                                        &lt;type 'unicode'&gt;
                                    </msg>
                                    <status status="PASS" starttime="20210830 17:36:13.414"
                                            endtime="20210830 17:36:13.414"/>
                                </kw>
                                <msg timestamp="20210830 17:36:13.414" level="INFO">${response} = [{'name': 'PyLibrary',
                                    'type': 'LIBRARY', 'version': '1.0.0', 'scope': 'TEST', 'named_args': None, 'path':
                                    'C:\\repo\\rfhub2\\tests\\acceptance\\resources\\..\\..\\fixtures\\initial\\PyLibrary',
                                    'doc'...
                                </msg>
                                <status status="PASS" starttime="20210830 17:36:13.384"
                                        endtime="20210830 17:36:13.414"/>
                            </kw>
                            <kw name="Length Should Be" library="BuiltIn">
                                <arg>${response}</arg>
                                <arg>${n}</arg>
                                <doc>Verifies that the length of the given item is correct.</doc>
                                <msg timestamp="20210830 17:36:13.414" level="INFO">Length is 3</msg>
                                <status status="PASS" starttime="20210830 17:36:13.414"
                                        endtime="20210830 17:36:13.414"/>
                            </kw>
                            <status status="PASS" starttime="20210830 17:36:13.384" endtime="20210830 17:36:13.414"/>
                        </kw>
                        <kw name="keywords Endpoint Should Have ${m} Items" library="keywords"
                            sourcename="${endpoint} Endpoint Should Have ${n} Items">
                            <kw name="Get Request For Endpoint" library="keywords">
                                <var>${response}</var>
                                <arg>endpoint=${endpoint}</arg>
                                <kw name="Create Session" library="RequestsLibrary">
                                    <arg>tmp</arg>
                                    <arg>http://${HOST}:8000/api/v1</arg>
                                    <doc>Create Session: create a HTTP session to a server</doc>
                                    <msg timestamp="20210830 17:36:13.414" level="INFO">Creating Session using :
                                        alias=tmp, url=http://127.0.0.1:8000/api/v1, headers={}, cookies={}, auth=None,
                                        timeout=None, proxies=None, verify=False, debug=0
                                    </msg>
                                    <status status="PASS" starttime="20210830 17:36:13.414"
                                            endtime="20210830 17:36:13.414"/>
                                </kw>
                                <kw name="Get On Session" library="RequestsLibrary">
                                    <var>${response}</var>
                                    <arg>tmp</arg>
                                    <arg>${endpoint}/</arg>
                                    <arg>params=${params}</arg>
                                    <doc>Sends a GET request on a previously created HTTP Session.</doc>
                                    <msg timestamp="20210830 17:36:13.434" level="INFO">GET Request :
                                        url=http://127.0.0.1:8000/api/v1/keywords/?None
                                        path_url=/api/v1/keywords/?None
                                        headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip,
                                        deflate', 'Accept': '*/*', 'Connection': 'keep-alive'}
                                        body=None
                                    </msg>
                                    <msg timestamp="20210830 17:36:13.434" level="INFO">GET Response :
                                        url=http://127.0.0.1:8000/api/v1/keywords/?None
                                        status=200, reason=OK
                                        headers={'date': 'Mon, 30 Aug 2021 15:36:13 GMT', 'server': 'uvicorn',
                                        'content-length': '1868', 'content-type': 'application/json'}
                                        body=[{"name":"Keyword Airplane In The
                                        Clouds","doc":"","args":"","tags":["☁️⛅️☁️✈️☁️☁️"],"id":7,"synopsis":"","html_doc":"","arg_string":"","collection":{"id":3,"name":"ResourceLibrary2"}},{"name":"Keyword
                                        Ghost","doc":"","args":"","tags":["👻"],"id":4,"synopsis":"","html_doc":"","arg_string":"","collection":{"id":2,"name":"ResourceLibrary1"}},{"name":"Keyword
                                        Ghost Heart
                                        Rocket","doc":"","args":"","tags":["❤️","👻","🚀"],"id":5,"synopsis":"","html_doc":"","arg_string":"","collection":{"id":2,"name":"ResourceLibrary1"}},{"name":"Keyword
                                        Heart
                                        Engine","doc":"","args":"","tags":["❤️","🚂"],"id":1,"synopsis":"","html_doc":"","arg_string":"","collection":{"id":1,"name":"PyLibrary"}},{"name":"Keyword
                                        Heart
                                        Skull","doc":"","args":"","tags":["❤️","💀"],"id":2,"synopsis":"","html_doc":"","arg_string":"","collection":{"id":1,"name":"PyLibrary"}},{"name":"Keyword
                                        No
                                        Tag","doc":"","args":"","tags":[],"id":3,"synopsis":"","html_doc":"","arg_string":"","collection":{"id":1,"name":"PyLibrary"}},{"name":"Keyword
                                        No
                                        Tag","doc":"","args":"","tags":[],"id":8,"synopsis":"","html_doc":"","arg_string":"","collection":{"id":3,"name":"ResourceLibrary2"}},{"name":"Keyword
                                        Rocket","doc":"","args":"","tags":["🚀"],"id":6,"synopsis":"","html_doc":"","arg_string":"","collection":{"id":2,"name":"ResourceLibrary1"}},{"name":"Keyword
                                        Rocket","doc":"","args":"","tags":["🚀"],"id":9,"synopsis":"","html_doc":"","arg_string":"","collection":{"id":3,"name":"ResourceLibrary2"}},{"name":"Keyword
                                        Rocket Moon
                                        Heart","doc":"","args":"","tags":["❤️","🌑","🚀"],"id":10,"synopsis":"","html_doc":"","arg_string":"","collection":{"id":3,"name":"ResourceLibrary2"}},{"name":"Keyword
                                        TextualTag","doc":"","args":"","tags":["STR_tag"],"id":11,"synopsis":"","html_doc":"","arg_string":"","collection":{"id":3,"name":"ResourceLibrary2"}}]
                                    </msg>
                                    <msg timestamp="20210830 17:36:13.444" level="INFO">${response} = &lt;Response [200]&gt;</msg>
                                    <status status="PASS" starttime="20210830 17:36:13.424"
                                            endtime="20210830 17:36:13.444"/>
                                </kw>
                                <kw name="Should Be Equal As Integers" library="BuiltIn">
                                    <arg>${response.status_code}</arg>
                                    <arg>200</arg>
                                    <doc>Fails if objects are unequal after converting them to integers.</doc>
                                    <msg timestamp="20210830 17:36:13.444" level="INFO">Argument types are:
                                        &lt;class 'int'&gt;
                                        &lt;type 'unicode'&gt;
                                    </msg>
                                    <status status="PASS" starttime="20210830 17:36:13.444"
                                            endtime="20210830 17:36:13.444"/>
                                </kw>
                                <msg timestamp="20210830 17:36:13.444" level="INFO">${response} = [{'name': 'Keyword
                                    Airplane In The Clouds', 'doc': '', 'args': '', 'tags': ['☁️⛅️☁️✈️☁️☁️'], 'id': 7,
                                    'synopsis': '', 'html_doc': '', 'arg_string': '', 'collection': {'id': 3, 'name':
                                    'ResourceLibrary...
                                </msg>
                                <status status="PASS" starttime="20210830 17:36:13.414"
                                        endtime="20210830 17:36:13.444"/>
                            </kw>
                            <kw name="Length Should Be" library="BuiltIn">
                                <arg>${response}</arg>
                                <arg>${n}</arg>
                                <doc>Verifies that the length of the given item is correct.</doc>
                                <msg timestamp="20210830 17:36:13.444" level="INFO">Length is 11</msg>
                                <status status="PASS" starttime="20210830 17:36:13.444"
                                        endtime="20210830 17:36:13.444"/>
                            </kw>
                            <status status="PASS" starttime="20210830 17:36:13.414" endtime="20210830 17:36:13.444"/>
                        </kw>
                        <status status="PASS" starttime="20210830 17:36:13.384" endtime="20210830 17:36:13.444"/>
                    </kw>
                    <status status="PASS" starttime="20210830 17:36:11.162" endtime="20210830 17:36:13.444"/>
                </kw>
                <kw name="Run Cli With Options --load-mode=insert --no-installed-keywords --include &quot;&quot; ${INITIAL_FIXTURES} And Expect Api To Have 3 Collections And 11 Keywords"
                    sourcename="Run Cli With Options ${options} And Expect Api To Have ${n} Collections And ${m} Keywords">
                    <doc>Run pkg from CLI and expect a certain amount of collections
                        and keywords
                    </doc>
                    <kw name="Run Cli Package With Options" library="keywords">
                        <arg>${options}</arg>
                        <doc>Attempt to run the rfhub2-cli package with the given options
                            The stdout of the process will be in a test suite
                            variable named ${output}
                        </doc>
                        <kw name="Run" library="OperatingSystem">
                            <var>${output}</var>
                            <arg>${ACTIVATE_VENV} rfhub2-cli -a http://${HOST}:8000 ${options}</arg>
                            <doc>Runs the given command in the system and returns the output.</doc>
                            <msg timestamp="20210830 17:36:13.594" level="INFO">Running command ' rfhub2-cli -a
                                http://127.0.0.1:8000 --load-mode=insert --no-installed-keywords --include ""
                                C:\repo\rfhub2\tests\acceptance\resources\..\..\fixtures/initial/ 2&gt;&amp;1'.
                            </msg>
                            <msg timestamp="20210830 17:36:15.664" level="INFO">${output} = PyLibrary library with 3
                                keywords loaded.
                                ResourceLibrary1 library with 3 keywords loaded.
                                ResourceLibrary2 library with 5 keywords loaded.

                                Successfully loaded 3 collections with 11 keywords.
                            </msg>
                            <status status="PASS" starttime="20210830 17:36:13.444" endtime="20210830 17:36:15.664"/>
                        </kw>
                        <kw name="Set Suite Variable" library="BuiltIn">
                            <arg>${output}</arg>
                            <doc>Makes a variable available everywhere within the scope of the current suite.</doc>
                            <msg timestamp="20210830 17:36:15.664" level="INFO">${output} = PyLibrary library with 3
                                keywords loaded.
                                ResourceLibrary1 library with 3 keywords loaded.
                                ResourceLibrary2 library with 5 keywords loaded.

                                Successfully loaded 3 collections with 11 keywords.
                            </msg>
                            <status status="PASS" starttime="20210830 17:36:15.664" endtime="20210830 17:36:15.664"/>
                        </kw>
                        <status status="PASS" starttime="20210830 17:36:13.444" endtime="20210830 17:36:15.664"/>
                    </kw>
                    <kw name="Api Should Have ${n} Collections And ${m} Keywords"
                        sourcename="Api Should Have ${n} Collections And ${m} Keywords">
                        <kw name="collections Endpoint Should Have ${n} Items" library="keywords"
                            sourcename="${endpoint} Endpoint Should Have ${n} Items">
                            <kw name="Get Request For Endpoint" library="keywords">
                                <var>${response}</var>
                                <arg>endpoint=${endpoint}</arg>
                                <kw name="Create Session" library="RequestsLibrary">
                                    <arg>tmp</arg>
                                    <arg>http://${HOST}:8000/api/v1</arg>
                                    <doc>Create Session: create a HTTP session to a server</doc>
                                    <msg timestamp="20210830 17:36:15.664" level="INFO">Creating Session using :
                                        alias=tmp, url=http://127.0.0.1:8000/api/v1, headers={}, cookies={}, auth=None,
                                        timeout=None, proxies=None, verify=False, debug=0
                                    </msg>
                                    <status status="PASS" starttime="20210830 17:36:15.664"
                                            endtime="20210830 17:36:15.664"/>
                                </kw>
                                <kw name="Get On Session" library="RequestsLibrary">
                                    <var>${response}</var>
                                    <arg>tmp</arg>
                                    <arg>${endpoint}/</arg>
                                    <arg>params=${params}</arg>
                                    <doc>Sends a GET request on a previously created HTTP Session.</doc>
                                    <msg timestamp="20210830 17:36:15.694" level="INFO">GET Request :
                                        url=http://127.0.0.1:8000/api/v1/collections/?None
                                        path_url=/api/v1/collections/?None
                                        headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip,
                                        deflate', 'Accept': '*/*', 'Connection': 'keep-alive'}
                                        body=None
                                    </msg>
                                    <msg timestamp="20210830 17:36:15.694" level="INFO">GET Response :
                                        url=http://127.0.0.1:8000/api/v1/collections/?None
                                        status=200, reason=OK
                                        headers={'date': 'Mon, 30 Aug 2021 15:36:15 GMT', 'server': 'uvicorn',
                                        'content-length': '2672', 'content-type': 'application/json'}
                                        body=[{"name":"PyLibrary","type":"LIBRARY","version":"1.0.0","scope":"TEST","named_args":null,"path":"C:\\repo\\rfhub2\\tests\\acceptance\\resources\\..\\..\\fixtures\\initial\\PyLibrary","doc":"Documentation
                                        for library
                                        ``PyLibrary``.","doc_format":"ROBOT","id":1,"keywords":[{"name":"Keyword Heart
                                        Engine","doc":"","args":"","tags":["❤️","🚂"],"id":1,"synopsis":"","html_doc":"","arg_string":""},{"name":"Keyword
                                        Heart
                                        Skull","doc":"","args":"","tags":["❤️","💀"],"id":2,"synopsis":"","html_doc":"","arg_string":""},{"name":"Keyword
                                        No
                                        Tag","doc":"","args":"","tags":[],"id":3,"synopsis":"","html_doc":"","arg_string":""}],"synopsis":"Documentation
                                        for library ``PyLibrary``.","html_doc":"&lt;p&gt;Documentation for library &lt;code&gt;PyLibrary&lt;/code&gt;.&lt;/p&gt;"},{"name":"ResourceLibrary1","type":"RESOURCE","version":"","scope":"GLOBAL","named_args":null,"path":"C:\\repo\\rfhub2\\tests\\acceptance\\resources\\..\\..\\fixtures\\initial\\ResourceLibrary1.resource","doc":"Documentation
                                        for resource file
                                        ``ResourceLibrary1``.","doc_format":"ROBOT","id":2,"keywords":[{"name":"Keyword
                                        Ghost","doc":"","args":"","tags":["👻"],"id":4,"synopsis":"","html_doc":"","arg_string":""},{"name":"Keyword
                                        Ghost Heart
                                        Rocket","doc":"","args":"","tags":["❤️","👻","🚀"],"id":5,"synopsis":"","html_doc":"","arg_string":""},{"name":"Keyword
                                        Rocket","doc":"","args":"","tags":["🚀"],"id":6,"synopsis":"","html_doc":"","arg_string":""}],"synopsis":"Documentation
                                        for resource file ``ResourceLibrary1``.","html_doc":"&lt;p&gt;Documentation for
                                        resource file &lt;code&gt;ResourceLibrary1&lt;/code&gt;.&lt;/p&gt;"},{"name":"ResourceLibrary2","type":"RESOURCE","version":"","scope":"GLOBAL","named_args":null,"path":"C:\\repo\\rfhub2\\tests\\acceptance\\resources\\..\\..\\fixtures\\initial\\ResourceLibrary2.resource","doc":"Documentation
                                        for resource file
                                        ``ResourceLibrary2``.","doc_format":"ROBOT","id":3,"keywords":[{"name":"Keyword
                                        Airplane In The
                                        Clouds","doc":"","args":"","tags":["☁️⛅️☁️✈️☁️☁️"],"id":7,"synopsis":"","html_doc":"","arg_string":""},{"name":"Keyword
                                        No
                                        Tag","doc":"","args":"","tags":[],"id":8,"synopsis":"","html_doc":"","arg_string":""},{"name":"Keyword
                                        Rocket","doc":"","args":"","tags":["🚀"],"id":9,"synopsis":"","html_doc":"","arg_string":""},{"name":"Keyword
                                        Rocket Moon
                                        Heart","doc":"","args":"","tags":["❤️","🌑","🚀"],"id":10,"synopsis":"","html_doc":"","arg_string":""},{"name":"Keyword
                                        TextualTag","doc":"","args":"","tags":["STR_tag"],"id":11,"synopsis":"","html_doc":"","arg_string":""}],"synopsis":"Documentation
                                        for resource file ``ResourceLibrary2``.","html_doc":"&lt;p&gt;Documentation for
                                        resource file &lt;code&gt;ResourceLibrary2&lt;/code&gt;.&lt;/p&gt;"}]
                                    </msg>
                                    <msg timestamp="20210830 17:36:15.694" level="INFO">${response} = &lt;Response [200]&gt;</msg>
                                    <status status="PASS" starttime="20210830 17:36:15.664"
                                            endtime="20210830 17:36:15.694"/>
                                </kw>
                                <kw name="Should Be Equal As Integers" library="BuiltIn">
                                    <arg>${response.status_code}</arg>
                                    <arg>200</arg>
                                    <doc>Fails if objects are unequal after converting them to integers.</doc>
                                    <msg timestamp="20210830 17:36:15.694" level="INFO">Argument types are:
                                        &lt;class 'int'&gt;
                                        &lt;type 'unicode'&gt;
                                    </msg>
                                    <status status="PASS" starttime="20210830 17:36:15.694"
                                            endtime="20210830 17:36:15.694"/>
                                </kw>
                                <msg timestamp="20210830 17:36:15.694" level="INFO">${response} = [{'name': 'PyLibrary',
                                    'type': 'LIBRARY', 'version': '1.0.0', 'scope': 'TEST', 'named_args': None, 'path':
                                    'C:\\repo\\rfhub2\\tests\\acceptance\\resources\\..\\..\\fixtures\\initial\\PyLibrary',
                                    'doc'...
                                </msg>
                                <status status="PASS" starttime="20210830 17:36:15.664"
                                        endtime="20210830 17:36:15.694"/>
                            </kw>
                            <kw name="Length Should Be" library="BuiltIn">
                                <arg>${response}</arg>
                                <arg>${n}</arg>
                                <doc>Verifies that the length of the given item is correct.</doc>
                                <msg timestamp="20210830 17:36:15.694" level="INFO">Length is 3</msg>
                                <status status="PASS" starttime="20210830 17:36:15.694"
                                        endtime="20210830 17:36:15.694"/>
                            </kw>
                            <status status="PASS" starttime="20210830 17:36:15.664" endtime="20210830 17:36:15.694"/>
                        </kw>
                        <kw name="keywords Endpoint Should Have ${m} Items" library="keywords"
                            sourcename="${endpoint} Endpoint Should Have ${n} Items">
                            <kw name="Get Request For Endpoint" library="keywords">
                                <var>${response}</var>
                                <arg>endpoint=${endpoint}</arg>
                                <kw name="Create Session" library="RequestsLibrary">
                                    <arg>tmp</arg>
                                    <arg>http://${HOST}:8000/api/v1</arg>
                                    <doc>Create Session: create a HTTP session to a server</doc>
                                    <msg timestamp="20210830 17:36:15.704" level="INFO">Creating Session using :
                                        alias=tmp, url=http://127.0.0.1:8000/api/v1, headers={}, cookies={}, auth=None,
                                        timeout=None, proxies=None, verify=False, debug=0
                                    </msg>
                                    <status status="PASS" starttime="20210830 17:36:15.704"
                                            endtime="20210830 17:36:15.704"/>
                                </kw>
                                <kw name="Get On Session" library="RequestsLibrary">
                                    <var>${response}</var>
                                    <arg>tmp</arg>
                                    <arg>${endpoint}/</arg>
                                    <arg>params=${params}</arg>
                                    <doc>Sends a GET request on a previously created HTTP Session.</doc>
                                    <msg timestamp="20210830 17:36:15.724" level="INFO">GET Request :
                                        url=http://127.0.0.1:8000/api/v1/keywords/?None
                                        path_url=/api/v1/keywords/?None
                                        headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip,
                                        deflate', 'Accept': '*/*', 'Connection': 'keep-alive'}
                                        body=None
                                    </msg>
                                    <msg timestamp="20210830 17:36:15.724" level="INFO">GET Response :
                                        url=http://127.0.0.1:8000/api/v1/keywords/?None
                                        status=200, reason=OK
                                        headers={'date': 'Mon, 30 Aug 2021 15:36:15 GMT', 'server': 'uvicorn',
                                        'content-length': '1868', 'content-type': 'application/json'}
                                        body=[{"name":"Keyword Airplane In The
                                        Clouds","doc":"","args":"","tags":["☁️⛅️☁️✈️☁️☁️"],"id":7,"synopsis":"","html_doc":"","arg_string":"","collection":{"id":3,"name":"ResourceLibrary2"}},{"name":"Keyword
                                        Ghost","doc":"","args":"","tags":["👻"],"id":4,"synopsis":"","html_doc":"","arg_string":"","collection":{"id":2,"name":"ResourceLibrary1"}},{"name":"Keyword
                                        Ghost Heart
                                        Rocket","doc":"","args":"","tags":["❤️","👻","🚀"],"id":5,"synopsis":"","html_doc":"","arg_string":"","collection":{"id":2,"name":"ResourceLibrary1"}},{"name":"Keyword
                                        Heart
                                        Engine","doc":"","args":"","tags":["❤️","🚂"],"id":1,"synopsis":"","html_doc":"","arg_string":"","collection":{"id":1,"name":"PyLibrary"}},{"name":"Keyword
                                        Heart
                                        Skull","doc":"","args":"","tags":["❤️","💀"],"id":2,"synopsis":"","html_doc":"","arg_string":"","collection":{"id":1,"name":"PyLibrary"}},{"name":"Keyword
                                        No
                                        Tag","doc":"","args":"","tags":[],"id":3,"synopsis":"","html_doc":"","arg_string":"","collection":{"id":1,"name":"PyLibrary"}},{"name":"Keyword
                                        No
                                        Tag","doc":"","args":"","tags":[],"id":8,"synopsis":"","html_doc":"","arg_string":"","collection":{"id":3,"name":"ResourceLibrary2"}},{"name":"Keyword
                                        Rocket","doc":"","args":"","tags":["🚀"],"id":6,"synopsis":"","html_doc":"","arg_string":"","collection":{"id":2,"name":"ResourceLibrary1"}},{"name":"Keyword
                                        Rocket","doc":"","args":"","tags":["🚀"],"id":9,"synopsis":"","html_doc":"","arg_string":"","collection":{"id":3,"name":"ResourceLibrary2"}},{"name":"Keyword
                                        Rocket Moon
                                        Heart","doc":"","args":"","tags":["❤️","🌑","🚀"],"id":10,"synopsis":"","html_doc":"","arg_string":"","collection":{"id":3,"name":"ResourceLibrary2"}},{"name":"Keyword
                                        TextualTag","doc":"","args":"","tags":["STR_tag"],"id":11,"synopsis":"","html_doc":"","arg_string":"","collection":{"id":3,"name":"ResourceLibrary2"}}]
                                    </msg>
                                    <msg timestamp="20210830 17:36:15.724" level="INFO">${response} = &lt;Response [200]&gt;</msg>
                                    <status status="PASS" starttime="20210830 17:36:15.704"
                                            endtime="20210830 17:36:15.724"/>
                                </kw>
                                <kw name="Should Be Equal As Integers" library="BuiltIn">
                                    <arg>${response.status_code}</arg>
                                    <arg>200</arg>
                                    <doc>Fails if objects are unequal after converting them to integers.</doc>
                                    <msg timestamp="20210830 17:36:15.724" level="INFO">Argument types are:
                                        &lt;class 'int'&gt;
                                        &lt;type 'unicode'&gt;
                                    </msg>
                                    <status status="PASS" starttime="20210830 17:36:15.724"
                                            endtime="20210830 17:36:15.724"/>
                                </kw>
                                <msg timestamp="20210830 17:36:15.724" level="INFO">${response} = [{'name': 'Keyword
                                    Airplane In The Clouds', 'doc': '', 'args': '', 'tags': ['☁️⛅️☁️✈️☁️☁️'], 'id': 7,
                                    'synopsis': '', 'html_doc': '', 'arg_string': '', 'collection': {'id': 3, 'name':
                                    'ResourceLibrary...
                                </msg>
                                <status status="PASS" starttime="20210830 17:36:15.694"
                                        endtime="20210830 17:36:15.724"/>
                            </kw>
                            <kw name="Length Should Be" library="BuiltIn">
                                <arg>${response}</arg>
                                <arg>${n}</arg>
                                <doc>Verifies that the length of the given item is correct.</doc>
                                <msg timestamp="20210830 17:36:15.724" level="INFO">Length is 11</msg>
                                <status status="PASS" starttime="20210830 17:36:15.724"
                                        endtime="20210830 17:36:15.724"/>
                            </kw>
                            <status status="PASS" starttime="20210830 17:36:15.694" endtime="20210830 17:36:15.724"/>
                        </kw>
                        <status status="PASS" starttime="20210830 17:36:15.664" endtime="20210830 17:36:15.724"/>
                    </kw>
                    <status status="PASS" starttime="20210830 17:36:13.444" endtime="20210830 17:36:15.724"/>
                </kw>
                <kw name="Run Cli With Options --load-mode=insert --no-installed-keywords --exclude &quot;&quot; ${INITIAL_FIXTURES} And Expect Api To Have 3 Collections And 11 Keywords"
                    sourcename="Run Cli With Options ${options} And Expect Api To Have ${n} Collections And ${m} Keywords">
                    <doc>Run pkg from CLI and expect a certain amount of collections
                        and keywords
                    </doc>
                    <kw name="Run Cli Package With Options" library="keywords">
                        <arg>${options}</arg>
                        <doc>Attempt to run the rfhub2-cli package with the given options
                            The stdout of the process will be in a test suite
                            variable named ${output}
                        </doc>
                        <kw name="Run" library="OperatingSystem">
                            <var>${output}</var>
                            <arg>${ACTIVATE_VENV} rfhub2-cli -a http://${HOST}:8000 ${options}</arg>
                            <doc>Runs the given command in the system and returns the output.</doc>
                            <msg timestamp="20210830 17:36:15.874" level="INFO">Running command ' rfhub2-cli -a
                                http://127.0.0.1:8000 --load-mode=insert --no-installed-keywords --exclude ""
                                C:\repo\rfhub2\tests\acceptance\resources\..\..\fixtures/initial/ 2&gt;&amp;1'.
                            </msg>
                            <msg timestamp="20210830 17:36:17.937" level="INFO">${output} = PyLibrary library with 3
                                keywords loaded.
                                ResourceLibrary1 library with 3 keywords loaded.
                                ResourceLibrary2 library with 5 keywords loaded.

                                Successfully loaded 3 collections with 11 keywords.
                            </msg>
                            <status status="PASS" starttime="20210830 17:36:15.724" endtime="20210830 17:36:17.937"/>
                        </kw>
                        <kw name="Set Suite Variable" library="BuiltIn">
                            <arg>${output}</arg>
                            <doc>Makes a variable available everywhere within the scope of the current suite.</doc>
                            <msg timestamp="20210830 17:36:17.947" level="INFO">${output} = PyLibrary library with 3
                                keywords loaded.
                                ResourceLibrary1 library with 3 keywords loaded.
                                ResourceLibrary2 library with 5 keywords loaded.

                                Successfully loaded 3 collections with 11 keywords.
                            </msg>
                            <status status="PASS" starttime="20210830 17:36:17.937" endtime="20210830 17:36:17.947"/>
                        </kw>
                        <status status="PASS" starttime="20210830 17:36:15.724" endtime="20210830 17:36:17.947"/>
                    </kw>
                    <kw name="Api Should Have ${n} Collections And ${m} Keywords"
                        sourcename="Api Should Have ${n} Collections And ${m} Keywords">
                        <kw name="collections Endpoint Should Have ${n} Items" library="keywords"
                            sourcename="${endpoint} Endpoint Should Have ${n} Items">
                            <kw name="Get Request For Endpoint" library="keywords">
                                <var>${response}</var>
                                <arg>endpoint=${endpoint}</arg>
                                <kw name="Create Session" library="RequestsLibrary">
                                    <arg>tmp</arg>
                                    <arg>http://${HOST}:8000/api/v1</arg>
                                    <doc>Create Session: create a HTTP session to a server</doc>
                                    <msg timestamp="20210830 17:36:17.947" level="INFO">Creating Session using :
                                        alias=tmp, url=http://127.0.0.1:8000/api/v1, headers={}, cookies={}, auth=None,
                                        timeout=None, proxies=None, verify=False, debug=0
                                    </msg>
                                    <status status="PASS" starttime="20210830 17:36:17.947"
                                            endtime="20210830 17:36:17.947"/>
                                </kw>
                                <kw name="Get On Session" library="RequestsLibrary">
                                    <var>${response}</var>
                                    <arg>tmp</arg>
                                    <arg>${endpoint}/</arg>
                                    <arg>params=${params}</arg>
                                    <doc>Sends a GET request on a previously created HTTP Session.</doc>
                                    <msg timestamp="20210830 17:36:17.967" level="INFO">GET Request :
                                        url=http://127.0.0.1:8000/api/v1/collections/?None
                                        path_url=/api/v1/collections/?None
                                        headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip,
                                        deflate', 'Accept': '*/*', 'Connection': 'keep-alive'}
                                        body=None
                                    </msg>
                                    <msg timestamp="20210830 17:36:17.967" level="INFO">GET Response :
                                        url=http://127.0.0.1:8000/api/v1/collections/?None
                                        status=200, reason=OK
                                        headers={'date': 'Mon, 30 Aug 2021 15:36:17 GMT', 'server': 'uvicorn',
                                        'content-length': '2672', 'content-type': 'application/json'}
                                        body=[{"name":"PyLibrary","type":"LIBRARY","version":"1.0.0","scope":"TEST","named_args":null,"path":"C:\\repo\\rfhub2\\tests\\acceptance\\resources\\..\\..\\fixtures\\initial\\PyLibrary","doc":"Documentation
                                        for library
                                        ``PyLibrary``.","doc_format":"ROBOT","id":1,"keywords":[{"name":"Keyword Heart
                                        Engine","doc":"","args":"","tags":["❤️","🚂"],"id":1,"synopsis":"","html_doc":"","arg_string":""},{"name":"Keyword
                                        Heart
                                        Skull","doc":"","args":"","tags":["❤️","💀"],"id":2,"synopsis":"","html_doc":"","arg_string":""},{"name":"Keyword
                                        No
                                        Tag","doc":"","args":"","tags":[],"id":3,"synopsis":"","html_doc":"","arg_string":""}],"synopsis":"Documentation
                                        for library ``PyLibrary``.","html_doc":"&lt;p&gt;Documentation for library &lt;code&gt;PyLibrary&lt;/code&gt;.&lt;/p&gt;"},{"name":"ResourceLibrary1","type":"RESOURCE","version":"","scope":"GLOBAL","named_args":null,"path":"C:\\repo\\rfhub2\\tests\\acceptance\\resources\\..\\..\\fixtures\\initial\\ResourceLibrary1.resource","doc":"Documentation
                                        for resource file
                                        ``ResourceLibrary1``.","doc_format":"ROBOT","id":2,"keywords":[{"name":"Keyword
                                        Ghost","doc":"","args":"","tags":["👻"],"id":4,"synopsis":"","html_doc":"","arg_string":""},{"name":"Keyword
                                        Ghost Heart
                                        Rocket","doc":"","args":"","tags":["❤️","👻","🚀"],"id":5,"synopsis":"","html_doc":"","arg_string":""},{"name":"Keyword
                                        Rocket","doc":"","args":"","tags":["🚀"],"id":6,"synopsis":"","html_doc":"","arg_string":""}],"synopsis":"Documentation
                                        for resource file ``ResourceLibrary1``.","html_doc":"&lt;p&gt;Documentation for
                                        resource file &lt;code&gt;ResourceLibrary1&lt;/code&gt;.&lt;/p&gt;"},{"name":"ResourceLibrary2","type":"RESOURCE","version":"","scope":"GLOBAL","named_args":null,"path":"C:\\repo\\rfhub2\\tests\\acceptance\\resources\\..\\..\\fixtures\\initial\\ResourceLibrary2.resource","doc":"Documentation
                                        for resource file
                                        ``ResourceLibrary2``.","doc_format":"ROBOT","id":3,"keywords":[{"name":"Keyword
                                        Airplane In The
                                        Clouds","doc":"","args":"","tags":["☁️⛅️☁️✈️☁️☁️"],"id":7,"synopsis":"","html_doc":"","arg_string":""},{"name":"Keyword
                                        No
                                        Tag","doc":"","args":"","tags":[],"id":8,"synopsis":"","html_doc":"","arg_string":""},{"name":"Keyword
                                        Rocket","doc":"","args":"","tags":["🚀"],"id":9,"synopsis":"","html_doc":"","arg_string":""},{"name":"Keyword
                                        Rocket Moon
                                        Heart","doc":"","args":"","tags":["❤️","🌑","🚀"],"id":10,"synopsis":"","html_doc":"","arg_string":""},{"name":"Keyword
                                        TextualTag","doc":"","args":"","tags":["STR_tag"],"id":11,"synopsis":"","html_doc":"","arg_string":""}],"synopsis":"Documentation
                                        for resource file ``ResourceLibrary2``.","html_doc":"&lt;p&gt;Documentation for
                                        resource file &lt;code&gt;ResourceLibrary2&lt;/code&gt;.&lt;/p&gt;"}]
                                    </msg>
                                    <msg timestamp="20210830 17:36:17.967" level="INFO">${response} = &lt;Response [200]&gt;</msg>
                                    <status status="PASS" starttime="20210830 17:36:17.947"
                                            endtime="20210830 17:36:17.967"/>
                                </kw>
                                <kw name="Should Be Equal As Integers" library="BuiltIn">
                                    <arg>${response.status_code}</arg>
                                    <arg>200</arg>
                                    <doc>Fails if objects are unequal after converting them to integers.</doc>
                                    <msg timestamp="20210830 17:36:17.967" level="INFO">Argument types are:
                                        &lt;class 'int'&gt;
                                        &lt;type 'unicode'&gt;
                                    </msg>
                                    <status status="PASS" starttime="20210830 17:36:17.967"
                                            endtime="20210830 17:36:17.967"/>
                                </kw>
                                <msg timestamp="20210830 17:36:17.967" level="INFO">${response} = [{'name': 'PyLibrary',
                                    'type': 'LIBRARY', 'version': '1.0.0', 'scope': 'TEST', 'named_args': None, 'path':
                                    'C:\\repo\\rfhub2\\tests\\acceptance\\resources\\..\\..\\fixtures\\initial\\PyLibrary',
                                    'doc'...
                                </msg>
                                <status status="PASS" starttime="20210830 17:36:17.947"
                                        endtime="20210830 17:36:17.967"/>
                            </kw>
                            <kw name="Length Should Be" library="BuiltIn">
                                <arg>${response}</arg>
                                <arg>${n}</arg>
                                <doc>Verifies that the length of the given item is correct.</doc>
                                <msg timestamp="20210830 17:36:17.967" level="INFO">Length is 3</msg>
                                <status status="PASS" starttime="20210830 17:36:17.967"
                                        endtime="20210830 17:36:17.967"/>
                            </kw>
                            <status status="PASS" starttime="20210830 17:36:17.947" endtime="20210830 17:36:17.967"/>
                        </kw>
                        <kw name="keywords Endpoint Should Have ${m} Items" library="keywords"
                            sourcename="${endpoint} Endpoint Should Have ${n} Items">
                            <kw name="Get Request For Endpoint" library="keywords">
                                <var>${response}</var>
                                <arg>endpoint=${endpoint}</arg>
                                <kw name="Create Session" library="RequestsLibrary">
                                    <arg>tmp</arg>
                                    <arg>http://${HOST}:8000/api/v1</arg>
                                    <doc>Create Session: create a HTTP session to a server</doc>
                                    <msg timestamp="20210830 17:36:17.977" level="INFO">Creating Session using :
                                        alias=tmp, url=http://127.0.0.1:8000/api/v1, headers={}, cookies={}, auth=None,
                                        timeout=None, proxies=None, verify=False, debug=0
                                    </msg>
                                    <status status="PASS" starttime="20210830 17:36:17.977"
                                            endtime="20210830 17:36:17.977"/>
                                </kw>
                                <kw name="Get On Session" library="RequestsLibrary">
                                    <var>${response}</var>
                                    <arg>tmp</arg>
                                    <arg>${endpoint}/</arg>
                                    <arg>params=${params}</arg>
                                    <doc>Sends a GET request on a previously created HTTP Session.</doc>
                                    <msg timestamp="20210830 17:36:17.997" level="INFO">GET Request :
                                        url=http://127.0.0.1:8000/api/v1/keywords/?None
                                        path_url=/api/v1/keywords/?None
                                        headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip,
                                        deflate', 'Accept': '*/*', 'Connection': 'keep-alive'}
                                        body=None
                                    </msg>
                                    <msg timestamp="20210830 17:36:17.997" level="INFO">GET Response :
                                        url=http://127.0.0.1:8000/api/v1/keywords/?None
                                        status=200, reason=OK
                                        headers={'date': 'Mon, 30 Aug 2021 15:36:17 GMT', 'server': 'uvicorn',
                                        'content-length': '1868', 'content-type': 'application/json'}
                                        body=[{"name":"Keyword Airplane In The
                                        Clouds","doc":"","args":"","tags":["☁️⛅️☁️✈️☁️☁️"],"id":7,"synopsis":"","html_doc":"","arg_string":"","collection":{"id":3,"name":"ResourceLibrary2"}},{"name":"Keyword
                                        Ghost","doc":"","args":"","tags":["👻"],"id":4,"synopsis":"","html_doc":"","arg_string":"","collection":{"id":2,"name":"ResourceLibrary1"}},{"name":"Keyword
                                        Ghost Heart
                                        Rocket","doc":"","args":"","tags":["❤️","👻","🚀"],"id":5,"synopsis":"","html_doc":"","arg_string":"","collection":{"id":2,"name":"ResourceLibrary1"}},{"name":"Keyword
                                        Heart
                                        Engine","doc":"","args":"","tags":["❤️","🚂"],"id":1,"synopsis":"","html_doc":"","arg_string":"","collection":{"id":1,"name":"PyLibrary"}},{"name":"Keyword
                                        Heart
                                        Skull","doc":"","args":"","tags":["❤️","💀"],"id":2,"synopsis":"","html_doc":"","arg_string":"","collection":{"id":1,"name":"PyLibrary"}},{"name":"Keyword
                                        No
                                        Tag","doc":"","args":"","tags":[],"id":3,"synopsis":"","html_doc":"","arg_string":"","collection":{"id":1,"name":"PyLibrary"}},{"name":"Keyword
                                        No
                                        Tag","doc":"","args":"","tags":[],"id":8,"synopsis":"","html_doc":"","arg_string":"","collection":{"id":3,"name":"ResourceLibrary2"}},{"name":"Keyword
                                        Rocket","doc":"","args":"","tags":["🚀"],"id":6,"synopsis":"","html_doc":"","arg_string":"","collection":{"id":2,"name":"ResourceLibrary1"}},{"name":"Keyword
                                        Rocket","doc":"","args":"","tags":["🚀"],"id":9,"synopsis":"","html_doc":"","arg_string":"","collection":{"id":3,"name":"ResourceLibrary2"}},{"name":"Keyword
                                        Rocket Moon
                                        Heart","doc":"","args":"","tags":["❤️","🌑","🚀"],"id":10,"synopsis":"","html_doc":"","arg_string":"","collection":{"id":3,"name":"ResourceLibrary2"}},{"name":"Keyword
                                        TextualTag","doc":"","args":"","tags":["STR_tag"],"id":11,"synopsis":"","html_doc":"","arg_string":"","collection":{"id":3,"name":"ResourceLibrary2"}}]
                                    </msg>
                                    <msg timestamp="20210830 17:36:17.997" level="INFO">${response} = &lt;Response [200]&gt;</msg>
                                    <status status="PASS" starttime="20210830 17:36:17.977"
                                            endtime="20210830 17:36:17.997"/>
                                </kw>
                                <kw name="Should Be Equal As Integers" library="BuiltIn">
                                    <arg>${response.status_code}</arg>
                                    <arg>200</arg>
                                    <doc>Fails if objects are unequal after converting them to integers.</doc>
                                    <msg timestamp="20210830 17:36:17.997" level="INFO">Argument types are:
                                        &lt;class 'int'&gt;
                                        &lt;type 'unicode'&gt;
                                    </msg>
                                    <status status="PASS" starttime="20210830 17:36:17.997"
                                            endtime="20210830 17:36:17.997"/>
                                </kw>
                                <msg timestamp="20210830 17:36:17.997" level="INFO">${response} = [{'name': 'Keyword
                                    Airplane In The Clouds', 'doc': '', 'args': '', 'tags': ['☁️⛅️☁️✈️☁️☁️'], 'id': 7,
                                    'synopsis': '', 'html_doc': '', 'arg_string': '', 'collection': {'id': 3, 'name':
                                    'ResourceLibrary...
                                </msg>
                                <status status="PASS" starttime="20210830 17:36:17.967"
                                        endtime="20210830 17:36:17.997"/>
                            </kw>
                            <kw name="Length Should Be" library="BuiltIn">
                                <arg>${response}</arg>
                                <arg>${n}</arg>
                                <doc>Verifies that the length of the given item is correct.</doc>
                                <msg timestamp="20210830 17:36:17.997" level="INFO">Length is 11</msg>
                                <status status="PASS" starttime="20210830 17:36:17.997"
                                        endtime="20210830 17:36:17.997"/>
                            </kw>
                            <status status="PASS" starttime="20210830 17:36:17.967" endtime="20210830 17:36:17.997"/>
                        </kw>
                        <status status="PASS" starttime="20210830 17:36:17.947" endtime="20210830 17:36:17.997"/>
                    </kw>
                    <status status="PASS" starttime="20210830 17:36:15.724" endtime="20210830 17:36:17.997"/>
                </kw>
                <kw name="Run Cli With Options --load-mode=insert --no-installed-keywords --include &quot;&quot; --exclude &quot;&quot; ${INITIAL_FIXTURES} And Expect Api To Have 3 Collections And 11 Keywords"
                    sourcename="Run Cli With Options ${options} And Expect Api To Have ${n} Collections And ${m} Keywords">
                    <doc>Run pkg from CLI and expect a certain amount of collections
                        and keywords
                    </doc>
                    <kw name="Run Cli Package With Options" library="keywords">
                        <arg>${options}</arg>
                        <doc>Attempt to run the rfhub2-cli package with the given options
                            The stdout of the process will be in a test suite
                            variable named ${output}
                        </doc>
                        <kw name="Run" library="OperatingSystem">
                            <var>${output}</var>
                            <arg>${ACTIVATE_VENV} rfhub2-cli -a http://${HOST}:8000 ${options}</arg>
                            <doc>Runs the given command in the system and returns the output.</doc>
                            <msg timestamp="20210830 17:36:18.148" level="INFO">Running command ' rfhub2-cli -a
                                http://127.0.0.1:8000 --load-mode=insert --no-installed-keywords --include "" --exclude
                                "" C:\repo\rfhub2\tests\acceptance\resources\..\..\fixtures/initial/ 2&gt;&amp;1'.
                            </msg>
                            <msg timestamp="20210830 17:36:20.229" level="INFO">${output} = PyLibrary library with 3
                                keywords loaded.
                                ResourceLibrary1 library with 3 keywords loaded.
                                ResourceLibrary2 library with 5 keywords loaded.

                                Successfully loaded 3 collections with 11 keywords.
                            </msg>
                            <status status="PASS" starttime="20210830 17:36:17.997" endtime="20210830 17:36:20.229"/>
                        </kw>
                        <kw name="Set Suite Variable" library="BuiltIn">
                            <arg>${output}</arg>
                            <doc>Makes a variable available everywhere within the scope of the current suite.</doc>
                            <msg timestamp="20210830 17:36:20.230" level="INFO">${output} = PyLibrary library with 3
                                keywords loaded.
                                ResourceLibrary1 library with 3 keywords loaded.
                                ResourceLibrary2 library with 5 keywords loaded.

                                Successfully loaded 3 collections with 11 keywords.
                            </msg>
                            <status status="PASS" starttime="20210830 17:36:20.229" endtime="20210830 17:36:20.230"/>
                        </kw>
                        <status status="PASS" starttime="20210830 17:36:17.997" endtime="20210830 17:36:20.230"/>
                    </kw>
                    <kw name="Api Should Have ${n} Collections And ${m} Keywords"
                        sourcename="Api Should Have ${n} Collections And ${m} Keywords">
                        <kw name="collections Endpoint Should Have ${n} Items" library="keywords"
                            sourcename="${endpoint} Endpoint Should Have ${n} Items">
                            <kw name="Get Request For Endpoint" library="keywords">
                                <var>${response}</var>
                                <arg>endpoint=${endpoint}</arg>
                                <kw name="Create Session" library="RequestsLibrary">
                                    <arg>tmp</arg>
                                    <arg>http://${HOST}:8000/api/v1</arg>
                                    <doc>Create Session: create a HTTP session to a server</doc>
                                    <msg timestamp="20210830 17:36:20.233" level="INFO">Creating Session using :
                                        alias=tmp, url=http://127.0.0.1:8000/api/v1, headers={}, cookies={}, auth=None,
                                        timeout=None, proxies=None, verify=False, debug=0
                                    </msg>
                                    <status status="PASS" starttime="20210830 17:36:20.232"
                                            endtime="20210830 17:36:20.233"/>
                                </kw>
                                <kw name="Get On Session" library="RequestsLibrary">
                                    <var>${response}</var>
                                    <arg>tmp</arg>
                                    <arg>${endpoint}/</arg>
                                    <arg>params=${params}</arg>
                                    <doc>Sends a GET request on a previously created HTTP Session.</doc>
                                    <msg timestamp="20210830 17:36:20.253" level="INFO">GET Request :
                                        url=http://127.0.0.1:8000/api/v1/collections/?None
                                        path_url=/api/v1/collections/?None
                                        headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip,
                                        deflate', 'Accept': '*/*', 'Connection': 'keep-alive'}
                                        body=None
                                    </msg>
                                    <msg timestamp="20210830 17:36:20.254" level="INFO">GET Response :
                                        url=http://127.0.0.1:8000/api/v1/collections/?None
                                        status=200, reason=OK
                                        headers={'date': 'Mon, 30 Aug 2021 15:36:19 GMT', 'server': 'uvicorn',
                                        'content-length': '2672', 'content-type': 'application/json'}
                                        body=[{"name":"PyLibrary","type":"LIBRARY","version":"1.0.0","scope":"TEST","named_args":null,"path":"C:\\repo\\rfhub2\\tests\\acceptance\\resources\\..\\..\\fixtures\\initial\\PyLibrary","doc":"Documentation
                                        for library
                                        ``PyLibrary``.","doc_format":"ROBOT","id":1,"keywords":[{"name":"Keyword Heart
                                        Engine","doc":"","args":"","tags":["❤️","🚂"],"id":1,"synopsis":"","html_doc":"","arg_string":""},{"name":"Keyword
                                        Heart
                                        Skull","doc":"","args":"","tags":["❤️","💀"],"id":2,"synopsis":"","html_doc":"","arg_string":""},{"name":"Keyword
                                        No
                                        Tag","doc":"","args":"","tags":[],"id":3,"synopsis":"","html_doc":"","arg_string":""}],"synopsis":"Documentation
                                        for library ``PyLibrary``.","html_doc":"&lt;p&gt;Documentation for library &lt;code&gt;PyLibrary&lt;/code&gt;.&lt;/p&gt;"},{"name":"ResourceLibrary1","type":"RESOURCE","version":"","scope":"GLOBAL","named_args":null,"path":"C:\\repo\\rfhub2\\tests\\acceptance\\resources\\..\\..\\fixtures\\initial\\ResourceLibrary1.resource","doc":"Documentation
                                        for resource file
                                        ``ResourceLibrary1``.","doc_format":"ROBOT","id":2,"keywords":[{"name":"Keyword
                                        Ghost","doc":"","args":"","tags":["👻"],"id":4,"synopsis":"","html_doc":"","arg_string":""},{"name":"Keyword
                                        Ghost Heart
                                        Rocket","doc":"","args":"","tags":["❤️","👻","🚀"],"id":5,"synopsis":"","html_doc":"","arg_string":""},{"name":"Keyword
                                        Rocket","doc":"","args":"","tags":["🚀"],"id":6,"synopsis":"","html_doc":"","arg_string":""}],"synopsis":"Documentation
                                        for resource file ``ResourceLibrary1``.","html_doc":"&lt;p&gt;Documentation for
                                        resource file &lt;code&gt;ResourceLibrary1&lt;/code&gt;.&lt;/p&gt;"},{"name":"ResourceLibrary2","type":"RESOURCE","version":"","scope":"GLOBAL","named_args":null,"path":"C:\\repo\\rfhub2\\tests\\acceptance\\resources\\..\\..\\fixtures\\initial\\ResourceLibrary2.resource","doc":"Documentation
                                        for resource file
                                        ``ResourceLibrary2``.","doc_format":"ROBOT","id":3,"keywords":[{"name":"Keyword
                                        Airplane In The
                                        Clouds","doc":"","args":"","tags":["☁️⛅️☁️✈️☁️☁️"],"id":7,"synopsis":"","html_doc":"","arg_string":""},{"name":"Keyword
                                        No
                                        Tag","doc":"","args":"","tags":[],"id":8,"synopsis":"","html_doc":"","arg_string":""},{"name":"Keyword
                                        Rocket","doc":"","args":"","tags":["🚀"],"id":9,"synopsis":"","html_doc":"","arg_string":""},{"name":"Keyword
                                        Rocket Moon
                                        Heart","doc":"","args":"","tags":["❤️","🌑","🚀"],"id":10,"synopsis":"","html_doc":"","arg_string":""},{"name":"Keyword
                                        TextualTag","doc":"","args":"","tags":["STR_tag"],"id":11,"synopsis":"","html_doc":"","arg_string":""}],"synopsis":"Documentation
                                        for resource file ``ResourceLibrary2``.","html_doc":"&lt;p&gt;Documentation for
                                        resource file &lt;code&gt;ResourceLibrary2&lt;/code&gt;.&lt;/p&gt;"}]
                                    </msg>
                                    <msg timestamp="20210830 17:36:20.254" level="INFO">${response} = &lt;Response [200]&gt;</msg>
                                    <status status="PASS" starttime="20210830 17:36:20.233"
                                            endtime="20210830 17:36:20.254"/>
                                </kw>
                                <kw name="Should Be Equal As Integers" library="BuiltIn">
                                    <arg>${response.status_code}</arg>
                                    <arg>200</arg>
                                    <doc>Fails if objects are unequal after converting them to integers.</doc>
                                    <msg timestamp="20210830 17:36:20.257" level="INFO">Argument types are:
                                        &lt;class 'int'&gt;
                                        &lt;type 'unicode'&gt;
                                    </msg>
                                    <status status="PASS" starttime="20210830 17:36:20.254"
                                            endtime="20210830 17:36:20.257"/>
                                </kw>
                                <msg timestamp="20210830 17:36:20.259" level="INFO">${response} = [{'name': 'PyLibrary',
                                    'type': 'LIBRARY', 'version': '1.0.0', 'scope': 'TEST', 'named_args': None, 'path':
                                    'C:\\repo\\rfhub2\\tests\\acceptance\\resources\\..\\..\\fixtures\\initial\\PyLibrary',
                                    'doc'...
                                </msg>
                                <status status="PASS" starttime="20210830 17:36:20.231"
                                        endtime="20210830 17:36:20.259"/>
                            </kw>
                            <kw name="Length Should Be" library="BuiltIn">
                                <arg>${response}</arg>
                                <arg>${n}</arg>
                                <doc>Verifies that the length of the given item is correct.</doc>
                                <msg timestamp="20210830 17:36:20.260" level="INFO">Length is 3</msg>
                                <status status="PASS" starttime="20210830 17:36:20.259"
                                        endtime="20210830 17:36:20.260"/>
                            </kw>
                            <status status="PASS" starttime="20210830 17:36:20.231" endtime="20210830 17:36:20.260"/>
                        </kw>
                        <kw name="keywords Endpoint Should Have ${m} Items" library="keywords"
                            sourcename="${endpoint} Endpoint Should Have ${n} Items">
                            <kw name="Get Request For Endpoint" library="keywords">
                                <var>${response}</var>
                                <arg>endpoint=${endpoint}</arg>
                                <kw name="Create Session" library="RequestsLibrary">
                                    <arg>tmp</arg>
                                    <arg>http://${HOST}:8000/api/v1</arg>
                                    <doc>Create Session: create a HTTP session to a server</doc>
                                    <msg timestamp="20210830 17:36:20.262" level="INFO">Creating Session using :
                                        alias=tmp, url=http://127.0.0.1:8000/api/v1, headers={}, cookies={}, auth=None,
                                        timeout=None, proxies=None, verify=False, debug=0
                                    </msg>
                                    <status status="PASS" starttime="20210830 17:36:20.262"
                                            endtime="20210830 17:36:20.262"/>
                                </kw>
                                <kw name="Get On Session" library="RequestsLibrary">
                                    <var>${response}</var>
                                    <arg>tmp</arg>
                                    <arg>${endpoint}/</arg>
                                    <arg>params=${params}</arg>
                                    <doc>Sends a GET request on a previously created HTTP Session.</doc>
                                    <msg timestamp="20210830 17:36:20.283" level="INFO">GET Request :
                                        url=http://127.0.0.1:8000/api/v1/keywords/?None
                                        path_url=/api/v1/keywords/?None
                                        headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip,
                                        deflate', 'Accept': '*/*', 'Connection': 'keep-alive'}
                                        body=None
                                    </msg>
                                    <msg timestamp="20210830 17:36:20.283" level="INFO">GET Response :
                                        url=http://127.0.0.1:8000/api/v1/keywords/?None
                                        status=200, reason=OK
                                        headers={'date': 'Mon, 30 Aug 2021 15:36:19 GMT', 'server': 'uvicorn',
                                        'content-length': '1868', 'content-type': 'application/json'}
                                        body=[{"name":"Keyword Airplane In The
                                        Clouds","doc":"","args":"","tags":["☁️⛅️☁️✈️☁️☁️"],"id":7,"synopsis":"","html_doc":"","arg_string":"","collection":{"id":3,"name":"ResourceLibrary2"}},{"name":"Keyword
                                        Ghost","doc":"","args":"","tags":["👻"],"id":4,"synopsis":"","html_doc":"","arg_string":"","collection":{"id":2,"name":"ResourceLibrary1"}},{"name":"Keyword
                                        Ghost Heart
                                        Rocket","doc":"","args":"","tags":["❤️","👻","🚀"],"id":5,"synopsis":"","html_doc":"","arg_string":"","collection":{"id":2,"name":"ResourceLibrary1"}},{"name":"Keyword
                                        Heart
                                        Engine","doc":"","args":"","tags":["❤️","🚂"],"id":1,"synopsis":"","html_doc":"","arg_string":"","collection":{"id":1,"name":"PyLibrary"}},{"name":"Keyword
                                        Heart
                                        Skull","doc":"","args":"","tags":["❤️","💀"],"id":2,"synopsis":"","html_doc":"","arg_string":"","collection":{"id":1,"name":"PyLibrary"}},{"name":"Keyword
                                        No
                                        Tag","doc":"","args":"","tags":[],"id":3,"synopsis":"","html_doc":"","arg_string":"","collection":{"id":1,"name":"PyLibrary"}},{"name":"Keyword
                                        No
                                        Tag","doc":"","args":"","tags":[],"id":8,"synopsis":"","html_doc":"","arg_string":"","collection":{"id":3,"name":"ResourceLibrary2"}},{"name":"Keyword
                                        Rocket","doc":"","args":"","tags":["🚀"],"id":6,"synopsis":"","html_doc":"","arg_string":"","collection":{"id":2,"name":"ResourceLibrary1"}},{"name":"Keyword
                                        Rocket","doc":"","args":"","tags":["🚀"],"id":9,"synopsis":"","html_doc":"","arg_string":"","collection":{"id":3,"name":"ResourceLibrary2"}},{"name":"Keyword
                                        Rocket Moon
                                        Heart","doc":"","args":"","tags":["❤️","🌑","🚀"],"id":10,"synopsis":"","html_doc":"","arg_string":"","collection":{"id":3,"name":"ResourceLibrary2"}},{"name":"Keyword
                                        TextualTag","doc":"","args":"","tags":["STR_tag"],"id":11,"synopsis":"","html_doc":"","arg_string":"","collection":{"id":3,"name":"ResourceLibrary2"}}]
                                    </msg>
                                    <msg timestamp="20210830 17:36:20.283" level="INFO">${response} = &lt;Response [200]&gt;</msg>
                                    <status status="PASS" starttime="20210830 17:36:20.263"
                                            endtime="20210830 17:36:20.283"/>
                                </kw>
                                <kw name="Should Be Equal As Integers" library="BuiltIn">
                                    <arg>${response.status_code}</arg>
                                    <arg>200</arg>
                                    <doc>Fails if objects are unequal after converting them to integers.</doc>
                                    <msg timestamp="20210830 17:36:20.286" level="INFO">Argument types are:
                                        &lt;class 'int'&gt;
                                        &lt;type 'unicode'&gt;
                                    </msg>
                                    <status status="PASS" starttime="20210830 17:36:20.284"
                                            endtime="20210830 17:36:20.286"/>
                                </kw>
                                <msg timestamp="20210830 17:36:20.289" level="INFO">${response} = [{'name': 'Keyword
                                    Airplane In The Clouds', 'doc': '', 'args': '', 'tags': ['☁️⛅️☁️✈️☁️☁️'], 'id': 7,
                                    'synopsis': '', 'html_doc': '', 'arg_string': '', 'collection': {'id': 3, 'name':
                                    'ResourceLibrary...
                                </msg>
                                <status status="PASS" starttime="20210830 17:36:20.261"
                                        endtime="20210830 17:36:20.289"/>
                            </kw>
                            <kw name="Length Should Be" library="BuiltIn">
                                <arg>${response}</arg>
                                <arg>${n}</arg>
                                <doc>Verifies that the length of the given item is correct.</doc>
                                <msg timestamp="20210830 17:36:20.289" level="INFO">Length is 11</msg>
                                <status status="PASS" starttime="20210830 17:36:20.289"
                                        endtime="20210830 17:36:20.289"/>
                            </kw>
                            <status status="PASS" starttime="20210830 17:36:20.260" endtime="20210830 17:36:20.290"/>
                        </kw>
                        <status status="PASS" starttime="20210830 17:36:20.230" endtime="20210830 17:36:20.290"/>
                    </kw>
                    <status status="PASS" starttime="20210830 17:36:17.997" endtime="20210830 17:36:20.290"/>
                </kw>
                <kw name="Restore Initial Fixtures" library="keywords" type="TEARDOWN">
                    <kw name="Remove Directory" library="OperatingSystem">
                        <arg>${INITIAL_FIXTURES}</arg>
                        <arg>recursive=True</arg>
                        <doc>Removes the directory pointed to by the given ``path``.</doc>
                        <msg timestamp="20210830 17:36:20.297" level="INFO" html="true">Removed directory '&lt;a
                            href="file://C:\repo\rfhub2\tests\fixtures\initial"&gt;C:\repo\rfhub2\tests\fixtures\initial&lt;/a&gt;'.
                        </msg>
                        <status status="PASS" starttime="20210830 17:36:20.291" endtime="20210830 17:36:20.297"/>
                    </kw>
                    <kw name="Copy Directory" library="OperatingSystem">
                        <arg>${BACKUP_FIXTURES}</arg>
                        <arg>${INITIAL_FIXTURES}</arg>
                        <doc>Copies the source directory into the destination.</doc>
                        <msg timestamp="20210830 17:36:20.364" level="INFO" html="true">Copied directory from '&lt;a
                            href="file://C:\repo\rfhub2\tests\fixtures\initial_bkp"&gt;C:\repo\rfhub2\tests\fixtures\initial_bkp&lt;/a&gt;'
                            to '&lt;a href="file://C:\repo\rfhub2\tests\fixtures\initial"&gt;C:\repo\rfhub2\tests\fixtures\initial&lt;/a&gt;'.
                        </msg>
                        <status status="PASS" starttime="20210830 17:36:20.297" endtime="20210830 17:36:20.364"/>
                    </kw>
                    <kw name="Remove Directory" library="OperatingSystem">
                        <arg>${BACKUP_FIXTURES}</arg>
                        <arg>recursive=True</arg>
                        <doc>Removes the directory pointed to by the given ``path``.</doc>
                        <msg timestamp="20210830 17:36:20.414" level="INFO" html="true">Removed directory '&lt;a
                            href="file://C:\repo\rfhub2\tests\fixtures\initial_bkp"&gt;C:\repo\rfhub2\tests\fixtures\initial_bkp&lt;/a&gt;'.
                        </msg>
                        <status status="PASS" starttime="20210830 17:36:20.364" endtime="20210830 17:36:20.414"/>
                    </kw>
                    <status status="PASS" starttime="20210830 17:36:20.290" endtime="20210830 17:36:20.414"/>
                </kw>
                <doc>Test loading Keywords without including or excluding
                    any tags should load all keywords
                </doc>
                <tag>include-exclude</tag>
                <status status="PASS" starttime="20210830 17:36:11.134" endtime="20210830 17:36:20.414"/>
            </test>
            <test id="s1-s2-t17"
                  name="Running Cli And Including Tags Should Load Only Keywords Matching Include Pattern">
                <kw name="Run Keywords" library="BuiltIn" type="SETUP">
                    <arg>Backup And Switch Initial With Include_Exclude Fixtures</arg>
                    <doc>Executes all the given keywords in a sequence.</doc>
                    <kw name="Backup And Switch Initial With Include_Exclude Fixtures" library="keywords">
                        <kw name="Move Directory" library="OperatingSystem">
                            <arg>${INITIAL_FIXTURES}</arg>
                            <arg>${BACKUP_FIXTURES}</arg>
                            <doc>Moves the source directory into a destination.</doc>
                            <msg timestamp="20210830 17:36:20.414" level="INFO" html="true">Moved directory from '&lt;a
                                href="file://C:\repo\rfhub2\tests\fixtures\initial"&gt;C:\repo\rfhub2\tests\fixtures\initial&lt;/a&gt;'
                                to '&lt;a href="file://C:\repo\rfhub2\tests\fixtures\initial_bkp"&gt;C:\repo\rfhub2\tests\fixtures\initial_bkp&lt;/a&gt;'.
                            </msg>
                            <status status="PASS" starttime="20210830 17:36:20.414" endtime="20210830 17:36:20.414"/>
                        </kw>
                        <kw name="Copy Directory" library="OperatingSystem">
                            <arg>${INCLUDE_EXCLUDE_FIXTURES}</arg>
                            <arg>${INITIAL_FIXTURES}</arg>
                            <doc>Copies the source directory into the destination.</doc>
                            <msg timestamp="20210830 17:36:20.434" level="INFO" html="true">Copied directory from '&lt;a
                                href="file://C:\repo\rfhub2\tests\fixtures\include_exclude"&gt;C:\repo\rfhub2\tests\fixtures\include_exclude&lt;/a&gt;'
                                to '&lt;a href="file://C:\repo\rfhub2\tests\fixtures\initial"&gt;C:\repo\rfhub2\tests\fixtures\initial&lt;/a&gt;'.
                            </msg>
                            <status status="PASS" starttime="20210830 17:36:20.414" endtime="20210830 17:36:20.434"/>
                        </kw>
                        <status status="PASS" starttime="20210830 17:36:20.414" endtime="20210830 17:36:20.434"/>
                    </kw>
                    <status status="PASS" starttime="20210830 17:36:20.414" endtime="20210830 17:36:20.434"/>
                </kw>
                <kw name="Run Cli With Options --load-mode=insert --no-installed-keywords --include 👻 ${INITIAL_FIXTURES} And Expect Api To Have 3 Collections And 2 Keywords"
                    sourcename="Run Cli With Options ${options} And Expect Api To Have ${n} Collections And ${m} Keywords">
                    <doc>Run pkg from CLI and expect a certain amount of collections
                        and keywords
                    </doc>
                    <kw name="Run Cli Package With Options" library="keywords">
                        <arg>${options}</arg>
                        <doc>Attempt to run the rfhub2-cli package with the given options
                            The stdout of the process will be in a test suite
                            variable named ${output}
                        </doc>
                        <kw name="Run" library="OperatingSystem">
                            <var>${output}</var>
                            <arg>${ACTIVATE_VENV} rfhub2-cli -a http://${HOST}:8000 ${options}</arg>
                            <doc>Runs the given command in the system and returns the output.</doc>
                            <msg timestamp="20210830 17:36:20.574" level="INFO">Running command ' rfhub2-cli -a
                                http://127.0.0.1:8000 --load-mode=insert --no-installed-keywords --include 👻
                                C:\repo\rfhub2\tests\acceptance\resources\..\..\fixtures/initial/ 2&gt;&amp;1'.
                            </msg>
                            <msg timestamp="20210830 17:36:22.528" level="INFO">${output} = PyLibrary library with 2
                                keywords loaded.
                                ResourceLibrary1 library with 1 keywords loaded.
                                ResourceLibrary2 library with 1 keywords loaded.

                                Successfully loaded 3 collections with 4 keywords.
                            </msg>
                            <status status="PASS" starttime="20210830 17:36:20.434" endtime="20210830 17:36:22.528"/>
                        </kw>
                        <kw name="Set Suite Variable" library="BuiltIn">
                            <arg>${output}</arg>
                            <doc>Makes a variable available everywhere within the scope of the current suite.</doc>
                            <msg timestamp="20210830 17:36:22.528" level="INFO">${output} = PyLibrary library with 2
                                keywords loaded.
                                ResourceLibrary1 library with 1 keywords loaded.
                                ResourceLibrary2 library with 1 keywords loaded.

                                Successfully loaded 3 collections with 4 keywords.
                            </msg>
                            <status status="PASS" starttime="20210830 17:36:22.528" endtime="20210830 17:36:22.528"/>
                        </kw>
                        <status status="PASS" starttime="20210830 17:36:20.434" endtime="20210830 17:36:22.528"/>
                    </kw>
                    <kw name="Api Should Have ${n} Collections And ${m} Keywords"
                        sourcename="Api Should Have ${n} Collections And ${m} Keywords">
                        <kw name="collections Endpoint Should Have ${n} Items" library="keywords"
                            sourcename="${endpoint} Endpoint Should Have ${n} Items">
                            <kw name="Get Request For Endpoint" library="keywords">
                                <var>${response}</var>
                                <arg>endpoint=${endpoint}</arg>
                                <kw name="Create Session" library="RequestsLibrary">
                                    <arg>tmp</arg>
                                    <arg>http://${HOST}:8000/api/v1</arg>
                                    <doc>Create Session: create a HTTP session to a server</doc>
                                    <msg timestamp="20210830 17:36:22.528" level="INFO">Creating Session using :
                                        alias=tmp, url=http://127.0.0.1:8000/api/v1, headers={}, cookies={}, auth=None,
                                        timeout=None, proxies=None, verify=False, debug=0
                                    </msg>
                                    <status status="PASS" starttime="20210830 17:36:22.528"
                                            endtime="20210830 17:36:22.528"/>
                                </kw>
                                <kw name="Get On Session" library="RequestsLibrary">
                                    <var>${response}</var>
                                    <arg>tmp</arg>
                                    <arg>${endpoint}/</arg>
                                    <arg>params=${params}</arg>
                                    <doc>Sends a GET request on a previously created HTTP Session.</doc>
                                    <msg timestamp="20210830 17:36:22.548" level="INFO">GET Request :
                                        url=http://127.0.0.1:8000/api/v1/collections/?None
                                        path_url=/api/v1/collections/?None
                                        headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip,
                                        deflate', 'Accept': '*/*', 'Connection': 'keep-alive'}
                                        body=None
                                    </msg>
                                    <msg timestamp="20210830 17:36:22.548" level="INFO">GET Response :
                                        url=http://127.0.0.1:8000/api/v1/collections/?None
                                        status=200, reason=OK
                                        headers={'date': 'Mon, 30 Aug 2021 15:36:21 GMT', 'server': 'uvicorn',
                                        'content-length': '1844', 'content-type': 'application/json'}
                                        body=[{"name":"PyLibrary","type":"LIBRARY","version":"1.0.0","scope":"TEST","named_args":null,"path":"C:\\repo\\rfhub2\\tests\\acceptance\\resources\\..\\..\\fixtures\\initial\\PyLibrary","doc":"Documentation
                                        for library
                                        ``PyLibrary``.","doc_format":"ROBOT","id":1,"keywords":[{"name":"Keyword Heart
                                        Engine","doc":"","args":"","tags":["❤️","🚂"],"id":1,"synopsis":"","html_doc":"","arg_string":""},{"name":"Keyword
                                        Heart
                                        Skull","doc":"","args":"","tags":["❤️","💀"],"id":2,"synopsis":"","html_doc":"","arg_string":""}],"synopsis":"Documentation
                                        for library ``PyLibrary``.","html_doc":"&lt;p&gt;Documentation for library &lt;code&gt;PyLibrary&lt;/code&gt;.&lt;/p&gt;"},{"name":"ResourceLibrary1","type":"RESOURCE","version":"","scope":"GLOBAL","named_args":null,"path":"C:\\repo\\rfhub2\\tests\\acceptance\\resources\\..\\..\\fixtures\\initial\\ResourceLibrary1.resource","doc":"Documentation
                                        for resource file
                                        ``ResourceLibrary1``.","doc_format":"ROBOT","id":2,"keywords":[{"name":"Keyword
                                        Ghost Heart
                                        Rocket","doc":"","args":"","tags":["❤️","👻","🚀"],"id":3,"synopsis":"","html_doc":"","arg_string":""}],"synopsis":"Documentation
                                        for resource file ``ResourceLibrary1``.","html_doc":"&lt;p&gt;Documentation for
                                        resource file &lt;code&gt;ResourceLibrary1&lt;/code&gt;.&lt;/p&gt;"},{"name":"ResourceLibrary2","type":"RESOURCE","version":"","scope":"GLOBAL","named_args":null,"path":"C:\\repo\\rfhub2\\tests\\acceptance\\resources\\..\\..\\fixtures\\initial\\ResourceLibrary2.resource","doc":"Documentation
                                        for resource file
                                        ``ResourceLibrary2``.","doc_format":"ROBOT","id":3,"keywords":[{"name":"Keyword
                                        Rocket Moon
                                        Heart","doc":"","args":"","tags":["❤️","🌑","🚀"],"id":4,"synopsis":"","html_doc":"","arg_string":""}],"synopsis":"Documentation
                                        for resource file ``ResourceLibrary2``.","html_doc":"&lt;p&gt;Documentation for
                                        resource file &lt;code&gt;ResourceLibrary2&lt;/code&gt;.&lt;/p&gt;"}]
                                    </msg>
                                    <msg timestamp="20210830 17:36:22.548" level="INFO">${response} = &lt;Response [200]&gt;</msg>
                                    <status status="PASS" starttime="20210830 17:36:22.528"
                                            endtime="20210830 17:36:22.548"/>
                                </kw>
                                <kw name="Should Be Equal As Integers" library="BuiltIn">
                                    <arg>${response.status_code}</arg>
                                    <arg>200</arg>
                                    <doc>Fails if objects are unequal after converting them to integers.</doc>
                                    <msg timestamp="20210830 17:36:22.548" level="INFO">Argument types are:
                                        &lt;class 'int'&gt;
                                        &lt;type 'unicode'&gt;
                                    </msg>
                                    <status status="PASS" starttime="20210830 17:36:22.548"
                                            endtime="20210830 17:36:22.548"/>
                                </kw>
                                <msg timestamp="20210830 17:36:22.548" level="INFO">${response} = [{'name': 'PyLibrary',
                                    'type': 'LIBRARY', 'version': '1.0.0', 'scope': 'TEST', 'named_args': None, 'path':
                                    'C:\\repo\\rfhub2\\tests\\acceptance\\resources\\..\\..\\fixtures\\initial\\PyLibrary',
                                    'doc'...
                                </msg>
                                <status status="PASS" starttime="20210830 17:36:22.528"
                                        endtime="20210830 17:36:22.548"/>
                            </kw>
                            <kw name="Length Should Be" library="BuiltIn">
                                <arg>${response}</arg>
                                <arg>${n}</arg>
                                <doc>Verifies that the length of the given item is correct.</doc>
                                <msg timestamp="20210830 17:36:22.548" level="INFO">Length is 3</msg>
                                <status status="PASS" starttime="20210830 17:36:22.548"
                                        endtime="20210830 17:36:22.548"/>
                            </kw>
                            <status status="PASS" starttime="20210830 17:36:22.528" endtime="20210830 17:36:22.548"/>
                        </kw>
                        <kw name="keywords Endpoint Should Have ${m} Items" library="keywords"
                            sourcename="${endpoint} Endpoint Should Have ${n} Items">
                            <kw name="Get Request For Endpoint" library="keywords">
                                <var>${response}</var>
                                <arg>endpoint=${endpoint}</arg>
                                <kw name="Create Session" library="RequestsLibrary">
                                    <arg>tmp</arg>
                                    <arg>http://${HOST}:8000/api/v1</arg>
                                    <doc>Create Session: create a HTTP session to a server</doc>
                                    <msg timestamp="20210830 17:36:22.558" level="INFO">Creating Session using :
                                        alias=tmp, url=http://127.0.0.1:8000/api/v1, headers={}, cookies={}, auth=None,
                                        timeout=None, proxies=None, verify=False, debug=0
                                    </msg>
                                    <status status="PASS" starttime="20210830 17:36:22.558"
                                            endtime="20210830 17:36:22.558"/>
                                </kw>
                                <kw name="Get On Session" library="RequestsLibrary">
                                    <var>${response}</var>
                                    <arg>tmp</arg>
                                    <arg>${endpoint}/</arg>
                                    <arg>params=${params}</arg>
                                    <doc>Sends a GET request on a previously created HTTP Session.</doc>
                                    <msg timestamp="20210830 17:36:22.568" level="INFO">GET Request :
                                        url=http://127.0.0.1:8000/api/v1/keywords/?None
                                        path_url=/api/v1/keywords/?None
                                        headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip,
                                        deflate', 'Accept': '*/*', 'Connection': 'keep-alive'}
                                        body=None
                                    </msg>
                                    <msg timestamp="20210830 17:36:22.568" level="INFO">GET Response :
                                        url=http://127.0.0.1:8000/api/v1/keywords/?None
                                        status=200, reason=OK
                                        headers={'date': 'Mon, 30 Aug 2021 15:36:21 GMT', 'server': 'uvicorn',
                                        'content-length': '711', 'content-type': 'application/json'}
                                        body=[{"name":"Keyword Ghost Heart
                                        Rocket","doc":"","args":"","tags":["❤️","👻","🚀"],"id":3,"synopsis":"","html_doc":"","arg_string":"","collection":{"id":2,"name":"ResourceLibrary1"}},{"name":"Keyword
                                        Heart
                                        Engine","doc":"","args":"","tags":["❤️","🚂"],"id":1,"synopsis":"","html_doc":"","arg_string":"","collection":{"id":1,"name":"PyLibrary"}},{"name":"Keyword
                                        Heart
                                        Skull","doc":"","args":"","tags":["❤️","💀"],"id":2,"synopsis":"","html_doc":"","arg_string":"","collection":{"id":1,"name":"PyLibrary"}},{"name":"Keyword
                                        Rocket Moon
                                        Heart","doc":"","args":"","tags":["❤️","🌑","🚀"],"id":4,"synopsis":"","html_doc":"","arg_string":"","collection":{"id":3,"name":"ResourceLibrary2"}}]
                                    </msg>
                                    <msg timestamp="20210830 17:36:22.568" level="INFO">${response} = &lt;Response [200]&gt;</msg>
                                    <status status="PASS" starttime="20210830 17:36:22.558"
                                            endtime="20210830 17:36:22.568"/>
                                </kw>
                                <kw name="Should Be Equal As Integers" library="BuiltIn">
                                    <arg>${response.status_code}</arg>
                                    <arg>200</arg>
                                    <doc>Fails if objects are unequal after converting them to integers.</doc>
                                    <msg timestamp="20210830 17:36:22.568" level="INFO">Argument types are:
                                        &lt;class 'int'&gt;
                                        &lt;type 'unicode'&gt;
                                    </msg>
                                    <status status="PASS" starttime="20210830 17:36:22.568"
                                            endtime="20210830 17:36:22.568"/>
                                </kw>
                                <msg timestamp="20210830 17:36:22.578" level="INFO">${response} = [{'name': 'Keyword
                                    Ghost Heart Rocket', 'doc': '', 'args': '', 'tags': ['❤️', '👻', '🚀'], 'id': 3,
                                    'synopsis': '', 'html_doc': '', 'arg_string': '', 'collection': {'id': 2, 'name':
                                    'ResourceLibrary1'}}...
                                </msg>
                                <status status="PASS" starttime="20210830 17:36:22.558"
                                        endtime="20210830 17:36:22.578"/>
                            </kw>
                            <kw name="Length Should Be" library="BuiltIn">
                                <arg>${response}</arg>
                                <arg>${n}</arg>
                                <doc>Verifies that the length of the given item is correct.</doc>
                                <msg timestamp="20210830 17:36:22.578" level="INFO">Length is 4</msg>
                                <msg timestamp="20210830 17:36:22.578" level="FAIL">Length of '[{'name': 'Keyword Ghost
                                    Heart Rocket', 'doc': '', 'args': '', 'tags': ['❤️', '👻', '🚀'], 'id': 3,
                                    'synopsis': '', 'html_doc': '', 'arg_string': '', 'collection': {'id': 2, 'name':
                                    'ResourceLibrary1'}}, {'name': 'Keyword Heart Engine', 'doc': '', 'args': '',
                                    'tags': ['❤️', '🚂'], 'id': 1, 'synopsis': '', 'html_doc': '', 'arg_string': '',
                                    'collection': {'id': 1, 'name': 'PyLibrary'}}, {'name': 'Keyword Heart Skull',
                                    'doc': '', 'args': '', 'tags': ['❤️', '💀'], 'id': 2, 'synopsis': '', 'html_doc':
                                    '', 'arg_string': '', 'collection': {'id': 1, 'name': 'PyLibrary'}}, {'name':
                                    'Keyword Rocket Moon Heart', 'doc': '', 'args': '', 'tags': ['❤️', '🌑', '🚀'],
                                    'id': 4, 'synopsis': '', 'html_doc': '', 'arg_string': '', 'collection': {'id': 3,
                                    'name': 'ResourceLibrary2'}}]' should be 2 but is 4.
                                </msg>
                                <status status="FAIL" starttime="20210830 17:36:22.578"
                                        endtime="20210830 17:36:22.578"/>
                            </kw>
                            <status status="FAIL" starttime="20210830 17:36:22.548" endtime="20210830 17:36:22.578"/>
                        </kw>
                        <status status="FAIL" starttime="20210830 17:36:22.528" endtime="20210830 17:36:22.578"/>
                    </kw>
                    <status status="FAIL" starttime="20210830 17:36:20.434" endtime="20210830 17:36:22.588"/>
                </kw>
                <kw name="Run Cli With Options --load-mode=insert --no-installed-keywords --include 👻AND❤️ ${INITIAL_FIXTURES} And Expect Api To Have 3 Collections And 1 Keywords"
                    sourcename="Run Cli With Options ${options} And Expect Api To Have ${n} Collections And ${m} Keywords">
                    <doc>Run pkg from CLI and expect a certain amount of collections
                        and keywords
                    </doc>
                    <kw name="Run Cli Package With Options" library="keywords">
                        <arg>${options}</arg>
                        <doc>Attempt to run the rfhub2-cli package with the given options
                            The stdout of the process will be in a test suite
                            variable named ${output}
                        </doc>
                        <kw name="Run" library="OperatingSystem">
                            <var>${output}</var>
                            <arg>${ACTIVATE_VENV} rfhub2-cli -a http://${HOST}:8000 ${options}</arg>
                            <doc>Runs the given command in the system and returns the output.</doc>
                            <msg timestamp="20210830 17:36:22.728" level="INFO">Running command ' rfhub2-cli -a
                                http://127.0.0.1:8000 --load-mode=insert --no-installed-keywords --include 👻AND❤️
                                C:\repo\rfhub2\tests\acceptance\resources\..\..\fixtures/initial/ 2&gt;&amp;1'.
                            </msg>
                            <msg timestamp="20210830 17:36:24.622" level="INFO">${output} = PyLibrary library with 2
                                keywords loaded.
                                ResourceLibrary1 library with 1 keywords loaded.
                                ResourceLibrary2 library with 1 keywords loaded.

                                Successfully loaded 3 collections with 4 keywords.
                            </msg>
                            <status status="PASS" starttime="20210830 17:36:22.588" endtime="20210830 17:36:24.622"/>
                        </kw>
                        <kw name="Set Suite Variable" library="BuiltIn">
                            <arg>${output}</arg>
                            <doc>Makes a variable available everywhere within the scope of the current suite.</doc>
                            <msg timestamp="20210830 17:36:24.622" level="INFO">${output} = PyLibrary library with 2
                                keywords loaded.
                                ResourceLibrary1 library with 1 keywords loaded.
                                ResourceLibrary2 library with 1 keywords loaded.

                                Successfully loaded 3 collections with 4 keywords.
                            </msg>
                            <status status="PASS" starttime="20210830 17:36:24.622" endtime="20210830 17:36:24.622"/>
                        </kw>
                        <status status="PASS" starttime="20210830 17:36:22.588" endtime="20210830 17:36:24.622"/>
                    </kw>
                    <kw name="Api Should Have ${n} Collections And ${m} Keywords"
                        sourcename="Api Should Have ${n} Collections And ${m} Keywords">
                        <kw name="collections Endpoint Should Have ${n} Items" library="keywords"
                            sourcename="${endpoint} Endpoint Should Have ${n} Items">
                            <kw name="Get Request For Endpoint" library="keywords">
                                <var>${response}</var>
                                <arg>endpoint=${endpoint}</arg>
                                <kw name="Create Session" library="RequestsLibrary">
                                    <arg>tmp</arg>
                                    <arg>http://${HOST}:8000/api/v1</arg>
                                    <doc>Create Session: create a HTTP session to a server</doc>
                                    <msg timestamp="20210830 17:36:24.622" level="INFO">Creating Session using :
                                        alias=tmp, url=http://127.0.0.1:8000/api/v1, headers={}, cookies={}, auth=None,
                                        timeout=None, proxies=None, verify=False, debug=0
                                    </msg>
                                    <status status="PASS" starttime="20210830 17:36:24.622"
                                            endtime="20210830 17:36:24.622"/>
                                </kw>
                                <kw name="Get On Session" library="RequestsLibrary">
                                    <var>${response}</var>
                                    <arg>tmp</arg>
                                    <arg>${endpoint}/</arg>
                                    <arg>params=${params}</arg>
                                    <doc>Sends a GET request on a previously created HTTP Session.</doc>
                                    <msg timestamp="20210830 17:36:24.642" level="INFO">GET Request :
                                        url=http://127.0.0.1:8000/api/v1/collections/?None
                                        path_url=/api/v1/collections/?None
                                        headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip,
                                        deflate', 'Accept': '*/*', 'Connection': 'keep-alive'}
                                        body=None
                                    </msg>
                                    <msg timestamp="20210830 17:36:24.642" level="INFO">GET Response :
                                        url=http://127.0.0.1:8000/api/v1/collections/?None
                                        status=200, reason=OK
                                        headers={'date': 'Mon, 30 Aug 2021 15:36:23 GMT', 'server': 'uvicorn',
                                        'content-length': '1844', 'content-type': 'application/json'}
                                        body=[{"name":"PyLibrary","type":"LIBRARY","version":"1.0.0","scope":"TEST","named_args":null,"path":"C:\\repo\\rfhub2\\tests\\acceptance\\resources\\..\\..\\fixtures\\initial\\PyLibrary","doc":"Documentation
                                        for library
                                        ``PyLibrary``.","doc_format":"ROBOT","id":1,"keywords":[{"name":"Keyword Heart
                                        Engine","doc":"","args":"","tags":["❤️","🚂"],"id":1,"synopsis":"","html_doc":"","arg_string":""},{"name":"Keyword
                                        Heart
                                        Skull","doc":"","args":"","tags":["❤️","💀"],"id":2,"synopsis":"","html_doc":"","arg_string":""}],"synopsis":"Documentation
                                        for library ``PyLibrary``.","html_doc":"&lt;p&gt;Documentation for library &lt;code&gt;PyLibrary&lt;/code&gt;.&lt;/p&gt;"},{"name":"ResourceLibrary1","type":"RESOURCE","version":"","scope":"GLOBAL","named_args":null,"path":"C:\\repo\\rfhub2\\tests\\acceptance\\resources\\..\\..\\fixtures\\initial\\ResourceLibrary1.resource","doc":"Documentation
                                        for resource file
                                        ``ResourceLibrary1``.","doc_format":"ROBOT","id":2,"keywords":[{"name":"Keyword
                                        Ghost Heart
                                        Rocket","doc":"","args":"","tags":["❤️","👻","🚀"],"id":3,"synopsis":"","html_doc":"","arg_string":""}],"synopsis":"Documentation
                                        for resource file ``ResourceLibrary1``.","html_doc":"&lt;p&gt;Documentation for
                                        resource file &lt;code&gt;ResourceLibrary1&lt;/code&gt;.&lt;/p&gt;"},{"name":"ResourceLibrary2","type":"RESOURCE","version":"","scope":"GLOBAL","named_args":null,"path":"C:\\repo\\rfhub2\\tests\\acceptance\\resources\\..\\..\\fixtures\\initial\\ResourceLibrary2.resource","doc":"Documentation
                                        for resource file
                                        ``ResourceLibrary2``.","doc_format":"ROBOT","id":3,"keywords":[{"name":"Keyword
                                        Rocket Moon
                                        Heart","doc":"","args":"","tags":["❤️","🌑","🚀"],"id":4,"synopsis":"","html_doc":"","arg_string":""}],"synopsis":"Documentation
                                        for resource file ``ResourceLibrary2``.","html_doc":"&lt;p&gt;Documentation for
                                        resource file &lt;code&gt;ResourceLibrary2&lt;/code&gt;.&lt;/p&gt;"}]
                                    </msg>
                                    <msg timestamp="20210830 17:36:24.642" level="INFO">${response} = &lt;Response [200]&gt;</msg>
                                    <status status="PASS" starttime="20210830 17:36:24.622"
                                            endtime="20210830 17:36:24.642"/>
                                </kw>
                                <kw name="Should Be Equal As Integers" library="BuiltIn">
                                    <arg>${response.status_code}</arg>
                                    <arg>200</arg>
                                    <doc>Fails if objects are unequal after converting them to integers.</doc>
                                    <msg timestamp="20210830 17:36:24.642" level="INFO">Argument types are:
                                        &lt;class 'int'&gt;
                                        &lt;type 'unicode'&gt;
                                    </msg>
                                    <status status="PASS" starttime="20210830 17:36:24.642"
                                            endtime="20210830 17:36:24.642"/>
                                </kw>
                                <msg timestamp="20210830 17:36:24.642" level="INFO">${response} = [{'name': 'PyLibrary',
                                    'type': 'LIBRARY', 'version': '1.0.0', 'scope': 'TEST', 'named_args': None, 'path':
                                    'C:\\repo\\rfhub2\\tests\\acceptance\\resources\\..\\..\\fixtures\\initial\\PyLibrary',
                                    'doc'...
                                </msg>
                                <status status="PASS" starttime="20210830 17:36:24.622"
                                        endtime="20210830 17:36:24.642"/>
                            </kw>
                            <kw name="Length Should Be" library="BuiltIn">
                                <arg>${response}</arg>
                                <arg>${n}</arg>
                                <doc>Verifies that the length of the given item is correct.</doc>
                                <msg timestamp="20210830 17:36:24.642" level="INFO">Length is 3</msg>
                                <status status="PASS" starttime="20210830 17:36:24.642"
                                        endtime="20210830 17:36:24.642"/>
                            </kw>
                            <status status="PASS" starttime="20210830 17:36:24.622" endtime="20210830 17:36:24.642"/>
                        </kw>
                        <kw name="keywords Endpoint Should Have ${m} Items" library="keywords"
                            sourcename="${endpoint} Endpoint Should Have ${n} Items">
                            <kw name="Get Request For Endpoint" library="keywords">
                                <var>${response}</var>
                                <arg>endpoint=${endpoint}</arg>
                                <kw name="Create Session" library="RequestsLibrary">
                                    <arg>tmp</arg>
                                    <arg>http://${HOST}:8000/api/v1</arg>
                                    <doc>Create Session: create a HTTP session to a server</doc>
                                    <msg timestamp="20210830 17:36:24.652" level="INFO">Creating Session using :
                                        alias=tmp, url=http://127.0.0.1:8000/api/v1, headers={}, cookies={}, auth=None,
                                        timeout=None, proxies=None, verify=False, debug=0
                                    </msg>
                                    <status status="PASS" starttime="20210830 17:36:24.652"
                                            endtime="20210830 17:36:24.652"/>
                                </kw>
                                <kw name="Get On Session" library="RequestsLibrary">
                                    <var>${response}</var>
                                    <arg>tmp</arg>
                                    <arg>${endpoint}/</arg>
                                    <arg>params=${params}</arg>
                                    <doc>Sends a GET request on a previously created HTTP Session.</doc>
                                    <msg timestamp="20210830 17:36:24.662" level="INFO">GET Request :
                                        url=http://127.0.0.1:8000/api/v1/keywords/?None
                                        path_url=/api/v1/keywords/?None
                                        headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip,
                                        deflate', 'Accept': '*/*', 'Connection': 'keep-alive'}
                                        body=None
                                    </msg>
                                    <msg timestamp="20210830 17:36:24.662" level="INFO">GET Response :
                                        url=http://127.0.0.1:8000/api/v1/keywords/?None
                                        status=200, reason=OK
                                        headers={'date': 'Mon, 30 Aug 2021 15:36:23 GMT', 'server': 'uvicorn',
                                        'content-length': '711', 'content-type': 'application/json'}
                                        body=[{"name":"Keyword Ghost Heart
                                        Rocket","doc":"","args":"","tags":["❤️","👻","🚀"],"id":3,"synopsis":"","html_doc":"","arg_string":"","collection":{"id":2,"name":"ResourceLibrary1"}},{"name":"Keyword
                                        Heart
                                        Engine","doc":"","args":"","tags":["❤️","🚂"],"id":1,"synopsis":"","html_doc":"","arg_string":"","collection":{"id":1,"name":"PyLibrary"}},{"name":"Keyword
                                        Heart
                                        Skull","doc":"","args":"","tags":["❤️","💀"],"id":2,"synopsis":"","html_doc":"","arg_string":"","collection":{"id":1,"name":"PyLibrary"}},{"name":"Keyword
                                        Rocket Moon
                                        Heart","doc":"","args":"","tags":["❤️","🌑","🚀"],"id":4,"synopsis":"","html_doc":"","arg_string":"","collection":{"id":3,"name":"ResourceLibrary2"}}]
                                    </msg>
                                    <msg timestamp="20210830 17:36:24.662" level="INFO">${response} = &lt;Response [200]&gt;</msg>
                                    <status status="PASS" starttime="20210830 17:36:24.652"
                                            endtime="20210830 17:36:24.662"/>
                                </kw>
                                <kw name="Should Be Equal As Integers" library="BuiltIn">
                                    <arg>${response.status_code}</arg>
                                    <arg>200</arg>
                                    <doc>Fails if objects are unequal after converting them to integers.</doc>
                                    <msg timestamp="20210830 17:36:24.662" level="INFO">Argument types are:
                                        &lt;class 'int'&gt;
                                        &lt;type 'unicode'&gt;
                                    </msg>
                                    <status status="PASS" starttime="20210830 17:36:24.662"
                                            endtime="20210830 17:36:24.662"/>
                                </kw>
                                <msg timestamp="20210830 17:36:24.672" level="INFO">${response} = [{'name': 'Keyword
                                    Ghost Heart Rocket', 'doc': '', 'args': '', 'tags': ['❤️', '👻', '🚀'], 'id': 3,
                                    'synopsis': '', 'html_doc': '', 'arg_string': '', 'collection': {'id': 2, 'name':
                                    'ResourceLibrary1'}}...
                                </msg>
                                <status status="PASS" starttime="20210830 17:36:24.642"
                                        endtime="20210830 17:36:24.672"/>
                            </kw>
                            <kw name="Length Should Be" library="BuiltIn">
                                <arg>${response}</arg>
                                <arg>${n}</arg>
                                <doc>Verifies that the length of the given item is correct.</doc>
                                <msg timestamp="20210830 17:36:24.672" level="INFO">Length is 4</msg>
                                <msg timestamp="20210830 17:36:24.672" level="FAIL">Length of '[{'name': 'Keyword Ghost
                                    Heart Rocket', 'doc': '', 'args': '', 'tags': ['❤️', '👻', '🚀'], 'id': 3,
                                    'synopsis': '', 'html_doc': '', 'arg_string': '', 'collection': {'id': 2, 'name':
                                    'ResourceLibrary1'}}, {'name': 'Keyword Heart Engine', 'doc': '', 'args': '',
                                    'tags': ['❤️', '🚂'], 'id': 1, 'synopsis': '', 'html_doc': '', 'arg_string': '',
                                    'collection': {'id': 1, 'name': 'PyLibrary'}}, {'name': 'Keyword Heart Skull',
                                    'doc': '', 'args': '', 'tags': ['❤️', '💀'], 'id': 2, 'synopsis': '', 'html_doc':
                                    '', 'arg_string': '', 'collection': {'id': 1, 'name': 'PyLibrary'}}, {'name':
                                    'Keyword Rocket Moon Heart', 'doc': '', 'args': '', 'tags': ['❤️', '🌑', '🚀'],
                                    'id': 4, 'synopsis': '', 'html_doc': '', 'arg_string': '', 'collection': {'id': 3,
                                    'name': 'ResourceLibrary2'}}]' should be 1 but is 4.
                                </msg>
                                <status status="FAIL" starttime="20210830 17:36:24.672"
                                        endtime="20210830 17:36:24.672"/>
                            </kw>
                            <status status="FAIL" starttime="20210830 17:36:24.642" endtime="20210830 17:36:24.672"/>
                        </kw>
                        <status status="FAIL" starttime="20210830 17:36:24.622" endtime="20210830 17:36:24.672"/>
                    </kw>
                    <status status="FAIL" starttime="20210830 17:36:22.588" endtime="20210830 17:36:24.672"/>
                </kw>
                <kw name="Run Cli With Options --load-mode=insert --no-installed-keywords --include 👻OR❤️ ${INITIAL_FIXTURES} And Expect Api To Have 3 Collections And 5 Keywords"
                    sourcename="Run Cli With Options ${options} And Expect Api To Have ${n} Collections And ${m} Keywords">
                    <doc>Run pkg from CLI and expect a certain amount of collections
                        and keywords
                    </doc>
                    <kw name="Run Cli Package With Options" library="keywords">
                        <arg>${options}</arg>
                        <doc>Attempt to run the rfhub2-cli package with the given options
                            The stdout of the process will be in a test suite
                            variable named ${output}
                        </doc>
                        <kw name="Run" library="OperatingSystem">
                            <var>${output}</var>
                            <arg>${ACTIVATE_VENV} rfhub2-cli -a http://${HOST}:8000 ${options}</arg>
                            <doc>Runs the given command in the system and returns the output.</doc>
                            <msg timestamp="20210830 17:36:24.822" level="INFO">Running command ' rfhub2-cli -a
                                http://127.0.0.1:8000 --load-mode=insert --no-installed-keywords --include 👻OR❤️
                                C:\repo\rfhub2\tests\acceptance\resources\..\..\fixtures/initial/ 2&gt;&amp;1'.
                            </msg>
                            <msg timestamp="20210830 17:36:26.696" level="INFO">${output} = PyLibrary library with 2
                                keywords loaded.
                                ResourceLibrary1 library with 1 keywords loaded.
                                ResourceLibrary2 library with 1 keywords loaded.

                                Successfully loaded 3 collections with 4 keywords.
                            </msg>
                            <status status="PASS" starttime="20210830 17:36:24.682" endtime="20210830 17:36:26.696"/>
                        </kw>
                        <kw name="Set Suite Variable" library="BuiltIn">
                            <arg>${output}</arg>
                            <doc>Makes a variable available everywhere within the scope of the current suite.</doc>
                            <msg timestamp="20210830 17:36:26.696" level="INFO">${output} = PyLibrary library with 2
                                keywords loaded.
                                ResourceLibrary1 library with 1 keywords loaded.
                                ResourceLibrary2 library with 1 keywords loaded.

                                Successfully loaded 3 collections with 4 keywords.
                            </msg>
                            <status status="PASS" starttime="20210830 17:36:26.696" endtime="20210830 17:36:26.696"/>
                        </kw>
                        <status status="PASS" starttime="20210830 17:36:24.672" endtime="20210830 17:36:26.696"/>
                    </kw>
                    <kw name="Api Should Have ${n} Collections And ${m} Keywords"
                        sourcename="Api Should Have ${n} Collections And ${m} Keywords">
                        <kw name="collections Endpoint Should Have ${n} Items" library="keywords"
                            sourcename="${endpoint} Endpoint Should Have ${n} Items">
                            <kw name="Get Request For Endpoint" library="keywords">
                                <var>${response}</var>
                                <arg>endpoint=${endpoint}</arg>
                                <kw name="Create Session" library="RequestsLibrary">
                                    <arg>tmp</arg>
                                    <arg>http://${HOST}:8000/api/v1</arg>
                                    <doc>Create Session: create a HTTP session to a server</doc>
                                    <msg timestamp="20210830 17:36:26.696" level="INFO">Creating Session using :
                                        alias=tmp, url=http://127.0.0.1:8000/api/v1, headers={}, cookies={}, auth=None,
                                        timeout=None, proxies=None, verify=False, debug=0
                                    </msg>
                                    <status status="PASS" starttime="20210830 17:36:26.696"
                                            endtime="20210830 17:36:26.696"/>
                                </kw>
                                <kw name="Get On Session" library="RequestsLibrary">
                                    <var>${response}</var>
                                    <arg>tmp</arg>
                                    <arg>${endpoint}/</arg>
                                    <arg>params=${params}</arg>
                                    <doc>Sends a GET request on a previously created HTTP Session.</doc>
                                    <msg timestamp="20210830 17:36:26.716" level="INFO">GET Request :
                                        url=http://127.0.0.1:8000/api/v1/collections/?None
                                        path_url=/api/v1/collections/?None
                                        headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip,
                                        deflate', 'Accept': '*/*', 'Connection': 'keep-alive'}
                                        body=None
                                    </msg>
                                    <msg timestamp="20210830 17:36:26.716" level="INFO">GET Response :
                                        url=http://127.0.0.1:8000/api/v1/collections/?None
                                        status=200, reason=OK
                                        headers={'date': 'Mon, 30 Aug 2021 15:36:25 GMT', 'server': 'uvicorn',
                                        'content-length': '1844', 'content-type': 'application/json'}
                                        body=[{"name":"PyLibrary","type":"LIBRARY","version":"1.0.0","scope":"TEST","named_args":null,"path":"C:\\repo\\rfhub2\\tests\\acceptance\\resources\\..\\..\\fixtures\\initial\\PyLibrary","doc":"Documentation
                                        for library
                                        ``PyLibrary``.","doc_format":"ROBOT","id":1,"keywords":[{"name":"Keyword Heart
                                        Engine","doc":"","args":"","tags":["❤️","🚂"],"id":1,"synopsis":"","html_doc":"","arg_string":""},{"name":"Keyword
                                        Heart
                                        Skull","doc":"","args":"","tags":["❤️","💀"],"id":2,"synopsis":"","html_doc":"","arg_string":""}],"synopsis":"Documentation
                                        for library ``PyLibrary``.","html_doc":"&lt;p&gt;Documentation for library &lt;code&gt;PyLibrary&lt;/code&gt;.&lt;/p&gt;"},{"name":"ResourceLibrary1","type":"RESOURCE","version":"","scope":"GLOBAL","named_args":null,"path":"C:\\repo\\rfhub2\\tests\\acceptance\\resources\\..\\..\\fixtures\\initial\\ResourceLibrary1.resource","doc":"Documentation
                                        for resource file
                                        ``ResourceLibrary1``.","doc_format":"ROBOT","id":2,"keywords":[{"name":"Keyword
                                        Ghost Heart
                                        Rocket","doc":"","args":"","tags":["❤️","👻","🚀"],"id":3,"synopsis":"","html_doc":"","arg_string":""}],"synopsis":"Documentation
                                        for resource file ``ResourceLibrary1``.","html_doc":"&lt;p&gt;Documentation for
                                        resource file &lt;code&gt;ResourceLibrary1&lt;/code&gt;.&lt;/p&gt;"},{"name":"ResourceLibrary2","type":"RESOURCE","version":"","scope":"GLOBAL","named_args":null,"path":"C:\\repo\\rfhub2\\tests\\acceptance\\resources\\..\\..\\fixtures\\initial\\ResourceLibrary2.resource","doc":"Documentation
                                        for resource file
                                        ``ResourceLibrary2``.","doc_format":"ROBOT","id":3,"keywords":[{"name":"Keyword
                                        Rocket Moon
                                        Heart","doc":"","args":"","tags":["❤️","🌑","🚀"],"id":4,"synopsis":"","html_doc":"","arg_string":""}],"synopsis":"Documentation
                                        for resource file ``ResourceLibrary2``.","html_doc":"&lt;p&gt;Documentation for
                                        resource file &lt;code&gt;ResourceLibrary2&lt;/code&gt;.&lt;/p&gt;"}]
                                    </msg>
                                    <msg timestamp="20210830 17:36:26.716" level="INFO">${response} = &lt;Response [200]&gt;</msg>
                                    <status status="PASS" starttime="20210830 17:36:26.696"
                                            endtime="20210830 17:36:26.716"/>
                                </kw>
                                <kw name="Should Be Equal As Integers" library="BuiltIn">
                                    <arg>${response.status_code}</arg>
                                    <arg>200</arg>
                                    <doc>Fails if objects are unequal after converting them to integers.</doc>
                                    <msg timestamp="20210830 17:36:26.716" level="INFO">Argument types are:
                                        &lt;class 'int'&gt;
                                        &lt;type 'unicode'&gt;
                                    </msg>
                                    <status status="PASS" starttime="20210830 17:36:26.716"
                                            endtime="20210830 17:36:26.716"/>
                                </kw>
                                <msg timestamp="20210830 17:36:26.726" level="INFO">${response} = [{'name': 'PyLibrary',
                                    'type': 'LIBRARY', 'version': '1.0.0', 'scope': 'TEST', 'named_args': None, 'path':
                                    'C:\\repo\\rfhub2\\tests\\acceptance\\resources\\..\\..\\fixtures\\initial\\PyLibrary',
                                    'doc'...
                                </msg>
                                <status status="PASS" starttime="20210830 17:36:26.696"
                                        endtime="20210830 17:36:26.726"/>
                            </kw>
                            <kw name="Length Should Be" library="BuiltIn">
                                <arg>${response}</arg>
                                <arg>${n}</arg>
                                <doc>Verifies that the length of the given item is correct.</doc>
                                <msg timestamp="20210830 17:36:26.726" level="INFO">Length is 3</msg>
                                <status status="PASS" starttime="20210830 17:36:26.726"
                                        endtime="20210830 17:36:26.726"/>
                            </kw>
                            <status status="PASS" starttime="20210830 17:36:26.696" endtime="20210830 17:36:26.726"/>
                        </kw>
                        <kw name="keywords Endpoint Should Have ${m} Items" library="keywords"
                            sourcename="${endpoint} Endpoint Should Have ${n} Items">
                            <kw name="Get Request For Endpoint" library="keywords">
                                <var>${response}</var>
                                <arg>endpoint=${endpoint}</arg>
                                <kw name="Create Session" library="RequestsLibrary">
                                    <arg>tmp</arg>
                                    <arg>http://${HOST}:8000/api/v1</arg>
                                    <doc>Create Session: create a HTTP session to a server</doc>
                                    <msg timestamp="20210830 17:36:26.726" level="INFO">Creating Session using :
                                        alias=tmp, url=http://127.0.0.1:8000/api/v1, headers={}, cookies={}, auth=None,
                                        timeout=None, proxies=None, verify=False, debug=0
                                    </msg>
                                    <status status="PASS" starttime="20210830 17:36:26.726"
                                            endtime="20210830 17:36:26.726"/>
                                </kw>
                                <kw name="Get On Session" library="RequestsLibrary">
                                    <var>${response}</var>
                                    <arg>tmp</arg>
                                    <arg>${endpoint}/</arg>
                                    <arg>params=${params}</arg>
                                    <doc>Sends a GET request on a previously created HTTP Session.</doc>
                                    <msg timestamp="20210830 17:36:26.746" level="INFO">GET Request :
                                        url=http://127.0.0.1:8000/api/v1/keywords/?None
                                        path_url=/api/v1/keywords/?None
                                        headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip,
                                        deflate', 'Accept': '*/*', 'Connection': 'keep-alive'}
                                        body=None
                                    </msg>
                                    <msg timestamp="20210830 17:36:26.746" level="INFO">GET Response :
                                        url=http://127.0.0.1:8000/api/v1/keywords/?None
                                        status=200, reason=OK
                                        headers={'date': 'Mon, 30 Aug 2021 15:36:25 GMT', 'server': 'uvicorn',
                                        'content-length': '711', 'content-type': 'application/json'}
                                        body=[{"name":"Keyword Ghost Heart
                                        Rocket","doc":"","args":"","tags":["❤️","👻","🚀"],"id":3,"synopsis":"","html_doc":"","arg_string":"","collection":{"id":2,"name":"ResourceLibrary1"}},{"name":"Keyword
                                        Heart
                                        Engine","doc":"","args":"","tags":["❤️","🚂"],"id":1,"synopsis":"","html_doc":"","arg_string":"","collection":{"id":1,"name":"PyLibrary"}},{"name":"Keyword
                                        Heart
                                        Skull","doc":"","args":"","tags":["❤️","💀"],"id":2,"synopsis":"","html_doc":"","arg_string":"","collection":{"id":1,"name":"PyLibrary"}},{"name":"Keyword
                                        Rocket Moon
                                        Heart","doc":"","args":"","tags":["❤️","🌑","🚀"],"id":4,"synopsis":"","html_doc":"","arg_string":"","collection":{"id":3,"name":"ResourceLibrary2"}}]
                                    </msg>
                                    <msg timestamp="20210830 17:36:26.746" level="INFO">${response} = &lt;Response [200]&gt;</msg>
                                    <status status="PASS" starttime="20210830 17:36:26.726"
                                            endtime="20210830 17:36:26.746"/>
                                </kw>
                                <kw name="Should Be Equal As Integers" library="BuiltIn">
                                    <arg>${response.status_code}</arg>
                                    <arg>200</arg>
                                    <doc>Fails if objects are unequal after converting them to integers.</doc>
                                    <msg timestamp="20210830 17:36:26.746" level="INFO">Argument types are:
                                        &lt;class 'int'&gt;
                                        &lt;type 'unicode'&gt;
                                    </msg>
                                    <status status="PASS" starttime="20210830 17:36:26.746"
                                            endtime="20210830 17:36:26.746"/>
                                </kw>
                                <msg timestamp="20210830 17:36:26.746" level="INFO">${response} = [{'name': 'Keyword
                                    Ghost Heart Rocket', 'doc': '', 'args': '', 'tags': ['❤️', '👻', '🚀'], 'id': 3,
                                    'synopsis': '', 'html_doc': '', 'arg_string': '', 'collection': {'id': 2, 'name':
                                    'ResourceLibrary1'}}...
                                </msg>
                                <status status="PASS" starttime="20210830 17:36:26.726"
                                        endtime="20210830 17:36:26.746"/>
                            </kw>
                            <kw name="Length Should Be" library="BuiltIn">
                                <arg>${response}</arg>
                                <arg>${n}</arg>
                                <doc>Verifies that the length of the given item is correct.</doc>
                                <msg timestamp="20210830 17:36:26.746" level="INFO">Length is 4</msg>
                                <msg timestamp="20210830 17:36:26.746" level="FAIL">Length of '[{'name': 'Keyword Ghost
                                    Heart Rocket', 'doc': '', 'args': '', 'tags': ['❤️', '👻', '🚀'], 'id': 3,
                                    'synopsis': '', 'html_doc': '', 'arg_string': '', 'collection': {'id': 2, 'name':
                                    'ResourceLibrary1'}}, {'name': 'Keyword Heart Engine', 'doc': '', 'args': '',
                                    'tags': ['❤️', '🚂'], 'id': 1, 'synopsis': '', 'html_doc': '', 'arg_string': '',
                                    'collection': {'id': 1, 'name': 'PyLibrary'}}, {'name': 'Keyword Heart Skull',
                                    'doc': '', 'args': '', 'tags': ['❤️', '💀'], 'id': 2, 'synopsis': '', 'html_doc':
                                    '', 'arg_string': '', 'collection': {'id': 1, 'name': 'PyLibrary'}}, {'name':
                                    'Keyword Rocket Moon Heart', 'doc': '', 'args': '', 'tags': ['❤️', '🌑', '🚀'],
                                    'id': 4, 'synopsis': '', 'html_doc': '', 'arg_string': '', 'collection': {'id': 3,
                                    'name': 'ResourceLibrary2'}}]' should be 5 but is 4.
                                </msg>
                                <status status="FAIL" starttime="20210830 17:36:26.746"
                                        endtime="20210830 17:36:26.746"/>
                            </kw>
                            <status status="FAIL" starttime="20210830 17:36:26.726" endtime="20210830 17:36:26.746"/>
                        </kw>
                        <status status="FAIL" starttime="20210830 17:36:26.696" endtime="20210830 17:36:26.756"/>
                    </kw>
                    <status status="FAIL" starttime="20210830 17:36:24.672" endtime="20210830 17:36:26.756"/>
                </kw>
                <kw name="Run Cli With Options --load-mode=insert --no-installed-keywords --include 👻OR❤️NOT🚀 ${INITIAL_FIXTURES} And Expect Api To Have 3 Collections And 3 Keywords"
                    sourcename="Run Cli With Options ${options} And Expect Api To Have ${n} Collections And ${m} Keywords">
                    <doc>Run pkg from CLI and expect a certain amount of collections
                        and keywords
                    </doc>
                    <kw name="Run Cli Package With Options" library="keywords">
                        <arg>${options}</arg>
                        <doc>Attempt to run the rfhub2-cli package with the given options
                            The stdout of the process will be in a test suite
                            variable named ${output}
                        </doc>
                        <kw name="Run" library="OperatingSystem">
                            <var>${output}</var>
                            <arg>${ACTIVATE_VENV} rfhub2-cli -a http://${HOST}:8000 ${options}</arg>
                            <doc>Runs the given command in the system and returns the output.</doc>
                            <msg timestamp="20210830 17:36:26.906" level="INFO">Running command ' rfhub2-cli -a
                                http://127.0.0.1:8000 --load-mode=insert --no-installed-keywords --include 👻OR❤️NOT🚀
                                C:\repo\rfhub2\tests\acceptance\resources\..\..\fixtures/initial/ 2&gt;&amp;1'.
                            </msg>
                            <msg timestamp="20210830 17:36:28.713" level="INFO">${output} = PyLibrary library with 0
                                keywords loaded.
                                ResourceLibrary1 library with 0 keywords loaded.
                                ResourceLibrary2 library with 0 keywords loaded.

                                Successfully loaded 3 collections with 0 keywords.
                            </msg>
                            <status status="PASS" starttime="20210830 17:36:26.756" endtime="20210830 17:36:28.713"/>
                        </kw>
                        <kw name="Set Suite Variable" library="BuiltIn">
                            <arg>${output}</arg>
                            <doc>Makes a variable available everywhere within the scope of the current suite.</doc>
                            <msg timestamp="20210830 17:36:28.713" level="INFO">${output} = PyLibrary library with 0
                                keywords loaded.
                                ResourceLibrary1 library with 0 keywords loaded.
                                ResourceLibrary2 library with 0 keywords loaded.

                                Successfully loaded 3 collections with 0 keywords.
                            </msg>
                            <status status="PASS" starttime="20210830 17:36:28.713" endtime="20210830 17:36:28.713"/>
                        </kw>
                        <status status="PASS" starttime="20210830 17:36:26.756" endtime="20210830 17:36:28.713"/>
                    </kw>
                    <kw name="Api Should Have ${n} Collections And ${m} Keywords"
                        sourcename="Api Should Have ${n} Collections And ${m} Keywords">
                        <kw name="collections Endpoint Should Have ${n} Items" library="keywords"
                            sourcename="${endpoint} Endpoint Should Have ${n} Items">
                            <kw name="Get Request For Endpoint" library="keywords">
                                <var>${response}</var>
                                <arg>endpoint=${endpoint}</arg>
                                <kw name="Create Session" library="RequestsLibrary">
                                    <arg>tmp</arg>
                                    <arg>http://${HOST}:8000/api/v1</arg>
                                    <doc>Create Session: create a HTTP session to a server</doc>
                                    <msg timestamp="20210830 17:36:28.723" level="INFO">Creating Session using :
                                        alias=tmp, url=http://127.0.0.1:8000/api/v1, headers={}, cookies={}, auth=None,
                                        timeout=None, proxies=None, verify=False, debug=0
                                    </msg>
                                    <status status="PASS" starttime="20210830 17:36:28.723"
                                            endtime="20210830 17:36:28.723"/>
                                </kw>
                                <kw name="Get On Session" library="RequestsLibrary">
                                    <var>${response}</var>
                                    <arg>tmp</arg>
                                    <arg>${endpoint}/</arg>
                                    <arg>params=${params}</arg>
                                    <doc>Sends a GET request on a previously created HTTP Session.</doc>
                                    <msg timestamp="20210830 17:36:28.733" level="INFO">GET Request :
                                        url=http://127.0.0.1:8000/api/v1/collections/?None
                                        path_url=/api/v1/collections/?None
                                        headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip,
                                        deflate', 'Accept': '*/*', 'Connection': 'keep-alive'}
                                        body=None
                                    </msg>
                                    <msg timestamp="20210830 17:36:28.733" level="INFO">GET Response :
                                        url=http://127.0.0.1:8000/api/v1/collections/?None
                                        status=200, reason=OK
                                        headers={'date': 'Mon, 30 Aug 2021 15:36:27 GMT', 'server': 'uvicorn',
                                        'content-length': '1315', 'content-type': 'application/json'}
                                        body=[{"name":"PyLibrary","type":"LIBRARY","version":"1.0.0","scope":"TEST","named_args":null,"path":"C:\\repo\\rfhub2\\tests\\acceptance\\resources\\..\\..\\fixtures\\initial\\PyLibrary","doc":"Documentation
                                        for library
                                        ``PyLibrary``.","doc_format":"ROBOT","id":1,"keywords":[],"synopsis":"Documentation
                                        for library ``PyLibrary``.","html_doc":"&lt;p&gt;Documentation for library &lt;code&gt;PyLibrary&lt;/code&gt;.&lt;/p&gt;"},{"name":"ResourceLibrary1","type":"RESOURCE","version":"","scope":"GLOBAL","named_args":null,"path":"C:\\repo\\rfhub2\\tests\\acceptance\\resources\\..\\..\\fixtures\\initial\\ResourceLibrary1.resource","doc":"Documentation
                                        for resource file
                                        ``ResourceLibrary1``.","doc_format":"ROBOT","id":2,"keywords":[],"synopsis":"Documentation
                                        for resource file ``ResourceLibrary1``.","html_doc":"&lt;p&gt;Documentation for
                                        resource file &lt;code&gt;ResourceLibrary1&lt;/code&gt;.&lt;/p&gt;"},{"name":"ResourceLibrary2","type":"RESOURCE","version":"","scope":"GLOBAL","named_args":null,"path":"C:\\repo\\rfhub2\\tests\\acceptance\\resources\\..\\..\\fixtures\\initial\\ResourceLibrary2.resource","doc":"Documentation
                                        for resource file
                                        ``ResourceLibrary2``.","doc_format":"ROBOT","id":3,"keywords":[],"synopsis":"Documentation
                                        for resource file ``ResourceLibrary2``.","html_doc":"&lt;p&gt;Documentation for
                                        resource file &lt;code&gt;ResourceLibrary2&lt;/code&gt;.&lt;/p&gt;"}]
                                    </msg>
                                    <msg timestamp="20210830 17:36:28.733" level="INFO">${response} = &lt;Response [200]&gt;</msg>
                                    <status status="PASS" starttime="20210830 17:36:28.723"
                                            endtime="20210830 17:36:28.733"/>
                                </kw>
                                <kw name="Should Be Equal As Integers" library="BuiltIn">
                                    <arg>${response.status_code}</arg>
                                    <arg>200</arg>
                                    <doc>Fails if objects are unequal after converting them to integers.</doc>
                                    <msg timestamp="20210830 17:36:28.733" level="INFO">Argument types are:
                                        &lt;class 'int'&gt;
                                        &lt;type 'unicode'&gt;
                                    </msg>
                                    <status status="PASS" starttime="20210830 17:36:28.733"
                                            endtime="20210830 17:36:28.733"/>
                                </kw>
                                <msg timestamp="20210830 17:36:28.743" level="INFO">${response} = [{'name': 'PyLibrary',
                                    'type': 'LIBRARY', 'version': '1.0.0', 'scope': 'TEST', 'named_args': None, 'path':
                                    'C:\\repo\\rfhub2\\tests\\acceptance\\resources\\..\\..\\fixtures\\initial\\PyLibrary',
                                    'doc'...
                                </msg>
                                <status status="PASS" starttime="20210830 17:36:28.723"
                                        endtime="20210830 17:36:28.743"/>
                            </kw>
                            <kw name="Length Should Be" library="BuiltIn">
                                <arg>${response}</arg>
                                <arg>${n}</arg>
                                <doc>Verifies that the length of the given item is correct.</doc>
                                <msg timestamp="20210830 17:36:28.743" level="INFO">Length is 3</msg>
                                <status status="PASS" starttime="20210830 17:36:28.743"
                                        endtime="20210830 17:36:28.743"/>
                            </kw>
                            <status status="PASS" starttime="20210830 17:36:28.713" endtime="20210830 17:36:28.743"/>
                        </kw>
                        <kw name="keywords Endpoint Should Have ${m} Items" library="keywords"
                            sourcename="${endpoint} Endpoint Should Have ${n} Items">
                            <kw name="Get Request For Endpoint" library="keywords">
                                <var>${response}</var>
                                <arg>endpoint=${endpoint}</arg>
                                <kw name="Create Session" library="RequestsLibrary">
                                    <arg>tmp</arg>
                                    <arg>http://${HOST}:8000/api/v1</arg>
                                    <doc>Create Session: create a HTTP session to a server</doc>
                                    <msg timestamp="20210830 17:36:28.743" level="INFO">Creating Session using :
                                        alias=tmp, url=http://127.0.0.1:8000/api/v1, headers={}, cookies={}, auth=None,
                                        timeout=None, proxies=None, verify=False, debug=0
                                    </msg>
                                    <status status="PASS" starttime="20210830 17:36:28.743"
                                            endtime="20210830 17:36:28.743"/>
                                </kw>
                                <kw name="Get On Session" library="RequestsLibrary">
                                    <var>${response}</var>
                                    <arg>tmp</arg>
                                    <arg>${endpoint}/</arg>
                                    <arg>params=${params}</arg>
                                    <doc>Sends a GET request on a previously created HTTP Session.</doc>
                                    <msg timestamp="20210830 17:36:28.753" level="INFO">GET Request :
                                        url=http://127.0.0.1:8000/api/v1/keywords/?None
                                        path_url=/api/v1/keywords/?None
                                        headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip,
                                        deflate', 'Accept': '*/*', 'Connection': 'keep-alive'}
                                        body=None
                                    </msg>
                                    <msg timestamp="20210830 17:36:28.753" level="INFO">GET Response :
                                        url=http://127.0.0.1:8000/api/v1/keywords/?None
                                        status=200, reason=OK
                                        headers={'date': 'Mon, 30 Aug 2021 15:36:27 GMT', 'server': 'uvicorn',
                                        'content-length': '2', 'content-type': 'application/json'}
                                        body=[]
                                    </msg>
                                    <msg timestamp="20210830 17:36:28.753" level="INFO">${response} = &lt;Response [200]&gt;</msg>
                                    <status status="PASS" starttime="20210830 17:36:28.743"
                                            endtime="20210830 17:36:28.753"/>
                                </kw>
                                <kw name="Should Be Equal As Integers" library="BuiltIn">
                                    <arg>${response.status_code}</arg>
                                    <arg>200</arg>
                                    <doc>Fails if objects are unequal after converting them to integers.</doc>
                                    <msg timestamp="20210830 17:36:28.753" level="INFO">Argument types are:
                                        &lt;class 'int'&gt;
                                        &lt;type 'unicode'&gt;
                                    </msg>
                                    <status status="PASS" starttime="20210830 17:36:28.753"
                                            endtime="20210830 17:36:28.753"/>
                                </kw>
                                <msg timestamp="20210830 17:36:28.763" level="INFO">${response} = []</msg>
                                <status status="PASS" starttime="20210830 17:36:28.743"
                                        endtime="20210830 17:36:28.763"/>
                            </kw>
                            <kw name="Length Should Be" library="BuiltIn">
                                <arg>${response}</arg>
                                <arg>${n}</arg>
                                <doc>Verifies that the length of the given item is correct.</doc>
                                <msg timestamp="20210830 17:36:28.763" level="INFO">Length is 0</msg>
                                <msg timestamp="20210830 17:36:28.763" level="FAIL">Length of '[]' should be 3 but is
                                    0.
                                </msg>
                                <status status="FAIL" starttime="20210830 17:36:28.763"
                                        endtime="20210830 17:36:28.763"/>
                            </kw>
                            <status status="FAIL" starttime="20210830 17:36:28.743" endtime="20210830 17:36:28.763"/>
                        </kw>
                        <status status="FAIL" starttime="20210830 17:36:28.713" endtime="20210830 17:36:28.763"/>
                    </kw>
                    <status status="FAIL" starttime="20210830 17:36:26.756" endtime="20210830 17:36:28.763"/>
                </kw>
                <kw name="Run Cli With Options --load-mode=insert --no-installed-keywords --include *⛅️*✈️* ${INITIAL_FIXTURES} And Expect Api To Have 3 Collections And 1 Keywords"
                    sourcename="Run Cli With Options ${options} And Expect Api To Have ${n} Collections And ${m} Keywords">
                    <doc>Run pkg from CLI and expect a certain amount of collections
                        and keywords
                    </doc>
                    <kw name="Run Cli Package With Options" library="keywords">
                        <arg>${options}</arg>
                        <doc>Attempt to run the rfhub2-cli package with the given options
                            The stdout of the process will be in a test suite
                            variable named ${output}
                        </doc>
                        <kw name="Run" library="OperatingSystem">
                            <var>${output}</var>
                            <arg>${ACTIVATE_VENV} rfhub2-cli -a http://${HOST}:8000 ${options}</arg>
                            <doc>Runs the given command in the system and returns the output.</doc>
                            <msg timestamp="20210830 17:36:28.923" level="INFO">Running command ' rfhub2-cli -a
                                http://127.0.0.1:8000 --load-mode=insert --no-installed-keywords --include *⛅️*✈️*
                                C:\repo\rfhub2\tests\acceptance\resources\..\..\fixtures/initial/ 2&gt;&amp;1'.
                            </msg>
                            <msg timestamp="20210830 17:36:30.597" level="INFO">${output} = Traceback (most recent call
                                last):
                                File "C:\Program Files (x86)\Python36-32\Scripts\rfhub2-cli-script.py", line 11, in &lt;module&gt;
                                load_entry_point('rfhub2', 'console_scripts', 'rfhub2-cli')()
                                Fi...
                            </msg>
                            <status status="PASS" starttime="20210830 17:36:28.763" endtime="20210830 17:36:30.597"/>
                        </kw>
                        <kw name="Set Suite Variable" library="BuiltIn">
                            <arg>${output}</arg>
                            <doc>Makes a variable available everywhere within the scope of the current suite.</doc>
                            <msg timestamp="20210830 17:36:30.597" level="INFO">${output} = Traceback (most recent call
                                last):
                                File "C:\Program Files (x86)\Python36-32\Scripts\rfhub2-cli-script.py", line 11, in &lt;module&gt;
                                load_entry_point('rfhub2', 'console_scripts', 'rfhub2-cli')()
                                Fi...
                            </msg>
                            <status status="PASS" starttime="20210830 17:36:30.597" endtime="20210830 17:36:30.597"/>
                        </kw>
                        <status status="PASS" starttime="20210830 17:36:28.763" endtime="20210830 17:36:30.597"/>
                    </kw>
                    <kw name="Api Should Have ${n} Collections And ${m} Keywords"
                        sourcename="Api Should Have ${n} Collections And ${m} Keywords">
                        <kw name="collections Endpoint Should Have ${n} Items" library="keywords"
                            sourcename="${endpoint} Endpoint Should Have ${n} Items">
                            <kw name="Get Request For Endpoint" library="keywords">
                                <var>${response}</var>
                                <arg>endpoint=${endpoint}</arg>
                                <kw name="Create Session" library="RequestsLibrary">
                                    <arg>tmp</arg>
                                    <arg>http://${HOST}:8000/api/v1</arg>
                                    <doc>Create Session: create a HTTP session to a server</doc>
                                    <msg timestamp="20210830 17:36:30.607" level="INFO">Creating Session using :
                                        alias=tmp, url=http://127.0.0.1:8000/api/v1, headers={}, cookies={}, auth=None,
                                        timeout=None, proxies=None, verify=False, debug=0
                                    </msg>
                                    <status status="PASS" starttime="20210830 17:36:30.607"
                                            endtime="20210830 17:36:30.607"/>
                                </kw>
                                <kw name="Get On Session" library="RequestsLibrary">
                                    <var>${response}</var>
                                    <arg>tmp</arg>
                                    <arg>${endpoint}/</arg>
                                    <arg>params=${params}</arg>
                                    <doc>Sends a GET request on a previously created HTTP Session.</doc>
                                    <msg timestamp="20210830 17:36:30.617" level="INFO">GET Request :
                                        url=http://127.0.0.1:8000/api/v1/collections/?None
                                        path_url=/api/v1/collections/?None
                                        headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip,
                                        deflate', 'Accept': '*/*', 'Connection': 'keep-alive'}
                                        body=None
                                    </msg>
                                    <msg timestamp="20210830 17:36:30.617" level="INFO">GET Response :
                                        url=http://127.0.0.1:8000/api/v1/collections/?None
                                        status=200, reason=OK
                                        headers={'date': 'Mon, 30 Aug 2021 15:36:30 GMT', 'server': 'uvicorn',
                                        'content-length': '1315', 'content-type': 'application/json'}
                                        body=[{"name":"PyLibrary","type":"LIBRARY","version":"1.0.0","scope":"TEST","named_args":null,"path":"C:\\repo\\rfhub2\\tests\\acceptance\\resources\\..\\..\\fixtures\\initial\\PyLibrary","doc":"Documentation
                                        for library
                                        ``PyLibrary``.","doc_format":"ROBOT","id":1,"keywords":[],"synopsis":"Documentation
                                        for library ``PyLibrary``.","html_doc":"&lt;p&gt;Documentation for library &lt;code&gt;PyLibrary&lt;/code&gt;.&lt;/p&gt;"},{"name":"ResourceLibrary1","type":"RESOURCE","version":"","scope":"GLOBAL","named_args":null,"path":"C:\\repo\\rfhub2\\tests\\acceptance\\resources\\..\\..\\fixtures\\initial\\ResourceLibrary1.resource","doc":"Documentation
                                        for resource file
                                        ``ResourceLibrary1``.","doc_format":"ROBOT","id":2,"keywords":[],"synopsis":"Documentation
                                        for resource file ``ResourceLibrary1``.","html_doc":"&lt;p&gt;Documentation for
                                        resource file &lt;code&gt;ResourceLibrary1&lt;/code&gt;.&lt;/p&gt;"},{"name":"ResourceLibrary2","type":"RESOURCE","version":"","scope":"GLOBAL","named_args":null,"path":"C:\\repo\\rfhub2\\tests\\acceptance\\resources\\..\\..\\fixtures\\initial\\ResourceLibrary2.resource","doc":"Documentation
                                        for resource file
                                        ``ResourceLibrary2``.","doc_format":"ROBOT","id":3,"keywords":[],"synopsis":"Documentation
                                        for resource file ``ResourceLibrary2``.","html_doc":"&lt;p&gt;Documentation for
                                        resource file &lt;code&gt;ResourceLibrary2&lt;/code&gt;.&lt;/p&gt;"}]
                                    </msg>
                                    <msg timestamp="20210830 17:36:30.617" level="INFO">${response} = &lt;Response [200]&gt;</msg>
                                    <status status="PASS" starttime="20210830 17:36:30.607"
                                            endtime="20210830 17:36:30.617"/>
                                </kw>
                                <kw name="Should Be Equal As Integers" library="BuiltIn">
                                    <arg>${response.status_code}</arg>
                                    <arg>200</arg>
                                    <doc>Fails if objects are unequal after converting them to integers.</doc>
                                    <msg timestamp="20210830 17:36:30.617" level="INFO">Argument types are:
                                        &lt;class 'int'&gt;
                                        &lt;type 'unicode'&gt;
                                    </msg>
                                    <status status="PASS" starttime="20210830 17:36:30.617"
                                            endtime="20210830 17:36:30.617"/>
                                </kw>
                                <msg timestamp="20210830 17:36:30.627" level="INFO">${response} = [{'name': 'PyLibrary',
                                    'type': 'LIBRARY', 'version': '1.0.0', 'scope': 'TEST', 'named_args': None, 'path':
                                    'C:\\repo\\rfhub2\\tests\\acceptance\\resources\\..\\..\\fixtures\\initial\\PyLibrary',
                                    'doc'...
                                </msg>
                                <status status="PASS" starttime="20210830 17:36:30.607"
                                        endtime="20210830 17:36:30.627"/>
                            </kw>
                            <kw name="Length Should Be" library="BuiltIn">
                                <arg>${response}</arg>
                                <arg>${n}</arg>
                                <doc>Verifies that the length of the given item is correct.</doc>
                                <msg timestamp="20210830 17:36:30.627" level="INFO">Length is 3</msg>
                                <status status="PASS" starttime="20210830 17:36:30.627"
                                        endtime="20210830 17:36:30.627"/>
                            </kw>
                            <status status="PASS" starttime="20210830 17:36:30.597" endtime="20210830 17:36:30.627"/>
                        </kw>
                        <kw name="keywords Endpoint Should Have ${m} Items" library="keywords"
                            sourcename="${endpoint} Endpoint Should Have ${n} Items">
                            <kw name="Get Request For Endpoint" library="keywords">
                                <var>${response}</var>
                                <arg>endpoint=${endpoint}</arg>
                                <kw name="Create Session" library="RequestsLibrary">
                                    <arg>tmp</arg>
                                    <arg>http://${HOST}:8000/api/v1</arg>
                                    <doc>Create Session: create a HTTP session to a server</doc>
                                    <msg timestamp="20210830 17:36:30.627" level="INFO">Creating Session using :
                                        alias=tmp, url=http://127.0.0.1:8000/api/v1, headers={}, cookies={}, auth=None,
                                        timeout=None, proxies=None, verify=False, debug=0
                                    </msg>
                                    <status status="PASS" starttime="20210830 17:36:30.627"
                                            endtime="20210830 17:36:30.627"/>
                                </kw>
                                <kw name="Get On Session" library="RequestsLibrary">
                                    <var>${response}</var>
                                    <arg>tmp</arg>
                                    <arg>${endpoint}/</arg>
                                    <arg>params=${params}</arg>
                                    <doc>Sends a GET request on a previously created HTTP Session.</doc>
                                    <msg timestamp="20210830 17:36:30.637" level="INFO">GET Request :
                                        url=http://127.0.0.1:8000/api/v1/keywords/?None
                                        path_url=/api/v1/keywords/?None
                                        headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip,
                                        deflate', 'Accept': '*/*', 'Connection': 'keep-alive'}
                                        body=None
                                    </msg>
                                    <msg timestamp="20210830 17:36:30.637" level="INFO">GET Response :
                                        url=http://127.0.0.1:8000/api/v1/keywords/?None
                                        status=200, reason=OK
                                        headers={'date': 'Mon, 30 Aug 2021 15:36:30 GMT', 'server': 'uvicorn',
                                        'content-length': '2', 'content-type': 'application/json'}
                                        body=[]
                                    </msg>
                                    <msg timestamp="20210830 17:36:30.637" level="INFO">${response} = &lt;Response [200]&gt;</msg>
                                    <status status="PASS" starttime="20210830 17:36:30.627"
                                            endtime="20210830 17:36:30.637"/>
                                </kw>
                                <kw name="Should Be Equal As Integers" library="BuiltIn">
                                    <arg>${response.status_code}</arg>
                                    <arg>200</arg>
                                    <doc>Fails if objects are unequal after converting them to integers.</doc>
                                    <msg timestamp="20210830 17:36:30.637" level="INFO">Argument types are:
                                        &lt;class 'int'&gt;
                                        &lt;type 'unicode'&gt;
                                    </msg>
                                    <status status="PASS" starttime="20210830 17:36:30.637"
                                            endtime="20210830 17:36:30.637"/>
                                </kw>
                                <msg timestamp="20210830 17:36:30.637" level="INFO">${response} = []</msg>
                                <status status="PASS" starttime="20210830 17:36:30.627"
                                        endtime="20210830 17:36:30.637"/>
                            </kw>
                            <kw name="Length Should Be" library="BuiltIn">
                                <arg>${response}</arg>
                                <arg>${n}</arg>
                                <doc>Verifies that the length of the given item is correct.</doc>
                                <msg timestamp="20210830 17:36:30.637" level="INFO">Length is 0</msg>
                                <msg timestamp="20210830 17:36:30.647" level="FAIL">Length of '[]' should be 1 but is
                                    0.
                                </msg>
                                <status status="FAIL" starttime="20210830 17:36:30.637"
                                        endtime="20210830 17:36:30.647"/>
                            </kw>
                            <status status="FAIL" starttime="20210830 17:36:30.627" endtime="20210830 17:36:30.647"/>
                        </kw>
                        <status status="FAIL" starttime="20210830 17:36:30.597" endtime="20210830 17:36:30.647"/>
                    </kw>
                    <status status="FAIL" starttime="20210830 17:36:28.763" endtime="20210830 17:36:30.647"/>
                </kw>
                <kw name="Run Cli With Options --load-mode=insert --no-installed-keywords --include s[a-z]rt_a? ${INITIAL_FIXTURES} And Expect Api To Have 3 Collections And 1 Keywords"
                    sourcename="Run Cli With Options ${options} And Expect Api To Have ${n} Collections And ${m} Keywords">
                    <doc>Run pkg from CLI and expect a certain amount of collections
                        and keywords
                    </doc>
                    <kw name="Run Cli Package With Options" library="keywords">
                        <arg>${options}</arg>
                        <doc>Attempt to run the rfhub2-cli package with the given options
                            The stdout of the process will be in a test suite
                            variable named ${output}
                        </doc>
                        <kw name="Run" library="OperatingSystem">
                            <var>${output}</var>
                            <arg>${ACTIVATE_VENV} rfhub2-cli -a http://${HOST}:8000 ${options}</arg>
                            <doc>Runs the given command in the system and returns the output.</doc>
                            <msg timestamp="20210830 17:36:30.797" level="INFO">Running command ' rfhub2-cli -a
                                http://127.0.0.1:8000 --load-mode=insert --no-installed-keywords --include s[a-z]rt_a?
                                C:\repo\rfhub2\tests\acceptance\resources\..\..\fixtures/initial/ 2&gt;&amp;1'.
                            </msg>
                            <msg timestamp="20210830 17:36:32.615" level="INFO">${output} = PyLibrary library with 0
                                keywords loaded.
                                ResourceLibrary1 library with 0 keywords loaded.
                                ResourceLibrary2 library with 1 keywords loaded.

                                Successfully loaded 3 collections with 1 keywords.
                            </msg>
                            <status status="PASS" starttime="20210830 17:36:30.647" endtime="20210830 17:36:32.615"/>
                        </kw>
                        <kw name="Set Suite Variable" library="BuiltIn">
                            <arg>${output}</arg>
                            <doc>Makes a variable available everywhere within the scope of the current suite.</doc>
                            <msg timestamp="20210830 17:36:32.615" level="INFO">${output} = PyLibrary library with 0
                                keywords loaded.
                                ResourceLibrary1 library with 0 keywords loaded.
                                ResourceLibrary2 library with 1 keywords loaded.

                                Successfully loaded 3 collections with 1 keywords.
                            </msg>
                            <status status="PASS" starttime="20210830 17:36:32.615" endtime="20210830 17:36:32.615"/>
                        </kw>
                        <status status="PASS" starttime="20210830 17:36:30.647" endtime="20210830 17:36:32.615"/>
                    </kw>
                    <kw name="Api Should Have ${n} Collections And ${m} Keywords"
                        sourcename="Api Should Have ${n} Collections And ${m} Keywords">
                        <kw name="collections Endpoint Should Have ${n} Items" library="keywords"
                            sourcename="${endpoint} Endpoint Should Have ${n} Items">
                            <kw name="Get Request For Endpoint" library="keywords">
                                <var>${response}</var>
                                <arg>endpoint=${endpoint}</arg>
                                <kw name="Create Session" library="RequestsLibrary">
                                    <arg>tmp</arg>
                                    <arg>http://${HOST}:8000/api/v1</arg>
                                    <doc>Create Session: create a HTTP session to a server</doc>
                                    <msg timestamp="20210830 17:36:32.625" level="INFO">Creating Session using :
                                        alias=tmp, url=http://127.0.0.1:8000/api/v1, headers={}, cookies={}, auth=None,
                                        timeout=None, proxies=None, verify=False, debug=0
                                    </msg>
                                    <status status="PASS" starttime="20210830 17:36:32.625"
                                            endtime="20210830 17:36:32.625"/>
                                </kw>
                                <kw name="Get On Session" library="RequestsLibrary">
                                    <var>${response}</var>
                                    <arg>tmp</arg>
                                    <arg>${endpoint}/</arg>
                                    <arg>params=${params}</arg>
                                    <doc>Sends a GET request on a previously created HTTP Session.</doc>
                                    <msg timestamp="20210830 17:36:32.635" level="INFO">GET Request :
                                        url=http://127.0.0.1:8000/api/v1/collections/?None
                                        path_url=/api/v1/collections/?None
                                        headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip,
                                        deflate', 'Accept': '*/*', 'Connection': 'keep-alive'}
                                        body=None
                                    </msg>
                                    <msg timestamp="20210830 17:36:32.635" level="INFO">GET Response :
                                        url=http://127.0.0.1:8000/api/v1/collections/?None
                                        status=200, reason=OK
                                        headers={'date': 'Mon, 30 Aug 2021 15:36:32 GMT', 'server': 'uvicorn',
                                        'content-length': '1433', 'content-type': 'application/json'}
                                        body=[{"name":"PyLibrary","type":"LIBRARY","version":"1.0.0","scope":"TEST","named_args":null,"path":"C:\\repo\\rfhub2\\tests\\acceptance\\resources\\..\\..\\fixtures\\initial\\PyLibrary","doc":"Documentation
                                        for library
                                        ``PyLibrary``.","doc_format":"ROBOT","id":1,"keywords":[],"synopsis":"Documentation
                                        for library ``PyLibrary``.","html_doc":"&lt;p&gt;Documentation for library &lt;code&gt;PyLibrary&lt;/code&gt;.&lt;/p&gt;"},{"name":"ResourceLibrary1","type":"RESOURCE","version":"","scope":"GLOBAL","named_args":null,"path":"C:\\repo\\rfhub2\\tests\\acceptance\\resources\\..\\..\\fixtures\\initial\\ResourceLibrary1.resource","doc":"Documentation
                                        for resource file
                                        ``ResourceLibrary1``.","doc_format":"ROBOT","id":2,"keywords":[],"synopsis":"Documentation
                                        for resource file ``ResourceLibrary1``.","html_doc":"&lt;p&gt;Documentation for
                                        resource file &lt;code&gt;ResourceLibrary1&lt;/code&gt;.&lt;/p&gt;"},{"name":"ResourceLibrary2","type":"RESOURCE","version":"","scope":"GLOBAL","named_args":null,"path":"C:\\repo\\rfhub2\\tests\\acceptance\\resources\\..\\..\\fixtures\\initial\\ResourceLibrary2.resource","doc":"Documentation
                                        for resource file
                                        ``ResourceLibrary2``.","doc_format":"ROBOT","id":3,"keywords":[{"name":"Keyword
                                        TextualTag","doc":"","args":"","tags":["STR_tag"],"id":1,"synopsis":"","html_doc":"","arg_string":""}],"synopsis":"Documentation
                                        for resource file ``ResourceLibrary2``.","html_doc":"&lt;p&gt;Documentation for
                                        resource file &lt;code&gt;ResourceLibrary2&lt;/code&gt;.&lt;/p&gt;"}]
                                    </msg>
                                    <msg timestamp="20210830 17:36:32.635" level="INFO">${response} = &lt;Response [200]&gt;</msg>
                                    <status status="PASS" starttime="20210830 17:36:32.625"
                                            endtime="20210830 17:36:32.635"/>
                                </kw>
                                <kw name="Should Be Equal As Integers" library="BuiltIn">
                                    <arg>${response.status_code}</arg>
                                    <arg>200</arg>
                                    <doc>Fails if objects are unequal after converting them to integers.</doc>
                                    <msg timestamp="20210830 17:36:32.635" level="INFO">Argument types are:
                                        &lt;class 'int'&gt;
                                        &lt;type 'unicode'&gt;
                                    </msg>
                                    <status status="PASS" starttime="20210830 17:36:32.635"
                                            endtime="20210830 17:36:32.635"/>
                                </kw>
                                <msg timestamp="20210830 17:36:32.645" level="INFO">${response} = [{'name': 'PyLibrary',
                                    'type': 'LIBRARY', 'version': '1.0.0', 'scope': 'TEST', 'named_args': None, 'path':
                                    'C:\\repo\\rfhub2\\tests\\acceptance\\resources\\..\\..\\fixtures\\initial\\PyLibrary',
                                    'doc'...
                                </msg>
                                <status status="PASS" starttime="20210830 17:36:32.615"
                                        endtime="20210830 17:36:32.645"/>
                            </kw>
                            <kw name="Length Should Be" library="BuiltIn">
                                <arg>${response}</arg>
                                <arg>${n}</arg>
                                <doc>Verifies that the length of the given item is correct.</doc>
                                <msg timestamp="20210830 17:36:32.645" level="INFO">Length is 3</msg>
                                <status status="PASS" starttime="20210830 17:36:32.645"
                                        endtime="20210830 17:36:32.645"/>
                            </kw>
                            <status status="PASS" starttime="20210830 17:36:32.615" endtime="20210830 17:36:32.645"/>
                        </kw>
                        <kw name="keywords Endpoint Should Have ${m} Items" library="keywords"
                            sourcename="${endpoint} Endpoint Should Have ${n} Items">
                            <kw name="Get Request For Endpoint" library="keywords">
                                <var>${response}</var>
                                <arg>endpoint=${endpoint}</arg>
                                <kw name="Create Session" library="RequestsLibrary">
                                    <arg>tmp</arg>
                                    <arg>http://${HOST}:8000/api/v1</arg>
                                    <doc>Create Session: create a HTTP session to a server</doc>
                                    <msg timestamp="20210830 17:36:32.645" level="INFO">Creating Session using :
                                        alias=tmp, url=http://127.0.0.1:8000/api/v1, headers={}, cookies={}, auth=None,
                                        timeout=None, proxies=None, verify=False, debug=0
                                    </msg>
                                    <status status="PASS" starttime="20210830 17:36:32.645"
                                            endtime="20210830 17:36:32.645"/>
                                </kw>
                                <kw name="Get On Session" library="RequestsLibrary">
                                    <var>${response}</var>
                                    <arg>tmp</arg>
                                    <arg>${endpoint}/</arg>
                                    <arg>params=${params}</arg>
                                    <doc>Sends a GET request on a previously created HTTP Session.</doc>
                                    <msg timestamp="20210830 17:36:32.655" level="INFO">GET Request :
                                        url=http://127.0.0.1:8000/api/v1/keywords/?None
                                        path_url=/api/v1/keywords/?None
                                        headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip,
                                        deflate', 'Accept': '*/*', 'Connection': 'keep-alive'}
                                        body=None
                                    </msg>
                                    <msg timestamp="20210830 17:36:32.655" level="INFO">GET Response :
                                        url=http://127.0.0.1:8000/api/v1/keywords/?None
                                        status=200, reason=OK
                                        headers={'date': 'Mon, 30 Aug 2021 15:36:32 GMT', 'server': 'uvicorn',
                                        'content-length': '168', 'content-type': 'application/json'}
                                        body=[{"name":"Keyword
                                        TextualTag","doc":"","args":"","tags":["STR_tag"],"id":1,"synopsis":"","html_doc":"","arg_string":"","collection":{"id":3,"name":"ResourceLibrary2"}}]
                                    </msg>
                                    <msg timestamp="20210830 17:36:32.655" level="INFO">${response} = &lt;Response [200]&gt;</msg>
                                    <status status="PASS" starttime="20210830 17:36:32.645"
                                            endtime="20210830 17:36:32.655"/>
                                </kw>
                                <kw name="Should Be Equal As Integers" library="BuiltIn">
                                    <arg>${response.status_code}</arg>
                                    <arg>200</arg>
                                    <doc>Fails if objects are unequal after converting them to integers.</doc>
                                    <msg timestamp="20210830 17:36:32.655" level="INFO">Argument types are:
                                        &lt;class 'int'&gt;
                                        &lt;type 'unicode'&gt;
                                    </msg>
                                    <status status="PASS" starttime="20210830 17:36:32.655"
                                            endtime="20210830 17:36:32.655"/>
                                </kw>
                                <msg timestamp="20210830 17:36:32.665" level="INFO">${response} = [{'name': 'Keyword
                                    TextualTag', 'doc': '', 'args': '', 'tags': ['STR_tag'], 'id': 1, 'synopsis': '',
                                    'html_doc': '', 'arg_string': '', 'collection': {'id': 3, 'name':
                                    'ResourceLibrary2'}}]
                                </msg>
                                <status status="PASS" starttime="20210830 17:36:32.645"
                                        endtime="20210830 17:36:32.665"/>
                            </kw>
                            <kw name="Length Should Be" library="BuiltIn">
                                <arg>${response}</arg>
                                <arg>${n}</arg>
                                <doc>Verifies that the length of the given item is correct.</doc>
                                <msg timestamp="20210830 17:36:32.665" level="INFO">Length is 1</msg>
                                <status status="PASS" starttime="20210830 17:36:32.665"
                                        endtime="20210830 17:36:32.665"/>
                            </kw>
                            <status status="PASS" starttime="20210830 17:36:32.645" endtime="20210830 17:36:32.665"/>
                        </kw>
                        <status status="PASS" starttime="20210830 17:36:32.615" endtime="20210830 17:36:32.665"/>
                    </kw>
                    <status status="PASS" starttime="20210830 17:36:30.647" endtime="20210830 17:36:32.665"/>
                </kw>
                <kw name="Restore Initial Fixtures" library="keywords" type="TEARDOWN">
                    <kw name="Remove Directory" library="OperatingSystem">
                        <arg>${INITIAL_FIXTURES}</arg>
                        <arg>recursive=True</arg>
                        <doc>Removes the directory pointed to by the given ``path``.</doc>
                        <msg timestamp="20210830 17:36:32.675" level="INFO" html="true">Removed directory '&lt;a
                            href="file://C:\repo\rfhub2\tests\fixtures\initial"&gt;C:\repo\rfhub2\tests\fixtures\initial&lt;/a&gt;'.
                        </msg>
                        <status status="PASS" starttime="20210830 17:36:32.665" endtime="20210830 17:36:32.675"/>
                    </kw>
                    <kw name="Copy Directory" library="OperatingSystem">
                        <arg>${BACKUP_FIXTURES}</arg>
                        <arg>${INITIAL_FIXTURES}</arg>
                        <doc>Copies the source directory into the destination.</doc>
                        <msg timestamp="20210830 17:36:32.745" level="INFO" html="true">Copied directory from '&lt;a
                            href="file://C:\repo\rfhub2\tests\fixtures\initial_bkp"&gt;C:\repo\rfhub2\tests\fixtures\initial_bkp&lt;/a&gt;'
                            to '&lt;a href="file://C:\repo\rfhub2\tests\fixtures\initial"&gt;C:\repo\rfhub2\tests\fixtures\initial&lt;/a&gt;'.
                        </msg>
                        <status status="PASS" starttime="20210830 17:36:32.675" endtime="20210830 17:36:32.745"/>
                    </kw>
                    <kw name="Remove Directory" library="OperatingSystem">
                        <arg>${BACKUP_FIXTURES}</arg>
                        <arg>recursive=True</arg>
                        <doc>Removes the directory pointed to by the given ``path``.</doc>
                        <msg timestamp="20210830 17:36:32.785" level="INFO" html="true">Removed directory '&lt;a
                            href="file://C:\repo\rfhub2\tests\fixtures\initial_bkp"&gt;C:\repo\rfhub2\tests\fixtures\initial_bkp&lt;/a&gt;'.
                        </msg>
                        <status status="PASS" starttime="20210830 17:36:32.745" endtime="20210830 17:36:32.785"/>
                    </kw>
                    <status status="PASS" starttime="20210830 17:36:32.665" endtime="20210830 17:36:32.785"/>
                </kw>
                <doc>Test loading Keywords and including tags</doc>
                <tag>include-exclude</tag>
                <status status="FAIL" starttime="20210830 17:36:20.414" endtime="20210830 17:36:32.785">Several failures
                    occurred:

                    1) Length of '[{'name': 'Keyword Ghost Heart Rocket', 'doc': '', 'args': '', 'tags': ['❤️', '👻',
                    '🚀'], 'id': 3, 'synopsis': '', 'html_doc': '', 'arg_string': '', 'collection': {'id': 2, 'name':
                    'ResourceLibrary1'}}, {'name': 'Keyword Heart Engine', 'doc': '', 'args': '', 'tags': ['❤️', '🚂'],
                    'id': 1, 'synopsis': '', 'html_doc': '', 'arg_string': '', 'collection': {'id': 1, 'name':
                    'PyLibrary'}}, {'name': 'Keyword Heart Skull', 'doc': '', 'args': '', 'tags': ['❤️', '💀'], 'id': 2,
                    'synopsis': '', 'html_doc': '', 'arg_string': '', 'collection': {'id': 1, 'name': 'PyLibrary'}},
                    {'name': 'Keyword Rocket Moon Heart', 'doc': '', 'args': '', 'tags': ['❤️', '🌑', '🚀'], 'id': 4,
                    'synopsis': '', 'html_doc': '', 'arg_string': '', 'collection': {'id': 3, 'name':
                    'ResourceLibrary2'}}]' should be 2 but is 4.

                    2) Length of '[{'name': 'Keyword Ghost Heart Rocket', 'doc': '', 'args': '', 'tags': ['❤️', '👻',
                    '🚀'], 'id': 3, 'synopsis': '', 'html_doc': '', 'arg_string': '', 'collection': {'id': 2, 'name':
                    'ResourceLibrary1'}}, {'name': 'Keyword Heart Engine', 'doc': '', 'args': '', 'tags': ['❤️', '🚂'],
                    'id': 1, 'synopsis': '', 'html_doc': '', 'arg_string': '', 'collection': {'id': 1, 'name':
                    'PyLibrary'}}, {'name': 'Keyword Heart Skull', 'doc': '', 'args': '', 'tags': ['❤...
                    [ Message content over the limit has been removed. ]
                    ...: '', 'html_doc': '', 'arg_string': '', 'collection': {'id': 1, 'name': 'PyLibrary'}}, {'name':
                    'Keyword Rocket Moon Heart', 'doc': '', 'args': '', 'tags': ['❤️', '🌑', '🚀'], 'id': 4, 'synopsis':
                    '', 'html_doc': '', 'arg_string': '', 'collection': {'id': 3, 'name': 'ResourceLibrary2'}}]' should
                    be 1 but is 4.

                    3) Length of '[{'name': 'Keyword Ghost Heart Rocket', 'doc': '', 'args': '', 'tags': ['❤️', '👻',
                    '🚀'], 'id': 3, 'synopsis': '', 'html_doc': '', 'arg_string': '', 'collection': {'id': 2, 'name':
                    'ResourceLibrary1'}}, {'name': 'Keyword Heart Engine', 'doc': '', 'args': '', 'tags': ['❤️', '🚂'],
                    'id': 1, 'synopsis': '', 'html_doc': '', 'arg_string': '', 'collection': {'id': 1, 'name':
                    'PyLibrary'}}, {'name': 'Keyword Heart Skull', 'doc': '', 'args': '', 'tags': ['❤️', '💀'], 'id': 2,
                    'synopsis': '', 'html_doc': '', 'arg_string': '', 'collection': {'id': 1, 'name': 'PyLibrary'}},
                    {'name': 'Keyword Rocket Moon Heart', 'doc': '', 'args': '', 'tags': ['❤️', '🌑', '🚀'], 'id': 4,
                    'synopsis': '', 'html_doc': '', 'arg_string': '', 'collection': {'id': 3, 'name':
                    'ResourceLibrary2'}}]' should be 5 but is 4.

                    4) Length of '[]' should be 3 but is 0.

                    5) Length of '[]' should be 1 but is 0.
                </status>
            </test>
            <test id="s1-s2-t18"
                  name="Running Cli And Excluding Tags Should Load Only Keywords Not Matching Exclude Pattern">
                <kw name="Run Keywords" library="BuiltIn" type="SETUP">
                    <arg>Backup And Switch Initial With Include_Exclude Fixtures</arg>
                    <doc>Executes all the given keywords in a sequence.</doc>
                    <kw name="Backup And Switch Initial With Include_Exclude Fixtures" library="keywords">
                        <kw name="Move Directory" library="OperatingSystem">
                            <arg>${INITIAL_FIXTURES}</arg>
                            <arg>${BACKUP_FIXTURES}</arg>
                            <doc>Moves the source directory into a destination.</doc>
                            <msg timestamp="20210830 17:36:32.795" level="INFO" html="true">Moved directory from '&lt;a
                                href="file://C:\repo\rfhub2\tests\fixtures\initial"&gt;C:\repo\rfhub2\tests\fixtures\initial&lt;/a&gt;'
                                to '&lt;a href="file://C:\repo\rfhub2\tests\fixtures\initial_bkp"&gt;C:\repo\rfhub2\tests\fixtures\initial_bkp&lt;/a&gt;'.
                            </msg>
                            <status status="PASS" starttime="20210830 17:36:32.785" endtime="20210830 17:36:32.795"/>
                        </kw>
                        <kw name="Copy Directory" library="OperatingSystem">
                            <arg>${INCLUDE_EXCLUDE_FIXTURES}</arg>
                            <arg>${INITIAL_FIXTURES}</arg>
                            <doc>Copies the source directory into the destination.</doc>
                            <msg timestamp="20210830 17:36:32.805" level="INFO" html="true">Copied directory from '&lt;a
                                href="file://C:\repo\rfhub2\tests\fixtures\include_exclude"&gt;C:\repo\rfhub2\tests\fixtures\include_exclude&lt;/a&gt;'
                                to '&lt;a href="file://C:\repo\rfhub2\tests\fixtures\initial"&gt;C:\repo\rfhub2\tests\fixtures\initial&lt;/a&gt;'.
                            </msg>
                            <status status="PASS" starttime="20210830 17:36:32.795" endtime="20210830 17:36:32.805"/>
                        </kw>
                        <status status="PASS" starttime="20210830 17:36:32.785" endtime="20210830 17:36:32.805"/>
                    </kw>
                    <status status="PASS" starttime="20210830 17:36:32.785" endtime="20210830 17:36:32.805"/>
                </kw>
                <kw name="Run Cli With Options --load-mode=insert --no-installed-keywords --exclude 👻 ${INITIAL_FIXTURES} And Expect Api To Have 3 Collections And 9 Keywords"
                    sourcename="Run Cli With Options ${options} And Expect Api To Have ${n} Collections And ${m} Keywords">
                    <doc>Run pkg from CLI and expect a certain amount of collections
                        and keywords
                    </doc>
                    <kw name="Run Cli Package With Options" library="keywords">
                        <arg>${options}</arg>
                        <doc>Attempt to run the rfhub2-cli package with the given options
                            The stdout of the process will be in a test suite
                            variable named ${output}
                        </doc>
                        <kw name="Run" library="OperatingSystem">
                            <var>${output}</var>
                            <arg>${ACTIVATE_VENV} rfhub2-cli -a http://${HOST}:8000 ${options}</arg>
                            <doc>Runs the given command in the system and returns the output.</doc>
                            <msg timestamp="20210830 17:36:32.955" level="INFO">Running command ' rfhub2-cli -a
                                http://127.0.0.1:8000 --load-mode=insert --no-installed-keywords --exclude 👻
                                C:\repo\rfhub2\tests\acceptance\resources\..\..\fixtures/initial/ 2&gt;&amp;1'.
                            </msg>
                            <msg timestamp="20210830 17:36:34.927" level="INFO">${output} = PyLibrary library with 1
                                keywords loaded.
                                ResourceLibrary1 library with 2 keywords loaded.
                                ResourceLibrary2 library with 4 keywords loaded.

                                Successfully loaded 3 collections with 7 keywords.
                            </msg>
                            <status status="PASS" starttime="20210830 17:36:32.805" endtime="20210830 17:36:34.927"/>
                        </kw>
                        <kw name="Set Suite Variable" library="BuiltIn">
                            <arg>${output}</arg>
                            <doc>Makes a variable available everywhere within the scope of the current suite.</doc>
                            <msg timestamp="20210830 17:36:34.927" level="INFO">${output} = PyLibrary library with 1
                                keywords loaded.
                                ResourceLibrary1 library with 2 keywords loaded.
                                ResourceLibrary2 library with 4 keywords loaded.

                                Successfully loaded 3 collections with 7 keywords.
                            </msg>
                            <status status="PASS" starttime="20210830 17:36:34.927" endtime="20210830 17:36:34.927"/>
                        </kw>
                        <status status="PASS" starttime="20210830 17:36:32.805" endtime="20210830 17:36:34.927"/>
                    </kw>
                    <kw name="Api Should Have ${n} Collections And ${m} Keywords"
                        sourcename="Api Should Have ${n} Collections And ${m} Keywords">
                        <kw name="collections Endpoint Should Have ${n} Items" library="keywords"
                            sourcename="${endpoint} Endpoint Should Have ${n} Items">
                            <kw name="Get Request For Endpoint" library="keywords">
                                <var>${response}</var>
                                <arg>endpoint=${endpoint}</arg>
                                <kw name="Create Session" library="RequestsLibrary">
                                    <arg>tmp</arg>
                                    <arg>http://${HOST}:8000/api/v1</arg>
                                    <doc>Create Session: create a HTTP session to a server</doc>
                                    <msg timestamp="20210830 17:36:34.927" level="INFO">Creating Session using :
                                        alias=tmp, url=http://127.0.0.1:8000/api/v1, headers={}, cookies={}, auth=None,
                                        timeout=None, proxies=None, verify=False, debug=0
                                    </msg>
                                    <status status="PASS" starttime="20210830 17:36:34.927"
                                            endtime="20210830 17:36:34.927"/>
                                </kw>
                                <kw name="Get On Session" library="RequestsLibrary">
                                    <var>${response}</var>
                                    <arg>tmp</arg>
                                    <arg>${endpoint}/</arg>
                                    <arg>params=${params}</arg>
                                    <doc>Sends a GET request on a previously created HTTP Session.</doc>
                                    <msg timestamp="20210830 17:36:34.947" level="INFO">GET Request :
                                        url=http://127.0.0.1:8000/api/v1/collections/?None
                                        path_url=/api/v1/collections/?None
                                        headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip,
                                        deflate', 'Accept': '*/*', 'Connection': 'keep-alive'}
                                        body=None
                                    </msg>
                                    <msg timestamp="20210830 17:36:34.947" level="INFO">GET Response :
                                        url=http://127.0.0.1:8000/api/v1/collections/?None
                                        status=200, reason=OK
                                        headers={'date': 'Mon, 30 Aug 2021 15:36:34 GMT', 'server': 'uvicorn',
                                        'content-length': '2138', 'content-type': 'application/json'}
                                        body=[{"name":"PyLibrary","type":"LIBRARY","version":"1.0.0","scope":"TEST","named_args":null,"path":"C:\\repo\\rfhub2\\tests\\acceptance\\resources\\..\\..\\fixtures\\initial\\PyLibrary","doc":"Documentation
                                        for library
                                        ``PyLibrary``.","doc_format":"ROBOT","id":1,"keywords":[{"name":"Keyword No
                                        Tag","doc":"","args":"","tags":[],"id":1,"synopsis":"","html_doc":"","arg_string":""}],"synopsis":"Documentation
                                        for library ``PyLibrary``.","html_doc":"&lt;p&gt;Documentation for library &lt;code&gt;PyLibrary&lt;/code&gt;.&lt;/p&gt;"},{"name":"ResourceLibrary1","type":"RESOURCE","version":"","scope":"GLOBAL","named_args":null,"path":"C:\\repo\\rfhub2\\tests\\acceptance\\resources\\..\\..\\fixtures\\initial\\ResourceLibrary1.resource","doc":"Documentation
                                        for resource file
                                        ``ResourceLibrary1``.","doc_format":"ROBOT","id":2,"keywords":[{"name":"Keyword
                                        Ghost","doc":"","args":"","tags":["👻"],"id":2,"synopsis":"","html_doc":"","arg_string":""},{"name":"Keyword
                                        Rocket","doc":"","args":"","tags":["🚀"],"id":3,"synopsis":"","html_doc":"","arg_string":""}],"synopsis":"Documentation
                                        for resource file ``ResourceLibrary1``.","html_doc":"&lt;p&gt;Documentation for
                                        resource file &lt;code&gt;ResourceLibrary1&lt;/code&gt;.&lt;/p&gt;"},{"name":"ResourceLibrary2","type":"RESOURCE","version":"","scope":"GLOBAL","named_args":null,"path":"C:\\repo\\rfhub2\\tests\\acceptance\\resources\\..\\..\\fixtures\\initial\\ResourceLibrary2.resource","doc":"Documentation
                                        for resource file
                                        ``ResourceLibrary2``.","doc_format":"ROBOT","id":3,"keywords":[{"name":"Keyword
                                        Airplane In The
                                        Clouds","doc":"","args":"","tags":["☁️⛅️☁️✈️☁️☁️"],"id":4,"synopsis":"","html_doc":"","arg_string":""},{"name":"Keyword
                                        No
                                        Tag","doc":"","args":"","tags":[],"id":5,"synopsis":"","html_doc":"","arg_string":""},{"name":"Keyword
                                        Rocket","doc":"","args":"","tags":["🚀"],"id":6,"synopsis":"","html_doc":"","arg_string":""},{"name":"Keyword
                                        TextualTag","doc":"","args":"","tags":["STR_tag"],"id":7,"synopsis":"","html_doc":"","arg_string":""}],"synopsis":"Documentation
                                        for resource file ``ResourceLibrary2``.","html_doc":"&lt;p&gt;Documentation for
                                        resource file &lt;code&gt;ResourceLibrary2&lt;/code&gt;.&lt;/p&gt;"}]
                                    </msg>
                                    <msg timestamp="20210830 17:36:34.947" level="INFO">${response} = &lt;Response [200]&gt;</msg>
                                    <status status="PASS" starttime="20210830 17:36:34.927"
                                            endtime="20210830 17:36:34.947"/>
                                </kw>
                                <kw name="Should Be Equal As Integers" library="BuiltIn">
                                    <arg>${response.status_code}</arg>
                                    <arg>200</arg>
                                    <doc>Fails if objects are unequal after converting them to integers.</doc>
                                    <msg timestamp="20210830 17:36:34.947" level="INFO">Argument types are:
                                        &lt;class 'int'&gt;
                                        &lt;type 'unicode'&gt;
                                    </msg>
                                    <status status="PASS" starttime="20210830 17:36:34.947"
                                            endtime="20210830 17:36:34.947"/>
                                </kw>
                                <msg timestamp="20210830 17:36:34.947" level="INFO">${response} = [{'name': 'PyLibrary',
                                    'type': 'LIBRARY', 'version': '1.0.0', 'scope': 'TEST', 'named_args': None, 'path':
                                    'C:\\repo\\rfhub2\\tests\\acceptance\\resources\\..\\..\\fixtures\\initial\\PyLibrary',
                                    'doc'...
                                </msg>
                                <status status="PASS" starttime="20210830 17:36:34.927"
                                        endtime="20210830 17:36:34.947"/>
                            </kw>
                            <kw name="Length Should Be" library="BuiltIn">
                                <arg>${response}</arg>
                                <arg>${n}</arg>
                                <doc>Verifies that the length of the given item is correct.</doc>
                                <msg timestamp="20210830 17:36:34.947" level="INFO">Length is 3</msg>
                                <status status="PASS" starttime="20210830 17:36:34.947"
                                        endtime="20210830 17:36:34.947"/>
                            </kw>
                            <status status="PASS" starttime="20210830 17:36:34.927" endtime="20210830 17:36:34.947"/>
                        </kw>
                        <kw name="keywords Endpoint Should Have ${m} Items" library="keywords"
                            sourcename="${endpoint} Endpoint Should Have ${n} Items">
                            <kw name="Get Request For Endpoint" library="keywords">
                                <var>${response}</var>
                                <arg>endpoint=${endpoint}</arg>
                                <kw name="Create Session" library="RequestsLibrary">
                                    <arg>tmp</arg>
                                    <arg>http://${HOST}:8000/api/v1</arg>
                                    <doc>Create Session: create a HTTP session to a server</doc>
                                    <msg timestamp="20210830 17:36:34.957" level="INFO">Creating Session using :
                                        alias=tmp, url=http://127.0.0.1:8000/api/v1, headers={}, cookies={}, auth=None,
                                        timeout=None, proxies=None, verify=False, debug=0
                                    </msg>
                                    <status status="PASS" starttime="20210830 17:36:34.957"
                                            endtime="20210830 17:36:34.957"/>
                                </kw>
                                <kw name="Get On Session" library="RequestsLibrary">
                                    <var>${response}</var>
                                    <arg>tmp</arg>
                                    <arg>${endpoint}/</arg>
                                    <arg>params=${params}</arg>
                                    <doc>Sends a GET request on a previously created HTTP Session.</doc>
                                    <msg timestamp="20210830 17:36:34.967" level="INFO">GET Request :
                                        url=http://127.0.0.1:8000/api/v1/keywords/?None
                                        path_url=/api/v1/keywords/?None
                                        headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip,
                                        deflate', 'Accept': '*/*', 'Connection': 'keep-alive'}
                                        body=None
                                    </msg>
                                    <msg timestamp="20210830 17:36:34.967" level="INFO">GET Response :
                                        url=http://127.0.0.1:8000/api/v1/keywords/?None
                                        status=200, reason=OK
                                        headers={'date': 'Mon, 30 Aug 2021 15:36:34 GMT', 'server': 'uvicorn',
                                        'content-length': '1156', 'content-type': 'application/json'}
                                        body=[{"name":"Keyword Airplane In The
                                        Clouds","doc":"","args":"","tags":["☁️⛅️☁️✈️☁️☁️"],"id":4,"synopsis":"","html_doc":"","arg_string":"","collection":{"id":3,"name":"ResourceLibrary2"}},{"name":"Keyword
                                        Ghost","doc":"","args":"","tags":["👻"],"id":2,"synopsis":"","html_doc":"","arg_string":"","collection":{"id":2,"name":"ResourceLibrary1"}},{"name":"Keyword
                                        No
                                        Tag","doc":"","args":"","tags":[],"id":1,"synopsis":"","html_doc":"","arg_string":"","collection":{"id":1,"name":"PyLibrary"}},{"name":"Keyword
                                        No
                                        Tag","doc":"","args":"","tags":[],"id":5,"synopsis":"","html_doc":"","arg_string":"","collection":{"id":3,"name":"ResourceLibrary2"}},{"name":"Keyword
                                        Rocket","doc":"","args":"","tags":["🚀"],"id":3,"synopsis":"","html_doc":"","arg_string":"","collection":{"id":2,"name":"ResourceLibrary1"}},{"name":"Keyword
                                        Rocket","doc":"","args":"","tags":["🚀"],"id":6,"synopsis":"","html_doc":"","arg_string":"","collection":{"id":3,"name":"ResourceLibrary2"}},{"name":"Keyword
                                        TextualTag","doc":"","args":"","tags":["STR_tag"],"id":7,"synopsis":"","html_doc":"","arg_string":"","collection":{"id":3,"name":"ResourceLibrary2"}}]
                                    </msg>
                                    <msg timestamp="20210830 17:36:34.967" level="INFO">${response} = &lt;Response [200]&gt;</msg>
                                    <status status="PASS" starttime="20210830 17:36:34.957"
                                            endtime="20210830 17:36:34.967"/>
                                </kw>
                                <kw name="Should Be Equal As Integers" library="BuiltIn">
                                    <arg>${response.status_code}</arg>
                                    <arg>200</arg>
                                    <doc>Fails if objects are unequal after converting them to integers.</doc>
                                    <msg timestamp="20210830 17:36:34.977" level="INFO">Argument types are:
                                        &lt;class 'int'&gt;
                                        &lt;type 'unicode'&gt;
                                    </msg>
                                    <status status="PASS" starttime="20210830 17:36:34.967"
                                            endtime="20210830 17:36:34.977"/>
                                </kw>
                                <msg timestamp="20210830 17:36:34.977" level="INFO">${response} = [{'name': 'Keyword
                                    Airplane In The Clouds', 'doc': '', 'args': '', 'tags': ['☁️⛅️☁️✈️☁️☁️'], 'id': 4,
                                    'synopsis': '', 'html_doc': '', 'arg_string': '', 'collection': {'id': 3, 'name':
                                    'ResourceLibrary...
                                </msg>
                                <status status="PASS" starttime="20210830 17:36:34.947"
                                        endtime="20210830 17:36:34.977"/>
                            </kw>
                            <kw name="Length Should Be" library="BuiltIn">
                                <arg>${response}</arg>
                                <arg>${n}</arg>
                                <doc>Verifies that the length of the given item is correct.</doc>
                                <msg timestamp="20210830 17:36:34.977" level="INFO">Length is 7</msg>
                                <msg timestamp="20210830 17:36:34.977" level="FAIL">Length of '[{'name': 'Keyword
                                    Airplane In The Clouds', 'doc': '', 'args': '', 'tags': ['☁️⛅️☁️✈️☁️☁️'], 'id': 4,
                                    'synopsis': '', 'html_doc': '', 'arg_string': '', 'collection': {'id': 3, 'name':
                                    'ResourceLibrary2'}}, {'name': 'Keyword Ghost', 'doc': '', 'args': '', 'tags':
                                    ['👻'], 'id': 2, 'synopsis': '', 'html_doc': '', 'arg_string': '', 'collection':
                                    {'id': 2, 'name': 'ResourceLibrary1'}}, {'name': 'Keyword No Tag', 'doc': '',
                                    'args': '', 'tags': [], 'id': 1, 'synopsis': '', 'html_doc': '', 'arg_string': '',
                                    'collection': {'id': 1, 'name': 'PyLibrary'}}, {'name': 'Keyword No Tag', 'doc': '',
                                    'args': '', 'tags': [], 'id': 5, 'synopsis': '', 'html_doc': '', 'arg_string': '',
                                    'collection': {'id': 3, 'name': 'ResourceLibrary2'}}, {'name': 'Keyword Rocket',
                                    'doc': '', 'args': '', 'tags': ['🚀'], 'id': 3, 'synopsis': '', 'html_doc': '',
                                    'arg_string': '', 'collection': {'id': 2, 'name': 'ResourceLibrary1'}}, {'name':
                                    'Keyword Rocket', 'doc': '', 'args': '', 'tags': ['🚀'], 'id': 6, 'synopsis': '',
                                    'html_doc': '', 'arg_string': '', 'collection': {'id': 3, 'name':
                                    'ResourceLibrary2'}}, {'name': 'Keyword TextualTag', 'doc': '', 'args': '', 'tags':
                                    ['STR_tag'], 'id': 7, 'synopsis': '', 'html_doc': '', 'arg_string': '',
                                    'collection': {'id': 3, 'name': 'ResourceLibrary2'}}]' should be 9 but is 7.
                                </msg>
                                <status status="FAIL" starttime="20210830 17:36:34.977"
                                        endtime="20210830 17:36:34.977"/>
                            </kw>
                            <status status="FAIL" starttime="20210830 17:36:34.947" endtime="20210830 17:36:34.977"/>
                        </kw>
                        <status status="FAIL" starttime="20210830 17:36:34.927" endtime="20210830 17:36:34.977"/>
                    </kw>
                    <status status="FAIL" starttime="20210830 17:36:32.805" endtime="20210830 17:36:34.987"/>
                </kw>
                <kw name="Run Cli With Options --load-mode=insert --no-installed-keywords --exclude 👻AND❤️ ${INITIAL_FIXTURES} And Expect Api To Have 3 Collections And 10 Keywords"
                    sourcename="Run Cli With Options ${options} And Expect Api To Have ${n} Collections And ${m} Keywords">
                    <doc>Run pkg from CLI and expect a certain amount of collections
                        and keywords
                    </doc>
                    <kw name="Run Cli Package With Options" library="keywords">
                        <arg>${options}</arg>
                        <doc>Attempt to run the rfhub2-cli package with the given options
                            The stdout of the process will be in a test suite
                            variable named ${output}
                        </doc>
                        <kw name="Run" library="OperatingSystem">
                            <var>${output}</var>
                            <arg>${ACTIVATE_VENV} rfhub2-cli -a http://${HOST}:8000 ${options}</arg>
                            <doc>Runs the given command in the system and returns the output.</doc>
                            <msg timestamp="20210830 17:36:35.127" level="INFO">Running command ' rfhub2-cli -a
                                http://127.0.0.1:8000 --load-mode=insert --no-installed-keywords --exclude 👻AND❤️
                                C:\repo\rfhub2\tests\acceptance\resources\..\..\fixtures/initial/ 2&gt;&amp;1'.
                            </msg>
                            <msg timestamp="20210830 17:36:37.087" level="INFO">${output} = PyLibrary library with 1
                                keywords loaded.
                                ResourceLibrary1 library with 2 keywords loaded.
                                ResourceLibrary2 library with 4 keywords loaded.

                                Successfully loaded 3 collections with 7 keywords.
                            </msg>
                            <status status="PASS" starttime="20210830 17:36:34.987" endtime="20210830 17:36:37.087"/>
                        </kw>
                        <kw name="Set Suite Variable" library="BuiltIn">
                            <arg>${output}</arg>
                            <doc>Makes a variable available everywhere within the scope of the current suite.</doc>
                            <msg timestamp="20210830 17:36:37.087" level="INFO">${output} = PyLibrary library with 1
                                keywords loaded.
                                ResourceLibrary1 library with 2 keywords loaded.
                                ResourceLibrary2 library with 4 keywords loaded.

                                Successfully loaded 3 collections with 7 keywords.
                            </msg>
                            <status status="PASS" starttime="20210830 17:36:37.087" endtime="20210830 17:36:37.087"/>
                        </kw>
                        <status status="PASS" starttime="20210830 17:36:34.987" endtime="20210830 17:36:37.087"/>
                    </kw>
                    <kw name="Api Should Have ${n} Collections And ${m} Keywords"
                        sourcename="Api Should Have ${n} Collections And ${m} Keywords">
                        <kw name="collections Endpoint Should Have ${n} Items" library="keywords"
                            sourcename="${endpoint} Endpoint Should Have ${n} Items">
                            <kw name="Get Request For Endpoint" library="keywords">
                                <var>${response}</var>
                                <arg>endpoint=${endpoint}</arg>
                                <kw name="Create Session" library="RequestsLibrary">
                                    <arg>tmp</arg>
                                    <arg>http://${HOST}:8000/api/v1</arg>
                                    <doc>Create Session: create a HTTP session to a server</doc>
                                    <msg timestamp="20210830 17:36:37.087" level="INFO">Creating Session using :
                                        alias=tmp, url=http://127.0.0.1:8000/api/v1, headers={}, cookies={}, auth=None,
                                        timeout=None, proxies=None, verify=False, debug=0
                                    </msg>
                                    <status status="PASS" starttime="20210830 17:36:37.087"
                                            endtime="20210830 17:36:37.087"/>
                                </kw>
                                <kw name="Get On Session" library="RequestsLibrary">
                                    <var>${response}</var>
                                    <arg>tmp</arg>
                                    <arg>${endpoint}/</arg>
                                    <arg>params=${params}</arg>
                                    <doc>Sends a GET request on a previously created HTTP Session.</doc>
                                    <msg timestamp="20210830 17:36:37.107" level="INFO">GET Request :
                                        url=http://127.0.0.1:8000/api/v1/collections/?None
                                        path_url=/api/v1/collections/?None
                                        headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip,
                                        deflate', 'Accept': '*/*', 'Connection': 'keep-alive'}
                                        body=None
                                    </msg>
                                    <msg timestamp="20210830 17:36:37.107" level="INFO">GET Response :
                                        url=http://127.0.0.1:8000/api/v1/collections/?None
                                        status=200, reason=OK
                                        headers={'date': 'Mon, 30 Aug 2021 15:36:36 GMT', 'server': 'uvicorn',
                                        'content-length': '2138', 'content-type': 'application/json'}
                                        body=[{"name":"PyLibrary","type":"LIBRARY","version":"1.0.0","scope":"TEST","named_args":null,"path":"C:\\repo\\rfhub2\\tests\\acceptance\\resources\\..\\..\\fixtures\\initial\\PyLibrary","doc":"Documentation
                                        for library
                                        ``PyLibrary``.","doc_format":"ROBOT","id":1,"keywords":[{"name":"Keyword No
                                        Tag","doc":"","args":"","tags":[],"id":1,"synopsis":"","html_doc":"","arg_string":""}],"synopsis":"Documentation
                                        for library ``PyLibrary``.","html_doc":"&lt;p&gt;Documentation for library &lt;code&gt;PyLibrary&lt;/code&gt;.&lt;/p&gt;"},{"name":"ResourceLibrary1","type":"RESOURCE","version":"","scope":"GLOBAL","named_args":null,"path":"C:\\repo\\rfhub2\\tests\\acceptance\\resources\\..\\..\\fixtures\\initial\\ResourceLibrary1.resource","doc":"Documentation
                                        for resource file
                                        ``ResourceLibrary1``.","doc_format":"ROBOT","id":2,"keywords":[{"name":"Keyword
                                        Ghost","doc":"","args":"","tags":["👻"],"id":2,"synopsis":"","html_doc":"","arg_string":""},{"name":"Keyword
                                        Rocket","doc":"","args":"","tags":["🚀"],"id":3,"synopsis":"","html_doc":"","arg_string":""}],"synopsis":"Documentation
                                        for resource file ``ResourceLibrary1``.","html_doc":"&lt;p&gt;Documentation for
                                        resource file &lt;code&gt;ResourceLibrary1&lt;/code&gt;.&lt;/p&gt;"},{"name":"ResourceLibrary2","type":"RESOURCE","version":"","scope":"GLOBAL","named_args":null,"path":"C:\\repo\\rfhub2\\tests\\acceptance\\resources\\..\\..\\fixtures\\initial\\ResourceLibrary2.resource","doc":"Documentation
                                        for resource file
                                        ``ResourceLibrary2``.","doc_format":"ROBOT","id":3,"keywords":[{"name":"Keyword
                                        Airplane In The
                                        Clouds","doc":"","args":"","tags":["☁️⛅️☁️✈️☁️☁️"],"id":4,"synopsis":"","html_doc":"","arg_string":""},{"name":"Keyword
                                        No
                                        Tag","doc":"","args":"","tags":[],"id":5,"synopsis":"","html_doc":"","arg_string":""},{"name":"Keyword
                                        Rocket","doc":"","args":"","tags":["🚀"],"id":6,"synopsis":"","html_doc":"","arg_string":""},{"name":"Keyword
                                        TextualTag","doc":"","args":"","tags":["STR_tag"],"id":7,"synopsis":"","html_doc":"","arg_string":""}],"synopsis":"Documentation
                                        for resource file ``ResourceLibrary2``.","html_doc":"&lt;p&gt;Documentation for
                                        resource file &lt;code&gt;ResourceLibrary2&lt;/code&gt;.&lt;/p&gt;"}]
                                    </msg>
                                    <msg timestamp="20210830 17:36:37.107" level="INFO">${response} = &lt;Response [200]&gt;</msg>
                                    <status status="PASS" starttime="20210830 17:36:37.087"
                                            endtime="20210830 17:36:37.107"/>
                                </kw>
                                <kw name="Should Be Equal As Integers" library="BuiltIn">
                                    <arg>${response.status_code}</arg>
                                    <arg>200</arg>
                                    <doc>Fails if objects are unequal after converting them to integers.</doc>
                                    <msg timestamp="20210830 17:36:37.107" level="INFO">Argument types are:
                                        &lt;class 'int'&gt;
                                        &lt;type 'unicode'&gt;
                                    </msg>
                                    <status status="PASS" starttime="20210830 17:36:37.107"
                                            endtime="20210830 17:36:37.107"/>
                                </kw>
                                <msg timestamp="20210830 17:36:37.117" level="INFO">${response} = [{'name': 'PyLibrary',
                                    'type': 'LIBRARY', 'version': '1.0.0', 'scope': 'TEST', 'named_args': None, 'path':
                                    'C:\\repo\\rfhub2\\tests\\acceptance\\resources\\..\\..\\fixtures\\initial\\PyLibrary',
                                    'doc'...
                                </msg>
                                <status status="PASS" starttime="20210830 17:36:37.087"
                                        endtime="20210830 17:36:37.117"/>
                            </kw>
                            <kw name="Length Should Be" library="BuiltIn">
                                <arg>${response}</arg>
                                <arg>${n}</arg>
                                <doc>Verifies that the length of the given item is correct.</doc>
                                <msg timestamp="20210830 17:36:37.117" level="INFO">Length is 3</msg>
                                <status status="PASS" starttime="20210830 17:36:37.117"
                                        endtime="20210830 17:36:37.117"/>
                            </kw>
                            <status status="PASS" starttime="20210830 17:36:37.087" endtime="20210830 17:36:37.117"/>
                        </kw>
                        <kw name="keywords Endpoint Should Have ${m} Items" library="keywords"
                            sourcename="${endpoint} Endpoint Should Have ${n} Items">
                            <kw name="Get Request For Endpoint" library="keywords">
                                <var>${response}</var>
                                <arg>endpoint=${endpoint}</arg>
                                <kw name="Create Session" library="RequestsLibrary">
                                    <arg>tmp</arg>
                                    <arg>http://${HOST}:8000/api/v1</arg>
                                    <doc>Create Session: create a HTTP session to a server</doc>
                                    <msg timestamp="20210830 17:36:37.117" level="INFO">Creating Session using :
                                        alias=tmp, url=http://127.0.0.1:8000/api/v1, headers={}, cookies={}, auth=None,
                                        timeout=None, proxies=None, verify=False, debug=0
                                    </msg>
                                    <status status="PASS" starttime="20210830 17:36:37.117"
                                            endtime="20210830 17:36:37.117"/>
                                </kw>
                                <kw name="Get On Session" library="RequestsLibrary">
                                    <var>${response}</var>
                                    <arg>tmp</arg>
                                    <arg>${endpoint}/</arg>
                                    <arg>params=${params}</arg>
                                    <doc>Sends a GET request on a previously created HTTP Session.</doc>
                                    <msg timestamp="20210830 17:36:37.137" level="INFO">GET Request :
                                        url=http://127.0.0.1:8000/api/v1/keywords/?None
                                        path_url=/api/v1/keywords/?None
                                        headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip,
                                        deflate', 'Accept': '*/*', 'Connection': 'keep-alive'}
                                        body=None
                                    </msg>
                                    <msg timestamp="20210830 17:36:37.137" level="INFO">GET Response :
                                        url=http://127.0.0.1:8000/api/v1/keywords/?None
                                        status=200, reason=OK
                                        headers={'date': 'Mon, 30 Aug 2021 15:36:36 GMT', 'server': 'uvicorn',
                                        'content-length': '1156', 'content-type': 'application/json'}
                                        body=[{"name":"Keyword Airplane In The
                                        Clouds","doc":"","args":"","tags":["☁️⛅️☁️✈️☁️☁️"],"id":4,"synopsis":"","html_doc":"","arg_string":"","collection":{"id":3,"name":"ResourceLibrary2"}},{"name":"Keyword
                                        Ghost","doc":"","args":"","tags":["👻"],"id":2,"synopsis":"","html_doc":"","arg_string":"","collection":{"id":2,"name":"ResourceLibrary1"}},{"name":"Keyword
                                        No
                                        Tag","doc":"","args":"","tags":[],"id":1,"synopsis":"","html_doc":"","arg_string":"","collection":{"id":1,"name":"PyLibrary"}},{"name":"Keyword
                                        No
                                        Tag","doc":"","args":"","tags":[],"id":5,"synopsis":"","html_doc":"","arg_string":"","collection":{"id":3,"name":"ResourceLibrary2"}},{"name":"Keyword
                                        Rocket","doc":"","args":"","tags":["🚀"],"id":3,"synopsis":"","html_doc":"","arg_string":"","collection":{"id":2,"name":"ResourceLibrary1"}},{"name":"Keyword
                                        Rocket","doc":"","args":"","tags":["🚀"],"id":6,"synopsis":"","html_doc":"","arg_string":"","collection":{"id":3,"name":"ResourceLibrary2"}},{"name":"Keyword
                                        TextualTag","doc":"","args":"","tags":["STR_tag"],"id":7,"synopsis":"","html_doc":"","arg_string":"","collection":{"id":3,"name":"ResourceLibrary2"}}]
                                    </msg>
                                    <msg timestamp="20210830 17:36:37.137" level="INFO">${response} = &lt;Response [200]&gt;</msg>
                                    <status status="PASS" starttime="20210830 17:36:37.117"
                                            endtime="20210830 17:36:37.137"/>
                                </kw>
                                <kw name="Should Be Equal As Integers" library="BuiltIn">
                                    <arg>${response.status_code}</arg>
                                    <arg>200</arg>
                                    <doc>Fails if objects are unequal after converting them to integers.</doc>
                                    <msg timestamp="20210830 17:36:37.137" level="INFO">Argument types are:
                                        &lt;class 'int'&gt;
                                        &lt;type 'unicode'&gt;
                                    </msg>
                                    <status status="PASS" starttime="20210830 17:36:37.137"
                                            endtime="20210830 17:36:37.137"/>
                                </kw>
                                <msg timestamp="20210830 17:36:37.137" level="INFO">${response} = [{'name': 'Keyword
                                    Airplane In The Clouds', 'doc': '', 'args': '', 'tags': ['☁️⛅️☁️✈️☁️☁️'], 'id': 4,
                                    'synopsis': '', 'html_doc': '', 'arg_string': '', 'collection': {'id': 3, 'name':
                                    'ResourceLibrary...
                                </msg>
                                <status status="PASS" starttime="20210830 17:36:37.117"
                                        endtime="20210830 17:36:37.137"/>
                            </kw>
                            <kw name="Length Should Be" library="BuiltIn">
                                <arg>${response}</arg>
                                <arg>${n}</arg>
                                <doc>Verifies that the length of the given item is correct.</doc>
                                <msg timestamp="20210830 17:36:37.137" level="INFO">Length is 7</msg>
                                <msg timestamp="20210830 17:36:37.137" level="FAIL">Length of '[{'name': 'Keyword
                                    Airplane In The Clouds', 'doc': '', 'args': '', 'tags': ['☁️⛅️☁️✈️☁️☁️'], 'id': 4,
                                    'synopsis': '', 'html_doc': '', 'arg_string': '', 'collection': {'id': 3, 'name':
                                    'ResourceLibrary2'}}, {'name': 'Keyword Ghost', 'doc': '', 'args': '', 'tags':
                                    ['👻'], 'id': 2, 'synopsis': '', 'html_doc': '', 'arg_string': '', 'collection':
                                    {'id': 2, 'name': 'ResourceLibrary1'}}, {'name': 'Keyword No Tag', 'doc': '',
                                    'args': '', 'tags': [], 'id': 1, 'synopsis': '', 'html_doc': '', 'arg_string': '',
                                    'collection': {'id': 1, 'name': 'PyLibrary'}}, {'name': 'Keyword No Tag', 'doc': '',
                                    'args': '', 'tags': [], 'id': 5, 'synopsis': '', 'html_doc': '', 'arg_string': '',
                                    'collection': {'id': 3, 'name': 'ResourceLibrary2'}}, {'name': 'Keyword Rocket',
                                    'doc': '', 'args': '', 'tags': ['🚀'], 'id': 3, 'synopsis': '', 'html_doc': '',
                                    'arg_string': '', 'collection': {'id': 2, 'name': 'ResourceLibrary1'}}, {'name':
                                    'Keyword Rocket', 'doc': '', 'args': '', 'tags': ['🚀'], 'id': 6, 'synopsis': '',
                                    'html_doc': '', 'arg_string': '', 'collection': {'id': 3, 'name':
                                    'ResourceLibrary2'}}, {'name': 'Keyword TextualTag', 'doc': '', 'args': '', 'tags':
                                    ['STR_tag'], 'id': 7, 'synopsis': '', 'html_doc': '', 'arg_string': '',
                                    'collection': {'id': 3, 'name': 'ResourceLibrary2'}}]' should be 10 but is 7.
                                </msg>
                                <status status="FAIL" starttime="20210830 17:36:37.137"
                                        endtime="20210830 17:36:37.137"/>
                            </kw>
                            <status status="FAIL" starttime="20210830 17:36:37.117" endtime="20210830 17:36:37.137"/>
                        </kw>
                        <status status="FAIL" starttime="20210830 17:36:37.087" endtime="20210830 17:36:37.147"/>
                    </kw>
                    <status status="FAIL" starttime="20210830 17:36:34.987" endtime="20210830 17:36:37.147"/>
                </kw>
                <kw name="Run Cli With Options --load-mode=insert --no-installed-keywords --exclude 👻OR❤️ ${INITIAL_FIXTURES} And Expect Api To Have 3 Collections And 6 Keywords"
                    sourcename="Run Cli With Options ${options} And Expect Api To Have ${n} Collections And ${m} Keywords">
                    <doc>Run pkg from CLI and expect a certain amount of collections
                        and keywords
                    </doc>
                    <kw name="Run Cli Package With Options" library="keywords">
                        <arg>${options}</arg>
                        <doc>Attempt to run the rfhub2-cli package with the given options
                            The stdout of the process will be in a test suite
                            variable named ${output}
                        </doc>
                        <kw name="Run" library="OperatingSystem">
                            <var>${output}</var>
                            <arg>${ACTIVATE_VENV} rfhub2-cli -a http://${HOST}:8000 ${options}</arg>
                            <doc>Runs the given command in the system and returns the output.</doc>
                            <msg timestamp="20210830 17:36:37.287" level="INFO">Running command ' rfhub2-cli -a
                                http://127.0.0.1:8000 --load-mode=insert --no-installed-keywords --exclude 👻OR❤️
                                C:\repo\rfhub2\tests\acceptance\resources\..\..\fixtures/initial/ 2&gt;&amp;1'.
                            </msg>
                            <msg timestamp="20210830 17:36:39.319" level="INFO">${output} = PyLibrary library with 1
                                keywords loaded.
                                ResourceLibrary1 library with 2 keywords loaded.
                                ResourceLibrary2 library with 4 keywords loaded.

                                Successfully loaded 3 collections with 7 keywords.
                            </msg>
                            <status status="PASS" starttime="20210830 17:36:37.147" endtime="20210830 17:36:39.319"/>
                        </kw>
                        <kw name="Set Suite Variable" library="BuiltIn">
                            <arg>${output}</arg>
                            <doc>Makes a variable available everywhere within the scope of the current suite.</doc>
                            <msg timestamp="20210830 17:36:39.320" level="INFO">${output} = PyLibrary library with 1
                                keywords loaded.
                                ResourceLibrary1 library with 2 keywords loaded.
                                ResourceLibrary2 library with 4 keywords loaded.

                                Successfully loaded 3 collections with 7 keywords.
                            </msg>
                            <status status="PASS" starttime="20210830 17:36:39.319" endtime="20210830 17:36:39.320"/>
                        </kw>
                        <status status="PASS" starttime="20210830 17:36:37.147" endtime="20210830 17:36:39.320"/>
                    </kw>
                    <kw name="Api Should Have ${n} Collections And ${m} Keywords"
                        sourcename="Api Should Have ${n} Collections And ${m} Keywords">
                        <kw name="collections Endpoint Should Have ${n} Items" library="keywords"
                            sourcename="${endpoint} Endpoint Should Have ${n} Items">
                            <kw name="Get Request For Endpoint" library="keywords">
                                <var>${response}</var>
                                <arg>endpoint=${endpoint}</arg>
                                <kw name="Create Session" library="RequestsLibrary">
                                    <arg>tmp</arg>
                                    <arg>http://${HOST}:8000/api/v1</arg>
                                    <doc>Create Session: create a HTTP session to a server</doc>
                                    <msg timestamp="20210830 17:36:39.323" level="INFO">Creating Session using :
                                        alias=tmp, url=http://127.0.0.1:8000/api/v1, headers={}, cookies={}, auth=None,
                                        timeout=None, proxies=None, verify=False, debug=0
                                    </msg>
                                    <status status="PASS" starttime="20210830 17:36:39.323"
                                            endtime="20210830 17:36:39.323"/>
                                </kw>
                                <kw name="Get On Session" library="RequestsLibrary">
                                    <var>${response}</var>
                                    <arg>tmp</arg>
                                    <arg>${endpoint}/</arg>
                                    <arg>params=${params}</arg>
                                    <doc>Sends a GET request on a previously created HTTP Session.</doc>
                                    <msg timestamp="20210830 17:36:39.342" level="INFO">GET Request :
                                        url=http://127.0.0.1:8000/api/v1/collections/?None
                                        path_url=/api/v1/collections/?None
                                        headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip,
                                        deflate', 'Accept': '*/*', 'Connection': 'keep-alive'}
                                        body=None
                                    </msg>
                                    <msg timestamp="20210830 17:36:39.342" level="INFO">GET Response :
                                        url=http://127.0.0.1:8000/api/v1/collections/?None
                                        status=200, reason=OK
                                        headers={'date': 'Mon, 30 Aug 2021 15:36:38 GMT', 'server': 'uvicorn',
                                        'content-length': '2138', 'content-type': 'application/json'}
                                        body=[{"name":"PyLibrary","type":"LIBRARY","version":"1.0.0","scope":"TEST","named_args":null,"path":"C:\\repo\\rfhub2\\tests\\acceptance\\resources\\..\\..\\fixtures\\initial\\PyLibrary","doc":"Documentation
                                        for library
                                        ``PyLibrary``.","doc_format":"ROBOT","id":1,"keywords":[{"name":"Keyword No
                                        Tag","doc":"","args":"","tags":[],"id":1,"synopsis":"","html_doc":"","arg_string":""}],"synopsis":"Documentation
                                        for library ``PyLibrary``.","html_doc":"&lt;p&gt;Documentation for library &lt;code&gt;PyLibrary&lt;/code&gt;.&lt;/p&gt;"},{"name":"ResourceLibrary1","type":"RESOURCE","version":"","scope":"GLOBAL","named_args":null,"path":"C:\\repo\\rfhub2\\tests\\acceptance\\resources\\..\\..\\fixtures\\initial\\ResourceLibrary1.resource","doc":"Documentation
                                        for resource file
                                        ``ResourceLibrary1``.","doc_format":"ROBOT","id":2,"keywords":[{"name":"Keyword
                                        Ghost","doc":"","args":"","tags":["👻"],"id":2,"synopsis":"","html_doc":"","arg_string":""},{"name":"Keyword
                                        Rocket","doc":"","args":"","tags":["🚀"],"id":3,"synopsis":"","html_doc":"","arg_string":""}],"synopsis":"Documentation
                                        for resource file ``ResourceLibrary1``.","html_doc":"&lt;p&gt;Documentation for
                                        resource file &lt;code&gt;ResourceLibrary1&lt;/code&gt;.&lt;/p&gt;"},{"name":"ResourceLibrary2","type":"RESOURCE","version":"","scope":"GLOBAL","named_args":null,"path":"C:\\repo\\rfhub2\\tests\\acceptance\\resources\\..\\..\\fixtures\\initial\\ResourceLibrary2.resource","doc":"Documentation
                                        for resource file
                                        ``ResourceLibrary2``.","doc_format":"ROBOT","id":3,"keywords":[{"name":"Keyword
                                        Airplane In The
                                        Clouds","doc":"","args":"","tags":["☁️⛅️☁️✈️☁️☁️"],"id":4,"synopsis":"","html_doc":"","arg_string":""},{"name":"Keyword
                                        No
                                        Tag","doc":"","args":"","tags":[],"id":5,"synopsis":"","html_doc":"","arg_string":""},{"name":"Keyword
                                        Rocket","doc":"","args":"","tags":["🚀"],"id":6,"synopsis":"","html_doc":"","arg_string":""},{"name":"Keyword
                                        TextualTag","doc":"","args":"","tags":["STR_tag"],"id":7,"synopsis":"","html_doc":"","arg_string":""}],"synopsis":"Documentation
                                        for resource file ``ResourceLibrary2``.","html_doc":"&lt;p&gt;Documentation for
                                        resource file &lt;code&gt;ResourceLibrary2&lt;/code&gt;.&lt;/p&gt;"}]
                                    </msg>
                                    <msg timestamp="20210830 17:36:39.342" level="INFO">${response} = &lt;Response [200]&gt;</msg>
                                    <status status="PASS" starttime="20210830 17:36:39.324"
                                            endtime="20210830 17:36:39.342"/>
                                </kw>
                                <kw name="Should Be Equal As Integers" library="BuiltIn">
                                    <arg>${response.status_code}</arg>
                                    <arg>200</arg>
                                    <doc>Fails if objects are unequal after converting them to integers.</doc>
                                    <msg timestamp="20210830 17:36:39.345" level="INFO">Argument types are:
                                        &lt;class 'int'&gt;
                                        &lt;type 'unicode'&gt;
                                    </msg>
                                    <status status="PASS" starttime="20210830 17:36:39.342"
                                            endtime="20210830 17:36:39.345"/>
                                </kw>
                                <msg timestamp="20210830 17:36:39.347" level="INFO">${response} = [{'name': 'PyLibrary',
                                    'type': 'LIBRARY', 'version': '1.0.0', 'scope': 'TEST', 'named_args': None, 'path':
                                    'C:\\repo\\rfhub2\\tests\\acceptance\\resources\\..\\..\\fixtures\\initial\\PyLibrary',
                                    'doc'...
                                </msg>
                                <status status="PASS" starttime="20210830 17:36:39.322"
                                        endtime="20210830 17:36:39.347"/>
                            </kw>
                            <kw name="Length Should Be" library="BuiltIn">
                                <arg>${response}</arg>
                                <arg>${n}</arg>
                                <doc>Verifies that the length of the given item is correct.</doc>
                                <msg timestamp="20210830 17:36:39.348" level="INFO">Length is 3</msg>
                                <status status="PASS" starttime="20210830 17:36:39.347"
                                        endtime="20210830 17:36:39.348"/>
                            </kw>
                            <status status="PASS" starttime="20210830 17:36:39.321" endtime="20210830 17:36:39.348"/>
                        </kw>
                        <kw name="keywords Endpoint Should Have ${m} Items" library="keywords"
                            sourcename="${endpoint} Endpoint Should Have ${n} Items">
                            <kw name="Get Request For Endpoint" library="keywords">
                                <var>${response}</var>
                                <arg>endpoint=${endpoint}</arg>
                                <kw name="Create Session" library="RequestsLibrary">
                                    <arg>tmp</arg>
                                    <arg>http://${HOST}:8000/api/v1</arg>
                                    <doc>Create Session: create a HTTP session to a server</doc>
                                    <msg timestamp="20210830 17:36:39.350" level="INFO">Creating Session using :
                                        alias=tmp, url=http://127.0.0.1:8000/api/v1, headers={}, cookies={}, auth=None,
                                        timeout=None, proxies=None, verify=False, debug=0
                                    </msg>
                                    <status status="PASS" starttime="20210830 17:36:39.350"
                                            endtime="20210830 17:36:39.351"/>
                                </kw>
                                <kw name="Get On Session" library="RequestsLibrary">
                                    <var>${response}</var>
                                    <arg>tmp</arg>
                                    <arg>${endpoint}/</arg>
                                    <arg>params=${params}</arg>
                                    <doc>Sends a GET request on a previously created HTTP Session.</doc>
                                    <msg timestamp="20210830 17:36:39.368" level="INFO">GET Request :
                                        url=http://127.0.0.1:8000/api/v1/keywords/?None
                                        path_url=/api/v1/keywords/?None
                                        headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip,
                                        deflate', 'Accept': '*/*', 'Connection': 'keep-alive'}
                                        body=None
                                    </msg>
                                    <msg timestamp="20210830 17:36:39.369" level="INFO">GET Response :
                                        url=http://127.0.0.1:8000/api/v1/keywords/?None
                                        status=200, reason=OK
                                        headers={'date': 'Mon, 30 Aug 2021 15:36:38 GMT', 'server': 'uvicorn',
                                        'content-length': '1156', 'content-type': 'application/json'}
                                        body=[{"name":"Keyword Airplane In The
                                        Clouds","doc":"","args":"","tags":["☁️⛅️☁️✈️☁️☁️"],"id":4,"synopsis":"","html_doc":"","arg_string":"","collection":{"id":3,"name":"ResourceLibrary2"}},{"name":"Keyword
                                        Ghost","doc":"","args":"","tags":["👻"],"id":2,"synopsis":"","html_doc":"","arg_string":"","collection":{"id":2,"name":"ResourceLibrary1"}},{"name":"Keyword
                                        No
                                        Tag","doc":"","args":"","tags":[],"id":1,"synopsis":"","html_doc":"","arg_string":"","collection":{"id":1,"name":"PyLibrary"}},{"name":"Keyword
                                        No
                                        Tag","doc":"","args":"","tags":[],"id":5,"synopsis":"","html_doc":"","arg_string":"","collection":{"id":3,"name":"ResourceLibrary2"}},{"name":"Keyword
                                        Rocket","doc":"","args":"","tags":["🚀"],"id":3,"synopsis":"","html_doc":"","arg_string":"","collection":{"id":2,"name":"ResourceLibrary1"}},{"name":"Keyword
                                        Rocket","doc":"","args":"","tags":["🚀"],"id":6,"synopsis":"","html_doc":"","arg_string":"","collection":{"id":3,"name":"ResourceLibrary2"}},{"name":"Keyword
                                        TextualTag","doc":"","args":"","tags":["STR_tag"],"id":7,"synopsis":"","html_doc":"","arg_string":"","collection":{"id":3,"name":"ResourceLibrary2"}}]
                                    </msg>
                                    <msg timestamp="20210830 17:36:39.369" level="INFO">${response} = &lt;Response [200]&gt;</msg>
                                    <status status="PASS" starttime="20210830 17:36:39.351"
                                            endtime="20210830 17:36:39.369"/>
                                </kw>
                                <kw name="Should Be Equal As Integers" library="BuiltIn">
                                    <arg>${response.status_code}</arg>
                                    <arg>200</arg>
                                    <doc>Fails if objects are unequal after converting them to integers.</doc>
                                    <msg timestamp="20210830 17:36:39.371" level="INFO">Argument types are:
                                        &lt;class 'int'&gt;
                                        &lt;type 'unicode'&gt;
                                    </msg>
                                    <status status="PASS" starttime="20210830 17:36:39.369"
                                            endtime="20210830 17:36:39.371"/>
                                </kw>
                                <msg timestamp="20210830 17:36:39.374" level="INFO">${response} = [{'name': 'Keyword
                                    Airplane In The Clouds', 'doc': '', 'args': '', 'tags': ['☁️⛅️☁️✈️☁️☁️'], 'id': 4,
                                    'synopsis': '', 'html_doc': '', 'arg_string': '', 'collection': {'id': 3, 'name':
                                    'ResourceLibrary...
                                </msg>
                                <status status="PASS" starttime="20210830 17:36:39.349"
                                        endtime="20210830 17:36:39.374"/>
                            </kw>
                            <kw name="Length Should Be" library="BuiltIn">
                                <arg>${response}</arg>
                                <arg>${n}</arg>
                                <doc>Verifies that the length of the given item is correct.</doc>
                                <msg timestamp="20210830 17:36:39.374" level="INFO">Length is 7</msg>
                                <msg timestamp="20210830 17:36:39.376" level="FAIL">Length of '[{'name': 'Keyword
                                    Airplane In The Clouds', 'doc': '', 'args': '', 'tags': ['☁️⛅️☁️✈️☁️☁️'], 'id': 4,
                                    'synopsis': '', 'html_doc': '', 'arg_string': '', 'collection': {'id': 3, 'name':
                                    'ResourceLibrary2'}}, {'name': 'Keyword Ghost', 'doc': '', 'args': '', 'tags':
                                    ['👻'], 'id': 2, 'synopsis': '', 'html_doc': '', 'arg_string': '', 'collection':
                                    {'id': 2, 'name': 'ResourceLibrary1'}}, {'name': 'Keyword No Tag', 'doc': '',
                                    'args': '', 'tags': [], 'id': 1, 'synopsis': '', 'html_doc': '', 'arg_string': '',
                                    'collection': {'id': 1, 'name': 'PyLibrary'}}, {'name': 'Keyword No Tag', 'doc': '',
                                    'args': '', 'tags': [], 'id': 5, 'synopsis': '', 'html_doc': '', 'arg_string': '',
                                    'collection': {'id': 3, 'name': 'ResourceLibrary2'}}, {'name': 'Keyword Rocket',
                                    'doc': '', 'args': '', 'tags': ['🚀'], 'id': 3, 'synopsis': '', 'html_doc': '',
                                    'arg_string': '', 'collection': {'id': 2, 'name': 'ResourceLibrary1'}}, {'name':
                                    'Keyword Rocket', 'doc': '', 'args': '', 'tags': ['🚀'], 'id': 6, 'synopsis': '',
                                    'html_doc': '', 'arg_string': '', 'collection': {'id': 3, 'name':
                                    'ResourceLibrary2'}}, {'name': 'Keyword TextualTag', 'doc': '', 'args': '', 'tags':
                                    ['STR_tag'], 'id': 7, 'synopsis': '', 'html_doc': '', 'arg_string': '',
                                    'collection': {'id': 3, 'name': 'ResourceLibrary2'}}]' should be 6 but is 7.
                                </msg>
                                <status status="FAIL" starttime="20210830 17:36:39.374"
                                        endtime="20210830 17:36:39.376"/>
                            </kw>
                            <status status="FAIL" starttime="20210830 17:36:39.348" endtime="20210830 17:36:39.378"/>
                        </kw>
                        <status status="FAIL" starttime="20210830 17:36:39.320" endtime="20210830 17:36:39.380"/>
                    </kw>
                    <status status="FAIL" starttime="20210830 17:36:37.147" endtime="20210830 17:36:39.381"/>
                </kw>
                <kw name="Run Cli With Options --load-mode=insert --no-installed-keywords --exclude 👻OR❤️NOT🚀 ${INITIAL_FIXTURES} And Expect Api To Have 3 Collections And 8 Keywords"
                    sourcename="Run Cli With Options ${options} And Expect Api To Have ${n} Collections And ${m} Keywords">
                    <doc>Run pkg from CLI and expect a certain amount of collections
                        and keywords
                    </doc>
                    <kw name="Run Cli Package With Options" library="keywords">
                        <arg>${options}</arg>
                        <doc>Attempt to run the rfhub2-cli package with the given options
                            The stdout of the process will be in a test suite
                            variable named ${output}
                        </doc>
                        <kw name="Run" library="OperatingSystem">
                            <var>${output}</var>
                            <arg>${ACTIVATE_VENV} rfhub2-cli -a http://${HOST}:8000 ${options}</arg>
                            <doc>Runs the given command in the system and returns the output.</doc>
                            <msg timestamp="20210830 17:36:39.536" level="INFO">Running command ' rfhub2-cli -a
                                http://127.0.0.1:8000 --load-mode=insert --no-installed-keywords --exclude 👻OR❤️NOT🚀
                                C:\repo\rfhub2\tests\acceptance\resources\..\..\fixtures/initial/ 2&gt;&amp;1'.
                            </msg>
                            <msg timestamp="20210830 17:36:41.724" level="INFO">${output} = PyLibrary library with 3
                                keywords loaded.
                                ResourceLibrary1 library with 3 keywords loaded.
                                ResourceLibrary2 library with 5 keywords loaded.

                                Successfully loaded 3 collections with 11 keywords.
                            </msg>
                            <status status="PASS" starttime="20210830 17:36:39.383" endtime="20210830 17:36:41.724"/>
                        </kw>
                        <kw name="Set Suite Variable" library="BuiltIn">
                            <arg>${output}</arg>
                            <doc>Makes a variable available everywhere within the scope of the current suite.</doc>
                            <msg timestamp="20210830 17:36:41.725" level="INFO">${output} = PyLibrary library with 3
                                keywords loaded.
                                ResourceLibrary1 library with 3 keywords loaded.
                                ResourceLibrary2 library with 5 keywords loaded.

                                Successfully loaded 3 collections with 11 keywords.
                            </msg>
                            <status status="PASS" starttime="20210830 17:36:41.724" endtime="20210830 17:36:41.725"/>
                        </kw>
                        <status status="PASS" starttime="20210830 17:36:39.382" endtime="20210830 17:36:41.725"/>
                    </kw>
                    <kw name="Api Should Have ${n} Collections And ${m} Keywords"
                        sourcename="Api Should Have ${n} Collections And ${m} Keywords">
                        <kw name="collections Endpoint Should Have ${n} Items" library="keywords"
                            sourcename="${endpoint} Endpoint Should Have ${n} Items">
                            <kw name="Get Request For Endpoint" library="keywords">
                                <var>${response}</var>
                                <arg>endpoint=${endpoint}</arg>
                                <kw name="Create Session" library="RequestsLibrary">
                                    <arg>tmp</arg>
                                    <arg>http://${HOST}:8000/api/v1</arg>
                                    <doc>Create Session: create a HTTP session to a server</doc>
                                    <msg timestamp="20210830 17:36:41.728" level="INFO">Creating Session using :
                                        alias=tmp, url=http://127.0.0.1:8000/api/v1, headers={}, cookies={}, auth=None,
                                        timeout=None, proxies=None, verify=False, debug=0
                                    </msg>
                                    <status status="PASS" starttime="20210830 17:36:41.728"
                                            endtime="20210830 17:36:41.729"/>
                                </kw>
                                <kw name="Get On Session" library="RequestsLibrary">
                                    <var>${response}</var>
                                    <arg>tmp</arg>
                                    <arg>${endpoint}/</arg>
                                    <arg>params=${params}</arg>
                                    <doc>Sends a GET request on a previously created HTTP Session.</doc>
                                    <msg timestamp="20210830 17:36:41.749" level="INFO">GET Request :
                                        url=http://127.0.0.1:8000/api/v1/collections/?None
                                        path_url=/api/v1/collections/?None
                                        headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip,
                                        deflate', 'Accept': '*/*', 'Connection': 'keep-alive'}
                                        body=None
                                    </msg>
                                    <msg timestamp="20210830 17:36:41.749" level="INFO">GET Response :
                                        url=http://127.0.0.1:8000/api/v1/collections/?None
                                        status=200, reason=OK
                                        headers={'date': 'Mon, 30 Aug 2021 15:36:41 GMT', 'server': 'uvicorn',
                                        'content-length': '2672', 'content-type': 'application/json'}
                                        body=[{"name":"PyLibrary","type":"LIBRARY","version":"1.0.0","scope":"TEST","named_args":null,"path":"C:\\repo\\rfhub2\\tests\\acceptance\\resources\\..\\..\\fixtures\\initial\\PyLibrary","doc":"Documentation
                                        for library
                                        ``PyLibrary``.","doc_format":"ROBOT","id":1,"keywords":[{"name":"Keyword Heart
                                        Engine","doc":"","args":"","tags":["❤️","🚂"],"id":1,"synopsis":"","html_doc":"","arg_string":""},{"name":"Keyword
                                        Heart
                                        Skull","doc":"","args":"","tags":["❤️","💀"],"id":2,"synopsis":"","html_doc":"","arg_string":""},{"name":"Keyword
                                        No
                                        Tag","doc":"","args":"","tags":[],"id":3,"synopsis":"","html_doc":"","arg_string":""}],"synopsis":"Documentation
                                        for library ``PyLibrary``.","html_doc":"&lt;p&gt;Documentation for library &lt;code&gt;PyLibrary&lt;/code&gt;.&lt;/p&gt;"},{"name":"ResourceLibrary1","type":"RESOURCE","version":"","scope":"GLOBAL","named_args":null,"path":"C:\\repo\\rfhub2\\tests\\acceptance\\resources\\..\\..\\fixtures\\initial\\ResourceLibrary1.resource","doc":"Documentation
                                        for resource file
                                        ``ResourceLibrary1``.","doc_format":"ROBOT","id":2,"keywords":[{"name":"Keyword
                                        Ghost","doc":"","args":"","tags":["👻"],"id":4,"synopsis":"","html_doc":"","arg_string":""},{"name":"Keyword
                                        Ghost Heart
                                        Rocket","doc":"","args":"","tags":["❤️","👻","🚀"],"id":5,"synopsis":"","html_doc":"","arg_string":""},{"name":"Keyword
                                        Rocket","doc":"","args":"","tags":["🚀"],"id":6,"synopsis":"","html_doc":"","arg_string":""}],"synopsis":"Documentation
                                        for resource file ``ResourceLibrary1``.","html_doc":"&lt;p&gt;Documentation for
                                        resource file &lt;code&gt;ResourceLibrary1&lt;/code&gt;.&lt;/p&gt;"},{"name":"ResourceLibrary2","type":"RESOURCE","version":"","scope":"GLOBAL","named_args":null,"path":"C:\\repo\\rfhub2\\tests\\acceptance\\resources\\..\\..\\fixtures\\initial\\ResourceLibrary2.resource","doc":"Documentation
                                        for resource file
                                        ``ResourceLibrary2``.","doc_format":"ROBOT","id":3,"keywords":[{"name":"Keyword
                                        Airplane In The
                                        Clouds","doc":"","args":"","tags":["☁️⛅️☁️✈️☁️☁️"],"id":7,"synopsis":"","html_doc":"","arg_string":""},{"name":"Keyword
                                        No
                                        Tag","doc":"","args":"","tags":[],"id":8,"synopsis":"","html_doc":"","arg_string":""},{"name":"Keyword
                                        Rocket","doc":"","args":"","tags":["🚀"],"id":9,"synopsis":"","html_doc":"","arg_string":""},{"name":"Keyword
                                        Rocket Moon
                                        Heart","doc":"","args":"","tags":["❤️","🌑","🚀"],"id":10,"synopsis":"","html_doc":"","arg_string":""},{"name":"Keyword
                                        TextualTag","doc":"","args":"","tags":["STR_tag"],"id":11,"synopsis":"","html_doc":"","arg_string":""}],"synopsis":"Documentation
                                        for resource file ``ResourceLibrary2``.","html_doc":"&lt;p&gt;Documentation for
                                        resource file &lt;code&gt;ResourceLibrary2&lt;/code&gt;.&lt;/p&gt;"}]
                                    </msg>
                                    <msg timestamp="20210830 17:36:41.750" level="INFO">${response} = &lt;Response [200]&gt;</msg>
                                    <status status="PASS" starttime="20210830 17:36:41.729"
                                            endtime="20210830 17:36:41.750"/>
                                </kw>
                                <kw name="Should Be Equal As Integers" library="BuiltIn">
                                    <arg>${response.status_code}</arg>
                                    <arg>200</arg>
                                    <doc>Fails if objects are unequal after converting them to integers.</doc>
                                    <msg timestamp="20210830 17:36:41.752" level="INFO">Argument types are:
                                        &lt;class 'int'&gt;
                                        &lt;type 'unicode'&gt;
                                    </msg>
                                    <status status="PASS" starttime="20210830 17:36:41.750"
                                            endtime="20210830 17:36:41.753"/>
                                </kw>
                                <msg timestamp="20210830 17:36:41.755" level="INFO">${response} = [{'name': 'PyLibrary',
                                    'type': 'LIBRARY', 'version': '1.0.0', 'scope': 'TEST', 'named_args': None, 'path':
                                    'C:\\repo\\rfhub2\\tests\\acceptance\\resources\\..\\..\\fixtures\\initial\\PyLibrary',
                                    'doc'...
                                </msg>
                                <status status="PASS" starttime="20210830 17:36:41.727"
                                        endtime="20210830 17:36:41.755"/>
                            </kw>
                            <kw name="Length Should Be" library="BuiltIn">
                                <arg>${response}</arg>
                                <arg>${n}</arg>
                                <doc>Verifies that the length of the given item is correct.</doc>
                                <msg timestamp="20210830 17:36:41.756" level="INFO">Length is 3</msg>
                                <status status="PASS" starttime="20210830 17:36:41.755"
                                        endtime="20210830 17:36:41.756"/>
                            </kw>
                            <status status="PASS" starttime="20210830 17:36:41.726" endtime="20210830 17:36:41.756"/>
                        </kw>
                        <kw name="keywords Endpoint Should Have ${m} Items" library="keywords"
                            sourcename="${endpoint} Endpoint Should Have ${n} Items">
                            <kw name="Get Request For Endpoint" library="keywords">
                                <var>${response}</var>
                                <arg>endpoint=${endpoint}</arg>
                                <kw name="Create Session" library="RequestsLibrary">
                                    <arg>tmp</arg>
                                    <arg>http://${HOST}:8000/api/v1</arg>
                                    <doc>Create Session: create a HTTP session to a server</doc>
                                    <msg timestamp="20210830 17:36:41.758" level="INFO">Creating Session using :
                                        alias=tmp, url=http://127.0.0.1:8000/api/v1, headers={}, cookies={}, auth=None,
                                        timeout=None, proxies=None, verify=False, debug=0
                                    </msg>
                                    <status status="PASS" starttime="20210830 17:36:41.758"
                                            endtime="20210830 17:36:41.758"/>
                                </kw>
                                <kw name="Get On Session" library="RequestsLibrary">
                                    <var>${response}</var>
                                    <arg>tmp</arg>
                                    <arg>${endpoint}/</arg>
                                    <arg>params=${params}</arg>
                                    <doc>Sends a GET request on a previously created HTTP Session.</doc>
                                    <msg timestamp="20210830 17:36:41.779" level="INFO">GET Request :
                                        url=http://127.0.0.1:8000/api/v1/keywords/?None
                                        path_url=/api/v1/keywords/?None
                                        headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip,
                                        deflate', 'Accept': '*/*', 'Connection': 'keep-alive'}
                                        body=None
                                    </msg>
                                    <msg timestamp="20210830 17:36:41.779" level="INFO">GET Response :
                                        url=http://127.0.0.1:8000/api/v1/keywords/?None
                                        status=200, reason=OK
                                        headers={'date': 'Mon, 30 Aug 2021 15:36:41 GMT', 'server': 'uvicorn',
                                        'content-length': '1868', 'content-type': 'application/json'}
                                        body=[{"name":"Keyword Airplane In The
                                        Clouds","doc":"","args":"","tags":["☁️⛅️☁️✈️☁️☁️"],"id":7,"synopsis":"","html_doc":"","arg_string":"","collection":{"id":3,"name":"ResourceLibrary2"}},{"name":"Keyword
                                        Ghost","doc":"","args":"","tags":["👻"],"id":4,"synopsis":"","html_doc":"","arg_string":"","collection":{"id":2,"name":"ResourceLibrary1"}},{"name":"Keyword
                                        Ghost Heart
                                        Rocket","doc":"","args":"","tags":["❤️","👻","🚀"],"id":5,"synopsis":"","html_doc":"","arg_string":"","collection":{"id":2,"name":"ResourceLibrary1"}},{"name":"Keyword
                                        Heart
                                        Engine","doc":"","args":"","tags":["❤️","🚂"],"id":1,"synopsis":"","html_doc":"","arg_string":"","collection":{"id":1,"name":"PyLibrary"}},{"name":"Keyword
                                        Heart
                                        Skull","doc":"","args":"","tags":["❤️","💀"],"id":2,"synopsis":"","html_doc":"","arg_string":"","collection":{"id":1,"name":"PyLibrary"}},{"name":"Keyword
                                        No
                                        Tag","doc":"","args":"","tags":[],"id":3,"synopsis":"","html_doc":"","arg_string":"","collection":{"id":1,"name":"PyLibrary"}},{"name":"Keyword
                                        No
                                        Tag","doc":"","args":"","tags":[],"id":8,"synopsis":"","html_doc":"","arg_string":"","collection":{"id":3,"name":"ResourceLibrary2"}},{"name":"Keyword
                                        Rocket","doc":"","args":"","tags":["🚀"],"id":6,"synopsis":"","html_doc":"","arg_string":"","collection":{"id":2,"name":"ResourceLibrary1"}},{"name":"Keyword
                                        Rocket","doc":"","args":"","tags":["🚀"],"id":9,"synopsis":"","html_doc":"","arg_string":"","collection":{"id":3,"name":"ResourceLibrary2"}},{"name":"Keyword
                                        Rocket Moon
                                        Heart","doc":"","args":"","tags":["❤️","🌑","🚀"],"id":10,"synopsis":"","html_doc":"","arg_string":"","collection":{"id":3,"name":"ResourceLibrary2"}},{"name":"Keyword
                                        TextualTag","doc":"","args":"","tags":["STR_tag"],"id":11,"synopsis":"","html_doc":"","arg_string":"","collection":{"id":3,"name":"ResourceLibrary2"}}]
                                    </msg>
                                    <msg timestamp="20210830 17:36:41.779" level="INFO">${response} = &lt;Response [200]&gt;</msg>
                                    <status status="PASS" starttime="20210830 17:36:41.759"
                                            endtime="20210830 17:36:41.779"/>
                                </kw>
                                <kw name="Should Be Equal As Integers" library="BuiltIn">
                                    <arg>${response.status_code}</arg>
                                    <arg>200</arg>
                                    <doc>Fails if objects are unequal after converting them to integers.</doc>
                                    <msg timestamp="20210830 17:36:41.782" level="INFO">Argument types are:
                                        &lt;class 'int'&gt;
                                        &lt;type 'unicode'&gt;
                                    </msg>
                                    <status status="PASS" starttime="20210830 17:36:41.780"
                                            endtime="20210830 17:36:41.782"/>
                                </kw>
                                <msg timestamp="20210830 17:36:41.784" level="INFO">${response} = [{'name': 'Keyword
                                    Airplane In The Clouds', 'doc': '', 'args': '', 'tags': ['☁️⛅️☁️✈️☁️☁️'], 'id': 7,
                                    'synopsis': '', 'html_doc': '', 'arg_string': '', 'collection': {'id': 3, 'name':
                                    'ResourceLibrary...
                                </msg>
                                <status status="PASS" starttime="20210830 17:36:41.757"
                                        endtime="20210830 17:36:41.784"/>
                            </kw>
                            <kw name="Length Should Be" library="BuiltIn">
                                <arg>${response}</arg>
                                <arg>${n}</arg>
                                <doc>Verifies that the length of the given item is correct.</doc>
                                <msg timestamp="20210830 17:36:41.785" level="INFO">Length is 11</msg>
                                <msg timestamp="20210830 17:36:41.786" level="FAIL">Length of '[{'name': 'Keyword
                                    Airplane In The Clouds', 'doc': '', 'args': '', 'tags': ['☁️⛅️☁️✈️☁️☁️'], 'id': 7,
                                    'synopsis': '', 'html_doc': '', 'arg_string': '', 'collection': {'id': 3, 'name':
                                    'ResourceLibrary2'}}, {'name': 'Keyword Ghost', 'doc': '', 'args': '', 'tags':
                                    ['👻'], 'id': 4, 'synopsis': '', 'html_doc': '', 'arg_string': '', 'collection':
                                    {'id': 2, 'name': 'ResourceLibrary1'}}, {'name': 'Keyword Ghost Heart Rocket',
                                    'doc': '', 'args': '', 'tags': ['❤️', '👻', '🚀'], 'id': 5, 'synopsis': '',
                                    'html_doc': '', 'arg_string': '', 'collection': {'id': 2, 'name':
                                    'ResourceLibrary1'}}, {'name': 'Keyword Heart Engine', 'doc': '', 'args': '',
                                    'tags': ['❤️', '🚂'], 'id': 1, 'synopsis': '', 'html_doc': '', 'arg_string': '',
                                    'collection': {'id': 1, 'name': 'PyLibrary'}}, {'name': 'Keyword Heart Skull',
                                    'doc': '', 'args': '', 'tags': ['❤️', '💀'], 'id': 2, 'synopsis': '', 'html_doc':
                                    '', 'arg_string': '', 'collection': {'id': 1, 'name': 'PyLibrary'}}, {'name':
                                    'Keyword No Tag', 'doc': '', 'args': '', 'tags': [], 'id': 3, 'synopsis': '',
                                    'html_doc': '', 'arg_string': '', 'collection': {'id': 1, 'name': 'PyLibrary'}},
                                    {'name': 'Keyword No Tag', 'doc': '', 'args': '', 'tags': [], 'id': 8, 'synopsis':
                                    '', 'html_doc': '', 'arg_string': '', 'collection': {'id': 3, 'name':
                                    'ResourceLibrary2'}}, {'name': 'Keyword Rocket', 'doc': '', 'args': '', 'tags':
                                    ['🚀'], 'id': 6, 'synopsis': '', 'html_doc': '', 'arg_string': '', 'collection':
                                    {'id': 2, 'name': 'ResourceLibrary1'}}, {'name': 'Keyword Rocket', 'doc': '',
                                    'args': '', 'tags': ['🚀'], 'id': 9, 'synopsis': '', 'html_doc': '', 'arg_string':
                                    '', 'collection': {'id': 3, 'name': 'ResourceLibrary2'}}, {'name': 'Keyword Rocket
                                    Moon Heart', 'doc': '', 'args': '', 'tags': ['❤️', '🌑', '🚀'], 'id': 10,
                                    'synopsis': '', 'html_doc': '', 'arg_string': '', 'collection': {'id': 3, 'name':
                                    'ResourceLibrary2'}}, {'name': 'Keyword TextualTag', 'doc': '', 'args': '', 'tags':
                                    ['STR_tag'], 'id': 11, 'synopsis': '', 'html_doc': '', 'arg_string': '',
                                    'collection': {'id': 3, 'name': 'ResourceLibrary2'}}]' should be 8 but is 11.
                                </msg>
                                <status status="FAIL" starttime="20210830 17:36:41.785"
                                        endtime="20210830 17:36:41.786"/>
                            </kw>
                            <status status="FAIL" starttime="20210830 17:36:41.756" endtime="20210830 17:36:41.789"/>
                        </kw>
                        <status status="FAIL" starttime="20210830 17:36:41.726" endtime="20210830 17:36:41.790"/>
                    </kw>
                    <status status="FAIL" starttime="20210830 17:36:39.382" endtime="20210830 17:36:41.792"/>
                </kw>
                <kw name="Run Cli With Options --load-mode=insert --no-installed-keywords --exclude *⛅️*✈️* ${INITIAL_FIXTURES} And Expect Api To Have 3 Collections And 10 Keywords"
                    sourcename="Run Cli With Options ${options} And Expect Api To Have ${n} Collections And ${m} Keywords">
                    <doc>Run pkg from CLI and expect a certain amount of collections
                        and keywords
                    </doc>
                    <kw name="Run Cli Package With Options" library="keywords">
                        <arg>${options}</arg>
                        <doc>Attempt to run the rfhub2-cli package with the given options
                            The stdout of the process will be in a test suite
                            variable named ${output}
                        </doc>
                        <kw name="Run" library="OperatingSystem">
                            <var>${output}</var>
                            <arg>${ACTIVATE_VENV} rfhub2-cli -a http://${HOST}:8000 ${options}</arg>
                            <doc>Runs the given command in the system and returns the output.</doc>
                            <msg timestamp="20210830 17:36:41.948" level="INFO">Running command ' rfhub2-cli -a
                                http://127.0.0.1:8000 --load-mode=insert --no-installed-keywords --exclude *⛅️*✈️*
                                C:\repo\rfhub2\tests\acceptance\resources\..\..\fixtures/initial/ 2&gt;&amp;1'.
                            </msg>
                            <msg timestamp="20210830 17:36:43.740" level="INFO">${output} = Traceback (most recent call
                                last):
                                File "C:\Program Files (x86)\Python36-32\Scripts\rfhub2-cli-script.py", line 11, in &lt;module&gt;
                                load_entry_point('rfhub2', 'console_scripts', 'rfhub2-cli')()
                                Fi...
                            </msg>
                            <status status="PASS" starttime="20210830 17:36:41.794" endtime="20210830 17:36:43.740"/>
                        </kw>
                        <kw name="Set Suite Variable" library="BuiltIn">
                            <arg>${output}</arg>
                            <doc>Makes a variable available everywhere within the scope of the current suite.</doc>
                            <msg timestamp="20210830 17:36:43.741" level="INFO">${output} = Traceback (most recent call
                                last):
                                File "C:\Program Files (x86)\Python36-32\Scripts\rfhub2-cli-script.py", line 11, in &lt;module&gt;
                                load_entry_point('rfhub2', 'console_scripts', 'rfhub2-cli')()
                                Fi...
                            </msg>
                            <status status="PASS" starttime="20210830 17:36:43.740" endtime="20210830 17:36:43.741"/>
                        </kw>
                        <status status="PASS" starttime="20210830 17:36:41.793" endtime="20210830 17:36:43.741"/>
                    </kw>
                    <kw name="Api Should Have ${n} Collections And ${m} Keywords"
                        sourcename="Api Should Have ${n} Collections And ${m} Keywords">
                        <kw name="collections Endpoint Should Have ${n} Items" library="keywords"
                            sourcename="${endpoint} Endpoint Should Have ${n} Items">
                            <kw name="Get Request For Endpoint" library="keywords">
                                <var>${response}</var>
                                <arg>endpoint=${endpoint}</arg>
                                <kw name="Create Session" library="RequestsLibrary">
                                    <arg>tmp</arg>
                                    <arg>http://${HOST}:8000/api/v1</arg>
                                    <doc>Create Session: create a HTTP session to a server</doc>
                                    <msg timestamp="20210830 17:36:43.744" level="INFO">Creating Session using :
                                        alias=tmp, url=http://127.0.0.1:8000/api/v1, headers={}, cookies={}, auth=None,
                                        timeout=None, proxies=None, verify=False, debug=0
                                    </msg>
                                    <status status="PASS" starttime="20210830 17:36:43.744"
                                            endtime="20210830 17:36:43.745"/>
                                </kw>
                                <kw name="Get On Session" library="RequestsLibrary">
                                    <var>${response}</var>
                                    <arg>tmp</arg>
                                    <arg>${endpoint}/</arg>
                                    <arg>params=${params}</arg>
                                    <doc>Sends a GET request on a previously created HTTP Session.</doc>
                                    <msg timestamp="20210830 17:36:43.766" level="INFO">GET Request :
                                        url=http://127.0.0.1:8000/api/v1/collections/?None
                                        path_url=/api/v1/collections/?None
                                        headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip,
                                        deflate', 'Accept': '*/*', 'Connection': 'keep-alive'}
                                        body=None
                                    </msg>
                                    <msg timestamp="20210830 17:36:43.766" level="INFO">GET Response :
                                        url=http://127.0.0.1:8000/api/v1/collections/?None
                                        status=200, reason=OK
                                        headers={'date': 'Mon, 30 Aug 2021 15:36:43 GMT', 'server': 'uvicorn',
                                        'content-length': '2672', 'content-type': 'application/json'}
                                        body=[{"name":"PyLibrary","type":"LIBRARY","version":"1.0.0","scope":"TEST","named_args":null,"path":"C:\\repo\\rfhub2\\tests\\acceptance\\resources\\..\\..\\fixtures\\initial\\PyLibrary","doc":"Documentation
                                        for library
                                        ``PyLibrary``.","doc_format":"ROBOT","id":1,"keywords":[{"name":"Keyword Heart
                                        Engine","doc":"","args":"","tags":["❤️","🚂"],"id":1,"synopsis":"","html_doc":"","arg_string":""},{"name":"Keyword
                                        Heart
                                        Skull","doc":"","args":"","tags":["❤️","💀"],"id":2,"synopsis":"","html_doc":"","arg_string":""},{"name":"Keyword
                                        No
                                        Tag","doc":"","args":"","tags":[],"id":3,"synopsis":"","html_doc":"","arg_string":""}],"synopsis":"Documentation
                                        for library ``PyLibrary``.","html_doc":"&lt;p&gt;Documentation for library &lt;code&gt;PyLibrary&lt;/code&gt;.&lt;/p&gt;"},{"name":"ResourceLibrary1","type":"RESOURCE","version":"","scope":"GLOBAL","named_args":null,"path":"C:\\repo\\rfhub2\\tests\\acceptance\\resources\\..\\..\\fixtures\\initial\\ResourceLibrary1.resource","doc":"Documentation
                                        for resource file
                                        ``ResourceLibrary1``.","doc_format":"ROBOT","id":2,"keywords":[{"name":"Keyword
                                        Ghost","doc":"","args":"","tags":["👻"],"id":4,"synopsis":"","html_doc":"","arg_string":""},{"name":"Keyword
                                        Ghost Heart
                                        Rocket","doc":"","args":"","tags":["❤️","👻","🚀"],"id":5,"synopsis":"","html_doc":"","arg_string":""},{"name":"Keyword
                                        Rocket","doc":"","args":"","tags":["🚀"],"id":6,"synopsis":"","html_doc":"","arg_string":""}],"synopsis":"Documentation
                                        for resource file ``ResourceLibrary1``.","html_doc":"&lt;p&gt;Documentation for
                                        resource file &lt;code&gt;ResourceLibrary1&lt;/code&gt;.&lt;/p&gt;"},{"name":"ResourceLibrary2","type":"RESOURCE","version":"","scope":"GLOBAL","named_args":null,"path":"C:\\repo\\rfhub2\\tests\\acceptance\\resources\\..\\..\\fixtures\\initial\\ResourceLibrary2.resource","doc":"Documentation
                                        for resource file
                                        ``ResourceLibrary2``.","doc_format":"ROBOT","id":3,"keywords":[{"name":"Keyword
                                        Airplane In The
                                        Clouds","doc":"","args":"","tags":["☁️⛅️☁️✈️☁️☁️"],"id":7,"synopsis":"","html_doc":"","arg_string":""},{"name":"Keyword
                                        No
                                        Tag","doc":"","args":"","tags":[],"id":8,"synopsis":"","html_doc":"","arg_string":""},{"name":"Keyword
                                        Rocket","doc":"","args":"","tags":["🚀"],"id":9,"synopsis":"","html_doc":"","arg_string":""},{"name":"Keyword
                                        Rocket Moon
                                        Heart","doc":"","args":"","tags":["❤️","🌑","🚀"],"id":10,"synopsis":"","html_doc":"","arg_string":""},{"name":"Keyword
                                        TextualTag","doc":"","args":"","tags":["STR_tag"],"id":11,"synopsis":"","html_doc":"","arg_string":""}],"synopsis":"Documentation
                                        for resource file ``ResourceLibrary2``.","html_doc":"&lt;p&gt;Documentation for
                                        resource file &lt;code&gt;ResourceLibrary2&lt;/code&gt;.&lt;/p&gt;"}]
                                    </msg>
                                    <msg timestamp="20210830 17:36:43.766" level="INFO">${response} = &lt;Response [200]&gt;</msg>
                                    <status status="PASS" starttime="20210830 17:36:43.745"
                                            endtime="20210830 17:36:43.766"/>
                                </kw>
                                <kw name="Should Be Equal As Integers" library="BuiltIn">
                                    <arg>${response.status_code}</arg>
                                    <arg>200</arg>
                                    <doc>Fails if objects are unequal after converting them to integers.</doc>
                                    <msg timestamp="20210830 17:36:43.769" level="INFO">Argument types are:
                                        &lt;class 'int'&gt;
                                        &lt;type 'unicode'&gt;
                                    </msg>
                                    <status status="PASS" starttime="20210830 17:36:43.766"
                                            endtime="20210830 17:36:43.769"/>
                                </kw>
                                <msg timestamp="20210830 17:36:43.771" level="INFO">${response} = [{'name': 'PyLibrary',
                                    'type': 'LIBRARY', 'version': '1.0.0', 'scope': 'TEST', 'named_args': None, 'path':
                                    'C:\\repo\\rfhub2\\tests\\acceptance\\resources\\..\\..\\fixtures\\initial\\PyLibrary',
                                    'doc'...
                                </msg>
                                <status status="PASS" starttime="20210830 17:36:43.743"
                                        endtime="20210830 17:36:43.771"/>
                            </kw>
                            <kw name="Length Should Be" library="BuiltIn">
                                <arg>${response}</arg>
                                <arg>${n}</arg>
                                <doc>Verifies that the length of the given item is correct.</doc>
                                <msg timestamp="20210830 17:36:43.772" level="INFO">Length is 3</msg>
                                <status status="PASS" starttime="20210830 17:36:43.771"
                                        endtime="20210830 17:36:43.772"/>
                            </kw>
                            <status status="PASS" starttime="20210830 17:36:43.742" endtime="20210830 17:36:43.772"/>
                        </kw>
                        <kw name="keywords Endpoint Should Have ${m} Items" library="keywords"
                            sourcename="${endpoint} Endpoint Should Have ${n} Items">
                            <kw name="Get Request For Endpoint" library="keywords">
                                <var>${response}</var>
                                <arg>endpoint=${endpoint}</arg>
                                <kw name="Create Session" library="RequestsLibrary">
                                    <arg>tmp</arg>
                                    <arg>http://${HOST}:8000/api/v1</arg>
                                    <doc>Create Session: create a HTTP session to a server</doc>
                                    <msg timestamp="20210830 17:36:43.774" level="INFO">Creating Session using :
                                        alias=tmp, url=http://127.0.0.1:8000/api/v1, headers={}, cookies={}, auth=None,
                                        timeout=None, proxies=None, verify=False, debug=0
                                    </msg>
                                    <status status="PASS" starttime="20210830 17:36:43.774"
                                            endtime="20210830 17:36:43.775"/>
                                </kw>
                                <kw name="Get On Session" library="RequestsLibrary">
                                    <var>${response}</var>
                                    <arg>tmp</arg>
                                    <arg>${endpoint}/</arg>
                                    <arg>params=${params}</arg>
                                    <doc>Sends a GET request on a previously created HTTP Session.</doc>
                                    <msg timestamp="20210830 17:36:43.796" level="INFO">GET Request :
                                        url=http://127.0.0.1:8000/api/v1/keywords/?None
                                        path_url=/api/v1/keywords/?None
                                        headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip,
                                        deflate', 'Accept': '*/*', 'Connection': 'keep-alive'}
                                        body=None
                                    </msg>
                                    <msg timestamp="20210830 17:36:43.796" level="INFO">GET Response :
                                        url=http://127.0.0.1:8000/api/v1/keywords/?None
                                        status=200, reason=OK
                                        headers={'date': 'Mon, 30 Aug 2021 15:36:43 GMT', 'server': 'uvicorn',
                                        'content-length': '1868', 'content-type': 'application/json'}
                                        body=[{"name":"Keyword Airplane In The
                                        Clouds","doc":"","args":"","tags":["☁️⛅️☁️✈️☁️☁️"],"id":7,"synopsis":"","html_doc":"","arg_string":"","collection":{"id":3,"name":"ResourceLibrary2"}},{"name":"Keyword
                                        Ghost","doc":"","args":"","tags":["👻"],"id":4,"synopsis":"","html_doc":"","arg_string":"","collection":{"id":2,"name":"ResourceLibrary1"}},{"name":"Keyword
                                        Ghost Heart
                                        Rocket","doc":"","args":"","tags":["❤️","👻","🚀"],"id":5,"synopsis":"","html_doc":"","arg_string":"","collection":{"id":2,"name":"ResourceLibrary1"}},{"name":"Keyword
                                        Heart
                                        Engine","doc":"","args":"","tags":["❤️","🚂"],"id":1,"synopsis":"","html_doc":"","arg_string":"","collection":{"id":1,"name":"PyLibrary"}},{"name":"Keyword
                                        Heart
                                        Skull","doc":"","args":"","tags":["❤️","💀"],"id":2,"synopsis":"","html_doc":"","arg_string":"","collection":{"id":1,"name":"PyLibrary"}},{"name":"Keyword
                                        No
                                        Tag","doc":"","args":"","tags":[],"id":3,"synopsis":"","html_doc":"","arg_string":"","collection":{"id":1,"name":"PyLibrary"}},{"name":"Keyword
                                        No
                                        Tag","doc":"","args":"","tags":[],"id":8,"synopsis":"","html_doc":"","arg_string":"","collection":{"id":3,"name":"ResourceLibrary2"}},{"name":"Keyword
                                        Rocket","doc":"","args":"","tags":["🚀"],"id":6,"synopsis":"","html_doc":"","arg_string":"","collection":{"id":2,"name":"ResourceLibrary1"}},{"name":"Keyword
                                        Rocket","doc":"","args":"","tags":["🚀"],"id":9,"synopsis":"","html_doc":"","arg_string":"","collection":{"id":3,"name":"ResourceLibrary2"}},{"name":"Keyword
                                        Rocket Moon
                                        Heart","doc":"","args":"","tags":["❤️","🌑","🚀"],"id":10,"synopsis":"","html_doc":"","arg_string":"","collection":{"id":3,"name":"ResourceLibrary2"}},{"name":"Keyword
                                        TextualTag","doc":"","args":"","tags":["STR_tag"],"id":11,"synopsis":"","html_doc":"","arg_string":"","collection":{"id":3,"name":"ResourceLibrary2"}}]
                                    </msg>
                                    <msg timestamp="20210830 17:36:43.796" level="INFO">${response} = &lt;Response [200]&gt;</msg>
                                    <status status="PASS" starttime="20210830 17:36:43.775"
                                            endtime="20210830 17:36:43.796"/>
                                </kw>
                                <kw name="Should Be Equal As Integers" library="BuiltIn">
                                    <arg>${response.status_code}</arg>
                                    <arg>200</arg>
                                    <doc>Fails if objects are unequal after converting them to integers.</doc>
                                    <msg timestamp="20210830 17:36:43.798" level="INFO">Argument types are:
                                        &lt;class 'int'&gt;
                                        &lt;type 'unicode'&gt;
                                    </msg>
                                    <status status="PASS" starttime="20210830 17:36:43.796"
                                            endtime="20210830 17:36:43.799"/>
                                </kw>
                                <msg timestamp="20210830 17:36:43.801" level="INFO">${response} = [{'name': 'Keyword
                                    Airplane In The Clouds', 'doc': '', 'args': '', 'tags': ['☁️⛅️☁️✈️☁️☁️'], 'id': 7,
                                    'synopsis': '', 'html_doc': '', 'arg_string': '', 'collection': {'id': 3, 'name':
                                    'ResourceLibrary...
                                </msg>
                                <status status="PASS" starttime="20210830 17:36:43.773"
                                        endtime="20210830 17:36:43.801"/>
                            </kw>
                            <kw name="Length Should Be" library="BuiltIn">
                                <arg>${response}</arg>
                                <arg>${n}</arg>
                                <doc>Verifies that the length of the given item is correct.</doc>
                                <msg timestamp="20210830 17:36:43.802" level="INFO">Length is 11</msg>
                                <msg timestamp="20210830 17:36:43.803" level="FAIL">Length of '[{'name': 'Keyword
                                    Airplane In The Clouds', 'doc': '', 'args': '', 'tags': ['☁️⛅️☁️✈️☁️☁️'], 'id': 7,
                                    'synopsis': '', 'html_doc': '', 'arg_string': '', 'collection': {'id': 3, 'name':
                                    'ResourceLibrary2'}}, {'name': 'Keyword Ghost', 'doc': '', 'args': '', 'tags':
                                    ['👻'], 'id': 4, 'synopsis': '', 'html_doc': '', 'arg_string': '', 'collection':
                                    {'id': 2, 'name': 'ResourceLibrary1'}}, {'name': 'Keyword Ghost Heart Rocket',
                                    'doc': '', 'args': '', 'tags': ['❤️', '👻', '🚀'], 'id': 5, 'synopsis': '',
                                    'html_doc': '', 'arg_string': '', 'collection': {'id': 2, 'name':
                                    'ResourceLibrary1'}}, {'name': 'Keyword Heart Engine', 'doc': '', 'args': '',
                                    'tags': ['❤️', '🚂'], 'id': 1, 'synopsis': '', 'html_doc': '', 'arg_string': '',
                                    'collection': {'id': 1, 'name': 'PyLibrary'}}, {'name': 'Keyword Heart Skull',
                                    'doc': '', 'args': '', 'tags': ['❤️', '💀'], 'id': 2, 'synopsis': '', 'html_doc':
                                    '', 'arg_string': '', 'collection': {'id': 1, 'name': 'PyLibrary'}}, {'name':
                                    'Keyword No Tag', 'doc': '', 'args': '', 'tags': [], 'id': 3, 'synopsis': '',
                                    'html_doc': '', 'arg_string': '', 'collection': {'id': 1, 'name': 'PyLibrary'}},
                                    {'name': 'Keyword No Tag', 'doc': '', 'args': '', 'tags': [], 'id': 8, 'synopsis':
                                    '', 'html_doc': '', 'arg_string': '', 'collection': {'id': 3, 'name':
                                    'ResourceLibrary2'}}, {'name': 'Keyword Rocket', 'doc': '', 'args': '', 'tags':
                                    ['🚀'], 'id': 6, 'synopsis': '', 'html_doc': '', 'arg_string': '', 'collection':
                                    {'id': 2, 'name': 'ResourceLibrary1'}}, {'name': 'Keyword Rocket', 'doc': '',
                                    'args': '', 'tags': ['🚀'], 'id': 9, 'synopsis': '', 'html_doc': '', 'arg_string':
                                    '', 'collection': {'id': 3, 'name': 'ResourceLibrary2'}}, {'name': 'Keyword Rocket
                                    Moon Heart', 'doc': '', 'args': '', 'tags': ['❤️', '🌑', '🚀'], 'id': 10,
                                    'synopsis': '', 'html_doc': '', 'arg_string': '', 'collection': {'id': 3, 'name':
                                    'ResourceLibrary2'}}, {'name': 'Keyword TextualTag', 'doc': '', 'args': '', 'tags':
                                    ['STR_tag'], 'id': 11, 'synopsis': '', 'html_doc': '', 'arg_string': '',
                                    'collection': {'id': 3, 'name': 'ResourceLibrary2'}}]' should be 10 but is 11.
                                </msg>
                                <status status="FAIL" starttime="20210830 17:36:43.801"
                                        endtime="20210830 17:36:43.803"/>
                            </kw>
                            <status status="FAIL" starttime="20210830 17:36:43.773" endtime="20210830 17:36:43.805"/>
                        </kw>
                        <status status="FAIL" starttime="20210830 17:36:43.741" endtime="20210830 17:36:43.807"/>
                    </kw>
                    <status status="FAIL" starttime="20210830 17:36:41.792" endtime="20210830 17:36:43.808"/>
                </kw>
                <kw name="Run Cli With Options --load-mode=insert --no-installed-keywords --exclude *⛅️?✈️? ${INITIAL_FIXTURES} And Expect Api To Have 3 Collections And 11 Keywords"
                    sourcename="Run Cli With Options ${options} And Expect Api To Have ${n} Collections And ${m} Keywords">
                    <doc>Run pkg from CLI and expect a certain amount of collections
                        and keywords
                    </doc>
                    <kw name="Run Cli Package With Options" library="keywords">
                        <arg>${options}</arg>
                        <doc>Attempt to run the rfhub2-cli package with the given options
                            The stdout of the process will be in a test suite
                            variable named ${output}
                        </doc>
                        <kw name="Run" library="OperatingSystem">
                            <var>${output}</var>
                            <arg>${ACTIVATE_VENV} rfhub2-cli -a http://${HOST}:8000 ${options}</arg>
                            <doc>Runs the given command in the system and returns the output.</doc>
                            <msg timestamp="20210830 17:36:43.964" level="INFO">Running command ' rfhub2-cli -a
                                http://127.0.0.1:8000 --load-mode=insert --no-installed-keywords --exclude *⛅️?✈️?
                                C:\repo\rfhub2\tests\acceptance\resources\..\..\fixtures/initial/ 2&gt;&amp;1'.
                            </msg>
                            <msg timestamp="20210830 17:36:45.755" level="INFO">${output} = Traceback (most recent call
                                last):
                                File "C:\Program Files (x86)\Python36-32\Scripts\rfhub2-cli-script.py", line 11, in &lt;module&gt;
                                load_entry_point('rfhub2', 'console_scripts', 'rfhub2-cli')()
                                Fi...
                            </msg>
                            <status status="PASS" starttime="20210830 17:36:43.810" endtime="20210830 17:36:45.756"/>
                        </kw>
                        <kw name="Set Suite Variable" library="BuiltIn">
                            <arg>${output}</arg>
                            <doc>Makes a variable available everywhere within the scope of the current suite.</doc>
                            <msg timestamp="20210830 17:36:45.756" level="INFO">${output} = Traceback (most recent call
                                last):
                                File "C:\Program Files (x86)\Python36-32\Scripts\rfhub2-cli-script.py", line 11, in &lt;module&gt;
                                load_entry_point('rfhub2', 'console_scripts', 'rfhub2-cli')()
                                Fi...
                            </msg>
                            <status status="PASS" starttime="20210830 17:36:45.756" endtime="20210830 17:36:45.757"/>
                        </kw>
                        <status status="PASS" starttime="20210830 17:36:43.809" endtime="20210830 17:36:45.757"/>
                    </kw>
                    <kw name="Api Should Have ${n} Collections And ${m} Keywords"
                        sourcename="Api Should Have ${n} Collections And ${m} Keywords">
                        <kw name="collections Endpoint Should Have ${n} Items" library="keywords"
                            sourcename="${endpoint} Endpoint Should Have ${n} Items">
                            <kw name="Get Request For Endpoint" library="keywords">
                                <var>${response}</var>
                                <arg>endpoint=${endpoint}</arg>
                                <kw name="Create Session" library="RequestsLibrary">
                                    <arg>tmp</arg>
                                    <arg>http://${HOST}:8000/api/v1</arg>
                                    <doc>Create Session: create a HTTP session to a server</doc>
                                    <msg timestamp="20210830 17:36:45.760" level="INFO">Creating Session using :
                                        alias=tmp, url=http://127.0.0.1:8000/api/v1, headers={}, cookies={}, auth=None,
                                        timeout=None, proxies=None, verify=False, debug=0
                                    </msg>
                                    <status status="PASS" starttime="20210830 17:36:45.760"
                                            endtime="20210830 17:36:45.760"/>
                                </kw>
                                <kw name="Get On Session" library="RequestsLibrary">
                                    <var>${response}</var>
                                    <arg>tmp</arg>
                                    <arg>${endpoint}/</arg>
                                    <arg>params=${params}</arg>
                                    <doc>Sends a GET request on a previously created HTTP Session.</doc>
                                    <msg timestamp="20210830 17:36:45.780" level="INFO">GET Request :
                                        url=http://127.0.0.1:8000/api/v1/collections/?None
                                        path_url=/api/v1/collections/?None
                                        headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip,
                                        deflate', 'Accept': '*/*', 'Connection': 'keep-alive'}
                                        body=None
                                    </msg>
                                    <msg timestamp="20210830 17:36:45.780" level="INFO">GET Response :
                                        url=http://127.0.0.1:8000/api/v1/collections/?None
                                        status=200, reason=OK
                                        headers={'date': 'Mon, 30 Aug 2021 15:36:45 GMT', 'server': 'uvicorn',
                                        'content-length': '2672', 'content-type': 'application/json'}
                                        body=[{"name":"PyLibrary","type":"LIBRARY","version":"1.0.0","scope":"TEST","named_args":null,"path":"C:\\repo\\rfhub2\\tests\\acceptance\\resources\\..\\..\\fixtures\\initial\\PyLibrary","doc":"Documentation
                                        for library
                                        ``PyLibrary``.","doc_format":"ROBOT","id":1,"keywords":[{"name":"Keyword Heart
                                        Engine","doc":"","args":"","tags":["❤️","🚂"],"id":1,"synopsis":"","html_doc":"","arg_string":""},{"name":"Keyword
                                        Heart
                                        Skull","doc":"","args":"","tags":["❤️","💀"],"id":2,"synopsis":"","html_doc":"","arg_string":""},{"name":"Keyword
                                        No
                                        Tag","doc":"","args":"","tags":[],"id":3,"synopsis":"","html_doc":"","arg_string":""}],"synopsis":"Documentation
                                        for library ``PyLibrary``.","html_doc":"&lt;p&gt;Documentation for library &lt;code&gt;PyLibrary&lt;/code&gt;.&lt;/p&gt;"},{"name":"ResourceLibrary1","type":"RESOURCE","version":"","scope":"GLOBAL","named_args":null,"path":"C:\\repo\\rfhub2\\tests\\acceptance\\resources\\..\\..\\fixtures\\initial\\ResourceLibrary1.resource","doc":"Documentation
                                        for resource file
                                        ``ResourceLibrary1``.","doc_format":"ROBOT","id":2,"keywords":[{"name":"Keyword
                                        Ghost","doc":"","args":"","tags":["👻"],"id":4,"synopsis":"","html_doc":"","arg_string":""},{"name":"Keyword
                                        Ghost Heart
                                        Rocket","doc":"","args":"","tags":["❤️","👻","🚀"],"id":5,"synopsis":"","html_doc":"","arg_string":""},{"name":"Keyword
                                        Rocket","doc":"","args":"","tags":["🚀"],"id":6,"synopsis":"","html_doc":"","arg_string":""}],"synopsis":"Documentation
                                        for resource file ``ResourceLibrary1``.","html_doc":"&lt;p&gt;Documentation for
                                        resource file &lt;code&gt;ResourceLibrary1&lt;/code&gt;.&lt;/p&gt;"},{"name":"ResourceLibrary2","type":"RESOURCE","version":"","scope":"GLOBAL","named_args":null,"path":"C:\\repo\\rfhub2\\tests\\acceptance\\resources\\..\\..\\fixtures\\initial\\ResourceLibrary2.resource","doc":"Documentation
                                        for resource file
                                        ``ResourceLibrary2``.","doc_format":"ROBOT","id":3,"keywords":[{"name":"Keyword
                                        Airplane In The
                                        Clouds","doc":"","args":"","tags":["☁️⛅️☁️✈️☁️☁️"],"id":7,"synopsis":"","html_doc":"","arg_string":""},{"name":"Keyword
                                        No
                                        Tag","doc":"","args":"","tags":[],"id":8,"synopsis":"","html_doc":"","arg_string":""},{"name":"Keyword
                                        Rocket","doc":"","args":"","tags":["🚀"],"id":9,"synopsis":"","html_doc":"","arg_string":""},{"name":"Keyword
                                        Rocket Moon
                                        Heart","doc":"","args":"","tags":["❤️","🌑","🚀"],"id":10,"synopsis":"","html_doc":"","arg_string":""},{"name":"Keyword
                                        TextualTag","doc":"","args":"","tags":["STR_tag"],"id":11,"synopsis":"","html_doc":"","arg_string":""}],"synopsis":"Documentation
                                        for resource file ``ResourceLibrary2``.","html_doc":"&lt;p&gt;Documentation for
                                        resource file &lt;code&gt;ResourceLibrary2&lt;/code&gt;.&lt;/p&gt;"}]
                                    </msg>
                                    <msg timestamp="20210830 17:36:45.781" level="INFO">${response} = &lt;Response [200]&gt;</msg>
                                    <status status="PASS" starttime="20210830 17:36:45.760"
                                            endtime="20210830 17:36:45.781"/>
                                </kw>
                                <kw name="Should Be Equal As Integers" library="BuiltIn">
                                    <arg>${response.status_code}</arg>
                                    <arg>200</arg>
                                    <doc>Fails if objects are unequal after converting them to integers.</doc>
                                    <msg timestamp="20210830 17:36:45.783" level="INFO">Argument types are:
                                        &lt;class 'int'&gt;
                                        &lt;type 'unicode'&gt;
                                    </msg>
                                    <status status="PASS" starttime="20210830 17:36:45.781"
                                            endtime="20210830 17:36:45.784"/>
                                </kw>
                                <msg timestamp="20210830 17:36:45.786" level="INFO">${response} = [{'name': 'PyLibrary',
                                    'type': 'LIBRARY', 'version': '1.0.0', 'scope': 'TEST', 'named_args': None, 'path':
                                    'C:\\repo\\rfhub2\\tests\\acceptance\\resources\\..\\..\\fixtures\\initial\\PyLibrary',
                                    'doc'...
                                </msg>
                                <status status="PASS" starttime="20210830 17:36:45.759"
                                        endtime="20210830 17:36:45.786"/>
                            </kw>
                            <kw name="Length Should Be" library="BuiltIn">
                                <arg>${response}</arg>
                                <arg>${n}</arg>
                                <doc>Verifies that the length of the given item is correct.</doc>
                                <msg timestamp="20210830 17:36:45.787" level="INFO">Length is 3</msg>
                                <status status="PASS" starttime="20210830 17:36:45.786"
                                        endtime="20210830 17:36:45.787"/>
                            </kw>
                            <status status="PASS" starttime="20210830 17:36:45.758" endtime="20210830 17:36:45.787"/>
                        </kw>
                        <kw name="keywords Endpoint Should Have ${m} Items" library="keywords"
                            sourcename="${endpoint} Endpoint Should Have ${n} Items">
                            <kw name="Get Request For Endpoint" library="keywords">
                                <var>${response}</var>
                                <arg>endpoint=${endpoint}</arg>
                                <kw name="Create Session" library="RequestsLibrary">
                                    <arg>tmp</arg>
                                    <arg>http://${HOST}:8000/api/v1</arg>
                                    <doc>Create Session: create a HTTP session to a server</doc>
                                    <msg timestamp="20210830 17:36:45.789" level="INFO">Creating Session using :
                                        alias=tmp, url=http://127.0.0.1:8000/api/v1, headers={}, cookies={}, auth=None,
                                        timeout=None, proxies=None, verify=False, debug=0
                                    </msg>
                                    <status status="PASS" starttime="20210830 17:36:45.789"
                                            endtime="20210830 17:36:45.789"/>
                                </kw>
                                <kw name="Get On Session" library="RequestsLibrary">
                                    <var>${response}</var>
                                    <arg>tmp</arg>
                                    <arg>${endpoint}/</arg>
                                    <arg>params=${params}</arg>
                                    <doc>Sends a GET request on a previously created HTTP Session.</doc>
                                    <msg timestamp="20210830 17:36:45.810" level="INFO">GET Request :
                                        url=http://127.0.0.1:8000/api/v1/keywords/?None
                                        path_url=/api/v1/keywords/?None
                                        headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip,
                                        deflate', 'Accept': '*/*', 'Connection': 'keep-alive'}
                                        body=None
                                    </msg>
                                    <msg timestamp="20210830 17:36:45.810" level="INFO">GET Response :
                                        url=http://127.0.0.1:8000/api/v1/keywords/?None
                                        status=200, reason=OK
                                        headers={'date': 'Mon, 30 Aug 2021 15:36:45 GMT', 'server': 'uvicorn',
                                        'content-length': '1868', 'content-type': 'application/json'}
                                        body=[{"name":"Keyword Airplane In The
                                        Clouds","doc":"","args":"","tags":["☁️⛅️☁️✈️☁️☁️"],"id":7,"synopsis":"","html_doc":"","arg_string":"","collection":{"id":3,"name":"ResourceLibrary2"}},{"name":"Keyword
                                        Ghost","doc":"","args":"","tags":["👻"],"id":4,"synopsis":"","html_doc":"","arg_string":"","collection":{"id":2,"name":"ResourceLibrary1"}},{"name":"Keyword
                                        Ghost Heart
                                        Rocket","doc":"","args":"","tags":["❤️","👻","🚀"],"id":5,"synopsis":"","html_doc":"","arg_string":"","collection":{"id":2,"name":"ResourceLibrary1"}},{"name":"Keyword
                                        Heart
                                        Engine","doc":"","args":"","tags":["❤️","🚂"],"id":1,"synopsis":"","html_doc":"","arg_string":"","collection":{"id":1,"name":"PyLibrary"}},{"name":"Keyword
                                        Heart
                                        Skull","doc":"","args":"","tags":["❤️","💀"],"id":2,"synopsis":"","html_doc":"","arg_string":"","collection":{"id":1,"name":"PyLibrary"}},{"name":"Keyword
                                        No
                                        Tag","doc":"","args":"","tags":[],"id":3,"synopsis":"","html_doc":"","arg_string":"","collection":{"id":1,"name":"PyLibrary"}},{"name":"Keyword
                                        No
                                        Tag","doc":"","args":"","tags":[],"id":8,"synopsis":"","html_doc":"","arg_string":"","collection":{"id":3,"name":"ResourceLibrary2"}},{"name":"Keyword
                                        Rocket","doc":"","args":"","tags":["🚀"],"id":6,"synopsis":"","html_doc":"","arg_string":"","collection":{"id":2,"name":"ResourceLibrary1"}},{"name":"Keyword
                                        Rocket","doc":"","args":"","tags":["🚀"],"id":9,"synopsis":"","html_doc":"","arg_string":"","collection":{"id":3,"name":"ResourceLibrary2"}},{"name":"Keyword
                                        Rocket Moon
                                        Heart","doc":"","args":"","tags":["❤️","🌑","🚀"],"id":10,"synopsis":"","html_doc":"","arg_string":"","collection":{"id":3,"name":"ResourceLibrary2"}},{"name":"Keyword
                                        TextualTag","doc":"","args":"","tags":["STR_tag"],"id":11,"synopsis":"","html_doc":"","arg_string":"","collection":{"id":3,"name":"ResourceLibrary2"}}]
                                    </msg>
                                    <msg timestamp="20210830 17:36:45.811" level="INFO">${response} = &lt;Response [200]&gt;</msg>
                                    <status status="PASS" starttime="20210830 17:36:45.789"
                                            endtime="20210830 17:36:45.811"/>
                                </kw>
                                <kw name="Should Be Equal As Integers" library="BuiltIn">
                                    <arg>${response.status_code}</arg>
                                    <arg>200</arg>
                                    <doc>Fails if objects are unequal after converting them to integers.</doc>
                                    <msg timestamp="20210830 17:36:45.813" level="INFO">Argument types are:
                                        &lt;class 'int'&gt;
                                        &lt;type 'unicode'&gt;
                                    </msg>
                                    <status status="PASS" starttime="20210830 17:36:45.811"
                                            endtime="20210830 17:36:45.813"/>
                                </kw>
                                <msg timestamp="20210830 17:36:45.816" level="INFO">${response} = [{'name': 'Keyword
                                    Airplane In The Clouds', 'doc': '', 'args': '', 'tags': ['☁️⛅️☁️✈️☁️☁️'], 'id': 7,
                                    'synopsis': '', 'html_doc': '', 'arg_string': '', 'collection': {'id': 3, 'name':
                                    'ResourceLibrary...
                                </msg>
                                <status status="PASS" starttime="20210830 17:36:45.788"
                                        endtime="20210830 17:36:45.816"/>
                            </kw>
                            <kw name="Length Should Be" library="BuiltIn">
                                <arg>${response}</arg>
                                <arg>${n}</arg>
                                <doc>Verifies that the length of the given item is correct.</doc>
                                <msg timestamp="20210830 17:36:45.816" level="INFO">Length is 11</msg>
                                <status status="PASS" starttime="20210830 17:36:45.816"
                                        endtime="20210830 17:36:45.816"/>
                            </kw>
                            <status status="PASS" starttime="20210830 17:36:45.787" endtime="20210830 17:36:45.817"/>
                        </kw>
                        <status status="PASS" starttime="20210830 17:36:45.757" endtime="20210830 17:36:45.817"/>
                    </kw>
                    <status status="PASS" starttime="20210830 17:36:43.809" endtime="20210830 17:36:45.817"/>
                </kw>
                <kw name="Run Cli With Options --load-mode=insert --no-installed-keywords --exclude s[a-z]rt_a? ${INITIAL_FIXTURES} And Expect Api To Have 3 Collections And 10 Keywords"
                    sourcename="Run Cli With Options ${options} And Expect Api To Have ${n} Collections And ${m} Keywords">
                    <doc>Run pkg from CLI and expect a certain amount of collections
                        and keywords
                    </doc>
                    <kw name="Run Cli Package With Options" library="keywords">
                        <arg>${options}</arg>
                        <doc>Attempt to run the rfhub2-cli package with the given options
                            The stdout of the process will be in a test suite
                            variable named ${output}
                        </doc>
                        <kw name="Run" library="OperatingSystem">
                            <var>${output}</var>
                            <arg>${ACTIVATE_VENV} rfhub2-cli -a http://${HOST}:8000 ${options}</arg>
                            <doc>Runs the given command in the system and returns the output.</doc>
                            <msg timestamp="20210830 17:36:45.972" level="INFO">Running command ' rfhub2-cli -a
                                http://127.0.0.1:8000 --load-mode=insert --no-installed-keywords --exclude s[a-z]rt_a?
                                C:\repo\rfhub2\tests\acceptance\resources\..\..\fixtures/initial/ 2&gt;&amp;1'.
                            </msg>
                            <msg timestamp="20210830 17:36:48.116" level="INFO">${output} = PyLibrary library with 3
                                keywords loaded.
                                ResourceLibrary1 library with 3 keywords loaded.
                                ResourceLibrary2 library with 4 keywords loaded.

                                Successfully loaded 3 collections with 10 keywords.
                            </msg>
                            <status status="PASS" starttime="20210830 17:36:45.819" endtime="20210830 17:36:48.116"/>
                        </kw>
                        <kw name="Set Suite Variable" library="BuiltIn">
                            <arg>${output}</arg>
                            <doc>Makes a variable available everywhere within the scope of the current suite.</doc>
                            <msg timestamp="20210830 17:36:48.117" level="INFO">${output} = PyLibrary library with 3
                                keywords loaded.
                                ResourceLibrary1 library with 3 keywords loaded.
                                ResourceLibrary2 library with 4 keywords loaded.

                                Successfully loaded 3 collections with 10 keywords.
                            </msg>
                            <status status="PASS" starttime="20210830 17:36:48.117" endtime="20210830 17:36:48.117"/>
                        </kw>
                        <status status="PASS" starttime="20210830 17:36:45.818" endtime="20210830 17:36:48.118"/>
                    </kw>
                    <kw name="Api Should Have ${n} Collections And ${m} Keywords"
                        sourcename="Api Should Have ${n} Collections And ${m} Keywords">
                        <kw name="collections Endpoint Should Have ${n} Items" library="keywords"
                            sourcename="${endpoint} Endpoint Should Have ${n} Items">
                            <kw name="Get Request For Endpoint" library="keywords">
                                <var>${response}</var>
                                <arg>endpoint=${endpoint}</arg>
                                <kw name="Create Session" library="RequestsLibrary">
                                    <arg>tmp</arg>
                                    <arg>http://${HOST}:8000/api/v1</arg>
                                    <doc>Create Session: create a HTTP session to a server</doc>
                                    <msg timestamp="20210830 17:36:48.120" level="INFO">Creating Session using :
                                        alias=tmp, url=http://127.0.0.1:8000/api/v1, headers={}, cookies={}, auth=None,
                                        timeout=None, proxies=None, verify=False, debug=0
                                    </msg>
                                    <status status="PASS" starttime="20210830 17:36:48.120"
                                            endtime="20210830 17:36:48.121"/>
                                </kw>
                                <kw name="Get On Session" library="RequestsLibrary">
                                    <var>${response}</var>
                                    <arg>tmp</arg>
                                    <arg>${endpoint}/</arg>
                                    <arg>params=${params}</arg>
                                    <doc>Sends a GET request on a previously created HTTP Session.</doc>
                                    <msg timestamp="20210830 17:36:48.141" level="INFO">GET Request :
                                        url=http://127.0.0.1:8000/api/v1/collections/?None
                                        path_url=/api/v1/collections/?None
                                        headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip,
                                        deflate', 'Accept': '*/*', 'Connection': 'keep-alive'}
                                        body=None
                                    </msg>
                                    <msg timestamp="20210830 17:36:48.141" level="INFO">GET Response :
                                        url=http://127.0.0.1:8000/api/v1/collections/?None
                                        status=200, reason=OK
                                        headers={'date': 'Mon, 30 Aug 2021 15:36:47 GMT', 'server': 'uvicorn',
                                        'content-length': '2552', 'content-type': 'application/json'}
                                        body=[{"name":"PyLibrary","type":"LIBRARY","version":"1.0.0","scope":"TEST","named_args":null,"path":"C:\\repo\\rfhub2\\tests\\acceptance\\resources\\..\\..\\fixtures\\initial\\PyLibrary","doc":"Documentation
                                        for library
                                        ``PyLibrary``.","doc_format":"ROBOT","id":1,"keywords":[{"name":"Keyword Heart
                                        Engine","doc":"","args":"","tags":["❤️","🚂"],"id":1,"synopsis":"","html_doc":"","arg_string":""},{"name":"Keyword
                                        Heart
                                        Skull","doc":"","args":"","tags":["❤️","💀"],"id":2,"synopsis":"","html_doc":"","arg_string":""},{"name":"Keyword
                                        No
                                        Tag","doc":"","args":"","tags":[],"id":3,"synopsis":"","html_doc":"","arg_string":""}],"synopsis":"Documentation
                                        for library ``PyLibrary``.","html_doc":"&lt;p&gt;Documentation for library &lt;code&gt;PyLibrary&lt;/code&gt;.&lt;/p&gt;"},{"name":"ResourceLibrary1","type":"RESOURCE","version":"","scope":"GLOBAL","named_args":null,"path":"C:\\repo\\rfhub2\\tests\\acceptance\\resources\\..\\..\\fixtures\\initial\\ResourceLibrary1.resource","doc":"Documentation
                                        for resource file
                                        ``ResourceLibrary1``.","doc_format":"ROBOT","id":2,"keywords":[{"name":"Keyword
                                        Ghost","doc":"","args":"","tags":["👻"],"id":4,"synopsis":"","html_doc":"","arg_string":""},{"name":"Keyword
                                        Ghost Heart
                                        Rocket","doc":"","args":"","tags":["❤️","👻","🚀"],"id":5,"synopsis":"","html_doc":"","arg_string":""},{"name":"Keyword
                                        Rocket","doc":"","args":"","tags":["🚀"],"id":6,"synopsis":"","html_doc":"","arg_string":""}],"synopsis":"Documentation
                                        for resource file ``ResourceLibrary1``.","html_doc":"&lt;p&gt;Documentation for
                                        resource file &lt;code&gt;ResourceLibrary1&lt;/code&gt;.&lt;/p&gt;"},{"name":"ResourceLibrary2","type":"RESOURCE","version":"","scope":"GLOBAL","named_args":null,"path":"C:\\repo\\rfhub2\\tests\\acceptance\\resources\\..\\..\\fixtures\\initial\\ResourceLibrary2.resource","doc":"Documentation
                                        for resource file
                                        ``ResourceLibrary2``.","doc_format":"ROBOT","id":3,"keywords":[{"name":"Keyword
                                        Airplane In The
                                        Clouds","doc":"","args":"","tags":["☁️⛅️☁️✈️☁️☁️"],"id":7,"synopsis":"","html_doc":"","arg_string":""},{"name":"Keyword
                                        No
                                        Tag","doc":"","args":"","tags":[],"id":8,"synopsis":"","html_doc":"","arg_string":""},{"name":"Keyword
                                        Rocket","doc":"","args":"","tags":["🚀"],"id":9,"synopsis":"","html_doc":"","arg_string":""},{"name":"Keyword
                                        Rocket Moon
                                        Heart","doc":"","args":"","tags":["❤️","🌑","🚀"],"id":10,"synopsis":"","html_doc":"","arg_string":""}],"synopsis":"Documentation
                                        for resource file ``ResourceLibrary2``.","html_doc":"&lt;p&gt;Documentation for
                                        resource file &lt;code&gt;ResourceLibrary2&lt;/code&gt;.&lt;/p&gt;"}]
                                    </msg>
                                    <msg timestamp="20210830 17:36:48.142" level="INFO">${response} = &lt;Response [200]&gt;</msg>
                                    <status status="PASS" starttime="20210830 17:36:48.121"
                                            endtime="20210830 17:36:48.142"/>
                                </kw>
                                <kw name="Should Be Equal As Integers" library="BuiltIn">
                                    <arg>${response.status_code}</arg>
                                    <arg>200</arg>
                                    <doc>Fails if objects are unequal after converting them to integers.</doc>
                                    <msg timestamp="20210830 17:36:48.144" level="INFO">Argument types are:
                                        &lt;class 'int'&gt;
                                        &lt;type 'unicode'&gt;
                                    </msg>
                                    <status status="PASS" starttime="20210830 17:36:48.142"
                                            endtime="20210830 17:36:48.144"/>
                                </kw>
                                <msg timestamp="20210830 17:36:48.147" level="INFO">${response} = [{'name': 'PyLibrary',
                                    'type': 'LIBRARY', 'version': '1.0.0', 'scope': 'TEST', 'named_args': None, 'path':
                                    'C:\\repo\\rfhub2\\tests\\acceptance\\resources\\..\\..\\fixtures\\initial\\PyLibrary',
                                    'doc'...
                                </msg>
                                <status status="PASS" starttime="20210830 17:36:48.119"
                                        endtime="20210830 17:36:48.147"/>
                            </kw>
                            <kw name="Length Should Be" library="BuiltIn">
                                <arg>${response}</arg>
                                <arg>${n}</arg>
                                <doc>Verifies that the length of the given item is correct.</doc>
                                <msg timestamp="20210830 17:36:48.147" level="INFO">Length is 3</msg>
                                <status status="PASS" starttime="20210830 17:36:48.147"
                                        endtime="20210830 17:36:48.147"/>
                            </kw>
                            <status status="PASS" starttime="20210830 17:36:48.119" endtime="20210830 17:36:48.148"/>
                        </kw>
                        <kw name="keywords Endpoint Should Have ${m} Items" library="keywords"
                            sourcename="${endpoint} Endpoint Should Have ${n} Items">
                            <kw name="Get Request For Endpoint" library="keywords">
                                <var>${response}</var>
                                <arg>endpoint=${endpoint}</arg>
                                <kw name="Create Session" library="RequestsLibrary">
                                    <arg>tmp</arg>
                                    <arg>http://${HOST}:8000/api/v1</arg>
                                    <doc>Create Session: create a HTTP session to a server</doc>
                                    <msg timestamp="20210830 17:36:48.150" level="INFO">Creating Session using :
                                        alias=tmp, url=http://127.0.0.1:8000/api/v1, headers={}, cookies={}, auth=None,
                                        timeout=None, proxies=None, verify=False, debug=0
                                    </msg>
                                    <status status="PASS" starttime="20210830 17:36:48.149"
                                            endtime="20210830 17:36:48.150"/>
                                </kw>
                                <kw name="Get On Session" library="RequestsLibrary">
                                    <var>${response}</var>
                                    <arg>tmp</arg>
                                    <arg>${endpoint}/</arg>
                                    <arg>params=${params}</arg>
                                    <doc>Sends a GET request on a previously created HTTP Session.</doc>
                                    <msg timestamp="20210830 17:36:48.170" level="INFO">GET Request :
                                        url=http://127.0.0.1:8000/api/v1/keywords/?None
                                        path_url=/api/v1/keywords/?None
                                        headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip,
                                        deflate', 'Accept': '*/*', 'Connection': 'keep-alive'}
                                        body=None
                                    </msg>
                                    <msg timestamp="20210830 17:36:48.170" level="INFO">GET Response :
                                        url=http://127.0.0.1:8000/api/v1/keywords/?None
                                        status=200, reason=OK
                                        headers={'date': 'Mon, 30 Aug 2021 15:36:47 GMT', 'server': 'uvicorn',
                                        'content-length': '1700', 'content-type': 'application/json'}
                                        body=[{"name":"Keyword Airplane In The
                                        Clouds","doc":"","args":"","tags":["☁️⛅️☁️✈️☁️☁️"],"id":7,"synopsis":"","html_doc":"","arg_string":"","collection":{"id":3,"name":"ResourceLibrary2"}},{"name":"Keyword
                                        Ghost","doc":"","args":"","tags":["👻"],"id":4,"synopsis":"","html_doc":"","arg_string":"","collection":{"id":2,"name":"ResourceLibrary1"}},{"name":"Keyword
                                        Ghost Heart
                                        Rocket","doc":"","args":"","tags":["❤️","👻","🚀"],"id":5,"synopsis":"","html_doc":"","arg_string":"","collection":{"id":2,"name":"ResourceLibrary1"}},{"name":"Keyword
                                        Heart
                                        Engine","doc":"","args":"","tags":["❤️","🚂"],"id":1,"synopsis":"","html_doc":"","arg_string":"","collection":{"id":1,"name":"PyLibrary"}},{"name":"Keyword
                                        Heart
                                        Skull","doc":"","args":"","tags":["❤️","💀"],"id":2,"synopsis":"","html_doc":"","arg_string":"","collection":{"id":1,"name":"PyLibrary"}},{"name":"Keyword
                                        No
                                        Tag","doc":"","args":"","tags":[],"id":3,"synopsis":"","html_doc":"","arg_string":"","collection":{"id":1,"name":"PyLibrary"}},{"name":"Keyword
                                        No
                                        Tag","doc":"","args":"","tags":[],"id":8,"synopsis":"","html_doc":"","arg_string":"","collection":{"id":3,"name":"ResourceLibrary2"}},{"name":"Keyword
                                        Rocket","doc":"","args":"","tags":["🚀"],"id":6,"synopsis":"","html_doc":"","arg_string":"","collection":{"id":2,"name":"ResourceLibrary1"}},{"name":"Keyword
                                        Rocket","doc":"","args":"","tags":["🚀"],"id":9,"synopsis":"","html_doc":"","arg_string":"","collection":{"id":3,"name":"ResourceLibrary2"}},{"name":"Keyword
                                        Rocket Moon
                                        Heart","doc":"","args":"","tags":["❤️","🌑","🚀"],"id":10,"synopsis":"","html_doc":"","arg_string":"","collection":{"id":3,"name":"ResourceLibrary2"}}]
                                    </msg>
                                    <msg timestamp="20210830 17:36:48.171" level="INFO">${response} = &lt;Response [200]&gt;</msg>
                                    <status status="PASS" starttime="20210830 17:36:48.150"
                                            endtime="20210830 17:36:48.171"/>
                                </kw>
                                <kw name="Should Be Equal As Integers" library="BuiltIn">
                                    <arg>${response.status_code}</arg>
                                    <arg>200</arg>
                                    <doc>Fails if objects are unequal after converting them to integers.</doc>
                                    <msg timestamp="20210830 17:36:48.173" level="INFO">Argument types are:
                                        &lt;class 'int'&gt;
                                        &lt;type 'unicode'&gt;
                                    </msg>
                                    <status status="PASS" starttime="20210830 17:36:48.171"
                                            endtime="20210830 17:36:48.173"/>
                                </kw>
                                <msg timestamp="20210830 17:36:48.176" level="INFO">${response} = [{'name': 'Keyword
                                    Airplane In The Clouds', 'doc': '', 'args': '', 'tags': ['☁️⛅️☁️✈️☁️☁️'], 'id': 7,
                                    'synopsis': '', 'html_doc': '', 'arg_string': '', 'collection': {'id': 3, 'name':
                                    'ResourceLibrary...
                                </msg>
                                <status status="PASS" starttime="20210830 17:36:48.148"
                                        endtime="20210830 17:36:48.176"/>
                            </kw>
                            <kw name="Length Should Be" library="BuiltIn">
                                <arg>${response}</arg>
                                <arg>${n}</arg>
                                <doc>Verifies that the length of the given item is correct.</doc>
                                <msg timestamp="20210830 17:36:48.176" level="INFO">Length is 10</msg>
                                <status status="PASS" starttime="20210830 17:36:48.176"
                                        endtime="20210830 17:36:48.176"/>
                            </kw>
                            <status status="PASS" starttime="20210830 17:36:48.148" endtime="20210830 17:36:48.177"/>
                        </kw>
                        <status status="PASS" starttime="20210830 17:36:48.118" endtime="20210830 17:36:48.177"/>
                    </kw>
                    <status status="PASS" starttime="20210830 17:36:45.817" endtime="20210830 17:36:48.177"/>
                </kw>
                <kw name="Restore Initial Fixtures" library="keywords" type="TEARDOWN">
                    <kw name="Remove Directory" library="OperatingSystem">
                        <arg>${INITIAL_FIXTURES}</arg>
                        <arg>recursive=True</arg>
                        <doc>Removes the directory pointed to by the given ``path``.</doc>
                        <msg timestamp="20210830 17:36:48.184" level="INFO" html="true">Removed directory '&lt;a
                            href="file://C:\repo\rfhub2\tests\fixtures\initial"&gt;C:\repo\rfhub2\tests\fixtures\initial&lt;/a&gt;'.
                        </msg>
                        <status status="PASS" starttime="20210830 17:36:48.178" endtime="20210830 17:36:48.184"/>
                    </kw>
                    <kw name="Copy Directory" library="OperatingSystem">
                        <arg>${BACKUP_FIXTURES}</arg>
                        <arg>${INITIAL_FIXTURES}</arg>
                        <doc>Copies the source directory into the destination.</doc>
                        <msg timestamp="20210830 17:36:48.258" level="INFO" html="true">Copied directory from '&lt;a
                            href="file://C:\repo\rfhub2\tests\fixtures\initial_bkp"&gt;C:\repo\rfhub2\tests\fixtures\initial_bkp&lt;/a&gt;'
                            to '&lt;a href="file://C:\repo\rfhub2\tests\fixtures\initial"&gt;C:\repo\rfhub2\tests\fixtures\initial&lt;/a&gt;'.
                        </msg>
                        <status status="PASS" starttime="20210830 17:36:48.184" endtime="20210830 17:36:48.258"/>
                    </kw>
                    <kw name="Remove Directory" library="OperatingSystem">
                        <arg>${BACKUP_FIXTURES}</arg>
                        <arg>recursive=True</arg>
                        <doc>Removes the directory pointed to by the given ``path``.</doc>
                        <msg timestamp="20210830 17:36:48.298" level="INFO" html="true">Removed directory '&lt;a
                            href="file://C:\repo\rfhub2\tests\fixtures\initial_bkp"&gt;C:\repo\rfhub2\tests\fixtures\initial_bkp&lt;/a&gt;'.
                        </msg>
                        <status status="PASS" starttime="20210830 17:36:48.258" endtime="20210830 17:36:48.298"/>
                    </kw>
                    <status status="PASS" starttime="20210830 17:36:48.178" endtime="20210830 17:36:48.298"/>
                </kw>
                <doc>Test loading Keywords and excluding tags</doc>
                <tag>include-exclude</tag>
                <status status="FAIL" starttime="20210830 17:36:32.785" endtime="20210830 17:36:48.298">Several failures
                    occurred:

                    1) Length of '[{'name': 'Keyword Airplane In The Clouds', 'doc': '', 'args': '', 'tags':
                    ['☁️⛅️☁️✈️☁️☁️'], 'id': 4, 'synopsis': '', 'html_doc': '', 'arg_string': '', 'collection': {'id': 3,
                    'name': 'ResourceLibrary2'}}, {'name': 'Keyword Ghost', 'doc': '', 'args': '', 'tags': ['👻'], 'id':
                    2, 'synopsis': '', 'html_doc': '', 'arg_string': '', 'collection': {'id': 2, 'name':
                    'ResourceLibrary1'}}, {'name': 'Keyword No Tag', 'doc': '', 'args': '', 'tags': [], 'id': 1,
                    'synopsis': '', 'html_doc': '', 'arg_string': '', 'collection': {'id': 1, 'name': 'PyLibrary'}},
                    {'name': 'Keyword No Tag', 'doc': '', 'args': '', 'tags': [], 'id': 5, 'synopsis': '', 'html_doc':
                    '', 'arg_string': '', 'collection': {'id': 3, 'name': 'ResourceLibrary2'}}, {'name': 'Keyword
                    Rocket', 'doc': '', 'args': '', 'tags': ['🚀'], 'id': 3, 'synopsis': '', 'html_doc': '',
                    'arg_string': '', 'collection': {'id': 2, 'name': 'ResourceLibrary1'}}, {'name': 'Keyword Rocket',
                    'doc': '', 'args': '', 'tags': ['🚀'], 'id': 6, 'synopsis': '', 'html_doc': '', 'arg_string': '',
                    'collection': {'id': 3, 'name': 'ResourceLibrary2'}}, {'name': 'Keyword TextualTag', 'doc': '',
                    'args': '', 'tags': ['STR_tag'], 'id': 7, 'synopsis': '', 'html_doc': '', 'arg_string': '',
                    'collection': {'id': 3, 'name': 'ResourceLibrary2'}}]' should be 9 but is 7.

                    [ Message content over the limit has been removed. ]
                    ...': '', 'arg_string': '', 'collection': {'id': 2, 'name': 'ResourceLibrary1'}}, {'name': 'Keyword
                    Heart Engine', 'doc': '', 'args': '', 'tags': ['❤️', '🚂'], 'id': 1, 'synopsis': '', 'html_doc': '',
                    'arg_string': '', 'collection': {'id': 1, 'name': 'PyLibrary'}}, {'name': 'Keyword Heart Skull',
                    'doc': '', 'args': '', 'tags': ['❤️', '💀'], 'id': 2, 'synopsis': '', 'html_doc': '', 'arg_string':
                    '', 'collection': {'id': 1, 'name': 'PyLibrary'}}, {'name': 'Keyword No Tag', 'doc': '', 'args': '',
                    'tags': [], 'id': 3, 'synopsis': '', 'html_doc': '', 'arg_string': '', 'collection': {'id': 1,
                    'name': 'PyLibrary'}}, {'name': 'Keyword No Tag', 'doc': '', 'args': '', 'tags': [], 'id': 8,
                    'synopsis': '', 'html_doc': '', 'arg_string': '', 'collection': {'id': 3, 'name':
                    'ResourceLibrary2'}}, {'name': 'Keyword Rocket', 'doc': '', 'args': '', 'tags': ['🚀'], 'id': 6,
                    'synopsis': '', 'html_doc': '', 'arg_string': '', 'collection': {'id': 2, 'name':
                    'ResourceLibrary1'}}, {'name': 'Keyword Rocket', 'doc': '', 'args': '', 'tags': ['🚀'], 'id': 9,
                    'synopsis': '', 'html_doc': '', 'arg_string': '', 'collection': {'id': 3, 'name':
                    'ResourceLibrary2'}}, {'name': 'Keyword Rocket Moon Heart', 'doc': '', 'args': '', 'tags': ['❤️',
                    '🌑', '🚀'], 'id': 10, 'synopsis': '', 'html_doc': '', 'arg_string': '', 'collection': {'id': 3,
                    'name': 'ResourceLibrary2'}}, {'name': 'Keyword TextualTag', 'doc': '', 'args': '', 'tags':
                    ['STR_tag'], 'id': 11, 'synopsis': '', 'html_doc': '', 'arg_string': '', 'collection': {'id': 3,
                    'name': 'ResourceLibrary2'}}]' should be 10 but is 11.
                </status>
            </test>
            <test id="s1-s2-t19" name="Running Cli And Including + Excluding Tags Should Load Proper Keywords">
                <kw name="Run Keywords" library="BuiltIn" type="SETUP">
                    <arg>Backup And Switch Initial With Include_Exclude Fixtures</arg>
                    <doc>Executes all the given keywords in a sequence.</doc>
                    <kw name="Backup And Switch Initial With Include_Exclude Fixtures" library="keywords">
                        <kw name="Move Directory" library="OperatingSystem">
                            <arg>${INITIAL_FIXTURES}</arg>
                            <arg>${BACKUP_FIXTURES}</arg>
                            <doc>Moves the source directory into a destination.</doc>
                            <msg timestamp="20210830 17:36:48.305" level="INFO" html="true">Moved directory from '&lt;a
                                href="file://C:\repo\rfhub2\tests\fixtures\initial"&gt;C:\repo\rfhub2\tests\fixtures\initial&lt;/a&gt;'
                                to '&lt;a href="file://C:\repo\rfhub2\tests\fixtures\initial_bkp"&gt;C:\repo\rfhub2\tests\fixtures\initial_bkp&lt;/a&gt;'.
                            </msg>
                            <status status="PASS" starttime="20210830 17:36:48.302" endtime="20210830 17:36:48.305"/>
                        </kw>
                        <kw name="Copy Directory" library="OperatingSystem">
                            <arg>${INCLUDE_EXCLUDE_FIXTURES}</arg>
                            <arg>${INITIAL_FIXTURES}</arg>
                            <doc>Copies the source directory into the destination.</doc>
                            <msg timestamp="20210830 17:36:48.321" level="INFO" html="true">Copied directory from '&lt;a
                                href="file://C:\repo\rfhub2\tests\fixtures\include_exclude"&gt;C:\repo\rfhub2\tests\fixtures\include_exclude&lt;/a&gt;'
                                to '&lt;a href="file://C:\repo\rfhub2\tests\fixtures\initial"&gt;C:\repo\rfhub2\tests\fixtures\initial&lt;/a&gt;'.
                            </msg>
                            <status status="PASS" starttime="20210830 17:36:48.306" endtime="20210830 17:36:48.322"/>
                        </kw>
                        <status status="PASS" starttime="20210830 17:36:48.301" endtime="20210830 17:36:48.322"/>
                    </kw>
                    <status status="PASS" starttime="20210830 17:36:48.301" endtime="20210830 17:36:48.322"/>
                </kw>
                <kw name="Run Cli With Options --load-mode=insert --no-installed-keywords --include ❤️ --exclude 👻 ${INITIAL_FIXTURES} And Expect Api To Have 3 Collections And 3 Keywords"
                    sourcename="Run Cli With Options ${options} And Expect Api To Have ${n} Collections And ${m} Keywords">
                    <doc>Run pkg from CLI and expect a certain amount of collections
                        and keywords
                    </doc>
                    <kw name="Run Cli Package With Options" library="keywords">
                        <arg>${options}</arg>
                        <doc>Attempt to run the rfhub2-cli package with the given options
                            The stdout of the process will be in a test suite
                            variable named ${output}
                        </doc>
                        <kw name="Run" library="OperatingSystem">
                            <var>${output}</var>
                            <arg>${ACTIVATE_VENV} rfhub2-cli -a http://${HOST}:8000 ${options}</arg>
                            <doc>Runs the given command in the system and returns the output.</doc>
                            <msg timestamp="20210830 17:36:48.478" level="INFO">Running command ' rfhub2-cli -a
                                http://127.0.0.1:8000 --load-mode=insert --no-installed-keywords --include ❤️ --exclude
                                👻 C:\repo\rfhub2\tests\acceptance\resources\..\..\fixtures/initial/ 2&gt;&amp;1'.
                            </msg>
                            <msg timestamp="20210830 17:36:50.383" level="INFO">${output} = PyLibrary library with 0
                                keywords loaded.
                                ResourceLibrary1 library with 0 keywords loaded.
                                ResourceLibrary2 library with 0 keywords loaded.

                                Successfully loaded 3 collections with 0 keywords.
                            </msg>
                            <status status="PASS" starttime="20210830 17:36:48.324" endtime="20210830 17:36:50.383"/>
                        </kw>
                        <kw name="Set Suite Variable" library="BuiltIn">
                            <arg>${output}</arg>
                            <doc>Makes a variable available everywhere within the scope of the current suite.</doc>
                            <msg timestamp="20210830 17:36:50.384" level="INFO">${output} = PyLibrary library with 0
                                keywords loaded.
                                ResourceLibrary1 library with 0 keywords loaded.
                                ResourceLibrary2 library with 0 keywords loaded.

                                Successfully loaded 3 collections with 0 keywords.
                            </msg>
                            <status status="PASS" starttime="20210830 17:36:50.384" endtime="20210830 17:36:50.384"/>
                        </kw>
                        <status status="PASS" starttime="20210830 17:36:48.324" endtime="20210830 17:36:50.385"/>
                    </kw>
                    <kw name="Api Should Have ${n} Collections And ${m} Keywords"
                        sourcename="Api Should Have ${n} Collections And ${m} Keywords">
                        <kw name="collections Endpoint Should Have ${n} Items" library="keywords"
                            sourcename="${endpoint} Endpoint Should Have ${n} Items">
                            <kw name="Get Request For Endpoint" library="keywords">
                                <var>${response}</var>
                                <arg>endpoint=${endpoint}</arg>
                                <kw name="Create Session" library="RequestsLibrary">
                                    <arg>tmp</arg>
                                    <arg>http://${HOST}:8000/api/v1</arg>
                                    <doc>Create Session: create a HTTP session to a server</doc>
                                    <msg timestamp="20210830 17:36:50.388" level="INFO">Creating Session using :
                                        alias=tmp, url=http://127.0.0.1:8000/api/v1, headers={}, cookies={}, auth=None,
                                        timeout=None, proxies=None, verify=False, debug=0
                                    </msg>
                                    <status status="PASS" starttime="20210830 17:36:50.387"
                                            endtime="20210830 17:36:50.388"/>
                                </kw>
                                <kw name="Get On Session" library="RequestsLibrary">
                                    <var>${response}</var>
                                    <arg>tmp</arg>
                                    <arg>${endpoint}/</arg>
                                    <arg>params=${params}</arg>
                                    <doc>Sends a GET request on a previously created HTTP Session.</doc>
                                    <msg timestamp="20210830 17:36:50.402" level="INFO">GET Request :
                                        url=http://127.0.0.1:8000/api/v1/collections/?None
                                        path_url=/api/v1/collections/?None
                                        headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip,
                                        deflate', 'Accept': '*/*', 'Connection': 'keep-alive'}
                                        body=None
                                    </msg>
                                    <msg timestamp="20210830 17:36:50.402" level="INFO">GET Response :
                                        url=http://127.0.0.1:8000/api/v1/collections/?None
                                        status=200, reason=OK
                                        headers={'date': 'Mon, 30 Aug 2021 15:36:49 GMT', 'server': 'uvicorn',
                                        'content-length': '1315', 'content-type': 'application/json'}
                                        body=[{"name":"PyLibrary","type":"LIBRARY","version":"1.0.0","scope":"TEST","named_args":null,"path":"C:\\repo\\rfhub2\\tests\\acceptance\\resources\\..\\..\\fixtures\\initial\\PyLibrary","doc":"Documentation
                                        for library
                                        ``PyLibrary``.","doc_format":"ROBOT","id":1,"keywords":[],"synopsis":"Documentation
                                        for library ``PyLibrary``.","html_doc":"&lt;p&gt;Documentation for library &lt;code&gt;PyLibrary&lt;/code&gt;.&lt;/p&gt;"},{"name":"ResourceLibrary1","type":"RESOURCE","version":"","scope":"GLOBAL","named_args":null,"path":"C:\\repo\\rfhub2\\tests\\acceptance\\resources\\..\\..\\fixtures\\initial\\ResourceLibrary1.resource","doc":"Documentation
                                        for resource file
                                        ``ResourceLibrary1``.","doc_format":"ROBOT","id":2,"keywords":[],"synopsis":"Documentation
                                        for resource file ``ResourceLibrary1``.","html_doc":"&lt;p&gt;Documentation for
                                        resource file &lt;code&gt;ResourceLibrary1&lt;/code&gt;.&lt;/p&gt;"},{"name":"ResourceLibrary2","type":"RESOURCE","version":"","scope":"GLOBAL","named_args":null,"path":"C:\\repo\\rfhub2\\tests\\acceptance\\resources\\..\\..\\fixtures\\initial\\ResourceLibrary2.resource","doc":"Documentation
                                        for resource file
                                        ``ResourceLibrary2``.","doc_format":"ROBOT","id":3,"keywords":[],"synopsis":"Documentation
                                        for resource file ``ResourceLibrary2``.","html_doc":"&lt;p&gt;Documentation for
                                        resource file &lt;code&gt;ResourceLibrary2&lt;/code&gt;.&lt;/p&gt;"}]
                                    </msg>
                                    <msg timestamp="20210830 17:36:50.403" level="INFO">${response} = &lt;Response [200]&gt;</msg>
                                    <status status="PASS" starttime="20210830 17:36:50.388"
                                            endtime="20210830 17:36:50.403"/>
                                </kw>
                                <kw name="Should Be Equal As Integers" library="BuiltIn">
                                    <arg>${response.status_code}</arg>
                                    <arg>200</arg>
                                    <doc>Fails if objects are unequal after converting them to integers.</doc>
                                    <msg timestamp="20210830 17:36:50.405" level="INFO">Argument types are:
                                        &lt;class 'int'&gt;
                                        &lt;type 'unicode'&gt;
                                    </msg>
                                    <status status="PASS" starttime="20210830 17:36:50.403"
                                            endtime="20210830 17:36:50.405"/>
                                </kw>
                                <msg timestamp="20210830 17:36:50.408" level="INFO">${response} = [{'name': 'PyLibrary',
                                    'type': 'LIBRARY', 'version': '1.0.0', 'scope': 'TEST', 'named_args': None, 'path':
                                    'C:\\repo\\rfhub2\\tests\\acceptance\\resources\\..\\..\\fixtures\\initial\\PyLibrary',
                                    'doc'...
                                </msg>
                                <status status="PASS" starttime="20210830 17:36:50.386"
                                        endtime="20210830 17:36:50.408"/>
                            </kw>
                            <kw name="Length Should Be" library="BuiltIn">
                                <arg>${response}</arg>
                                <arg>${n}</arg>
                                <doc>Verifies that the length of the given item is correct.</doc>
                                <msg timestamp="20210830 17:36:50.408" level="INFO">Length is 3</msg>
                                <status status="PASS" starttime="20210830 17:36:50.408"
                                        endtime="20210830 17:36:50.408"/>
                            </kw>
                            <status status="PASS" starttime="20210830 17:36:50.386" endtime="20210830 17:36:50.409"/>
                        </kw>
                        <kw name="keywords Endpoint Should Have ${m} Items" library="keywords"
                            sourcename="${endpoint} Endpoint Should Have ${n} Items">
                            <kw name="Get Request For Endpoint" library="keywords">
                                <var>${response}</var>
                                <arg>endpoint=${endpoint}</arg>
                                <kw name="Create Session" library="RequestsLibrary">
                                    <arg>tmp</arg>
                                    <arg>http://${HOST}:8000/api/v1</arg>
                                    <doc>Create Session: create a HTTP session to a server</doc>
                                    <msg timestamp="20210830 17:36:50.411" level="INFO">Creating Session using :
                                        alias=tmp, url=http://127.0.0.1:8000/api/v1, headers={}, cookies={}, auth=None,
                                        timeout=None, proxies=None, verify=False, debug=0
                                    </msg>
                                    <status status="PASS" starttime="20210830 17:36:50.410"
                                            endtime="20210830 17:36:50.411"/>
                                </kw>
                                <kw name="Get On Session" library="RequestsLibrary">
                                    <var>${response}</var>
                                    <arg>tmp</arg>
                                    <arg>${endpoint}/</arg>
                                    <arg>params=${params}</arg>
                                    <doc>Sends a GET request on a previously created HTTP Session.</doc>
                                    <msg timestamp="20210830 17:36:50.421" level="INFO">GET Request :
                                        url=http://127.0.0.1:8000/api/v1/keywords/?None
                                        path_url=/api/v1/keywords/?None
                                        headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip,
                                        deflate', 'Accept': '*/*', 'Connection': 'keep-alive'}
                                        body=None
                                    </msg>
                                    <msg timestamp="20210830 17:36:50.421" level="INFO">GET Response :
                                        url=http://127.0.0.1:8000/api/v1/keywords/?None
                                        status=200, reason=OK
                                        headers={'date': 'Mon, 30 Aug 2021 15:36:49 GMT', 'server': 'uvicorn',
                                        'content-length': '2', 'content-type': 'application/json'}
                                        body=[]
                                    </msg>
                                    <msg timestamp="20210830 17:36:50.422" level="INFO">${response} = &lt;Response [200]&gt;</msg>
                                    <status status="PASS" starttime="20210830 17:36:50.411"
                                            endtime="20210830 17:36:50.422"/>
                                </kw>
                                <kw name="Should Be Equal As Integers" library="BuiltIn">
                                    <arg>${response.status_code}</arg>
                                    <arg>200</arg>
                                    <doc>Fails if objects are unequal after converting them to integers.</doc>
                                    <msg timestamp="20210830 17:36:50.424" level="INFO">Argument types are:
                                        &lt;class 'int'&gt;
                                        &lt;type 'unicode'&gt;
                                    </msg>
                                    <status status="PASS" starttime="20210830 17:36:50.422"
                                            endtime="20210830 17:36:50.424"/>
                                </kw>
                                <msg timestamp="20210830 17:36:50.426" level="INFO">${response} = []</msg>
                                <status status="PASS" starttime="20210830 17:36:50.409"
                                        endtime="20210830 17:36:50.426"/>
                            </kw>
                            <kw name="Length Should Be" library="BuiltIn">
                                <arg>${response}</arg>
                                <arg>${n}</arg>
                                <doc>Verifies that the length of the given item is correct.</doc>
                                <msg timestamp="20210830 17:36:50.427" level="INFO">Length is 0</msg>
                                <msg timestamp="20210830 17:36:50.428" level="FAIL">Length of '[]' should be 3 but is
                                    0.
                                </msg>
                                <status status="FAIL" starttime="20210830 17:36:50.427"
                                        endtime="20210830 17:36:50.428"/>
                            </kw>
                            <status status="FAIL" starttime="20210830 17:36:50.409" endtime="20210830 17:36:50.430"/>
                        </kw>
                        <status status="FAIL" starttime="20210830 17:36:50.385" endtime="20210830 17:36:50.432"/>
                    </kw>
                    <status status="FAIL" starttime="20210830 17:36:48.322" endtime="20210830 17:36:50.434"/>
                </kw>
                <kw name="Run Cli With Options --load-mode=insert --no-installed-keywords --include ❤️OR👻 --exclude ❤️AND👻 ${INITIAL_FIXTURES} And Expect Api To Have 3 Collections And 4 Keywords"
                    sourcename="Run Cli With Options ${options} And Expect Api To Have ${n} Collections And ${m} Keywords">
                    <doc>Run pkg from CLI and expect a certain amount of collections
                        and keywords
                    </doc>
                    <kw name="Run Cli Package With Options" library="keywords">
                        <arg>${options}</arg>
                        <doc>Attempt to run the rfhub2-cli package with the given options
                            The stdout of the process will be in a test suite
                            variable named ${output}
                        </doc>
                        <kw name="Run" library="OperatingSystem">
                            <var>${output}</var>
                            <arg>${ACTIVATE_VENV} rfhub2-cli -a http://${HOST}:8000 ${options}</arg>
                            <doc>Runs the given command in the system and returns the output.</doc>
                            <msg timestamp="20210830 17:36:50.588" level="INFO">Running command ' rfhub2-cli -a
                                http://127.0.0.1:8000 --load-mode=insert --no-installed-keywords --include ❤️OR👻
                                --exclude ❤️AND👻 C:\repo\rfhub2\tests\acceptance\resources\..\..\fixtures/initial/ 2&gt;&amp;1'.
                            </msg>
                            <msg timestamp="20210830 17:36:52.467" level="INFO">${output} = PyLibrary library with 0
                                keywords loaded.
                                ResourceLibrary1 library with 0 keywords loaded.
                                ResourceLibrary2 library with 0 keywords loaded.

                                Successfully loaded 3 collections with 0 keywords.
                            </msg>
                            <status status="PASS" starttime="20210830 17:36:50.436" endtime="20210830 17:36:52.467"/>
                        </kw>
                        <kw name="Set Suite Variable" library="BuiltIn">
                            <arg>${output}</arg>
                            <doc>Makes a variable available everywhere within the scope of the current suite.</doc>
                            <msg timestamp="20210830 17:36:52.468" level="INFO">${output} = PyLibrary library with 0
                                keywords loaded.
                                ResourceLibrary1 library with 0 keywords loaded.
                                ResourceLibrary2 library with 0 keywords loaded.

                                Successfully loaded 3 collections with 0 keywords.
                            </msg>
                            <status status="PASS" starttime="20210830 17:36:52.467" endtime="20210830 17:36:52.468"/>
                        </kw>
                        <status status="PASS" starttime="20210830 17:36:50.435" endtime="20210830 17:36:52.468"/>
                    </kw>
                    <kw name="Api Should Have ${n} Collections And ${m} Keywords"
                        sourcename="Api Should Have ${n} Collections And ${m} Keywords">
                        <kw name="collections Endpoint Should Have ${n} Items" library="keywords"
                            sourcename="${endpoint} Endpoint Should Have ${n} Items">
                            <kw name="Get Request For Endpoint" library="keywords">
                                <var>${response}</var>
                                <arg>endpoint=${endpoint}</arg>
                                <kw name="Create Session" library="RequestsLibrary">
                                    <arg>tmp</arg>
                                    <arg>http://${HOST}:8000/api/v1</arg>
                                    <doc>Create Session: create a HTTP session to a server</doc>
                                    <msg timestamp="20210830 17:36:52.473" level="INFO">Creating Session using :
                                        alias=tmp, url=http://127.0.0.1:8000/api/v1, headers={}, cookies={}, auth=None,
                                        timeout=None, proxies=None, verify=False, debug=0
                                    </msg>
                                    <status status="PASS" starttime="20210830 17:36:52.473"
                                            endtime="20210830 17:36:52.473"/>
                                </kw>
                                <kw name="Get On Session" library="RequestsLibrary">
                                    <var>${response}</var>
                                    <arg>tmp</arg>
                                    <arg>${endpoint}/</arg>
                                    <arg>params=${params}</arg>
                                    <doc>Sends a GET request on a previously created HTTP Session.</doc>
                                    <msg timestamp="20210830 17:36:52.488" level="INFO">GET Request :
                                        url=http://127.0.0.1:8000/api/v1/collections/?None
                                        path_url=/api/v1/collections/?None
                                        headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip,
                                        deflate', 'Accept': '*/*', 'Connection': 'keep-alive'}
                                        body=None
                                    </msg>
                                    <msg timestamp="20210830 17:36:52.488" level="INFO">GET Response :
                                        url=http://127.0.0.1:8000/api/v1/collections/?None
                                        status=200, reason=OK
                                        headers={'date': 'Mon, 30 Aug 2021 15:36:51 GMT', 'server': 'uvicorn',
                                        'content-length': '1315', 'content-type': 'application/json'}
                                        body=[{"name":"PyLibrary","type":"LIBRARY","version":"1.0.0","scope":"TEST","named_args":null,"path":"C:\\repo\\rfhub2\\tests\\acceptance\\resources\\..\\..\\fixtures\\initial\\PyLibrary","doc":"Documentation
                                        for library
                                        ``PyLibrary``.","doc_format":"ROBOT","id":1,"keywords":[],"synopsis":"Documentation
                                        for library ``PyLibrary``.","html_doc":"&lt;p&gt;Documentation for library &lt;code&gt;PyLibrary&lt;/code&gt;.&lt;/p&gt;"},{"name":"ResourceLibrary1","type":"RESOURCE","version":"","scope":"GLOBAL","named_args":null,"path":"C:\\repo\\rfhub2\\tests\\acceptance\\resources\\..\\..\\fixtures\\initial\\ResourceLibrary1.resource","doc":"Documentation
                                        for resource file
                                        ``ResourceLibrary1``.","doc_format":"ROBOT","id":2,"keywords":[],"synopsis":"Documentation
                                        for resource file ``ResourceLibrary1``.","html_doc":"&lt;p&gt;Documentation for
                                        resource file &lt;code&gt;ResourceLibrary1&lt;/code&gt;.&lt;/p&gt;"},{"name":"ResourceLibrary2","type":"RESOURCE","version":"","scope":"GLOBAL","named_args":null,"path":"C:\\repo\\rfhub2\\tests\\acceptance\\resources\\..\\..\\fixtures\\initial\\ResourceLibrary2.resource","doc":"Documentation
                                        for resource file
                                        ``ResourceLibrary2``.","doc_format":"ROBOT","id":3,"keywords":[],"synopsis":"Documentation
                                        for resource file ``ResourceLibrary2``.","html_doc":"&lt;p&gt;Documentation for
                                        resource file &lt;code&gt;ResourceLibrary2&lt;/code&gt;.&lt;/p&gt;"}]
                                    </msg>
                                    <msg timestamp="20210830 17:36:52.489" level="INFO">${response} = &lt;Response [200]&gt;</msg>
                                    <status status="PASS" starttime="20210830 17:36:52.474"
                                            endtime="20210830 17:36:52.489"/>
                                </kw>
                                <kw name="Should Be Equal As Integers" library="BuiltIn">
                                    <arg>${response.status_code}</arg>
                                    <arg>200</arg>
                                    <doc>Fails if objects are unequal after converting them to integers.</doc>
                                    <msg timestamp="20210830 17:36:52.491" level="INFO">Argument types are:
                                        &lt;class 'int'&gt;
                                        &lt;type 'unicode'&gt;
                                    </msg>
                                    <status status="PASS" starttime="20210830 17:36:52.489"
                                            endtime="20210830 17:36:52.491"/>
                                </kw>
                                <msg timestamp="20210830 17:36:52.494" level="INFO">${response} = [{'name': 'PyLibrary',
                                    'type': 'LIBRARY', 'version': '1.0.0', 'scope': 'TEST', 'named_args': None, 'path':
                                    'C:\\repo\\rfhub2\\tests\\acceptance\\resources\\..\\..\\fixtures\\initial\\PyLibrary',
                                    'doc'...
                                </msg>
                                <status status="PASS" starttime="20210830 17:36:52.470"
                                        endtime="20210830 17:36:52.494"/>
                            </kw>
                            <kw name="Length Should Be" library="BuiltIn">
                                <arg>${response}</arg>
                                <arg>${n}</arg>
                                <doc>Verifies that the length of the given item is correct.</doc>
                                <msg timestamp="20210830 17:36:52.494" level="INFO">Length is 3</msg>
                                <status status="PASS" starttime="20210830 17:36:52.494"
                                        endtime="20210830 17:36:52.494"/>
                            </kw>
                            <status status="PASS" starttime="20210830 17:36:52.469" endtime="20210830 17:36:52.495"/>
                        </kw>
                        <kw name="keywords Endpoint Should Have ${m} Items" library="keywords"
                            sourcename="${endpoint} Endpoint Should Have ${n} Items">
                            <kw name="Get Request For Endpoint" library="keywords">
                                <var>${response}</var>
                                <arg>endpoint=${endpoint}</arg>
                                <kw name="Create Session" library="RequestsLibrary">
                                    <arg>tmp</arg>
                                    <arg>http://${HOST}:8000/api/v1</arg>
                                    <doc>Create Session: create a HTTP session to a server</doc>
                                    <msg timestamp="20210830 17:36:52.497" level="INFO">Creating Session using :
                                        alias=tmp, url=http://127.0.0.1:8000/api/v1, headers={}, cookies={}, auth=None,
                                        timeout=None, proxies=None, verify=False, debug=0
                                    </msg>
                                    <status status="PASS" starttime="20210830 17:36:52.496"
                                            endtime="20210830 17:36:52.497"/>
                                </kw>
                                <kw name="Get On Session" library="RequestsLibrary">
                                    <var>${response}</var>
                                    <arg>tmp</arg>
                                    <arg>${endpoint}/</arg>
                                    <arg>params=${params}</arg>
                                    <doc>Sends a GET request on a previously created HTTP Session.</doc>
                                    <msg timestamp="20210830 17:36:52.508" level="INFO">GET Request :
                                        url=http://127.0.0.1:8000/api/v1/keywords/?None
                                        path_url=/api/v1/keywords/?None
                                        headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip,
                                        deflate', 'Accept': '*/*', 'Connection': 'keep-alive'}
                                        body=None
                                    </msg>
                                    <msg timestamp="20210830 17:36:52.508" level="INFO">GET Response :
                                        url=http://127.0.0.1:8000/api/v1/keywords/?None
                                        status=200, reason=OK
                                        headers={'date': 'Mon, 30 Aug 2021 15:36:52 GMT', 'server': 'uvicorn',
                                        'content-length': '2', 'content-type': 'application/json'}
                                        body=[]
                                    </msg>
                                    <msg timestamp="20210830 17:36:52.508" level="INFO">${response} = &lt;Response [200]&gt;</msg>
                                    <status status="PASS" starttime="20210830 17:36:52.497"
                                            endtime="20210830 17:36:52.508"/>
                                </kw>
                                <kw name="Should Be Equal As Integers" library="BuiltIn">
                                    <arg>${response.status_code}</arg>
                                    <arg>200</arg>
                                    <doc>Fails if objects are unequal after converting them to integers.</doc>
                                    <msg timestamp="20210830 17:36:52.510" level="INFO">Argument types are:
                                        &lt;class 'int'&gt;
                                        &lt;type 'unicode'&gt;
                                    </msg>
                                    <status status="PASS" starttime="20210830 17:36:52.508"
                                            endtime="20210830 17:36:52.511"/>
                                </kw>
                                <msg timestamp="20210830 17:36:52.513" level="INFO">${response} = []</msg>
                                <status status="PASS" starttime="20210830 17:36:52.495"
                                        endtime="20210830 17:36:52.513"/>
                            </kw>
                            <kw name="Length Should Be" library="BuiltIn">
                                <arg>${response}</arg>
                                <arg>${n}</arg>
                                <doc>Verifies that the length of the given item is correct.</doc>
                                <msg timestamp="20210830 17:36:52.513" level="INFO">Length is 0</msg>
                                <msg timestamp="20210830 17:36:52.514" level="FAIL">Length of '[]' should be 4 but is
                                    0.
                                </msg>
                                <status status="FAIL" starttime="20210830 17:36:52.513"
                                        endtime="20210830 17:36:52.514"/>
                            </kw>
                            <status status="FAIL" starttime="20210830 17:36:52.495" endtime="20210830 17:36:52.517"/>
                        </kw>
                        <status status="FAIL" starttime="20210830 17:36:52.468" endtime="20210830 17:36:52.519"/>
                    </kw>
                    <status status="FAIL" starttime="20210830 17:36:50.434" endtime="20210830 17:36:52.520"/>
                </kw>
                <kw name="Restore Initial Fixtures" library="keywords" type="TEARDOWN">
                    <kw name="Remove Directory" library="OperatingSystem">
                        <arg>${INITIAL_FIXTURES}</arg>
                        <arg>recursive=True</arg>
                        <doc>Removes the directory pointed to by the given ``path``.</doc>
                        <msg timestamp="20210830 17:36:52.527" level="INFO" html="true">Removed directory '&lt;a
                            href="file://C:\repo\rfhub2\tests\fixtures\initial"&gt;C:\repo\rfhub2\tests\fixtures\initial&lt;/a&gt;'.
                        </msg>
                        <status status="PASS" starttime="20210830 17:36:52.521" endtime="20210830 17:36:52.527"/>
                    </kw>
                    <kw name="Copy Directory" library="OperatingSystem">
                        <arg>${BACKUP_FIXTURES}</arg>
                        <arg>${INITIAL_FIXTURES}</arg>
                        <doc>Copies the source directory into the destination.</doc>
                        <msg timestamp="20210830 17:36:52.600" level="INFO" html="true">Copied directory from '&lt;a
                            href="file://C:\repo\rfhub2\tests\fixtures\initial_bkp"&gt;C:\repo\rfhub2\tests\fixtures\initial_bkp&lt;/a&gt;'
                            to '&lt;a href="file://C:\repo\rfhub2\tests\fixtures\initial"&gt;C:\repo\rfhub2\tests\fixtures\initial&lt;/a&gt;'.
                        </msg>
                        <status status="PASS" starttime="20210830 17:36:52.527" endtime="20210830 17:36:52.600"/>
                    </kw>
                    <kw name="Remove Directory" library="OperatingSystem">
                        <arg>${BACKUP_FIXTURES}</arg>
                        <arg>recursive=True</arg>
                        <doc>Removes the directory pointed to by the given ``path``.</doc>
                        <msg timestamp="20210830 17:36:52.639" level="INFO" html="true">Removed directory '&lt;a
                            href="file://C:\repo\rfhub2\tests\fixtures\initial_bkp"&gt;C:\repo\rfhub2\tests\fixtures\initial_bkp&lt;/a&gt;'.
                        </msg>
                        <status status="PASS" starttime="20210830 17:36:52.600" endtime="20210830 17:36:52.640"/>
                    </kw>
                    <status status="PASS" starttime="20210830 17:36:52.520" endtime="20210830 17:36:52.640"/>
                </kw>
                <doc>Test loading Keywords and including + excluding tags</doc>
                <tag>include-exclude</tag>
                <status status="FAIL" starttime="20210830 17:36:48.300" endtime="20210830 17:36:52.640">Several failures
                    occurred:

                    1) Length of '[]' should be 3 but is 0.

                    2) Length of '[]' should be 4 but is 0.
                </status>
            </test>
            <test id="s1-s2-t20"
                  name="Running Cli With Merge Load Mode And Including + Excluding Tags Should Load Proper Keywords">
                <kw name="Run Keywords" library="BuiltIn" type="SETUP">
                    <arg>Backup And Switch Initial With Include_Exclude Fixtures</arg>
                    <doc>Executes all the given keywords in a sequence.</doc>
                    <kw name="Backup And Switch Initial With Include_Exclude Fixtures" library="keywords">
                        <kw name="Move Directory" library="OperatingSystem">
                            <arg>${INITIAL_FIXTURES}</arg>
                            <arg>${BACKUP_FIXTURES}</arg>
                            <doc>Moves the source directory into a destination.</doc>
                            <msg timestamp="20210830 17:36:52.646" level="INFO" html="true">Moved directory from '&lt;a
                                href="file://C:\repo\rfhub2\tests\fixtures\initial"&gt;C:\repo\rfhub2\tests\fixtures\initial&lt;/a&gt;'
                                to '&lt;a href="file://C:\repo\rfhub2\tests\fixtures\initial_bkp"&gt;C:\repo\rfhub2\tests\fixtures\initial_bkp&lt;/a&gt;'.
                            </msg>
                            <status status="PASS" starttime="20210830 17:36:52.643" endtime="20210830 17:36:52.646"/>
                        </kw>
                        <kw name="Copy Directory" library="OperatingSystem">
                            <arg>${INCLUDE_EXCLUDE_FIXTURES}</arg>
                            <arg>${INITIAL_FIXTURES}</arg>
                            <doc>Copies the source directory into the destination.</doc>
                            <msg timestamp="20210830 17:36:52.662" level="INFO" html="true">Copied directory from '&lt;a
                                href="file://C:\repo\rfhub2\tests\fixtures\include_exclude"&gt;C:\repo\rfhub2\tests\fixtures\include_exclude&lt;/a&gt;'
                                to '&lt;a href="file://C:\repo\rfhub2\tests\fixtures\initial"&gt;C:\repo\rfhub2\tests\fixtures\initial&lt;/a&gt;'.
                            </msg>
                            <status status="PASS" starttime="20210830 17:36:52.646" endtime="20210830 17:36:52.662"/>
                        </kw>
                        <status status="PASS" starttime="20210830 17:36:52.642" endtime="20210830 17:36:52.663"/>
                    </kw>
                    <status status="PASS" starttime="20210830 17:36:52.642" endtime="20210830 17:36:52.663"/>
                </kw>
                <kw name="Run Cli Package With Options" library="keywords">
                    <arg>--load-mode=insert --no-installed-keywords --exclude 👻 ${INITIAL_FIXTURES}</arg>
                    <doc>Attempt to run the rfhub2-cli package with the given options
                        The stdout of the process will be in a test suite
                        variable named ${output}
                    </doc>
                    <kw name="Run" library="OperatingSystem">
                        <var>${output}</var>
                        <arg>${ACTIVATE_VENV} rfhub2-cli -a http://${HOST}:8000 ${options}</arg>
                        <doc>Runs the given command in the system and returns the output.</doc>
                        <msg timestamp="20210830 17:36:52.818" level="INFO">Running command ' rfhub2-cli -a
                            http://127.0.0.1:8000 --load-mode=insert --no-installed-keywords --exclude 👻
                            C:\repo\rfhub2\tests\acceptance\resources\..\..\fixtures/initial/ 2&gt;&amp;1'.
                        </msg>
                        <msg timestamp="20210830 17:36:54.831" level="INFO">${output} = PyLibrary library with 1
                            keywords loaded.
                            ResourceLibrary1 library with 2 keywords loaded.
                            ResourceLibrary2 library with 4 keywords loaded.

                            Successfully loaded 3 collections with 7 keywords.
                        </msg>
                        <status status="PASS" starttime="20210830 17:36:52.664" endtime="20210830 17:36:54.831"/>
                    </kw>
                    <kw name="Set Suite Variable" library="BuiltIn">
                        <arg>${output}</arg>
                        <doc>Makes a variable available everywhere within the scope of the current suite.</doc>
                        <msg timestamp="20210830 17:36:54.831" level="INFO">${output} = PyLibrary library with 1
                            keywords loaded.
                            ResourceLibrary1 library with 2 keywords loaded.
                            ResourceLibrary2 library with 4 keywords loaded.

                            Successfully loaded 3 collections with 7 keywords.
                        </msg>
                        <status status="PASS" starttime="20210830 17:36:54.831" endtime="20210830 17:36:54.841"/>
                    </kw>
                    <status status="PASS" starttime="20210830 17:36:52.663" endtime="20210830 17:36:54.841"/>
                </kw>
                <kw name="Api Should Have 3 Collections And 9 Keywords"
                    sourcename="Api Should Have ${n} Collections And ${m} Keywords">
                    <kw name="collections Endpoint Should Have ${n} Items" library="keywords"
                        sourcename="${endpoint} Endpoint Should Have ${n} Items">
                        <kw name="Get Request For Endpoint" library="keywords">
                            <var>${response}</var>
                            <arg>endpoint=${endpoint}</arg>
                            <kw name="Create Session" library="RequestsLibrary">
                                <arg>tmp</arg>
                                <arg>http://${HOST}:8000/api/v1</arg>
                                <doc>Create Session: create a HTTP session to a server</doc>
                                <msg timestamp="20210830 17:36:54.841" level="INFO">Creating Session using : alias=tmp,
                                    url=http://127.0.0.1:8000/api/v1, headers={}, cookies={}, auth=None, timeout=None,
                                    proxies=None, verify=False, debug=0
                                </msg>
                                <status status="PASS" starttime="20210830 17:36:54.841"
                                        endtime="20210830 17:36:54.841"/>
                            </kw>
                            <kw name="Get On Session" library="RequestsLibrary">
                                <var>${response}</var>
                                <arg>tmp</arg>
                                <arg>${endpoint}/</arg>
                                <arg>params=${params}</arg>
                                <doc>Sends a GET request on a previously created HTTP Session.</doc>
                                <msg timestamp="20210830 17:36:54.861" level="INFO">GET Request :
                                    url=http://127.0.0.1:8000/api/v1/collections/?None
                                    path_url=/api/v1/collections/?None
                                    headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate',
                                    'Accept': '*/*', 'Connection': 'keep-alive'}
                                    body=None
                                </msg>
                                <msg timestamp="20210830 17:36:54.861" level="INFO">GET Response :
                                    url=http://127.0.0.1:8000/api/v1/collections/?None
                                    status=200, reason=OK
                                    headers={'date': 'Mon, 30 Aug 2021 15:36:54 GMT', 'server': 'uvicorn',
                                    'content-length': '2138', 'content-type': 'application/json'}
                                    body=[{"name":"PyLibrary","type":"LIBRARY","version":"1.0.0","scope":"TEST","named_args":null,"path":"C:\\repo\\rfhub2\\tests\\acceptance\\resources\\..\\..\\fixtures\\initial\\PyLibrary","doc":"Documentation
                                    for library ``PyLibrary``.","doc_format":"ROBOT","id":1,"keywords":[{"name":"Keyword
                                    No
                                    Tag","doc":"","args":"","tags":[],"id":1,"synopsis":"","html_doc":"","arg_string":""}],"synopsis":"Documentation
                                    for library ``PyLibrary``.","html_doc":"&lt;p&gt;Documentation for library &lt;code&gt;PyLibrary&lt;/code&gt;.&lt;/p&gt;"},{"name":"ResourceLibrary1","type":"RESOURCE","version":"","scope":"GLOBAL","named_args":null,"path":"C:\\repo\\rfhub2\\tests\\acceptance\\resources\\..\\..\\fixtures\\initial\\ResourceLibrary1.resource","doc":"Documentation
                                    for resource file
                                    ``ResourceLibrary1``.","doc_format":"ROBOT","id":2,"keywords":[{"name":"Keyword
                                    Ghost","doc":"","args":"","tags":["👻"],"id":2,"synopsis":"","html_doc":"","arg_string":""},{"name":"Keyword
                                    Rocket","doc":"","args":"","tags":["🚀"],"id":3,"synopsis":"","html_doc":"","arg_string":""}],"synopsis":"Documentation
                                    for resource file ``ResourceLibrary1``.","html_doc":"&lt;p&gt;Documentation for
                                    resource file &lt;code&gt;ResourceLibrary1&lt;/code&gt;.&lt;/p&gt;"},{"name":"ResourceLibrary2","type":"RESOURCE","version":"","scope":"GLOBAL","named_args":null,"path":"C:\\repo\\rfhub2\\tests\\acceptance\\resources\\..\\..\\fixtures\\initial\\ResourceLibrary2.resource","doc":"Documentation
                                    for resource file
                                    ``ResourceLibrary2``.","doc_format":"ROBOT","id":3,"keywords":[{"name":"Keyword
                                    Airplane In The
                                    Clouds","doc":"","args":"","tags":["☁️⛅️☁️✈️☁️☁️"],"id":4,"synopsis":"","html_doc":"","arg_string":""},{"name":"Keyword
                                    No
                                    Tag","doc":"","args":"","tags":[],"id":5,"synopsis":"","html_doc":"","arg_string":""},{"name":"Keyword
                                    Rocket","doc":"","args":"","tags":["🚀"],"id":6,"synopsis":"","html_doc":"","arg_string":""},{"name":"Keyword
                                    TextualTag","doc":"","args":"","tags":["STR_tag"],"id":7,"synopsis":"","html_doc":"","arg_string":""}],"synopsis":"Documentation
                                    for resource file ``ResourceLibrary2``.","html_doc":"&lt;p&gt;Documentation for
                                    resource file &lt;code&gt;ResourceLibrary2&lt;/code&gt;.&lt;/p&gt;"}]
                                </msg>
                                <msg timestamp="20210830 17:36:54.861" level="INFO">${response} = &lt;Response
                                    [200]&gt;
                                </msg>
                                <status status="PASS" starttime="20210830 17:36:54.841"
                                        endtime="20210830 17:36:54.861"/>
                            </kw>
                            <kw name="Should Be Equal As Integers" library="BuiltIn">
                                <arg>${response.status_code}</arg>
                                <arg>200</arg>
                                <doc>Fails if objects are unequal after converting them to integers.</doc>
                                <msg timestamp="20210830 17:36:54.861" level="INFO">Argument types are:
                                    &lt;class 'int'&gt;
                                    &lt;type 'unicode'&gt;
                                </msg>
                                <status status="PASS" starttime="20210830 17:36:54.861"
                                        endtime="20210830 17:36:54.861"/>
                            </kw>
                            <msg timestamp="20210830 17:36:54.861" level="INFO">${response} = [{'name': 'PyLibrary',
                                'type': 'LIBRARY', 'version': '1.0.0', 'scope': 'TEST', 'named_args': None, 'path':
                                'C:\\repo\\rfhub2\\tests\\acceptance\\resources\\..\\..\\fixtures\\initial\\PyLibrary',
                                'doc'...
                            </msg>
                            <status status="PASS" starttime="20210830 17:36:54.841" endtime="20210830 17:36:54.861"/>
                        </kw>
                        <kw name="Length Should Be" library="BuiltIn">
                            <arg>${response}</arg>
                            <arg>${n}</arg>
                            <doc>Verifies that the length of the given item is correct.</doc>
                            <msg timestamp="20210830 17:36:54.861" level="INFO">Length is 3</msg>
                            <status status="PASS" starttime="20210830 17:36:54.861" endtime="20210830 17:36:54.861"/>
                        </kw>
                        <status status="PASS" starttime="20210830 17:36:54.841" endtime="20210830 17:36:54.861"/>
                    </kw>
                    <kw name="keywords Endpoint Should Have ${m} Items" library="keywords"
                        sourcename="${endpoint} Endpoint Should Have ${n} Items">
                        <kw name="Get Request For Endpoint" library="keywords">
                            <var>${response}</var>
                            <arg>endpoint=${endpoint}</arg>
                            <kw name="Create Session" library="RequestsLibrary">
                                <arg>tmp</arg>
                                <arg>http://${HOST}:8000/api/v1</arg>
                                <doc>Create Session: create a HTTP session to a server</doc>
                                <msg timestamp="20210830 17:36:54.861" level="INFO">Creating Session using : alias=tmp,
                                    url=http://127.0.0.1:8000/api/v1, headers={}, cookies={}, auth=None, timeout=None,
                                    proxies=None, verify=False, debug=0
                                </msg>
                                <status status="PASS" starttime="20210830 17:36:54.861"
                                        endtime="20210830 17:36:54.861"/>
                            </kw>
                            <kw name="Get On Session" library="RequestsLibrary">
                                <var>${response}</var>
                                <arg>tmp</arg>
                                <arg>${endpoint}/</arg>
                                <arg>params=${params}</arg>
                                <doc>Sends a GET request on a previously created HTTP Session.</doc>
                                <msg timestamp="20210830 17:36:54.881" level="INFO">GET Request :
                                    url=http://127.0.0.1:8000/api/v1/keywords/?None
                                    path_url=/api/v1/keywords/?None
                                    headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate',
                                    'Accept': '*/*', 'Connection': 'keep-alive'}
                                    body=None
                                </msg>
                                <msg timestamp="20210830 17:36:54.881" level="INFO">GET Response :
                                    url=http://127.0.0.1:8000/api/v1/keywords/?None
                                    status=200, reason=OK
                                    headers={'date': 'Mon, 30 Aug 2021 15:36:54 GMT', 'server': 'uvicorn',
                                    'content-length': '1156', 'content-type': 'application/json'}
                                    body=[{"name":"Keyword Airplane In The
                                    Clouds","doc":"","args":"","tags":["☁️⛅️☁️✈️☁️☁️"],"id":4,"synopsis":"","html_doc":"","arg_string":"","collection":{"id":3,"name":"ResourceLibrary2"}},{"name":"Keyword
                                    Ghost","doc":"","args":"","tags":["👻"],"id":2,"synopsis":"","html_doc":"","arg_string":"","collection":{"id":2,"name":"ResourceLibrary1"}},{"name":"Keyword
                                    No
                                    Tag","doc":"","args":"","tags":[],"id":1,"synopsis":"","html_doc":"","arg_string":"","collection":{"id":1,"name":"PyLibrary"}},{"name":"Keyword
                                    No
                                    Tag","doc":"","args":"","tags":[],"id":5,"synopsis":"","html_doc":"","arg_string":"","collection":{"id":3,"name":"ResourceLibrary2"}},{"name":"Keyword
                                    Rocket","doc":"","args":"","tags":["🚀"],"id":3,"synopsis":"","html_doc":"","arg_string":"","collection":{"id":2,"name":"ResourceLibrary1"}},{"name":"Keyword
                                    Rocket","doc":"","args":"","tags":["🚀"],"id":6,"synopsis":"","html_doc":"","arg_string":"","collection":{"id":3,"name":"ResourceLibrary2"}},{"name":"Keyword
                                    TextualTag","doc":"","args":"","tags":["STR_tag"],"id":7,"synopsis":"","html_doc":"","arg_string":"","collection":{"id":3,"name":"ResourceLibrary2"}}]
                                </msg>
                                <msg timestamp="20210830 17:36:54.881" level="INFO">${response} = &lt;Response
                                    [200]&gt;
                                </msg>
                                <status status="PASS" starttime="20210830 17:36:54.861"
                                        endtime="20210830 17:36:54.881"/>
                            </kw>
                            <kw name="Should Be Equal As Integers" library="BuiltIn">
                                <arg>${response.status_code}</arg>
                                <arg>200</arg>
                                <doc>Fails if objects are unequal after converting them to integers.</doc>
                                <msg timestamp="20210830 17:36:54.881" level="INFO">Argument types are:
                                    &lt;class 'int'&gt;
                                    &lt;type 'unicode'&gt;
                                </msg>
                                <status status="PASS" starttime="20210830 17:36:54.881"
                                        endtime="20210830 17:36:54.881"/>
                            </kw>
                            <msg timestamp="20210830 17:36:54.891" level="INFO">${response} = [{'name': 'Keyword
                                Airplane In The Clouds', 'doc': '', 'args': '', 'tags': ['☁️⛅️☁️✈️☁️☁️'], 'id': 4,
                                'synopsis': '', 'html_doc': '', 'arg_string': '', 'collection': {'id': 3, 'name':
                                'ResourceLibrary...
                            </msg>
                            <status status="PASS" starttime="20210830 17:36:54.861" endtime="20210830 17:36:54.891"/>
                        </kw>
                        <kw name="Length Should Be" library="BuiltIn">
                            <arg>${response}</arg>
                            <arg>${n}</arg>
                            <doc>Verifies that the length of the given item is correct.</doc>
                            <msg timestamp="20210830 17:36:54.891" level="INFO">Length is 7</msg>
                            <msg timestamp="20210830 17:36:54.891" level="FAIL">Length of '[{'name': 'Keyword Airplane
                                In The Clouds', 'doc': '', 'args': '', 'tags': ['☁️⛅️☁️✈️☁️☁️'], 'id': 4, 'synopsis':
                                '', 'html_doc': '', 'arg_string': '', 'collection': {'id': 3, 'name':
                                'ResourceLibrary2'}}, {'name': 'Keyword Ghost', 'doc': '', 'args': '', 'tags': ['👻'],
                                'id': 2, 'synopsis': '', 'html_doc': '', 'arg_string': '', 'collection': {'id': 2,
                                'name': 'ResourceLibrary1'}}, {'name': 'Keyword No Tag', 'doc': '', 'args': '', 'tags':
                                [], 'id': 1, 'synopsis': '', 'html_doc': '', 'arg_string': '', 'collection': {'id': 1,
                                'name': 'PyLibrary'}}, {'name': 'Keyword No Tag', 'doc': '', 'args': '', 'tags': [],
                                'id': 5, 'synopsis': '', 'html_doc': '', 'arg_string': '', 'collection': {'id': 3,
                                'name': 'ResourceLibrary2'}}, {'name': 'Keyword Rocket', 'doc': '', 'args': '', 'tags':
                                ['🚀'], 'id': 3, 'synopsis': '', 'html_doc': '', 'arg_string': '', 'collection': {'id':
                                2, 'name': 'ResourceLibrary1'}}, {'name': 'Keyword Rocket', 'doc': '', 'args': '',
                                'tags': ['🚀'], 'id': 6, 'synopsis': '', 'html_doc': '', 'arg_string': '', 'collection':
                                {'id': 3, 'name': 'ResourceLibrary2'}}, {'name': 'Keyword TextualTag', 'doc': '',
                                'args': '', 'tags': ['STR_tag'], 'id': 7, 'synopsis': '', 'html_doc': '', 'arg_string':
                                '', 'collection': {'id': 3, 'name': 'ResourceLibrary2'}}]' should be 9 but is 7.
                            </msg>
                            <status status="FAIL" starttime="20210830 17:36:54.891" endtime="20210830 17:36:54.891"/>
                        </kw>
                        <status status="FAIL" starttime="20210830 17:36:54.861" endtime="20210830 17:36:54.891"/>
                    </kw>
                    <status status="FAIL" starttime="20210830 17:36:54.841" endtime="20210830 17:36:54.891"/>
                </kw>
                <kw name="Run Cli Package With Options" library="keywords">
                    <arg>--load-mode=merge --no-installed-keywords --include 👻 ${INITIAL_FIXTURES}</arg>
                    <doc>Attempt to run the rfhub2-cli package with the given options
                        The stdout of the process will be in a test suite
                        variable named ${output}
                    </doc>
                    <status status="NOT RUN" starttime="20210830 17:36:54.891" endtime="20210830 17:36:54.891"/>
                </kw>
                <kw name="Api Should Have 3 Collections And 5 Keywords"
                    sourcename="Api Should Have ${n} Collections And ${m} Keywords">
                    <status status="NOT RUN" starttime="20210830 17:36:54.891" endtime="20210830 17:36:54.891"/>
                </kw>
                <kw name="Restore Initial Fixtures" library="keywords" type="TEARDOWN">
                    <kw name="Remove Directory" library="OperatingSystem">
                        <arg>${INITIAL_FIXTURES}</arg>
                        <arg>recursive=True</arg>
                        <doc>Removes the directory pointed to by the given ``path``.</doc>
                        <msg timestamp="20210830 17:36:54.901" level="INFO" html="true">Removed directory '&lt;a
                            href="file://C:\repo\rfhub2\tests\fixtures\initial"&gt;C:\repo\rfhub2\tests\fixtures\initial&lt;/a&gt;'.
                        </msg>
                        <status status="PASS" starttime="20210830 17:36:54.891" endtime="20210830 17:36:54.901"/>
                    </kw>
                    <kw name="Copy Directory" library="OperatingSystem">
                        <arg>${BACKUP_FIXTURES}</arg>
                        <arg>${INITIAL_FIXTURES}</arg>
                        <doc>Copies the source directory into the destination.</doc>
                        <msg timestamp="20210830 17:36:54.971" level="INFO" html="true">Copied directory from '&lt;a
                            href="file://C:\repo\rfhub2\tests\fixtures\initial_bkp"&gt;C:\repo\rfhub2\tests\fixtures\initial_bkp&lt;/a&gt;'
                            to '&lt;a href="file://C:\repo\rfhub2\tests\fixtures\initial"&gt;C:\repo\rfhub2\tests\fixtures\initial&lt;/a&gt;'.
                        </msg>
                        <status status="PASS" starttime="20210830 17:36:54.901" endtime="20210830 17:36:54.971"/>
                    </kw>
                    <kw name="Remove Directory" library="OperatingSystem">
                        <arg>${BACKUP_FIXTURES}</arg>
                        <arg>recursive=True</arg>
                        <doc>Removes the directory pointed to by the given ``path``.</doc>
                        <msg timestamp="20210830 17:36:55.011" level="INFO" html="true">Removed directory '&lt;a
                            href="file://C:\repo\rfhub2\tests\fixtures\initial_bkp"&gt;C:\repo\rfhub2\tests\fixtures\initial_bkp&lt;/a&gt;'.
                        </msg>
                        <status status="PASS" starttime="20210830 17:36:54.971" endtime="20210830 17:36:55.011"/>
                    </kw>
                    <status status="PASS" starttime="20210830 17:36:54.891" endtime="20210830 17:36:55.011"/>
                </kw>
                <doc>Test loading Keywords and including + excluding tags</doc>
                <tag>include-exclude</tag>
                <tag>merge</tag>
                <status status="SKIP" starttime="20210830 17:36:52.641" endtime="20210830 17:36:55.011">Test failed but
                    its tags matched '--SkipOnFailure' and it was marked skipped.

                    Original failure:
                    Length of '[{'name': 'Keyword Airplane In The Clouds', 'doc': '', 'args': '', 'tags':
                    ['☁️⛅️☁️✈️☁️☁️'], 'id': 4, 'synopsis': '', 'html_doc': '', 'arg_string': '', 'collection': {'id': 3,
                    'name': 'ResourceLibrary2'}}, {'name': 'Keyword Ghost', 'doc': '', 'args': '', 'tags': ['👻'], 'id':
                    2, 'synopsis': '', 'html_doc': '', 'arg_string': '', 'collection': {'id': 2, 'name':
                    'ResourceLibrary1'}}, {'name': 'Keyword No Tag', 'doc': '', 'args': '', 'tags': [], 'id': 1,
                    'synopsis': '', 'html_doc': '', 'arg_string': '', 'collection': {'id': 1, 'name': 'PyLibrary'}},
                    {'name': 'Keyword No Tag', 'doc': '', 'args': '', 'tags': [], 'id': 5, 'synopsis': '', 'html_doc':
                    '', 'arg_string': '', 'collection': {'id': 3, 'name': 'ResourceLibrary2'}}, {'name': 'Keyword
                    Rocket', 'doc': '', 'args': '', 'tags': ['🚀'], 'id': 3, 'synopsis': '', 'html_doc': '',
                    'arg_string': '', 'collection': {'id': 2, 'name': 'ResourceLibrary1'}}, {'name': 'Keyword Rocket',
                    'doc': '', 'args': '', 'tags': ['🚀'], 'id': 6, 'synopsis': '', 'html_doc': '', 'arg_string': '',
                    'collection': {'id': 3, 'name': 'ResourceLibrary2'}}, {'name': 'Keyword TextualTag', 'doc': '',
                    'args': '', 'tags': ['STR_tag'], 'id': 7, 'synopsis': '', 'html_doc': '', 'arg_string': '',
                    'collection': {'id': 3, 'name': 'ResourceLibrary2'}}]' should be 9 but is 7.
                </status>
            </test>
            <test id="s1-s2-t21"
                  name="Running Cli With Append Load Mode And Including + Excluding Tags Should Load Proper Keywords">
                <kw name="Run Keywords" library="BuiltIn" type="SETUP">
                    <arg>Backup And Switch Initial With Include_Exclude Fixtures</arg>
                    <doc>Executes all the given keywords in a sequence.</doc>
                    <kw name="Backup And Switch Initial With Include_Exclude Fixtures" library="keywords">
                        <kw name="Move Directory" library="OperatingSystem">
                            <arg>${INITIAL_FIXTURES}</arg>
                            <arg>${BACKUP_FIXTURES}</arg>
                            <doc>Moves the source directory into a destination.</doc>
                            <msg timestamp="20210830 17:36:55.021" level="INFO" html="true">Moved directory from '&lt;a
                                href="file://C:\repo\rfhub2\tests\fixtures\initial"&gt;C:\repo\rfhub2\tests\fixtures\initial&lt;/a&gt;'
                                to '&lt;a href="file://C:\repo\rfhub2\tests\fixtures\initial_bkp"&gt;C:\repo\rfhub2\tests\fixtures\initial_bkp&lt;/a&gt;'.
                            </msg>
                            <status status="PASS" starttime="20210830 17:36:55.021" endtime="20210830 17:36:55.021"/>
                        </kw>
                        <kw name="Copy Directory" library="OperatingSystem">
                            <arg>${INCLUDE_EXCLUDE_FIXTURES}</arg>
                            <arg>${INITIAL_FIXTURES}</arg>
                            <doc>Copies the source directory into the destination.</doc>
                            <msg timestamp="20210830 17:36:55.041" level="INFO" html="true">Copied directory from '&lt;a
                                href="file://C:\repo\rfhub2\tests\fixtures\include_exclude"&gt;C:\repo\rfhub2\tests\fixtures\include_exclude&lt;/a&gt;'
                                to '&lt;a href="file://C:\repo\rfhub2\tests\fixtures\initial"&gt;C:\repo\rfhub2\tests\fixtures\initial&lt;/a&gt;'.
                            </msg>
                            <status status="PASS" starttime="20210830 17:36:55.021" endtime="20210830 17:36:55.041"/>
                        </kw>
                        <status status="PASS" starttime="20210830 17:36:55.021" endtime="20210830 17:36:55.041"/>
                    </kw>
                    <status status="PASS" starttime="20210830 17:36:55.021" endtime="20210830 17:36:55.041"/>
                </kw>
                <kw name="Run Cli Package With Options" library="keywords">
                    <arg>--load-mode=insert --no-installed-keywords --exclude 👻 ${INITIAL_FIXTURES}</arg>
                    <doc>Attempt to run the rfhub2-cli package with the given options
                        The stdout of the process will be in a test suite
                        variable named ${output}
                    </doc>
                    <kw name="Run" library="OperatingSystem">
                        <var>${output}</var>
                        <arg>${ACTIVATE_VENV} rfhub2-cli -a http://${HOST}:8000 ${options}</arg>
                        <doc>Runs the given command in the system and returns the output.</doc>
                        <msg timestamp="20210830 17:36:55.191" level="INFO">Running command ' rfhub2-cli -a
                            http://127.0.0.1:8000 --load-mode=insert --no-installed-keywords --exclude 👻
                            C:\repo\rfhub2\tests\acceptance\resources\..\..\fixtures/initial/ 2&gt;&amp;1'.
                        </msg>
                        <msg timestamp="20210830 17:36:57.151" level="INFO">${output} = PyLibrary library with 1
                            keywords loaded.
                            ResourceLibrary1 library with 2 keywords loaded.
                            ResourceLibrary2 library with 4 keywords loaded.

                            Successfully loaded 3 collections with 7 keywords.
                        </msg>
                        <status status="PASS" starttime="20210830 17:36:55.041" endtime="20210830 17:36:57.151"/>
                    </kw>
                    <kw name="Set Suite Variable" library="BuiltIn">
                        <arg>${output}</arg>
                        <doc>Makes a variable available everywhere within the scope of the current suite.</doc>
                        <msg timestamp="20210830 17:36:57.151" level="INFO">${output} = PyLibrary library with 1
                            keywords loaded.
                            ResourceLibrary1 library with 2 keywords loaded.
                            ResourceLibrary2 library with 4 keywords loaded.

                            Successfully loaded 3 collections with 7 keywords.
                        </msg>
                        <status status="PASS" starttime="20210830 17:36:57.151" endtime="20210830 17:36:57.151"/>
                    </kw>
                    <status status="PASS" starttime="20210830 17:36:55.041" endtime="20210830 17:36:57.151"/>
                </kw>
                <kw name="Api Should Have 3 Collections And 9 Keywords"
                    sourcename="Api Should Have ${n} Collections And ${m} Keywords">
                    <kw name="collections Endpoint Should Have ${n} Items" library="keywords"
                        sourcename="${endpoint} Endpoint Should Have ${n} Items">
                        <kw name="Get Request For Endpoint" library="keywords">
                            <var>${response}</var>
                            <arg>endpoint=${endpoint}</arg>
                            <kw name="Create Session" library="RequestsLibrary">
                                <arg>tmp</arg>
                                <arg>http://${HOST}:8000/api/v1</arg>
                                <doc>Create Session: create a HTTP session to a server</doc>
                                <msg timestamp="20210830 17:36:57.161" level="INFO">Creating Session using : alias=tmp,
                                    url=http://127.0.0.1:8000/api/v1, headers={}, cookies={}, auth=None, timeout=None,
                                    proxies=None, verify=False, debug=0
                                </msg>
                                <status status="PASS" starttime="20210830 17:36:57.161"
                                        endtime="20210830 17:36:57.161"/>
                            </kw>
                            <kw name="Get On Session" library="RequestsLibrary">
                                <var>${response}</var>
                                <arg>tmp</arg>
                                <arg>${endpoint}/</arg>
                                <arg>params=${params}</arg>
                                <doc>Sends a GET request on a previously created HTTP Session.</doc>
                                <msg timestamp="20210830 17:36:57.171" level="INFO">GET Request :
                                    url=http://127.0.0.1:8000/api/v1/collections/?None
                                    path_url=/api/v1/collections/?None
                                    headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate',
                                    'Accept': '*/*', 'Connection': 'keep-alive'}
                                    body=None
                                </msg>
                                <msg timestamp="20210830 17:36:57.171" level="INFO">GET Response :
                                    url=http://127.0.0.1:8000/api/v1/collections/?None
                                    status=200, reason=OK
                                    headers={'date': 'Mon, 30 Aug 2021 15:36:56 GMT', 'server': 'uvicorn',
                                    'content-length': '2138', 'content-type': 'application/json'}
                                    body=[{"name":"PyLibrary","type":"LIBRARY","version":"1.0.0","scope":"TEST","named_args":null,"path":"C:\\repo\\rfhub2\\tests\\acceptance\\resources\\..\\..\\fixtures\\initial\\PyLibrary","doc":"Documentation
                                    for library ``PyLibrary``.","doc_format":"ROBOT","id":1,"keywords":[{"name":"Keyword
                                    No
                                    Tag","doc":"","args":"","tags":[],"id":1,"synopsis":"","html_doc":"","arg_string":""}],"synopsis":"Documentation
                                    for library ``PyLibrary``.","html_doc":"&lt;p&gt;Documentation for library &lt;code&gt;PyLibrary&lt;/code&gt;.&lt;/p&gt;"},{"name":"ResourceLibrary1","type":"RESOURCE","version":"","scope":"GLOBAL","named_args":null,"path":"C:\\repo\\rfhub2\\tests\\acceptance\\resources\\..\\..\\fixtures\\initial\\ResourceLibrary1.resource","doc":"Documentation
                                    for resource file
                                    ``ResourceLibrary1``.","doc_format":"ROBOT","id":2,"keywords":[{"name":"Keyword
                                    Ghost","doc":"","args":"","tags":["👻"],"id":2,"synopsis":"","html_doc":"","arg_string":""},{"name":"Keyword
                                    Rocket","doc":"","args":"","tags":["🚀"],"id":3,"synopsis":"","html_doc":"","arg_string":""}],"synopsis":"Documentation
                                    for resource file ``ResourceLibrary1``.","html_doc":"&lt;p&gt;Documentation for
                                    resource file &lt;code&gt;ResourceLibrary1&lt;/code&gt;.&lt;/p&gt;"},{"name":"ResourceLibrary2","type":"RESOURCE","version":"","scope":"GLOBAL","named_args":null,"path":"C:\\repo\\rfhub2\\tests\\acceptance\\resources\\..\\..\\fixtures\\initial\\ResourceLibrary2.resource","doc":"Documentation
                                    for resource file
                                    ``ResourceLibrary2``.","doc_format":"ROBOT","id":3,"keywords":[{"name":"Keyword
                                    Airplane In The
                                    Clouds","doc":"","args":"","tags":["☁️⛅️☁️✈️☁️☁️"],"id":4,"synopsis":"","html_doc":"","arg_string":""},{"name":"Keyword
                                    No
                                    Tag","doc":"","args":"","tags":[],"id":5,"synopsis":"","html_doc":"","arg_string":""},{"name":"Keyword
                                    Rocket","doc":"","args":"","tags":["🚀"],"id":6,"synopsis":"","html_doc":"","arg_string":""},{"name":"Keyword
                                    TextualTag","doc":"","args":"","tags":["STR_tag"],"id":7,"synopsis":"","html_doc":"","arg_string":""}],"synopsis":"Documentation
                                    for resource file ``ResourceLibrary2``.","html_doc":"&lt;p&gt;Documentation for
                                    resource file &lt;code&gt;ResourceLibrary2&lt;/code&gt;.&lt;/p&gt;"}]
                                </msg>
                                <msg timestamp="20210830 17:36:57.171" level="INFO">${response} = &lt;Response
                                    [200]&gt;
                                </msg>
                                <status status="PASS" starttime="20210830 17:36:57.161"
                                        endtime="20210830 17:36:57.171"/>
                            </kw>
                            <kw name="Should Be Equal As Integers" library="BuiltIn">
                                <arg>${response.status_code}</arg>
                                <arg>200</arg>
                                <doc>Fails if objects are unequal after converting them to integers.</doc>
                                <msg timestamp="20210830 17:36:57.181" level="INFO">Argument types are:
                                    &lt;class 'int'&gt;
                                    &lt;type 'unicode'&gt;
                                </msg>
                                <status status="PASS" starttime="20210830 17:36:57.171"
                                        endtime="20210830 17:36:57.181"/>
                            </kw>
                            <msg timestamp="20210830 17:36:57.181" level="INFO">${response} = [{'name': 'PyLibrary',
                                'type': 'LIBRARY', 'version': '1.0.0', 'scope': 'TEST', 'named_args': None, 'path':
                                'C:\\repo\\rfhub2\\tests\\acceptance\\resources\\..\\..\\fixtures\\initial\\PyLibrary',
                                'doc'...
                            </msg>
                            <status status="PASS" starttime="20210830 17:36:57.151" endtime="20210830 17:36:57.181"/>
                        </kw>
                        <kw name="Length Should Be" library="BuiltIn">
                            <arg>${response}</arg>
                            <arg>${n}</arg>
                            <doc>Verifies that the length of the given item is correct.</doc>
                            <msg timestamp="20210830 17:36:57.181" level="INFO">Length is 3</msg>
                            <status status="PASS" starttime="20210830 17:36:57.181" endtime="20210830 17:36:57.181"/>
                        </kw>
                        <status status="PASS" starttime="20210830 17:36:57.151" endtime="20210830 17:36:57.181"/>
                    </kw>
                    <kw name="keywords Endpoint Should Have ${m} Items" library="keywords"
                        sourcename="${endpoint} Endpoint Should Have ${n} Items">
                        <kw name="Get Request For Endpoint" library="keywords">
                            <var>${response}</var>
                            <arg>endpoint=${endpoint}</arg>
                            <kw name="Create Session" library="RequestsLibrary">
                                <arg>tmp</arg>
                                <arg>http://${HOST}:8000/api/v1</arg>
                                <doc>Create Session: create a HTTP session to a server</doc>
                                <msg timestamp="20210830 17:36:57.181" level="INFO">Creating Session using : alias=tmp,
                                    url=http://127.0.0.1:8000/api/v1, headers={}, cookies={}, auth=None, timeout=None,
                                    proxies=None, verify=False, debug=0
                                </msg>
                                <status status="PASS" starttime="20210830 17:36:57.181"
                                        endtime="20210830 17:36:57.181"/>
                            </kw>
                            <kw name="Get On Session" library="RequestsLibrary">
                                <var>${response}</var>
                                <arg>tmp</arg>
                                <arg>${endpoint}/</arg>
                                <arg>params=${params}</arg>
                                <doc>Sends a GET request on a previously created HTTP Session.</doc>
                                <msg timestamp="20210830 17:36:57.201" level="INFO">GET Request :
                                    url=http://127.0.0.1:8000/api/v1/keywords/?None
                                    path_url=/api/v1/keywords/?None
                                    headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate',
                                    'Accept': '*/*', 'Connection': 'keep-alive'}
                                    body=None
                                </msg>
                                <msg timestamp="20210830 17:36:57.201" level="INFO">GET Response :
                                    url=http://127.0.0.1:8000/api/v1/keywords/?None
                                    status=200, reason=OK
                                    headers={'date': 'Mon, 30 Aug 2021 15:36:56 GMT', 'server': 'uvicorn',
                                    'content-length': '1156', 'content-type': 'application/json'}
                                    body=[{"name":"Keyword Airplane In The
                                    Clouds","doc":"","args":"","tags":["☁️⛅️☁️✈️☁️☁️"],"id":4,"synopsis":"","html_doc":"","arg_string":"","collection":{"id":3,"name":"ResourceLibrary2"}},{"name":"Keyword
                                    Ghost","doc":"","args":"","tags":["👻"],"id":2,"synopsis":"","html_doc":"","arg_string":"","collection":{"id":2,"name":"ResourceLibrary1"}},{"name":"Keyword
                                    No
                                    Tag","doc":"","args":"","tags":[],"id":1,"synopsis":"","html_doc":"","arg_string":"","collection":{"id":1,"name":"PyLibrary"}},{"name":"Keyword
                                    No
                                    Tag","doc":"","args":"","tags":[],"id":5,"synopsis":"","html_doc":"","arg_string":"","collection":{"id":3,"name":"ResourceLibrary2"}},{"name":"Keyword
                                    Rocket","doc":"","args":"","tags":["🚀"],"id":3,"synopsis":"","html_doc":"","arg_string":"","collection":{"id":2,"name":"ResourceLibrary1"}},{"name":"Keyword
                                    Rocket","doc":"","args":"","tags":["🚀"],"id":6,"synopsis":"","html_doc":"","arg_string":"","collection":{"id":3,"name":"ResourceLibrary2"}},{"name":"Keyword
                                    TextualTag","doc":"","args":"","tags":["STR_tag"],"id":7,"synopsis":"","html_doc":"","arg_string":"","collection":{"id":3,"name":"ResourceLibrary2"}}]
                                </msg>
                                <msg timestamp="20210830 17:36:57.201" level="INFO">${response} = &lt;Response
                                    [200]&gt;
                                </msg>
                                <status status="PASS" starttime="20210830 17:36:57.181"
                                        endtime="20210830 17:36:57.201"/>
                            </kw>
                            <kw name="Should Be Equal As Integers" library="BuiltIn">
                                <arg>${response.status_code}</arg>
                                <arg>200</arg>
                                <doc>Fails if objects are unequal after converting them to integers.</doc>
                                <msg timestamp="20210830 17:36:57.201" level="INFO">Argument types are:
                                    &lt;class 'int'&gt;
                                    &lt;type 'unicode'&gt;
                                </msg>
                                <status status="PASS" starttime="20210830 17:36:57.201"
                                        endtime="20210830 17:36:57.201"/>
                            </kw>
                            <msg timestamp="20210830 17:36:57.201" level="INFO">${response} = [{'name': 'Keyword
                                Airplane In The Clouds', 'doc': '', 'args': '', 'tags': ['☁️⛅️☁️✈️☁️☁️'], 'id': 4,
                                'synopsis': '', 'html_doc': '', 'arg_string': '', 'collection': {'id': 3, 'name':
                                'ResourceLibrary...
                            </msg>
                            <status status="PASS" starttime="20210830 17:36:57.181" endtime="20210830 17:36:57.201"/>
                        </kw>
                        <kw name="Length Should Be" library="BuiltIn">
                            <arg>${response}</arg>
                            <arg>${n}</arg>
                            <doc>Verifies that the length of the given item is correct.</doc>
                            <msg timestamp="20210830 17:36:57.211" level="INFO">Length is 7</msg>
                            <msg timestamp="20210830 17:36:57.211" level="FAIL">Length of '[{'name': 'Keyword Airplane
                                In The Clouds', 'doc': '', 'args': '', 'tags': ['☁️⛅️☁️✈️☁️☁️'], 'id': 4, 'synopsis':
                                '', 'html_doc': '', 'arg_string': '', 'collection': {'id': 3, 'name':
                                'ResourceLibrary2'}}, {'name': 'Keyword Ghost', 'doc': '', 'args': '', 'tags': ['👻'],
                                'id': 2, 'synopsis': '', 'html_doc': '', 'arg_string': '', 'collection': {'id': 2,
                                'name': 'ResourceLibrary1'}}, {'name': 'Keyword No Tag', 'doc': '', 'args': '', 'tags':
                                [], 'id': 1, 'synopsis': '', 'html_doc': '', 'arg_string': '', 'collection': {'id': 1,
                                'name': 'PyLibrary'}}, {'name': 'Keyword No Tag', 'doc': '', 'args': '', 'tags': [],
                                'id': 5, 'synopsis': '', 'html_doc': '', 'arg_string': '', 'collection': {'id': 3,
                                'name': 'ResourceLibrary2'}}, {'name': 'Keyword Rocket', 'doc': '', 'args': '', 'tags':
                                ['🚀'], 'id': 3, 'synopsis': '', 'html_doc': '', 'arg_string': '', 'collection': {'id':
                                2, 'name': 'ResourceLibrary1'}}, {'name': 'Keyword Rocket', 'doc': '', 'args': '',
                                'tags': ['🚀'], 'id': 6, 'synopsis': '', 'html_doc': '', 'arg_string': '', 'collection':
                                {'id': 3, 'name': 'ResourceLibrary2'}}, {'name': 'Keyword TextualTag', 'doc': '',
                                'args': '', 'tags': ['STR_tag'], 'id': 7, 'synopsis': '', 'html_doc': '', 'arg_string':
                                '', 'collection': {'id': 3, 'name': 'ResourceLibrary2'}}]' should be 9 but is 7.
                            </msg>
                            <status status="FAIL" starttime="20210830 17:36:57.201" endtime="20210830 17:36:57.211"/>
                        </kw>
                        <status status="FAIL" starttime="20210830 17:36:57.181" endtime="20210830 17:36:57.211"/>
                    </kw>
                    <status status="FAIL" starttime="20210830 17:36:57.151" endtime="20210830 17:36:57.211"/>
                </kw>
                <kw name="Run Cli Package With Options" library="keywords">
                    <arg>--load-mode=append --no-installed-keywords --include ❤️ ${INITIAL_FIXTURES}</arg>
                    <doc>Attempt to run the rfhub2-cli package with the given options
                        The stdout of the process will be in a test suite
                        variable named ${output}
                    </doc>
                    <status status="NOT RUN" starttime="20210830 17:36:57.211" endtime="20210830 17:36:57.211"/>
                </kw>
                <kw name="Api Should Have 6 Collections And 13 Keywords"
                    sourcename="Api Should Have ${n} Collections And ${m} Keywords">
                    <status status="NOT RUN" starttime="20210830 17:36:57.211" endtime="20210830 17:36:57.211"/>
                </kw>
                <kw name="Restore Initial Fixtures" library="keywords" type="TEARDOWN">
                    <kw name="Remove Directory" library="OperatingSystem">
                        <arg>${INITIAL_FIXTURES}</arg>
                        <arg>recursive=True</arg>
                        <doc>Removes the directory pointed to by the given ``path``.</doc>
                        <msg timestamp="20210830 17:36:57.221" level="INFO" html="true">Removed directory '&lt;a
                            href="file://C:\repo\rfhub2\tests\fixtures\initial"&gt;C:\repo\rfhub2\tests\fixtures\initial&lt;/a&gt;'.
                        </msg>
                        <status status="PASS" starttime="20210830 17:36:57.211" endtime="20210830 17:36:57.221"/>
                    </kw>
                    <kw name="Copy Directory" library="OperatingSystem">
                        <arg>${BACKUP_FIXTURES}</arg>
                        <arg>${INITIAL_FIXTURES}</arg>
                        <doc>Copies the source directory into the destination.</doc>
                        <msg timestamp="20210830 17:36:57.291" level="INFO" html="true">Copied directory from '&lt;a
                            href="file://C:\repo\rfhub2\tests\fixtures\initial_bkp"&gt;C:\repo\rfhub2\tests\fixtures\initial_bkp&lt;/a&gt;'
                            to '&lt;a href="file://C:\repo\rfhub2\tests\fixtures\initial"&gt;C:\repo\rfhub2\tests\fixtures\initial&lt;/a&gt;'.
                        </msg>
                        <status status="PASS" starttime="20210830 17:36:57.221" endtime="20210830 17:36:57.291"/>
                    </kw>
                    <kw name="Remove Directory" library="OperatingSystem">
                        <arg>${BACKUP_FIXTURES}</arg>
                        <arg>recursive=True</arg>
                        <doc>Removes the directory pointed to by the given ``path``.</doc>
                        <msg timestamp="20210830 17:36:57.341" level="INFO" html="true">Removed directory '&lt;a
                            href="file://C:\repo\rfhub2\tests\fixtures\initial_bkp"&gt;C:\repo\rfhub2\tests\fixtures\initial_bkp&lt;/a&gt;'.
                        </msg>
                        <status status="PASS" starttime="20210830 17:36:57.291" endtime="20210830 17:36:57.341"/>
                    </kw>
                    <status status="PASS" starttime="20210830 17:36:57.211" endtime="20210830 17:36:57.341"/>
                </kw>
                <doc>Test loading Keywords and including + excluding tags</doc>
                <tag>append</tag>
                <tag>include-exclude</tag>
                <status status="FAIL" starttime="20210830 17:36:55.011" endtime="20210830 17:36:57.341">Length of
                    '[{'name': 'Keyword Airplane In The Clouds', 'doc': '', 'args': '', 'tags': ['☁️⛅️☁️✈️☁️☁️'], 'id':
                    4, 'synopsis': '', 'html_doc': '', 'arg_string': '', 'collection': {'id': 3, 'name':
                    'ResourceLibrary2'}}, {'name': 'Keyword Ghost', 'doc': '', 'args': '', 'tags': ['👻'], 'id': 2,
                    'synopsis': '', 'html_doc': '', 'arg_string': '', 'collection': {'id': 2, 'name':
                    'ResourceLibrary1'}}, {'name': 'Keyword No Tag', 'doc': '', 'args': '', 'tags': [], 'id': 1,
                    'synopsis': '', 'html_doc': '', 'arg_string': '', 'collection': {'id': 1, 'name': 'PyLibrary'}},
                    {'name': 'Keyword No Tag', 'doc': '', 'args': '', 'tags': [], 'id': 5, 'synopsis': '', 'html_doc':
                    '', 'arg_string': '', 'collection': {'id': 3, 'name': 'ResourceLibrary2'}}, {'name': 'Keyword
                    Rocket', 'doc': '', 'args': '', 'tags': ['🚀'], 'id': 3, 'synopsis': '', 'html_doc': '',
                    'arg_string': '', 'collection': {'id': 2, 'name': 'ResourceLibrary1'}}, {'name': 'Keyword Rocket',
                    'doc': '', 'args': '', 'tags': ['🚀'], 'id': 6, 'synopsis': '', 'html_doc': '', 'arg_string': '',
                    'collection': {'id': 3, 'name': 'ResourceLibrary2'}}, {'name': 'Keyword TextualTag', 'doc': '',
                    'args': '', 'tags': ['STR_tag'], 'id': 7, 'synopsis': '', 'html_doc': '', 'arg_string': '',
                    'collection': {'id': 3, 'name': 'ResourceLibrary2'}}]' should be 9 but is 7.
                </status>
            </test>
            <test id="s1-s2-t22"
                  name="Running Cli With Update Load Mode And Including + Excluding Tags Should Load Proper Keywords">
                <kw name="Run Keywords" library="BuiltIn" type="SETUP">
                    <arg>Backup And Switch Initial With Include_Exclude Fixtures</arg>
                    <doc>Executes all the given keywords in a sequence.</doc>
                    <kw name="Backup And Switch Initial With Include_Exclude Fixtures" library="keywords">
                        <kw name="Move Directory" library="OperatingSystem">
                            <arg>${INITIAL_FIXTURES}</arg>
                            <arg>${BACKUP_FIXTURES}</arg>
                            <doc>Moves the source directory into a destination.</doc>
                            <msg timestamp="20210830 17:36:57.341" level="INFO" html="true">Moved directory from '&lt;a
                                href="file://C:\repo\rfhub2\tests\fixtures\initial"&gt;C:\repo\rfhub2\tests\fixtures\initial&lt;/a&gt;'
                                to '&lt;a href="file://C:\repo\rfhub2\tests\fixtures\initial_bkp"&gt;C:\repo\rfhub2\tests\fixtures\initial_bkp&lt;/a&gt;'.
                            </msg>
                            <status status="PASS" starttime="20210830 17:36:57.341" endtime="20210830 17:36:57.341"/>
                        </kw>
                        <kw name="Copy Directory" library="OperatingSystem">
                            <arg>${INCLUDE_EXCLUDE_FIXTURES}</arg>
                            <arg>${INITIAL_FIXTURES}</arg>
                            <doc>Copies the source directory into the destination.</doc>
                            <msg timestamp="20210830 17:36:57.361" level="INFO" html="true">Copied directory from '&lt;a
                                href="file://C:\repo\rfhub2\tests\fixtures\include_exclude"&gt;C:\repo\rfhub2\tests\fixtures\include_exclude&lt;/a&gt;'
                                to '&lt;a href="file://C:\repo\rfhub2\tests\fixtures\initial"&gt;C:\repo\rfhub2\tests\fixtures\initial&lt;/a&gt;'.
                            </msg>
                            <status status="PASS" starttime="20210830 17:36:57.341" endtime="20210830 17:36:57.361"/>
                        </kw>
                        <status status="PASS" starttime="20210830 17:36:57.341" endtime="20210830 17:36:57.361"/>
                    </kw>
                    <status status="PASS" starttime="20210830 17:36:57.341" endtime="20210830 17:36:57.361"/>
                </kw>
                <kw name="Run Cli Package With Options" library="keywords">
                    <arg>--load-mode=insert --no-installed-keywords --exclude 👻 ${INITIAL_FIXTURES}</arg>
                    <doc>Attempt to run the rfhub2-cli package with the given options
                        The stdout of the process will be in a test suite
                        variable named ${output}
                    </doc>
                    <kw name="Run" library="OperatingSystem">
                        <var>${output}</var>
                        <arg>${ACTIVATE_VENV} rfhub2-cli -a http://${HOST}:8000 ${options}</arg>
                        <doc>Runs the given command in the system and returns the output.</doc>
                        <msg timestamp="20210830 17:36:57.501" level="INFO">Running command ' rfhub2-cli -a
                            http://127.0.0.1:8000 --load-mode=insert --no-installed-keywords --exclude 👻
                            C:\repo\rfhub2\tests\acceptance\resources\..\..\fixtures/initial/ 2&gt;&amp;1'.
                        </msg>
                        <msg timestamp="20210830 17:36:59.521" level="INFO">${output} = PyLibrary library with 1
                            keywords loaded.
                            ResourceLibrary1 library with 2 keywords loaded.
                            ResourceLibrary2 library with 4 keywords loaded.

                            Successfully loaded 3 collections with 7 keywords.
                        </msg>
                        <status status="PASS" starttime="20210830 17:36:57.361" endtime="20210830 17:36:59.521"/>
                    </kw>
                    <kw name="Set Suite Variable" library="BuiltIn">
                        <arg>${output}</arg>
                        <doc>Makes a variable available everywhere within the scope of the current suite.</doc>
                        <msg timestamp="20210830 17:36:59.521" level="INFO">${output} = PyLibrary library with 1
                            keywords loaded.
                            ResourceLibrary1 library with 2 keywords loaded.
                            ResourceLibrary2 library with 4 keywords loaded.

                            Successfully loaded 3 collections with 7 keywords.
                        </msg>
                        <status status="PASS" starttime="20210830 17:36:59.521" endtime="20210830 17:36:59.521"/>
                    </kw>
                    <status status="PASS" starttime="20210830 17:36:57.361" endtime="20210830 17:36:59.521"/>
                </kw>
                <kw name="Api Should Have 3 Collections And 9 Keywords"
                    sourcename="Api Should Have ${n} Collections And ${m} Keywords">
                    <kw name="collections Endpoint Should Have ${n} Items" library="keywords"
                        sourcename="${endpoint} Endpoint Should Have ${n} Items">
                        <kw name="Get Request For Endpoint" library="keywords">
                            <var>${response}</var>
                            <arg>endpoint=${endpoint}</arg>
                            <kw name="Create Session" library="RequestsLibrary">
                                <arg>tmp</arg>
                                <arg>http://${HOST}:8000/api/v1</arg>
                                <doc>Create Session: create a HTTP session to a server</doc>
                                <msg timestamp="20210830 17:36:59.521" level="INFO">Creating Session using : alias=tmp,
                                    url=http://127.0.0.1:8000/api/v1, headers={}, cookies={}, auth=None, timeout=None,
                                    proxies=None, verify=False, debug=0
                                </msg>
                                <status status="PASS" starttime="20210830 17:36:59.521"
                                        endtime="20210830 17:36:59.521"/>
                            </kw>
                            <kw name="Get On Session" library="RequestsLibrary">
                                <var>${response}</var>
                                <arg>tmp</arg>
                                <arg>${endpoint}/</arg>
                                <arg>params=${params}</arg>
                                <doc>Sends a GET request on a previously created HTTP Session.</doc>
                                <msg timestamp="20210830 17:36:59.541" level="INFO">GET Request :
                                    url=http://127.0.0.1:8000/api/v1/collections/?None
                                    path_url=/api/v1/collections/?None
                                    headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate',
                                    'Accept': '*/*', 'Connection': 'keep-alive'}
                                    body=None
                                </msg>
                                <msg timestamp="20210830 17:36:59.541" level="INFO">GET Response :
                                    url=http://127.0.0.1:8000/api/v1/collections/?None
                                    status=200, reason=OK
                                    headers={'date': 'Mon, 30 Aug 2021 15:36:58 GMT', 'server': 'uvicorn',
                                    'content-length': '2138', 'content-type': 'application/json'}
                                    body=[{"name":"PyLibrary","type":"LIBRARY","version":"1.0.0","scope":"TEST","named_args":null,"path":"C:\\repo\\rfhub2\\tests\\acceptance\\resources\\..\\..\\fixtures\\initial\\PyLibrary","doc":"Documentation
                                    for library ``PyLibrary``.","doc_format":"ROBOT","id":1,"keywords":[{"name":"Keyword
                                    No
                                    Tag","doc":"","args":"","tags":[],"id":1,"synopsis":"","html_doc":"","arg_string":""}],"synopsis":"Documentation
                                    for library ``PyLibrary``.","html_doc":"&lt;p&gt;Documentation for library &lt;code&gt;PyLibrary&lt;/code&gt;.&lt;/p&gt;"},{"name":"ResourceLibrary1","type":"RESOURCE","version":"","scope":"GLOBAL","named_args":null,"path":"C:\\repo\\rfhub2\\tests\\acceptance\\resources\\..\\..\\fixtures\\initial\\ResourceLibrary1.resource","doc":"Documentation
                                    for resource file
                                    ``ResourceLibrary1``.","doc_format":"ROBOT","id":2,"keywords":[{"name":"Keyword
                                    Ghost","doc":"","args":"","tags":["👻"],"id":2,"synopsis":"","html_doc":"","arg_string":""},{"name":"Keyword
                                    Rocket","doc":"","args":"","tags":["🚀"],"id":3,"synopsis":"","html_doc":"","arg_string":""}],"synopsis":"Documentation
                                    for resource file ``ResourceLibrary1``.","html_doc":"&lt;p&gt;Documentation for
                                    resource file &lt;code&gt;ResourceLibrary1&lt;/code&gt;.&lt;/p&gt;"},{"name":"ResourceLibrary2","type":"RESOURCE","version":"","scope":"GLOBAL","named_args":null,"path":"C:\\repo\\rfhub2\\tests\\acceptance\\resources\\..\\..\\fixtures\\initial\\ResourceLibrary2.resource","doc":"Documentation
                                    for resource file
                                    ``ResourceLibrary2``.","doc_format":"ROBOT","id":3,"keywords":[{"name":"Keyword
                                    Airplane In The
                                    Clouds","doc":"","args":"","tags":["☁️⛅️☁️✈️☁️☁️"],"id":4,"synopsis":"","html_doc":"","arg_string":""},{"name":"Keyword
                                    No
                                    Tag","doc":"","args":"","tags":[],"id":5,"synopsis":"","html_doc":"","arg_string":""},{"name":"Keyword
                                    Rocket","doc":"","args":"","tags":["🚀"],"id":6,"synopsis":"","html_doc":"","arg_string":""},{"name":"Keyword
                                    TextualTag","doc":"","args":"","tags":["STR_tag"],"id":7,"synopsis":"","html_doc":"","arg_string":""}],"synopsis":"Documentation
                                    for resource file ``ResourceLibrary2``.","html_doc":"&lt;p&gt;Documentation for
                                    resource file &lt;code&gt;ResourceLibrary2&lt;/code&gt;.&lt;/p&gt;"}]
                                </msg>
                                <msg timestamp="20210830 17:36:59.541" level="INFO">${response} = &lt;Response
                                    [200]&gt;
                                </msg>
                                <status status="PASS" starttime="20210830 17:36:59.521"
                                        endtime="20210830 17:36:59.541"/>
                            </kw>
                            <kw name="Should Be Equal As Integers" library="BuiltIn">
                                <arg>${response.status_code}</arg>
                                <arg>200</arg>
                                <doc>Fails if objects are unequal after converting them to integers.</doc>
                                <msg timestamp="20210830 17:36:59.541" level="INFO">Argument types are:
                                    &lt;class 'int'&gt;
                                    &lt;type 'unicode'&gt;
                                </msg>
                                <status status="PASS" starttime="20210830 17:36:59.541"
                                        endtime="20210830 17:36:59.541"/>
                            </kw>
                            <msg timestamp="20210830 17:36:59.541" level="INFO">${response} = [{'name': 'PyLibrary',
                                'type': 'LIBRARY', 'version': '1.0.0', 'scope': 'TEST', 'named_args': None, 'path':
                                'C:\\repo\\rfhub2\\tests\\acceptance\\resources\\..\\..\\fixtures\\initial\\PyLibrary',
                                'doc'...
                            </msg>
                            <status status="PASS" starttime="20210830 17:36:59.521" endtime="20210830 17:36:59.541"/>
                        </kw>
                        <kw name="Length Should Be" library="BuiltIn">
                            <arg>${response}</arg>
                            <arg>${n}</arg>
                            <doc>Verifies that the length of the given item is correct.</doc>
                            <msg timestamp="20210830 17:36:59.551" level="INFO">Length is 3</msg>
                            <status status="PASS" starttime="20210830 17:36:59.541" endtime="20210830 17:36:59.551"/>
                        </kw>
                        <status status="PASS" starttime="20210830 17:36:59.521" endtime="20210830 17:36:59.551"/>
                    </kw>
                    <kw name="keywords Endpoint Should Have ${m} Items" library="keywords"
                        sourcename="${endpoint} Endpoint Should Have ${n} Items">
                        <kw name="Get Request For Endpoint" library="keywords">
                            <var>${response}</var>
                            <arg>endpoint=${endpoint}</arg>
                            <kw name="Create Session" library="RequestsLibrary">
                                <arg>tmp</arg>
                                <arg>http://${HOST}:8000/api/v1</arg>
                                <doc>Create Session: create a HTTP session to a server</doc>
                                <msg timestamp="20210830 17:36:59.551" level="INFO">Creating Session using : alias=tmp,
                                    url=http://127.0.0.1:8000/api/v1, headers={}, cookies={}, auth=None, timeout=None,
                                    proxies=None, verify=False, debug=0
                                </msg>
                                <status status="PASS" starttime="20210830 17:36:59.551"
                                        endtime="20210830 17:36:59.551"/>
                            </kw>
                            <kw name="Get On Session" library="RequestsLibrary">
                                <var>${response}</var>
                                <arg>tmp</arg>
                                <arg>${endpoint}/</arg>
                                <arg>params=${params}</arg>
                                <doc>Sends a GET request on a previously created HTTP Session.</doc>
                                <msg timestamp="20210830 17:36:59.571" level="INFO">GET Request :
                                    url=http://127.0.0.1:8000/api/v1/keywords/?None
                                    path_url=/api/v1/keywords/?None
                                    headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate',
                                    'Accept': '*/*', 'Connection': 'keep-alive'}
                                    body=None
                                </msg>
                                <msg timestamp="20210830 17:36:59.571" level="INFO">GET Response :
                                    url=http://127.0.0.1:8000/api/v1/keywords/?None
                                    status=200, reason=OK
                                    headers={'date': 'Mon, 30 Aug 2021 15:36:58 GMT', 'server': 'uvicorn',
                                    'content-length': '1156', 'content-type': 'application/json'}
                                    body=[{"name":"Keyword Airplane In The
                                    Clouds","doc":"","args":"","tags":["☁️⛅️☁️✈️☁️☁️"],"id":4,"synopsis":"","html_doc":"","arg_string":"","collection":{"id":3,"name":"ResourceLibrary2"}},{"name":"Keyword
                                    Ghost","doc":"","args":"","tags":["👻"],"id":2,"synopsis":"","html_doc":"","arg_string":"","collection":{"id":2,"name":"ResourceLibrary1"}},{"name":"Keyword
                                    No
                                    Tag","doc":"","args":"","tags":[],"id":1,"synopsis":"","html_doc":"","arg_string":"","collection":{"id":1,"name":"PyLibrary"}},{"name":"Keyword
                                    No
                                    Tag","doc":"","args":"","tags":[],"id":5,"synopsis":"","html_doc":"","arg_string":"","collection":{"id":3,"name":"ResourceLibrary2"}},{"name":"Keyword
                                    Rocket","doc":"","args":"","tags":["🚀"],"id":3,"synopsis":"","html_doc":"","arg_string":"","collection":{"id":2,"name":"ResourceLibrary1"}},{"name":"Keyword
                                    Rocket","doc":"","args":"","tags":["🚀"],"id":6,"synopsis":"","html_doc":"","arg_string":"","collection":{"id":3,"name":"ResourceLibrary2"}},{"name":"Keyword
                                    TextualTag","doc":"","args":"","tags":["STR_tag"],"id":7,"synopsis":"","html_doc":"","arg_string":"","collection":{"id":3,"name":"ResourceLibrary2"}}]
                                </msg>
                                <msg timestamp="20210830 17:36:59.571" level="INFO">${response} = &lt;Response
                                    [200]&gt;
                                </msg>
                                <status status="PASS" starttime="20210830 17:36:59.551"
                                        endtime="20210830 17:36:59.571"/>
                            </kw>
                            <kw name="Should Be Equal As Integers" library="BuiltIn">
                                <arg>${response.status_code}</arg>
                                <arg>200</arg>
                                <doc>Fails if objects are unequal after converting them to integers.</doc>
                                <msg timestamp="20210830 17:36:59.571" level="INFO">Argument types are:
                                    &lt;class 'int'&gt;
                                    &lt;type 'unicode'&gt;
                                </msg>
                                <status status="PASS" starttime="20210830 17:36:59.571"
                                        endtime="20210830 17:36:59.571"/>
                            </kw>
                            <msg timestamp="20210830 17:36:59.571" level="INFO">${response} = [{'name': 'Keyword
                                Airplane In The Clouds', 'doc': '', 'args': '', 'tags': ['☁️⛅️☁️✈️☁️☁️'], 'id': 4,
                                'synopsis': '', 'html_doc': '', 'arg_string': '', 'collection': {'id': 3, 'name':
                                'ResourceLibrary...
                            </msg>
                            <status status="PASS" starttime="20210830 17:36:59.551" endtime="20210830 17:36:59.571"/>
                        </kw>
                        <kw name="Length Should Be" library="BuiltIn">
                            <arg>${response}</arg>
                            <arg>${n}</arg>
                            <doc>Verifies that the length of the given item is correct.</doc>
                            <msg timestamp="20210830 17:36:59.571" level="INFO">Length is 7</msg>
                            <msg timestamp="20210830 17:36:59.571" level="FAIL">Length of '[{'name': 'Keyword Airplane
                                In The Clouds', 'doc': '', 'args': '', 'tags': ['☁️⛅️☁️✈️☁️☁️'], 'id': 4, 'synopsis':
                                '', 'html_doc': '', 'arg_string': '', 'collection': {'id': 3, 'name':
                                'ResourceLibrary2'}}, {'name': 'Keyword Ghost', 'doc': '', 'args': '', 'tags': ['👻'],
                                'id': 2, 'synopsis': '', 'html_doc': '', 'arg_string': '', 'collection': {'id': 2,
                                'name': 'ResourceLibrary1'}}, {'name': 'Keyword No Tag', 'doc': '', 'args': '', 'tags':
                                [], 'id': 1, 'synopsis': '', 'html_doc': '', 'arg_string': '', 'collection': {'id': 1,
                                'name': 'PyLibrary'}}, {'name': 'Keyword No Tag', 'doc': '', 'args': '', 'tags': [],
                                'id': 5, 'synopsis': '', 'html_doc': '', 'arg_string': '', 'collection': {'id': 3,
                                'name': 'ResourceLibrary2'}}, {'name': 'Keyword Rocket', 'doc': '', 'args': '', 'tags':
                                ['🚀'], 'id': 3, 'synopsis': '', 'html_doc': '', 'arg_string': '', 'collection': {'id':
                                2, 'name': 'ResourceLibrary1'}}, {'name': 'Keyword Rocket', 'doc': '', 'args': '',
                                'tags': ['🚀'], 'id': 6, 'synopsis': '', 'html_doc': '', 'arg_string': '', 'collection':
                                {'id': 3, 'name': 'ResourceLibrary2'}}, {'name': 'Keyword TextualTag', 'doc': '',
                                'args': '', 'tags': ['STR_tag'], 'id': 7, 'synopsis': '', 'html_doc': '', 'arg_string':
                                '', 'collection': {'id': 3, 'name': 'ResourceLibrary2'}}]' should be 9 but is 7.
                            </msg>
                            <status status="FAIL" starttime="20210830 17:36:59.571" endtime="20210830 17:36:59.571"/>
                        </kw>
                        <status status="FAIL" starttime="20210830 17:36:59.551" endtime="20210830 17:36:59.571"/>
                    </kw>
                    <status status="FAIL" starttime="20210830 17:36:59.521" endtime="20210830 17:36:59.581"/>
                </kw>
                <kw name="Remove Files" library="OperatingSystem">
                    <arg>${INITIAL_FIXTURES}${/}PyLibrary${/}__init__.py</arg>
                    <doc>Uses `Remove File` to remove multiple files one-by-one.</doc>
                    <status status="NOT RUN" starttime="20210830 17:36:59.581" endtime="20210830 17:36:59.581"/>
                </kw>
                <kw name="Run Cli Package With Options" library="keywords">
                    <arg>--load-mode=update --no-installed-keywords --include 👻OR🚂 ${INITIAL_FIXTURES}</arg>
                    <doc>Attempt to run the rfhub2-cli package with the given options
                        The stdout of the process will be in a test suite
                        variable named ${output}
                    </doc>
                    <status status="NOT RUN" starttime="20210830 17:36:59.581" endtime="20210830 17:36:59.581"/>
                </kw>
                <kw name="Api Should Have 2 Collections And 2 Keywords"
                    sourcename="Api Should Have ${n} Collections And ${m} Keywords">
                    <status status="NOT RUN" starttime="20210830 17:36:59.581" endtime="20210830 17:36:59.581"/>
                </kw>
                <kw name="Restore Initial Fixtures" library="keywords" type="TEARDOWN">
                    <kw name="Remove Directory" library="OperatingSystem">
                        <arg>${INITIAL_FIXTURES}</arg>
                        <arg>recursive=True</arg>
                        <doc>Removes the directory pointed to by the given ``path``.</doc>
                        <msg timestamp="20210830 17:36:59.581" level="INFO" html="true">Removed directory '&lt;a
                            href="file://C:\repo\rfhub2\tests\fixtures\initial"&gt;C:\repo\rfhub2\tests\fixtures\initial&lt;/a&gt;'.
                        </msg>
                        <status status="PASS" starttime="20210830 17:36:59.581" endtime="20210830 17:36:59.581"/>
                    </kw>
                    <kw name="Copy Directory" library="OperatingSystem">
                        <arg>${BACKUP_FIXTURES}</arg>
                        <arg>${INITIAL_FIXTURES}</arg>
                        <doc>Copies the source directory into the destination.</doc>
                        <msg timestamp="20210830 17:36:59.661" level="INFO" html="true">Copied directory from '&lt;a
                            href="file://C:\repo\rfhub2\tests\fixtures\initial_bkp"&gt;C:\repo\rfhub2\tests\fixtures\initial_bkp&lt;/a&gt;'
                            to '&lt;a href="file://C:\repo\rfhub2\tests\fixtures\initial"&gt;C:\repo\rfhub2\tests\fixtures\initial&lt;/a&gt;'.
                        </msg>
                        <status status="PASS" starttime="20210830 17:36:59.581" endtime="20210830 17:36:59.661"/>
                    </kw>
                    <kw name="Remove Directory" library="OperatingSystem">
                        <arg>${BACKUP_FIXTURES}</arg>
                        <arg>recursive=True</arg>
                        <doc>Removes the directory pointed to by the given ``path``.</doc>
                        <msg timestamp="20210830 17:36:59.711" level="INFO" html="true">Removed directory '&lt;a
                            href="file://C:\repo\rfhub2\tests\fixtures\initial_bkp"&gt;C:\repo\rfhub2\tests\fixtures\initial_bkp&lt;/a&gt;'.
                        </msg>
                        <status status="PASS" starttime="20210830 17:36:59.661" endtime="20210830 17:36:59.711"/>
                    </kw>
                    <status status="PASS" starttime="20210830 17:36:59.581" endtime="20210830 17:36:59.711"/>
                </kw>
                <doc>Test loading Keywords and including + excluding tags</doc>
                <tag>include-exclude</tag>
                <tag>update</tag>
                <status status="FAIL" starttime="20210830 17:36:57.341" endtime="20210830 17:36:59.711">Length of
                    '[{'name': 'Keyword Airplane In The Clouds', 'doc': '', 'args': '', 'tags': ['☁️⛅️☁️✈️☁️☁️'], 'id':
                    4, 'synopsis': '', 'html_doc': '', 'arg_string': '', 'collection': {'id': 3, 'name':
                    'ResourceLibrary2'}}, {'name': 'Keyword Ghost', 'doc': '', 'args': '', 'tags': ['👻'], 'id': 2,
                    'synopsis': '', 'html_doc': '', 'arg_string': '', 'collection': {'id': 2, 'name':
                    'ResourceLibrary1'}}, {'name': 'Keyword No Tag', 'doc': '', 'args': '', 'tags': [], 'id': 1,
                    'synopsis': '', 'html_doc': '', 'arg_string': '', 'collection': {'id': 1, 'name': 'PyLibrary'}},
                    {'name': 'Keyword No Tag', 'doc': '', 'args': '', 'tags': [], 'id': 5, 'synopsis': '', 'html_doc':
                    '', 'arg_string': '', 'collection': {'id': 3, 'name': 'ResourceLibrary2'}}, {'name': 'Keyword
                    Rocket', 'doc': '', 'args': '', 'tags': ['🚀'], 'id': 3, 'synopsis': '', 'html_doc': '',
                    'arg_string': '', 'collection': {'id': 2, 'name': 'ResourceLibrary1'}}, {'name': 'Keyword Rocket',
                    'doc': '', 'args': '', 'tags': ['🚀'], 'id': 6, 'synopsis': '', 'html_doc': '', 'arg_string': '',
                    'collection': {'id': 3, 'name': 'ResourceLibrary2'}}, {'name': 'Keyword TextualTag', 'doc': '',
                    'args': '', 'tags': ['STR_tag'], 'id': 7, 'synopsis': '', 'html_doc': '', 'arg_string': '',
                    'collection': {'id': 3, 'name': 'ResourceLibrary2'}}]' should be 9 but is 7.
                </status>
            </test>
            <test id="s1-s2-t23" name="Running Cli In Statistics Mode Should Populate App With Execution Data">
                <kw name="Run Cli Package With Options" library="keywords">
                    <arg>--load-mode=insert --mode=statistics ${SUBDIR_PATH}</arg>
                    <doc>Attempt to run the rfhub2-cli package with the given options
                        The stdout of the process will be in a test suite
                        variable named ${output}
                    </doc>
                    <kw name="Run" library="OperatingSystem">
                        <var>${output}</var>
                        <arg>${ACTIVATE_VENV} rfhub2-cli -a http://${HOST}:8000 ${options}</arg>
                        <doc>Runs the given command in the system and returns the output.</doc>
                        <msg timestamp="20210830 17:36:59.861" level="INFO">Running command ' rfhub2-cli -a
                            http://127.0.0.1:8000 --load-mode=insert --mode=statistics
                            C:\repo\rfhub2\tests\acceptance\resources\..\..\fixtures\statistics\subdir 2&gt;&amp;1'.
                        </msg>
                        <msg timestamp="20210830 17:37:01.631" level="INFO">${output} =
                            Successfully loaded 1 files with 3 statistics.
                        </msg>
                        <status status="PASS" starttime="20210830 17:36:59.711" endtime="20210830 17:37:01.631"/>
                    </kw>
                    <kw name="Set Suite Variable" library="BuiltIn">
                        <arg>${output}</arg>
                        <doc>Makes a variable available everywhere within the scope of the current suite.</doc>
                        <msg timestamp="20210830 17:37:01.631" level="INFO">${output} =
                            Successfully loaded 1 files with 3 statistics.
                        </msg>
                        <status status="PASS" starttime="20210830 17:37:01.631" endtime="20210830 17:37:01.631"/>
                    </kw>
                    <status status="PASS" starttime="20210830 17:36:59.711" endtime="20210830 17:37:01.631"/>
                </kw>
                <kw name="Output Should Contain" library="keywords">
                    <arg>Successfully loaded 1 files with 3 statistics.</arg>
                    <doc>Fail if the output from the previous command doesn't contain the given string
                        This keyword assumes the output of the command is in
                        a test suite variable named ${output}
                    </doc>
                    <kw name="Create Dictionary" library="BuiltIn">
                        <var>${ns}</var>
                        <arg>output=${output}</arg>
                        <doc>Creates and returns a dictionary based on the given ``items``.</doc>
                        <msg timestamp="20210830 17:37:01.631" level="INFO">${ns} = {'output': '\nSuccessfully loaded 1
                            files with 3 statistics.'}
                        </msg>
                        <status status="PASS" starttime="20210830 17:37:01.631" endtime="20210830 17:37:01.631"/>
                    </kw>
                    <kw name="Evaluate" library="BuiltIn">
                        <var>${clean_output}</var>
                        <arg>" ".join(l.strip() for l in output.splitlines())</arg>
                        <arg>namespace=${ns}</arg>
                        <doc>Evaluates the given expression in Python and returns the result.</doc>
                        <msg timestamp="20210830 17:37:01.631" level="INFO">${clean_output} = Successfully loaded 1
                            files with 3 statistics.
                        </msg>
                        <status status="PASS" starttime="20210830 17:37:01.631" endtime="20210830 17:37:01.631"/>
                    </kw>
                    <for flavor="IN">
                        <var>${pattern}</var>
                        <value>@{patterns}</value>
                        <iter>
                            <var name="${pattern}">Successfully loaded 1 files with 3 statistics.</var>
                            <kw name="Run Keyword If" library="BuiltIn">
                                <arg>'''${pattern}''' not in '''${clean_output}'''</arg>
                                <arg>Fail</arg>
                                <arg>Output did not contain '${pattern}'. \n${clean_output}</arg>
                                <doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
                                <status status="PASS" starttime="20210830 17:37:01.631"
                                        endtime="20210830 17:37:01.631"/>
                            </kw>
                            <status status="PASS" starttime="20210830 17:37:01.631" endtime="20210830 17:37:01.631"/>
                        </iter>
                        <status status="PASS" starttime="20210830 17:37:01.631" endtime="20210830 17:37:01.631"/>
                    </for>
                    <status status="PASS" starttime="20210830 17:37:01.631" endtime="20210830 17:37:01.631"/>
                </kw>
                <doc>Running Cli In Statistics Mode
                    Should Populate App With Execution Data
                </doc>
                <tag>rfhub2-67</tag>
                <tag>statistics</tag>
                <status status="PASS" starttime="20210830 17:36:59.711" endtime="20210830 17:37:01.631"/>
            </test>
            <test id="s1-s2-t24" name="Running Cli In Statistics Mode Should Populate App With New Execution Data">
                <kw name="Run Cli Package With Options" library="keywords">
                    <arg>--load-mode=insert --mode=statistics ${STATISTICS_PATH}</arg>
                    <doc>Attempt to run the rfhub2-cli package with the given options
                        The stdout of the process will be in a test suite
                        variable named ${output}
                    </doc>
                    <kw name="Run" library="OperatingSystem">
                        <var>${output}</var>
                        <arg>${ACTIVATE_VENV} rfhub2-cli -a http://${HOST}:8000 ${options}</arg>
                        <doc>Runs the given command in the system and returns the output.</doc>
                        <msg timestamp="20210830 17:37:01.781" level="INFO">Running command ' rfhub2-cli -a
                            http://127.0.0.1:8000 --load-mode=insert --mode=statistics
                            C:\repo\rfhub2\tests\acceptance\resources\..\..\fixtures\statistics 2&gt;&amp;1'.
                        </msg>
                        <msg timestamp="20210830 17:37:03.621" level="INFO">${output} = Records already exist for file
                            from C:\repo\rfhub2\tests\acceptance\resources\..\..\fixtures\statistics\subdir\output.xml

                            Successfully loaded 1 files with 87 statistics.
                        </msg>
                        <status status="PASS" starttime="20210830 17:37:01.631" endtime="20210830 17:37:03.621"/>
                    </kw>
                    <kw name="Set Suite Variable" library="BuiltIn">
                        <arg>${output}</arg>
                        <doc>Makes a variable available everywhere within the scope of the current suite.</doc>
                        <msg timestamp="20210830 17:37:03.621" level="INFO">${output} = Records already exist for file
                            from C:\repo\rfhub2\tests\acceptance\resources\..\..\fixtures\statistics\subdir\output.xml

                            Successfully loaded 1 files with 87 statistics.
                        </msg>
                        <status status="PASS" starttime="20210830 17:37:03.621" endtime="20210830 17:37:03.621"/>
                    </kw>
                    <status status="PASS" starttime="20210830 17:37:01.631" endtime="20210830 17:37:03.621"/>
                </kw>
                <kw name="Output Should Contain" library="keywords">
                    <arg>Successfully loaded 1 files with 87 statistics</arg>
                    <doc>Fail if the output from the previous command doesn't contain the given string
                        This keyword assumes the output of the command is in
                        a test suite variable named ${output}
                    </doc>
                    <kw name="Create Dictionary" library="BuiltIn">
                        <var>${ns}</var>
                        <arg>output=${output}</arg>
                        <doc>Creates and returns a dictionary based on the given ``items``.</doc>
                        <msg timestamp="20210830 17:37:03.621" level="INFO">${ns} = {'output': 'Records already exist
                            for file from
                            C:\\repo\\rfhub2\\tests\\acceptance\\resources\\..\\..\\fixtures\\statistics\\subdir\\output.xml\n\nSuccessfully
                            loaded 1 files with 87 statistics.'}
                        </msg>
                        <status status="PASS" starttime="20210830 17:37:03.621" endtime="20210830 17:37:03.621"/>
                    </kw>
                    <kw name="Evaluate" library="BuiltIn">
                        <var>${clean_output}</var>
                        <arg>" ".join(l.strip() for l in output.splitlines())</arg>
                        <arg>namespace=${ns}</arg>
                        <doc>Evaluates the given expression in Python and returns the result.</doc>
                        <msg timestamp="20210830 17:37:03.621" level="INFO">${clean_output} = Records already exist for
                            file from
                            C:\repo\rfhub2\tests\acceptance\resources\..\..\fixtures\statistics\subdir\output.xml
                            Successfully loaded 1 files with 87 statistics.
                        </msg>
                        <status status="PASS" starttime="20210830 17:37:03.621" endtime="20210830 17:37:03.621"/>
                    </kw>
                    <for flavor="IN">
                        <var>${pattern}</var>
                        <value>@{patterns}</value>
                        <iter>
                            <var name="${pattern}">Successfully loaded 1 files with 87 statistics</var>
                            <kw name="Run Keyword If" library="BuiltIn">
                                <arg>'''${pattern}''' not in '''${clean_output}'''</arg>
                                <arg>Fail</arg>
                                <arg>Output did not contain '${pattern}'. \n${clean_output}</arg>
                                <doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
                                <status status="PASS" starttime="20210830 17:37:03.621"
                                        endtime="20210830 17:37:03.621"/>
                            </kw>
                            <status status="PASS" starttime="20210830 17:37:03.621" endtime="20210830 17:37:03.621"/>
                        </iter>
                        <status status="PASS" starttime="20210830 17:37:03.621" endtime="20210830 17:37:03.621"/>
                    </for>
                    <status status="PASS" starttime="20210830 17:37:03.621" endtime="20210830 17:37:03.621"/>
                </kw>
                <kw name="Output Should Contain" library="keywords">
                    <arg>Records already exist for file from ${SUBDIR_PATH}${/}output.xml</arg>
                    <doc>Fail if the output from the previous command doesn't contain the given string
                        This keyword assumes the output of the command is in
                        a test suite variable named ${output}
                    </doc>
                    <kw name="Create Dictionary" library="BuiltIn">
                        <var>${ns}</var>
                        <arg>output=${output}</arg>
                        <doc>Creates and returns a dictionary based on the given ``items``.</doc>
                        <msg timestamp="20210830 17:37:03.621" level="INFO">${ns} = {'output': 'Records already exist
                            for file from
                            C:\\repo\\rfhub2\\tests\\acceptance\\resources\\..\\..\\fixtures\\statistics\\subdir\\output.xml\n\nSuccessfully
                            loaded 1 files with 87 statistics.'}
                        </msg>
                        <status status="PASS" starttime="20210830 17:37:03.621" endtime="20210830 17:37:03.621"/>
                    </kw>
                    <kw name="Evaluate" library="BuiltIn">
                        <var>${clean_output}</var>
                        <arg>" ".join(l.strip() for l in output.splitlines())</arg>
                        <arg>namespace=${ns}</arg>
                        <doc>Evaluates the given expression in Python and returns the result.</doc>
                        <msg timestamp="20210830 17:37:03.621" level="INFO">${clean_output} = Records already exist for
                            file from
                            C:\repo\rfhub2\tests\acceptance\resources\..\..\fixtures\statistics\subdir\output.xml
                            Successfully loaded 1 files with 87 statistics.
                        </msg>
                        <status status="PASS" starttime="20210830 17:37:03.621" endtime="20210830 17:37:03.621"/>
                    </kw>
                    <for flavor="IN">
                        <var>${pattern}</var>
                        <value>@{patterns}</value>
                        <iter>
                            <var name="${pattern}">Records already exist for file from
                                C:\repo\rfhub2\tests\acceptance\resources\..\..\fixtures\statistics\subdir\output.xml
                            </var>
                            <kw name="Run Keyword If" library="BuiltIn">
                                <arg>'''${pattern}''' not in '''${clean_output}'''</arg>
                                <arg>Fail</arg>
                                <arg>Output did not contain '${pattern}'. \n${clean_output}</arg>
                                <doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
                                <status status="PASS" starttime="20210830 17:37:03.621"
                                        endtime="20210830 17:37:03.621"/>
                            </kw>
                            <status status="PASS" starttime="20210830 17:37:03.621" endtime="20210830 17:37:03.621"/>
                        </iter>
                        <status status="PASS" starttime="20210830 17:37:03.621" endtime="20210830 17:37:03.621"/>
                    </for>
                    <status status="PASS" starttime="20210830 17:37:03.621" endtime="20210830 17:37:03.621"/>
                </kw>
                <kw name="Delete All Statistics" library="keywords" type="TEARDOWN">
                    <kw name="Create List" library="BuiltIn">
                        <var>${auth}</var>
                        <arg>rfhub</arg>
                        <arg>rfhub</arg>
                        <doc>Returns a list containing given items.</doc>
                        <msg timestamp="20210830 17:37:03.631" level="INFO">${auth} = ['rfhub', 'rfhub']</msg>
                        <status status="PASS" starttime="20210830 17:37:03.621" endtime="20210830 17:37:03.631"/>
                    </kw>
                    <kw name="Create Session" library="RequestsLibrary">
                        <arg>tmp</arg>
                        <arg>http://${HOST}:8000/api/v1</arg>
                        <arg>auth=${auth}</arg>
                        <doc>Create Session: create a HTTP session to a server</doc>
                        <msg timestamp="20210830 17:37:03.631" level="INFO">Creating Session using : alias=tmp,
                            url=http://127.0.0.1:8000/api/v1, headers={}, cookies={}, auth=&lt;requests.auth.HTTPBasicAuth
                            object at 0x03D4CDD0&gt;, timeout=None, proxies=None, verify=False, debug=0
                        </msg>
                        <status status="PASS" starttime="20210830 17:37:03.631" endtime="20210830 17:37:03.631"/>
                    </kw>
                    <kw name="Delete On Session" library="RequestsLibrary">
                        <var>${response}</var>
                        <arg>tmp</arg>
                        <arg>statistics/keywords/all/</arg>
                        <doc>Sends a DELETE request on a previously created HTTP Session.</doc>
                        <msg timestamp="20210830 17:37:03.641" level="INFO">DELETE Request :
                            url=http://127.0.0.1:8000/api/v1/statistics/keywords/all/
                            path_url=/api/v1/statistics/keywords/all/
                            headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate',
                            'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0', 'Authorization': 'Basic
                            cmZodWI6cmZodWI='}
                            body=None
                        </msg>
                        <msg timestamp="20210830 17:37:03.641" level="INFO">DELETE Response :
                            url=http://127.0.0.1:8000/api/v1/statistics/keywords/all/
                            status=204, reason=No Content
                            headers={'date': 'Mon, 30 Aug 2021 15:37:03 GMT', 'server': 'uvicorn', 'content-length':
                            '14', 'content-type': 'application/json'}
                            body=None
                        </msg>
                        <msg timestamp="20210830 17:37:03.641" level="INFO">${response} = &lt;Response [204]&gt;</msg>
                        <status status="PASS" starttime="20210830 17:37:03.631" endtime="20210830 17:37:03.651"/>
                    </kw>
                    <kw name="Should Be Equal As Integers" library="BuiltIn">
                        <arg>${response.status_code}</arg>
                        <arg>204</arg>
                        <doc>Fails if objects are unequal after converting them to integers.</doc>
                        <msg timestamp="20210830 17:37:03.651" level="INFO">Argument types are:
                            &lt;class 'int'&gt;
                            &lt;type 'unicode'&gt;
                        </msg>
                        <status status="PASS" starttime="20210830 17:37:03.651" endtime="20210830 17:37:03.651"/>
                    </kw>
                    <status status="PASS" starttime="20210830 17:37:03.621" endtime="20210830 17:37:03.651"/>
                </kw>
                <doc>Running Cli In Statistics Mode
                    Should Populate App With New Execution Data
                </doc>
                <tag>rfhub2-67</tag>
                <tag>statistics</tag>
                <status status="PASS" starttime="20210830 17:37:01.631" endtime="20210830 17:37:03.651"/>
            </test>
            <status status="FAIL" starttime="20210830 17:35:16.092" endtime="20210830 17:37:03.651"/>
        </suite>
        <suite id="s1-s3" name="E2E" source="C:\repo\rfhub2\tests\acceptance\e2e.robot">
            <kw name="Open Browser With App On Mainpage" library="e2e_keywords" type="SETUP">
                <kw name="Open Browser" library="SeleniumLibrary">
                    <arg>url=http://${HOST}:8000</arg>
                    <arg>browser=gc</arg>
                    <doc>Opens a new browser instance to the optional ``url``.</doc>
                    <msg timestamp="20210830 17:37:03.711" level="INFO">Opening browser 'gc' to base url
                        'http://127.0.0.1:8000'.
                    </msg>
                    <status status="PASS" starttime="20210830 17:37:03.711" endtime="20210830 17:37:08.440"/>
                </kw>
                <kw name="Maximize Browser Window" library="SeleniumLibrary">
                    <doc>Maximizes current browser window.</doc>
                    <status status="PASS" starttime="20210830 17:37:08.441" endtime="20210830 17:37:08.861"/>
                </kw>
                <status status="PASS" starttime="20210830 17:37:03.711" endtime="20210830 17:37:08.861"/>
            </kw>
            <test id="s1-s3-t1" name="Populated App Should Show Number Of Collections">
                <kw name="Navigate To Main Page" library="e2e_keywords" type="SETUP">
                    <kw name="Go To" library="SeleniumLibrary">
                        <arg>http://${HOST}:8000</arg>
                        <doc>Navigates the current browser window to the provided ``url``.</doc>
                        <msg timestamp="20210830 17:37:08.871" level="INFO">Opening url 'http://127.0.0.1:8000'</msg>
                        <status status="PASS" starttime="20210830 17:37:08.861" endtime="20210830 17:37:08.992"/>
                    </kw>
                    <status status="PASS" starttime="20210830 17:37:08.861" endtime="20210830 17:37:08.992"/>
                </kw>
                <kw name="Run Cli Package With Options" library="keywords">
                    <arg>--load-mode=insert --no-installed-keywords
                        C:\\repo\\rfhub2\\tests\\acceptance/../fixtures/initial
                    </arg>
                    <doc>Attempt to run the rfhub2-cli package with the given options
                        The stdout of the process will be in a test suite
                        variable named ${output}
                    </doc>
                    <kw name="Run" library="OperatingSystem">
                        <var>${output}</var>
                        <arg>${ACTIVATE_VENV} rfhub2-cli -a http://${HOST}:8000 ${options}</arg>
                        <doc>Runs the given command in the system and returns the output.</doc>
                        <msg timestamp="20210830 17:37:09.153" level="INFO">Running command ' rfhub2-cli -a
                            http://127.0.0.1:8000 --load-mode=insert --no-installed-keywords
                            C:\repo\rfhub2\tests\acceptance/../fixtures/initial 2&gt;&amp;1'.
                        </msg>
                        <msg timestamp="20210830 17:37:11.559" level="INFO">${output} = usage: script_for_system_exit
                            [-h] -c CONF
                            script_for_system_exit: error: the following arguments are required: -c/--conf
                            Failed to create collection from path C:\repo\rfhub2\tests\acceptance\..\fixtu...
                        </msg>
                        <status status="PASS" starttime="20210830 17:37:08.995" endtime="20210830 17:37:11.559"/>
                    </kw>
                    <kw name="Set Suite Variable" library="BuiltIn">
                        <arg>${output}</arg>
                        <doc>Makes a variable available everywhere within the scope of the current suite.</doc>
                        <msg timestamp="20210830 17:37:11.559" level="INFO">${output} = usage: script_for_system_exit
                            [-h] -c CONF
                            script_for_system_exit: error: the following arguments are required: -c/--conf
                            Failed to create collection from path C:\repo\rfhub2\tests\acceptance\..\fixtu...
                        </msg>
                        <status status="PASS" starttime="20210830 17:37:11.559" endtime="20210830 17:37:11.559"/>
                    </kw>
                    <status status="PASS" starttime="20210830 17:37:08.992" endtime="20210830 17:37:11.559"/>
                </kw>
                <kw name="Collections Count On Main Page Should Be 8" library="e2e_keywords"
                    sourcename="Collections Count On Main Page Should Be ${n}">
                    <kw name="Reload Page" library="SeleniumLibrary">
                        <doc>Simulates user reloading page.</doc>
                        <status status="PASS" starttime="20210830 17:37:11.559" endtime="20210830 17:37:11.678"/>
                    </kw>
                    <kw name="Run Keyword If" library="BuiltIn">
                        <arg>'${n}'!='0'</arg>
                        <arg>Wait Until Element Is Visible</arg>
                        <arg>${main_page_table}</arg>
                        <doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
                        <kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
                            <arg>${main_page_table}</arg>
                            <doc>Waits until the element ``locator`` is visible.</doc>
                            <status status="PASS" starttime="20210830 17:37:11.680" endtime="20210830 17:37:11.943"/>
                        </kw>
                        <status status="PASS" starttime="20210830 17:37:11.679" endtime="20210830 17:37:11.944"/>
                    </kw>
                    <kw name="Element Text Should Be" library="SeleniumLibrary">
                        <arg>${main_page_collection_number}</arg>
                        <arg>Collections (${n})</arg>
                        <doc>Verifies that element ``locator`` contains exact the text ``expected``.</doc>
                        <msg timestamp="20210830 17:37:11.945" level="INFO">Verifying element
                            '//*[@id="root"]/div/main/div[2]/div/div/div/h2' contains exact text 'Collections (8)'.
                        </msg>
                        <status status="PASS" starttime="20210830 17:37:11.944" endtime="20210830 17:37:11.978"/>
                    </kw>
                    <status status="PASS" starttime="20210830 17:37:11.559" endtime="20210830 17:37:11.978"/>
                </kw>
                <tag>e2e</tag>
                <status status="PASS" starttime="20210830 17:37:08.861" endtime="20210830 17:37:11.979"/>
            </test>
            <test id="s1-s3-t2" name="First Page Table Should Contain Proper Libraries Data">
                <kw name="Navigate To Main Page" library="e2e_keywords" type="SETUP">
                    <kw name="Go To" library="SeleniumLibrary">
                        <arg>http://${HOST}:8000</arg>
                        <doc>Navigates the current browser window to the provided ``url``.</doc>
                        <msg timestamp="20210830 17:37:11.983" level="INFO">Opening url 'http://127.0.0.1:8000'</msg>
                        <status status="PASS" starttime="20210830 17:37:11.982" endtime="20210830 17:37:12.091"/>
                    </kw>
                    <status status="PASS" starttime="20210830 17:37:11.982" endtime="20210830 17:37:12.091"/>
                </kw>
                <kw name="Table Should Contain Library Data" library="e2e_keywords">
                    <arg>LibWithEmptyInit1</arg>
                    <arg>LIBRARY</arg>
                    <arg>2.1.0</arg>
                    <arg>2</arg>
                    <kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
                        <arg>${main_page_table}</arg>
                        <doc>Waits until the element ``locator`` is visible.</doc>
                        <status status="PASS" starttime="20210830 17:37:12.092" endtime="20210830 17:37:12.331"/>
                    </kw>
                    <kw name="Get Length" library="BuiltIn">
                        <var>${list_len}</var>
                        <arg>${Library_data}</arg>
                        <doc>Returns and logs the length of the given item as an integer.</doc>
                        <msg timestamp="20210830 17:37:12.332" level="INFO">Length is 4</msg>
                        <msg timestamp="20210830 17:37:12.332" level="INFO">${list_len} = 4</msg>
                        <status status="PASS" starttime="20210830 17:37:12.332" endtime="20210830 17:37:12.332"/>
                    </kw>
                    <for flavor="IN RANGE">
                        <var>${i}</var>
                        <value>1</value>
                        <value>${list_len}</value>
                        <iter>
                            <var name="${i}">1</var>
                            <kw name="Table Column Should Contain" library="SeleniumLibrary">
                                <arg>${main_page_table}</arg>
                                <arg>${i}</arg>
                                <arg>${Library_data}[${i-1}]</arg>
                                <doc>Verifies table column contains text ``expected``.</doc>
                                <status status="PASS" starttime="20210830 17:37:12.333"
                                        endtime="20210830 17:37:12.403"/>
                            </kw>
                            <status status="PASS" starttime="20210830 17:37:12.333" endtime="20210830 17:37:12.403"/>
                        </iter>
                        <iter>
                            <var name="${i}">2</var>
                            <kw name="Table Column Should Contain" library="SeleniumLibrary">
                                <arg>${main_page_table}</arg>
                                <arg>${i}</arg>
                                <arg>${Library_data}[${i-1}]</arg>
                                <doc>Verifies table column contains text ``expected``.</doc>
                                <status status="PASS" starttime="20210830 17:37:12.403"
                                        endtime="20210830 17:37:12.468"/>
                            </kw>
                            <status status="PASS" starttime="20210830 17:37:12.403" endtime="20210830 17:37:12.468"/>
                        </iter>
                        <iter>
                            <var name="${i}">3</var>
                            <kw name="Table Column Should Contain" library="SeleniumLibrary">
                                <arg>${main_page_table}</arg>
                                <arg>${i}</arg>
                                <arg>${Library_data}[${i-1}]</arg>
                                <doc>Verifies table column contains text ``expected``.</doc>
                                <status status="PASS" starttime="20210830 17:37:12.468"
                                        endtime="20210830 17:37:12.547"/>
                            </kw>
                            <status status="PASS" starttime="20210830 17:37:12.468" endtime="20210830 17:37:12.547"/>
                        </iter>
                        <status status="PASS" starttime="20210830 17:37:12.333" endtime="20210830 17:37:12.547"/>
                    </for>
                    <status status="PASS" starttime="20210830 17:37:12.092" endtime="20210830 17:37:12.547"/>
                </kw>
                <kw name="Table Should Contain Library Data" library="e2e_keywords">
                    <arg>LibWithEmptyInit2</arg>
                    <arg>LIBRARY</arg>
                    <arg>1.0.0</arg>
                    <arg>2</arg>
                    <kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
                        <arg>${main_page_table}</arg>
                        <doc>Waits until the element ``locator`` is visible.</doc>
                        <status status="PASS" starttime="20210830 17:37:12.548" endtime="20210830 17:37:12.561"/>
                    </kw>
                    <kw name="Get Length" library="BuiltIn">
                        <var>${list_len}</var>
                        <arg>${Library_data}</arg>
                        <doc>Returns and logs the length of the given item as an integer.</doc>
                        <msg timestamp="20210830 17:37:12.561" level="INFO">Length is 4</msg>
                        <msg timestamp="20210830 17:37:12.561" level="INFO">${list_len} = 4</msg>
                        <status status="PASS" starttime="20210830 17:37:12.561" endtime="20210830 17:37:12.561"/>
                    </kw>
                    <for flavor="IN RANGE">
                        <var>${i}</var>
                        <value>1</value>
                        <value>${list_len}</value>
                        <iter>
                            <var name="${i}">1</var>
                            <kw name="Table Column Should Contain" library="SeleniumLibrary">
                                <arg>${main_page_table}</arg>
                                <arg>${i}</arg>
                                <arg>${Library_data}[${i-1}]</arg>
                                <doc>Verifies table column contains text ``expected``.</doc>
                                <status status="PASS" starttime="20210830 17:37:12.561"
                                        endtime="20210830 17:37:12.641"/>
                            </kw>
                            <status status="PASS" starttime="20210830 17:37:12.561" endtime="20210830 17:37:12.641"/>
                        </iter>
                        <iter>
                            <var name="${i}">2</var>
                            <kw name="Table Column Should Contain" library="SeleniumLibrary">
                                <arg>${main_page_table}</arg>
                                <arg>${i}</arg>
                                <arg>${Library_data}[${i-1}]</arg>
                                <doc>Verifies table column contains text ``expected``.</doc>
                                <status status="PASS" starttime="20210830 17:37:12.641"
                                        endtime="20210830 17:37:12.691"/>
                            </kw>
                            <status status="PASS" starttime="20210830 17:37:12.641" endtime="20210830 17:37:12.691"/>
                        </iter>
                        <iter>
                            <var name="${i}">3</var>
                            <kw name="Table Column Should Contain" library="SeleniumLibrary">
                                <arg>${main_page_table}</arg>
                                <arg>${i}</arg>
                                <arg>${Library_data}[${i-1}]</arg>
                                <doc>Verifies table column contains text ``expected``.</doc>
                                <status status="PASS" starttime="20210830 17:37:12.691"
                                        endtime="20210830 17:37:12.761"/>
                            </kw>
                            <status status="PASS" starttime="20210830 17:37:12.691" endtime="20210830 17:37:12.761"/>
                        </iter>
                        <status status="PASS" starttime="20210830 17:37:12.561" endtime="20210830 17:37:12.761"/>
                    </for>
                    <status status="PASS" starttime="20210830 17:37:12.547" endtime="20210830 17:37:12.761"/>
                </kw>
                <kw name="Table Should Contain Library Data" library="e2e_keywords">
                    <arg>LibWithInit</arg>
                    <arg>LIBRARY</arg>
                    <arg>6.6.6</arg>
                    <arg>4</arg>
                    <kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
                        <arg>${main_page_table}</arg>
                        <doc>Waits until the element ``locator`` is visible.</doc>
                        <status status="PASS" starttime="20210830 17:37:12.761" endtime="20210830 17:37:12.781"/>
                    </kw>
                    <kw name="Get Length" library="BuiltIn">
                        <var>${list_len}</var>
                        <arg>${Library_data}</arg>
                        <doc>Returns and logs the length of the given item as an integer.</doc>
                        <msg timestamp="20210830 17:37:12.781" level="INFO">Length is 4</msg>
                        <msg timestamp="20210830 17:37:12.781" level="INFO">${list_len} = 4</msg>
                        <status status="PASS" starttime="20210830 17:37:12.781" endtime="20210830 17:37:12.781"/>
                    </kw>
                    <for flavor="IN RANGE">
                        <var>${i}</var>
                        <value>1</value>
                        <value>${list_len}</value>
                        <iter>
                            <var name="${i}">1</var>
                            <kw name="Table Column Should Contain" library="SeleniumLibrary">
                                <arg>${main_page_table}</arg>
                                <arg>${i}</arg>
                                <arg>${Library_data}[${i-1}]</arg>
                                <doc>Verifies table column contains text ``expected``.</doc>
                                <status status="PASS" starttime="20210830 17:37:12.781"
                                        endtime="20210830 17:37:12.881"/>
                            </kw>
                            <status status="PASS" starttime="20210830 17:37:12.781" endtime="20210830 17:37:12.881"/>
                        </iter>
                        <iter>
                            <var name="${i}">2</var>
                            <kw name="Table Column Should Contain" library="SeleniumLibrary">
                                <arg>${main_page_table}</arg>
                                <arg>${i}</arg>
                                <arg>${Library_data}[${i-1}]</arg>
                                <doc>Verifies table column contains text ``expected``.</doc>
                                <status status="PASS" starttime="20210830 17:37:12.881"
                                        endtime="20210830 17:37:12.931"/>
                            </kw>
                            <status status="PASS" starttime="20210830 17:37:12.881" endtime="20210830 17:37:12.931"/>
                        </iter>
                        <iter>
                            <var name="${i}">3</var>
                            <kw name="Table Column Should Contain" library="SeleniumLibrary">
                                <arg>${main_page_table}</arg>
                                <arg>${i}</arg>
                                <arg>${Library_data}[${i-1}]</arg>
                                <doc>Verifies table column contains text ``expected``.</doc>
                                <status status="PASS" starttime="20210830 17:37:12.931"
                                        endtime="20210830 17:37:13.021"/>
                            </kw>
                            <status status="PASS" starttime="20210830 17:37:12.931" endtime="20210830 17:37:13.021"/>
                        </iter>
                        <status status="PASS" starttime="20210830 17:37:12.781" endtime="20210830 17:37:13.021"/>
                    </for>
                    <status status="PASS" starttime="20210830 17:37:12.761" endtime="20210830 17:37:13.021"/>
                </kw>
                <kw name="Table Should Contain Library Data" library="e2e_keywords">
                    <arg>SingleClassLib</arg>
                    <arg>LIBRARY</arg>
                    <arg>1.2.3</arg>
                    <arg>3</arg>
                    <kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
                        <arg>${main_page_table}</arg>
                        <doc>Waits until the element ``locator`` is visible.</doc>
                        <status status="PASS" starttime="20210830 17:37:13.031" endtime="20210830 17:37:13.041"/>
                    </kw>
                    <kw name="Get Length" library="BuiltIn">
                        <var>${list_len}</var>
                        <arg>${Library_data}</arg>
                        <doc>Returns and logs the length of the given item as an integer.</doc>
                        <msg timestamp="20210830 17:37:13.051" level="INFO">Length is 4</msg>
                        <msg timestamp="20210830 17:37:13.051" level="INFO">${list_len} = 4</msg>
                        <status status="PASS" starttime="20210830 17:37:13.051" endtime="20210830 17:37:13.051"/>
                    </kw>
                    <for flavor="IN RANGE">
                        <var>${i}</var>
                        <value>1</value>
                        <value>${list_len}</value>
                        <iter>
                            <var name="${i}">1</var>
                            <kw name="Table Column Should Contain" library="SeleniumLibrary">
                                <arg>${main_page_table}</arg>
                                <arg>${i}</arg>
                                <arg>${Library_data}[${i-1}]</arg>
                                <doc>Verifies table column contains text ``expected``.</doc>
                                <status status="PASS" starttime="20210830 17:37:13.051"
                                        endtime="20210830 17:37:13.161"/>
                            </kw>
                            <status status="PASS" starttime="20210830 17:37:13.051" endtime="20210830 17:37:13.161"/>
                        </iter>
                        <iter>
                            <var name="${i}">2</var>
                            <kw name="Table Column Should Contain" library="SeleniumLibrary">
                                <arg>${main_page_table}</arg>
                                <arg>${i}</arg>
                                <arg>${Library_data}[${i-1}]</arg>
                                <doc>Verifies table column contains text ``expected``.</doc>
                                <status status="PASS" starttime="20210830 17:37:13.161"
                                        endtime="20210830 17:37:13.211"/>
                            </kw>
                            <status status="PASS" starttime="20210830 17:37:13.161" endtime="20210830 17:37:13.211"/>
                        </iter>
                        <iter>
                            <var name="${i}">3</var>
                            <kw name="Table Column Should Contain" library="SeleniumLibrary">
                                <arg>${main_page_table}</arg>
                                <arg>${i}</arg>
                                <arg>${Library_data}[${i-1}]</arg>
                                <doc>Verifies table column contains text ``expected``.</doc>
                                <status status="PASS" starttime="20210830 17:37:13.211"
                                        endtime="20210830 17:37:13.311"/>
                            </kw>
                            <status status="PASS" starttime="20210830 17:37:13.211" endtime="20210830 17:37:13.321"/>
                        </iter>
                        <status status="PASS" starttime="20210830 17:37:13.051" endtime="20210830 17:37:13.321"/>
                    </for>
                    <status status="PASS" starttime="20210830 17:37:13.021" endtime="20210830 17:37:13.321"/>
                </kw>
                <kw name="Table Should Contain Library Data" library="e2e_keywords">
                    <arg>Test Libdoc File</arg>
                    <arg>LIBRARY</arg>
                    <arg>3.2.0</arg>
                    <arg>1</arg>
                    <kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
                        <arg>${main_page_table}</arg>
                        <doc>Waits until the element ``locator`` is visible.</doc>
                        <status status="PASS" starttime="20210830 17:37:13.321" endtime="20210830 17:37:13.341"/>
                    </kw>
                    <kw name="Get Length" library="BuiltIn">
                        <var>${list_len}</var>
                        <arg>${Library_data}</arg>
                        <doc>Returns and logs the length of the given item as an integer.</doc>
                        <msg timestamp="20210830 17:37:13.341" level="INFO">Length is 4</msg>
                        <msg timestamp="20210830 17:37:13.341" level="INFO">${list_len} = 4</msg>
                        <status status="PASS" starttime="20210830 17:37:13.341" endtime="20210830 17:37:13.341"/>
                    </kw>
                    <for flavor="IN RANGE">
                        <var>${i}</var>
                        <value>1</value>
                        <value>${list_len}</value>
                        <iter>
                            <var name="${i}">1</var>
                            <kw name="Table Column Should Contain" library="SeleniumLibrary">
                                <arg>${main_page_table}</arg>
                                <arg>${i}</arg>
                                <arg>${Library_data}[${i-1}]</arg>
                                <doc>Verifies table column contains text ``expected``.</doc>
                                <status status="PASS" starttime="20210830 17:37:13.341"
                                        endtime="20210830 17:37:13.481"/>
                            </kw>
                            <status status="PASS" starttime="20210830 17:37:13.341" endtime="20210830 17:37:13.481"/>
                        </iter>
                        <iter>
                            <var name="${i}">2</var>
                            <kw name="Table Column Should Contain" library="SeleniumLibrary">
                                <arg>${main_page_table}</arg>
                                <arg>${i}</arg>
                                <arg>${Library_data}[${i-1}]</arg>
                                <doc>Verifies table column contains text ``expected``.</doc>
                                <status status="PASS" starttime="20210830 17:37:13.481"
                                        endtime="20210830 17:37:13.521"/>
                            </kw>
                            <status status="PASS" starttime="20210830 17:37:13.481" endtime="20210830 17:37:13.521"/>
                        </iter>
                        <iter>
                            <var name="${i}">3</var>
                            <kw name="Table Column Should Contain" library="SeleniumLibrary">
                                <arg>${main_page_table}</arg>
                                <arg>${i}</arg>
                                <arg>${Library_data}[${i-1}]</arg>
                                <doc>Verifies table column contains text ``expected``.</doc>
                                <status status="PASS" starttime="20210830 17:37:13.521"
                                        endtime="20210830 17:37:13.641"/>
                            </kw>
                            <status status="PASS" starttime="20210830 17:37:13.521" endtime="20210830 17:37:13.641"/>
                        </iter>
                        <status status="PASS" starttime="20210830 17:37:13.341" endtime="20210830 17:37:13.641"/>
                    </for>
                    <status status="PASS" starttime="20210830 17:37:13.321" endtime="20210830 17:37:13.641"/>
                </kw>
                <kw name="Table Should Contain Library Data" library="e2e_keywords">
                    <arg>test_res_lib_dir</arg>
                    <arg>RESOURCE</arg>
                    <arg>${EMPTY}</arg>
                    <arg>2</arg>
                    <kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
                        <arg>${main_page_table}</arg>
                        <doc>Waits until the element ``locator`` is visible.</doc>
                        <status status="PASS" starttime="20210830 17:37:13.641" endtime="20210830 17:37:13.661"/>
                    </kw>
                    <kw name="Get Length" library="BuiltIn">
                        <var>${list_len}</var>
                        <arg>${Library_data}</arg>
                        <doc>Returns and logs the length of the given item as an integer.</doc>
                        <msg timestamp="20210830 17:37:13.661" level="INFO">Length is 4</msg>
                        <msg timestamp="20210830 17:37:13.661" level="INFO">${list_len} = 4</msg>
                        <status status="PASS" starttime="20210830 17:37:13.661" endtime="20210830 17:37:13.661"/>
                    </kw>
                    <for flavor="IN RANGE">
                        <var>${i}</var>
                        <value>1</value>
                        <value>${list_len}</value>
                        <iter>
                            <var name="${i}">1</var>
                            <kw name="Table Column Should Contain" library="SeleniumLibrary">
                                <arg>${main_page_table}</arg>
                                <arg>${i}</arg>
                                <arg>${Library_data}[${i-1}]</arg>
                                <doc>Verifies table column contains text ``expected``.</doc>
                                <status status="PASS" starttime="20210830 17:37:13.661"
                                        endtime="20210830 17:37:13.811"/>
                            </kw>
                            <status status="PASS" starttime="20210830 17:37:13.661" endtime="20210830 17:37:13.811"/>
                        </iter>
                        <iter>
                            <var name="${i}">2</var>
                            <kw name="Table Column Should Contain" library="SeleniumLibrary">
                                <arg>${main_page_table}</arg>
                                <arg>${i}</arg>
                                <arg>${Library_data}[${i-1}]</arg>
                                <doc>Verifies table column contains text ``expected``.</doc>
                                <status status="PASS" starttime="20210830 17:37:13.811"
                                        endtime="20210830 17:37:13.971"/>
                            </kw>
                            <status status="PASS" starttime="20210830 17:37:13.811" endtime="20210830 17:37:13.971"/>
                        </iter>
                        <iter>
                            <var name="${i}">3</var>
                            <kw name="Table Column Should Contain" library="SeleniumLibrary">
                                <arg>${main_page_table}</arg>
                                <arg>${i}</arg>
                                <arg>${Library_data}[${i-1}]</arg>
                                <doc>Verifies table column contains text ``expected``.</doc>
                                <status status="PASS" starttime="20210830 17:37:13.971"
                                        endtime="20210830 17:37:14.001"/>
                            </kw>
                            <status status="PASS" starttime="20210830 17:37:13.971" endtime="20210830 17:37:14.001"/>
                        </iter>
                        <status status="PASS" starttime="20210830 17:37:13.661" endtime="20210830 17:37:14.001"/>
                    </for>
                    <status status="PASS" starttime="20210830 17:37:13.641" endtime="20210830 17:37:14.001"/>
                </kw>
                <kw name="Table Should Contain Library Data" library="e2e_keywords">
                    <arg>test_resource</arg>
                    <arg>RESOURCE</arg>
                    <arg>${EMPTY}</arg>
                    <arg>2</arg>
                    <kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
                        <arg>${main_page_table}</arg>
                        <doc>Waits until the element ``locator`` is visible.</doc>
                        <status status="PASS" starttime="20210830 17:37:14.001" endtime="20210830 17:37:14.021"/>
                    </kw>
                    <kw name="Get Length" library="BuiltIn">
                        <var>${list_len}</var>
                        <arg>${Library_data}</arg>
                        <doc>Returns and logs the length of the given item as an integer.</doc>
                        <msg timestamp="20210830 17:37:14.021" level="INFO">Length is 4</msg>
                        <msg timestamp="20210830 17:37:14.021" level="INFO">${list_len} = 4</msg>
                        <status status="PASS" starttime="20210830 17:37:14.021" endtime="20210830 17:37:14.021"/>
                    </kw>
                    <for flavor="IN RANGE">
                        <var>${i}</var>
                        <value>1</value>
                        <value>${list_len}</value>
                        <iter>
                            <var name="${i}">1</var>
                            <kw name="Table Column Should Contain" library="SeleniumLibrary">
                                <arg>${main_page_table}</arg>
                                <arg>${i}</arg>
                                <arg>${Library_data}[${i-1}]</arg>
                                <doc>Verifies table column contains text ``expected``.</doc>
                                <status status="PASS" starttime="20210830 17:37:14.021"
                                        endtime="20210830 17:37:14.191"/>
                            </kw>
                            <status status="PASS" starttime="20210830 17:37:14.021" endtime="20210830 17:37:14.191"/>
                        </iter>
                        <iter>
                            <var name="${i}">2</var>
                            <kw name="Table Column Should Contain" library="SeleniumLibrary">
                                <arg>${main_page_table}</arg>
                                <arg>${i}</arg>
                                <arg>${Library_data}[${i-1}]</arg>
                                <doc>Verifies table column contains text ``expected``.</doc>
                                <status status="PASS" starttime="20210830 17:37:14.191"
                                        endtime="20210830 17:37:14.321"/>
                            </kw>
                            <status status="PASS" starttime="20210830 17:37:14.191" endtime="20210830 17:37:14.321"/>
                        </iter>
                        <iter>
                            <var name="${i}">3</var>
                            <kw name="Table Column Should Contain" library="SeleniumLibrary">
                                <arg>${main_page_table}</arg>
                                <arg>${i}</arg>
                                <arg>${Library_data}[${i-1}]</arg>
                                <doc>Verifies table column contains text ``expected``.</doc>
                                <status status="PASS" starttime="20210830 17:37:14.321"
                                        endtime="20210830 17:37:14.361"/>
                            </kw>
                            <status status="PASS" starttime="20210830 17:37:14.321" endtime="20210830 17:37:14.361"/>
                        </iter>
                        <status status="PASS" starttime="20210830 17:37:14.021" endtime="20210830 17:37:14.361"/>
                    </for>
                    <status status="PASS" starttime="20210830 17:37:14.001" endtime="20210830 17:37:14.361"/>
                </kw>
                <kw name="Table Should Contain Library Data" library="e2e_keywords">
                    <arg>test_robot</arg>
                    <arg>RESOURCE</arg>
                    <arg>${EMPTY}</arg>
                    <arg>4</arg>
                    <kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
                        <arg>${main_page_table}</arg>
                        <doc>Waits until the element ``locator`` is visible.</doc>
                        <status status="PASS" starttime="20210830 17:37:14.361" endtime="20210830 17:37:14.381"/>
                    </kw>
                    <kw name="Get Length" library="BuiltIn">
                        <var>${list_len}</var>
                        <arg>${Library_data}</arg>
                        <doc>Returns and logs the length of the given item as an integer.</doc>
                        <msg timestamp="20210830 17:37:14.381" level="INFO">Length is 4</msg>
                        <msg timestamp="20210830 17:37:14.381" level="INFO">${list_len} = 4</msg>
                        <status status="PASS" starttime="20210830 17:37:14.381" endtime="20210830 17:37:14.381"/>
                    </kw>
                    <for flavor="IN RANGE">
                        <var>${i}</var>
                        <value>1</value>
                        <value>${list_len}</value>
                        <iter>
                            <var name="${i}">1</var>
                            <kw name="Table Column Should Contain" library="SeleniumLibrary">
                                <arg>${main_page_table}</arg>
                                <arg>${i}</arg>
                                <arg>${Library_data}[${i-1}]</arg>
                                <doc>Verifies table column contains text ``expected``.</doc>
                                <status status="PASS" starttime="20210830 17:37:14.381"
                                        endtime="20210830 17:37:14.561"/>
                            </kw>
                            <status status="PASS" starttime="20210830 17:37:14.381" endtime="20210830 17:37:14.561"/>
                        </iter>
                        <iter>
                            <var name="${i}">2</var>
                            <kw name="Table Column Should Contain" library="SeleniumLibrary">
                                <arg>${main_page_table}</arg>
                                <arg>${i}</arg>
                                <arg>${Library_data}[${i-1}]</arg>
                                <doc>Verifies table column contains text ``expected``.</doc>
                                <status status="PASS" starttime="20210830 17:37:14.571"
                                        endtime="20210830 17:37:14.701"/>
                            </kw>
                            <status status="PASS" starttime="20210830 17:37:14.571" endtime="20210830 17:37:14.701"/>
                        </iter>
                        <iter>
                            <var name="${i}">3</var>
                            <kw name="Table Column Should Contain" library="SeleniumLibrary">
                                <arg>${main_page_table}</arg>
                                <arg>${i}</arg>
                                <arg>${Library_data}[${i-1}]</arg>
                                <doc>Verifies table column contains text ``expected``.</doc>
                                <status status="PASS" starttime="20210830 17:37:14.701"
                                        endtime="20210830 17:37:14.731"/>
                            </kw>
                            <status status="PASS" starttime="20210830 17:37:14.701" endtime="20210830 17:37:14.731"/>
                        </iter>
                        <status status="PASS" starttime="20210830 17:37:14.381" endtime="20210830 17:37:14.731"/>
                    </for>
                    <status status="PASS" starttime="20210830 17:37:14.361" endtime="20210830 17:37:14.731"/>
                </kw>
                <doc>This test bases on
                    'Populated App Should Show Number Of Collections'
                    to shorten execution time.
                </doc>
                <tag>e2e</tag>
                <status status="PASS" starttime="20210830 17:37:11.980" endtime="20210830 17:37:14.731"/>
            </test>
            <test id="s1-s3-t3" name="Left Panel Should Contain Expected Libraries">
                <kw name="Navigate To Main Page" library="e2e_keywords" type="SETUP">
                    <kw name="Go To" library="SeleniumLibrary">
                        <arg>http://${HOST}:8000</arg>
                        <doc>Navigates the current browser window to the provided ``url``.</doc>
                        <msg timestamp="20210830 17:37:14.731" level="INFO">Opening url 'http://127.0.0.1:8000'</msg>
                        <status status="PASS" starttime="20210830 17:37:14.731" endtime="20210830 17:37:14.831"/>
                    </kw>
                    <status status="PASS" starttime="20210830 17:37:14.731" endtime="20210830 17:37:14.831"/>
                </kw>
                <kw name="Left Panel Should Contain Every Library" library="e2e_keywords">
                    <kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
                        <arg>${main_page_table}</arg>
                        <doc>Waits until the element ``locator`` is visible.</doc>
                        <status status="PASS" starttime="20210830 17:37:14.833" endtime="20210830 17:37:15.066"/>
                    </kw>
                    <kw name="Get Length" library="BuiltIn">
                        <var>${list_len}</var>
                        <arg>${expected_libraries}</arg>
                        <doc>Returns and logs the length of the given item as an integer.</doc>
                        <msg timestamp="20210830 17:37:15.067" level="INFO">Length is 8</msg>
                        <msg timestamp="20210830 17:37:15.068" level="INFO">${list_len} = 8</msg>
                        <status status="PASS" starttime="20210830 17:37:15.067" endtime="20210830 17:37:15.068"/>
                    </kw>
                    <for flavor="IN RANGE">
                        <var>${i}</var>
                        <value>1</value>
                        <value>${list_len}</value>
                        <iter>
                            <var name="${i}">1</var>
                            <kw name="Element Text Should Be" library="SeleniumLibrary">
                                <arg>${left_panel_list}/li[${i}]/div/span</arg>
                                <arg>${expected_libraries}[${i-1}]</arg>
                                <doc>Verifies that element ``locator`` contains exact the text ``expected``.</doc>
                                <msg timestamp="20210830 17:37:15.071" level="INFO">Verifying element
                                    '//*[@id="root"]/div/div/div/ul/li[1]/div/span' contains exact text
                                    'LibWithEmptyInit1'.
                                </msg>
                                <status status="PASS" starttime="20210830 17:37:15.068"
                                        endtime="20210830 17:37:15.098"/>
                            </kw>
                            <status status="PASS" starttime="20210830 17:37:15.068" endtime="20210830 17:37:15.098"/>
                        </iter>
                        <iter>
                            <var name="${i}">2</var>
                            <kw name="Element Text Should Be" library="SeleniumLibrary">
                                <arg>${left_panel_list}/li[${i}]/div/span</arg>
                                <arg>${expected_libraries}[${i-1}]</arg>
                                <doc>Verifies that element ``locator`` contains exact the text ``expected``.</doc>
                                <msg timestamp="20210830 17:37:15.102" level="INFO">Verifying element
                                    '//*[@id="root"]/div/div/div/ul/li[2]/div/span' contains exact text
                                    'LibWithEmptyInit2'.
                                </msg>
                                <status status="PASS" starttime="20210830 17:37:15.099"
                                        endtime="20210830 17:37:15.130"/>
                            </kw>
                            <status status="PASS" starttime="20210830 17:37:15.098" endtime="20210830 17:37:15.130"/>
                        </iter>
                        <iter>
                            <var name="${i}">3</var>
                            <kw name="Element Text Should Be" library="SeleniumLibrary">
                                <arg>${left_panel_list}/li[${i}]/div/span</arg>
                                <arg>${expected_libraries}[${i-1}]</arg>
                                <doc>Verifies that element ``locator`` contains exact the text ``expected``.</doc>
                                <msg timestamp="20210830 17:37:15.134" level="INFO">Verifying element
                                    '//*[@id="root"]/div/div/div/ul/li[3]/div/span' contains exact text 'LibWithInit'.
                                </msg>
                                <status status="PASS" starttime="20210830 17:37:15.131"
                                        endtime="20210830 17:37:15.151"/>
                            </kw>
                            <status status="PASS" starttime="20210830 17:37:15.130" endtime="20210830 17:37:15.161"/>
                        </iter>
                        <iter>
                            <var name="${i}">4</var>
                            <kw name="Element Text Should Be" library="SeleniumLibrary">
                                <arg>${left_panel_list}/li[${i}]/div/span</arg>
                                <arg>${expected_libraries}[${i-1}]</arg>
                                <doc>Verifies that element ``locator`` contains exact the text ``expected``.</doc>
                                <msg timestamp="20210830 17:37:15.161" level="INFO">Verifying element
                                    '//*[@id="root"]/div/div/div/ul/li[4]/div/span' contains exact text
                                    'SingleClassLib'.
                                </msg>
                                <status status="PASS" starttime="20210830 17:37:15.161"
                                        endtime="20210830 17:37:15.181"/>
                            </kw>
                            <status status="PASS" starttime="20210830 17:37:15.161" endtime="20210830 17:37:15.191"/>
                        </iter>
                        <iter>
                            <var name="${i}">5</var>
                            <kw name="Element Text Should Be" library="SeleniumLibrary">
                                <arg>${left_panel_list}/li[${i}]/div/span</arg>
                                <arg>${expected_libraries}[${i-1}]</arg>
                                <doc>Verifies that element ``locator`` contains exact the text ``expected``.</doc>
                                <msg timestamp="20210830 17:37:15.191" level="INFO">Verifying element
                                    '//*[@id="root"]/div/div/div/ul/li[5]/div/span' contains exact text 'Test Libdoc
                                    File'.
                                </msg>
                                <status status="PASS" starttime="20210830 17:37:15.191"
                                        endtime="20210830 17:37:15.221"/>
                            </kw>
                            <status status="PASS" starttime="20210830 17:37:15.191" endtime="20210830 17:37:15.221"/>
                        </iter>
                        <iter>
                            <var name="${i}">6</var>
                            <kw name="Element Text Should Be" library="SeleniumLibrary">
                                <arg>${left_panel_list}/li[${i}]/div/span</arg>
                                <arg>${expected_libraries}[${i-1}]</arg>
                                <doc>Verifies that element ``locator`` contains exact the text ``expected``.</doc>
                                <msg timestamp="20210830 17:37:15.221" level="INFO">Verifying element
                                    '//*[@id="root"]/div/div/div/ul/li[6]/div/span' contains exact text
                                    'test_res_lib_dir'.
                                </msg>
                                <status status="PASS" starttime="20210830 17:37:15.221"
                                        endtime="20210830 17:37:15.241"/>
                            </kw>
                            <status status="PASS" starttime="20210830 17:37:15.221" endtime="20210830 17:37:15.241"/>
                        </iter>
                        <iter>
                            <var name="${i}">7</var>
                            <kw name="Element Text Should Be" library="SeleniumLibrary">
                                <arg>${left_panel_list}/li[${i}]/div/span</arg>
                                <arg>${expected_libraries}[${i-1}]</arg>
                                <doc>Verifies that element ``locator`` contains exact the text ``expected``.</doc>
                                <msg timestamp="20210830 17:37:15.251" level="INFO">Verifying element
                                    '//*[@id="root"]/div/div/div/ul/li[7]/div/span' contains exact text 'test_resource'.
                                </msg>
                                <status status="PASS" starttime="20210830 17:37:15.251"
                                        endtime="20210830 17:37:15.281"/>
                            </kw>
                            <status status="PASS" starttime="20210830 17:37:15.251" endtime="20210830 17:37:15.281"/>
                        </iter>
                        <status status="PASS" starttime="20210830 17:37:15.068" endtime="20210830 17:37:15.281"/>
                    </for>
                    <status status="PASS" starttime="20210830 17:37:14.832" endtime="20210830 17:37:15.281"/>
                </kw>
                <doc>This test bases on
                    'Populated App Should Show Number Of Collections'
                    to shorten execution time.
                </doc>
                <tag>e2e</tag>
                <status status="PASS" starttime="20210830 17:37:14.731" endtime="20210830 17:37:15.281"/>
            </test>
            <test id="s1-s3-t4" name="Left Panel Should Contain Library Keywords In Alphabetical Order After Click">
                <kw name="Navigate To Main Page" library="e2e_keywords" type="SETUP">
                    <kw name="Go To" library="SeleniumLibrary">
                        <arg>http://${HOST}:8000</arg>
                        <doc>Navigates the current browser window to the provided ``url``.</doc>
                        <msg timestamp="20210830 17:37:15.281" level="INFO">Opening url 'http://127.0.0.1:8000'</msg>
                        <status status="PASS" starttime="20210830 17:37:15.281" endtime="20210830 17:37:15.381"/>
                    </kw>
                    <status status="PASS" starttime="20210830 17:37:15.281" endtime="20210830 17:37:15.381"/>
                </kw>
                <kw name="Open ${single_class_lib} In Left Panel" library="e2e_keywords"
                    sourcename="Open ${library} In Left Panel">
                    <kw name="Run Keyword And Return Status" library="BuiltIn">
                        <var>${is_visible}</var>
                        <arg>Element Should Not Be Visible</arg>
                        <arg>${hamburger}</arg>
                        <doc>Runs the given keyword with given arguments and returns the status as a Boolean value.
                        </doc>
                        <kw name="Element Should Not Be Visible" library="SeleniumLibrary">
                            <arg>${hamburger}</arg>
                            <doc>Verifies that the element identified by ``locator`` is NOT visible.</doc>
                            <msg timestamp="20210830 17:37:15.405" level="INFO">Element
                                '//*[@id="root"]/div/header/div/button/span[1]/svg/path' did not exist.
                            </msg>
                            <status status="PASS" starttime="20210830 17:37:15.382" endtime="20210830 17:37:15.405"/>
                        </kw>
                        <msg timestamp="20210830 17:37:15.405" level="INFO">${is_visible} = True</msg>
                        <status status="PASS" starttime="20210830 17:37:15.382" endtime="20210830 17:37:15.405"/>
                    </kw>
                    <kw name="Run Keyword Unless" library="BuiltIn">
                        <arg>${is_visible}</arg>
                        <arg>Click Element</arg>
                        <arg>${hamburger}</arg>
                        <doc>Runs the given keyword with the given arguments if ``condition`` is false.</doc>
                        <status status="PASS" starttime="20210830 17:37:15.406" endtime="20210830 17:37:15.406"/>
                    </kw>
                    <kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
                        <arg>${library}</arg>
                        <doc>Waits until the element ``locator`` is visible.</doc>
                        <status status="PASS" starttime="20210830 17:37:15.407" endtime="20210830 17:37:15.461"/>
                    </kw>
                    <kw name="Click Element" library="SeleniumLibrary">
                        <arg>${library}</arg>
                        <doc>Click the element identified by ``locator``.</doc>
                        <msg timestamp="20210830 17:37:15.462" level="INFO">Clicking element
                            '//*[contains(text(),"SingleClassLib")]'.
                        </msg>
                        <status status="PASS" starttime="20210830 17:37:15.461" endtime="20210830 17:37:15.530"/>
                    </kw>
                    <kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
                        <arg>//*[contains(text(),'Overview')]</arg>
                        <doc>Waits until the element ``locator`` is visible.</doc>
                        <status status="PASS" starttime="20210830 17:37:15.530" endtime="20210830 17:37:15.778"/>
                    </kw>
                    <status status="PASS" starttime="20210830 17:37:15.381" endtime="20210830 17:37:15.778"/>
                </kw>
                <kw name="Left Panel For Single Library Should Contain Expected Keywords" library="e2e_keywords">
                    <arg>@{expected_keywords}</arg>
                    <kw name="Get Length" library="BuiltIn">
                        <var>${list_len}</var>
                        <arg>${keywords}</arg>
                        <doc>Returns and logs the length of the given item as an integer.</doc>
                        <msg timestamp="20210830 17:37:15.780" level="INFO">Length is 4</msg>
                        <msg timestamp="20210830 17:37:15.780" level="INFO">${list_len} = 4</msg>
                        <status status="PASS" starttime="20210830 17:37:15.779" endtime="20210830 17:37:15.780"/>
                    </kw>
                    <for flavor="IN RANGE">
                        <var>${i}</var>
                        <value>1</value>
                        <value>${list_len}</value>
                        <iter>
                            <var name="${i}">1</var>
                            <kw name="Run Keyword And Continue On Failure" library="BuiltIn">
                                <arg>Element Text Should Be</arg>
                                <arg>${single_class_lib_items}/a[${i+1}]/div/div</arg>
                                <arg>${keywords}[${i}]</arg>
                                <doc>Runs the keyword and continues execution even if a failure occurs.</doc>
                                <kw name="Element Text Should Be" library="SeleniumLibrary">
                                    <arg>${single_class_lib_items}/a[${i+1}]/div/div</arg>
                                    <arg>${keywords}[${i}]</arg>
                                    <doc>Verifies that element ``locator`` contains exact the text ``expected``.</doc>
                                    <msg timestamp="20210830 17:37:15.783" level="INFO">Verifying element
                                        '//*[@id="root"]/div/div/div/ul/div/div/div/div/a[2]/div/div' contains exact
                                        text 'Single Class Lib Method 1'.
                                    </msg>
                                    <status status="PASS" starttime="20210830 17:37:15.781"
                                            endtime="20210830 17:37:15.814"/>
                                </kw>
                                <status status="PASS" starttime="20210830 17:37:15.780"
                                        endtime="20210830 17:37:15.814"/>
                            </kw>
                            <status status="PASS" starttime="20210830 17:37:15.780" endtime="20210830 17:37:15.814"/>
                        </iter>
                        <iter>
                            <var name="${i}">2</var>
                            <kw name="Run Keyword And Continue On Failure" library="BuiltIn">
                                <arg>Element Text Should Be</arg>
                                <arg>${single_class_lib_items}/a[${i+1}]/div/div</arg>
                                <arg>${keywords}[${i}]</arg>
                                <doc>Runs the keyword and continues execution even if a failure occurs.</doc>
                                <kw name="Element Text Should Be" library="SeleniumLibrary">
                                    <arg>${single_class_lib_items}/a[${i+1}]/div/div</arg>
                                    <arg>${keywords}[${i}]</arg>
                                    <doc>Verifies that element ``locator`` contains exact the text ``expected``.</doc>
                                    <msg timestamp="20210830 17:37:15.817" level="INFO">Verifying element
                                        '//*[@id="root"]/div/div/div/ul/div/div/div/div/a[3]/div/div' contains exact
                                        text 'Single Class Lib Method 2'.
                                    </msg>
                                    <status status="PASS" starttime="20210830 17:37:15.815"
                                            endtime="20210830 17:37:15.845"/>
                                </kw>
                                <status status="PASS" starttime="20210830 17:37:15.814"
                                        endtime="20210830 17:37:15.845"/>
                            </kw>
                            <status status="PASS" starttime="20210830 17:37:15.814" endtime="20210830 17:37:15.845"/>
                        </iter>
                        <iter>
                            <var name="${i}">3</var>
                            <kw name="Run Keyword And Continue On Failure" library="BuiltIn">
                                <arg>Element Text Should Be</arg>
                                <arg>${single_class_lib_items}/a[${i+1}]/div/div</arg>
                                <arg>${keywords}[${i}]</arg>
                                <doc>Runs the keyword and continues execution even if a failure occurs.</doc>
                                <kw name="Element Text Should Be" library="SeleniumLibrary">
                                    <arg>${single_class_lib_items}/a[${i+1}]/div/div</arg>
                                    <arg>${keywords}[${i}]</arg>
                                    <doc>Verifies that element ``locator`` contains exact the text ``expected``.</doc>
                                    <msg timestamp="20210830 17:37:15.849" level="INFO">Verifying element
                                        '//*[@id="root"]/div/div/div/ul/div/div/div/div/a[4]/div/div' contains exact
                                        text 'Single Class Lib Method 3'.
                                    </msg>
                                    <status status="PASS" starttime="20210830 17:37:15.846"
                                            endtime="20210830 17:37:15.878"/>
                                </kw>
                                <status status="PASS" starttime="20210830 17:37:15.846"
                                        endtime="20210830 17:37:15.878"/>
                            </kw>
                            <status status="PASS" starttime="20210830 17:37:15.846" endtime="20210830 17:37:15.878"/>
                        </iter>
                        <status status="PASS" starttime="20210830 17:37:15.780" endtime="20210830 17:37:15.878"/>
                    </for>
                    <status status="PASS" starttime="20210830 17:37:15.778" endtime="20210830 17:37:15.878"/>
                </kw>
                <doc>This test bases on
                    'Populated App Should Show Number Of Collections'
                    to shorten execution time.
                </doc>
                <tag>e2e</tag>
                <tag>regression</tag>
                <tag>rfhub2-46</tag>
                <status status="PASS" starttime="20210830 17:37:15.281" endtime="20210830 17:37:15.878"/>
            </test>
            <test id="s1-s3-t5" name="Left Panel Keywords Should Navigate To Library Details And Show Correct Data">
                <kw name="Navigate To Main Page" library="e2e_keywords" type="SETUP">
                    <kw name="Go To" library="SeleniumLibrary">
                        <arg>http://${HOST}:8000</arg>
                        <doc>Navigates the current browser window to the provided ``url``.</doc>
                        <msg timestamp="20210830 17:37:15.878" level="INFO">Opening url 'http://127.0.0.1:8000'</msg>
                        <status status="PASS" starttime="20210830 17:37:15.878" endtime="20210830 17:37:15.978"/>
                    </kw>
                    <status status="PASS" starttime="20210830 17:37:15.878" endtime="20210830 17:37:15.978"/>
                </kw>
                <kw name="Sleep" library="BuiltIn">
                    <arg>2s</arg>
                    <doc>Pauses the test executed for the given time.</doc>
                    <msg timestamp="20210830 17:37:17.984" level="INFO">Slept 2 seconds</msg>
                    <status status="PASS" starttime="20210830 17:37:15.979" endtime="20210830 17:37:17.984"/>
                </kw>
                <kw name="Open ${lib_with_init} In Left Panel" library="e2e_keywords"
                    sourcename="Open ${library} In Left Panel">
                    <kw name="Run Keyword And Return Status" library="BuiltIn">
                        <var>${is_visible}</var>
                        <arg>Element Should Not Be Visible</arg>
                        <arg>${hamburger}</arg>
                        <doc>Runs the given keyword with given arguments and returns the status as a Boolean value.
                        </doc>
                        <kw name="Element Should Not Be Visible" library="SeleniumLibrary">
                            <arg>${hamburger}</arg>
                            <doc>Verifies that the element identified by ``locator`` is NOT visible.</doc>
                            <msg timestamp="20210830 17:37:18.004" level="INFO">Element
                                '//*[@id="root"]/div/header/div/button/span[1]/svg/path' did not exist.
                            </msg>
                            <status status="PASS" starttime="20210830 17:37:17.984" endtime="20210830 17:37:18.004"/>
                        </kw>
                        <msg timestamp="20210830 17:37:18.004" level="INFO">${is_visible} = True</msg>
                        <status status="PASS" starttime="20210830 17:37:17.984" endtime="20210830 17:37:18.004"/>
                    </kw>
                    <kw name="Run Keyword Unless" library="BuiltIn">
                        <arg>${is_visible}</arg>
                        <arg>Click Element</arg>
                        <arg>${hamburger}</arg>
                        <doc>Runs the given keyword with the given arguments if ``condition`` is false.</doc>
                        <status status="PASS" starttime="20210830 17:37:18.004" endtime="20210830 17:37:18.004"/>
                    </kw>
                    <kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
                        <arg>${library}</arg>
                        <doc>Waits until the element ``locator`` is visible.</doc>
                        <status status="PASS" starttime="20210830 17:37:18.004" endtime="20210830 17:37:18.044"/>
                    </kw>
                    <kw name="Click Element" library="SeleniumLibrary">
                        <arg>${library}</arg>
                        <doc>Click the element identified by ``locator``.</doc>
                        <msg timestamp="20210830 17:37:18.044" level="INFO">Clicking element
                            '//*[contains(text(),"LibWithInit")]'.
                        </msg>
                        <status status="PASS" starttime="20210830 17:37:18.044" endtime="20210830 17:37:18.109"/>
                    </kw>
                    <kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
                        <arg>//*[contains(text(),'Overview')]</arg>
                        <doc>Waits until the element ``locator`` is visible.</doc>
                        <status status="PASS" starttime="20210830 17:37:18.109" endtime="20210830 17:37:18.379"/>
                    </kw>
                    <status status="PASS" starttime="20210830 17:37:17.984" endtime="20210830 17:37:18.379"/>
                </kw>
                <kw name="Click ${lib_with_init_2_method_1} In Left Panel" library="e2e_keywords"
                    sourcename="Click ${keyword} In Left Panel">
                    <kw name="Click Element When Visible" library="e2e_keywords">
                        <arg>${keyword}</arg>
                        <kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
                            <arg>${element}</arg>
                            <doc>Waits until the element ``locator`` is visible.</doc>
                            <status status="PASS" starttime="20210830 17:37:18.382" endtime="20210830 17:37:18.424"/>
                        </kw>
                        <kw name="Click Element" library="SeleniumLibrary">
                            <arg>${element}</arg>
                            <doc>Click the element identified by ``locator``.</doc>
                            <msg timestamp="20210830 17:37:18.425" level="INFO">Clicking element
                                '//*[contains(text(),"Lib With Init 2 Method 1")]'.
                            </msg>
                            <status status="PASS" starttime="20210830 17:37:18.425" endtime="20210830 17:37:18.492"/>
                        </kw>
                        <status status="PASS" starttime="20210830 17:37:18.381" endtime="20210830 17:37:18.493"/>
                    </kw>
                    <kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
                        <arg>${detail_view_library_version}</arg>
                        <doc>Waits until the element ``locator`` is visible.</doc>
                        <status status="PASS" starttime="20210830 17:37:18.493" endtime="20210830 17:37:18.794"/>
                    </kw>
                    <status status="PASS" starttime="20210830 17:37:18.380" endtime="20210830 17:37:18.795"/>
                </kw>
                <kw name="Library title Should Be LibWithInit" library="e2e_keywords"
                    sourcename="Library ${field} Should Be ${value}">
                    <kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
                        <arg>${detail_view_library_${field}}</arg>
                        <arg>0.5s</arg>
                        <doc>Waits until the element ``locator`` is visible.</doc>
                        <status status="PASS" starttime="20210830 17:37:18.796" endtime="20210830 17:37:18.849"/>
                    </kw>
                    <kw name="Element Text Should Be" library="SeleniumLibrary">
                        <arg>${detail_view_library_${field}}</arg>
                        <arg>${value}</arg>
                        <doc>Verifies that element ``locator`` contains exact the text ``expected``.</doc>
                        <msg timestamp="20210830 17:37:18.852" level="INFO">Verifying element
                            '//*[@id="root"]/div/main/div[2]/div/div/div/h2[1]' contains exact text 'LibWithInit'.
                        </msg>
                        <status status="PASS" starttime="20210830 17:37:18.850" endtime="20210830 17:37:18.893"/>
                    </kw>
                    <status status="PASS" starttime="20210830 17:37:18.795" endtime="20210830 17:37:18.893"/>
                </kw>
                <kw name="Library version Should Be version: 6.6.6" library="e2e_keywords"
                    sourcename="Library ${field} Should Be ${value}">
                    <kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
                        <arg>${detail_view_library_${field}}</arg>
                        <arg>0.5s</arg>
                        <doc>Waits until the element ``locator`` is visible.</doc>
                        <status status="PASS" starttime="20210830 17:37:18.895" endtime="20210830 17:37:18.919"/>
                    </kw>
                    <kw name="Element Text Should Be" library="SeleniumLibrary">
                        <arg>${detail_view_library_${field}}</arg>
                        <arg>${value}</arg>
                        <doc>Verifies that element ``locator`` contains exact the text ``expected``.</doc>
                        <msg timestamp="20210830 17:37:18.920" level="INFO">Verifying element
                            '//*[@id="root"]/div/main/div[2]/div/div/div/div[1]' contains exact text 'version: 6.6.6'.
                        </msg>
                        <status status="PASS" starttime="20210830 17:37:18.919" endtime="20210830 17:37:18.944"/>
                    </kw>
                    <status status="PASS" starttime="20210830 17:37:18.894" endtime="20210830 17:37:18.944"/>
                </kw>
                <kw name="Library scope Should Be scope: GLOBAL" library="e2e_keywords"
                    sourcename="Library ${field} Should Be ${value}">
                    <kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
                        <arg>${detail_view_library_${field}}</arg>
                        <arg>0.5s</arg>
                        <doc>Waits until the element ``locator`` is visible.</doc>
                        <status status="PASS" starttime="20210830 17:37:18.945" endtime="20210830 17:37:18.972"/>
                    </kw>
                    <kw name="Element Text Should Be" library="SeleniumLibrary">
                        <arg>${detail_view_library_${field}}</arg>
                        <arg>${value}</arg>
                        <doc>Verifies that element ``locator`` contains exact the text ``expected``.</doc>
                        <msg timestamp="20210830 17:37:18.973" level="INFO">Verifying element
                            '//*[@id="root"]/div/main/div[2]/div/div/div/div[2]' contains exact text 'scope: GLOBAL'.
                        </msg>
                        <status status="PASS" starttime="20210830 17:37:18.972" endtime="20210830 17:37:18.996"/>
                    </kw>
                    <status status="PASS" starttime="20210830 17:37:18.944" endtime="20210830 17:37:18.997"/>
                </kw>
                <kw name="Library overview Should Be This is a docstring that should be imported as overview"
                    library="e2e_keywords" sourcename="Library ${field} Should Be ${value}">
                    <kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
                        <arg>${detail_view_library_${field}}</arg>
                        <arg>0.5s</arg>
                        <doc>Waits until the element ``locator`` is visible.</doc>
                        <status status="PASS" starttime="20210830 17:37:18.998" endtime="20210830 17:37:19.024"/>
                    </kw>
                    <kw name="Element Text Should Be" library="SeleniumLibrary">
                        <arg>${detail_view_library_${field}}</arg>
                        <arg>${value}</arg>
                        <doc>Verifies that element ``locator`` contains exact the text ``expected``.</doc>
                        <msg timestamp="20210830 17:37:19.025" level="INFO">Verifying element
                            '//*[@id="root"]/div/main/div[2]/div/div/div/div[4]/p' contains exact text 'This is a
                            docstring that should be imported as overview'.
                        </msg>
                        <status status="PASS" starttime="20210830 17:37:19.024" endtime="20210830 17:37:19.048"/>
                    </kw>
                    <status status="PASS" starttime="20210830 17:37:18.997" endtime="20210830 17:37:19.049"/>
                </kw>
                <kw name="Library ext_docs Should Be Here goes some docs that should appear on rfhub2 if init is parametrised"
                    library="e2e_keywords" sourcename="Library ${field} Should Be ${value}">
                    <kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
                        <arg>${detail_view_library_${field}}</arg>
                        <arg>0.5s</arg>
                        <doc>Waits until the element ``locator`` is visible.</doc>
                        <status status="PASS" starttime="20210830 17:37:19.050" endtime="20210830 17:37:19.075"/>
                    </kw>
                    <kw name="Element Text Should Be" library="SeleniumLibrary">
                        <arg>${detail_view_library_${field}}</arg>
                        <arg>${value}</arg>
                        <doc>Verifies that element ``locator`` contains exact the text ``expected``.</doc>
                        <msg timestamp="20210830 17:37:19.076" level="INFO">Verifying element
                            '//*[@id="root"]/div/main/div[2]/div/div/div/div[4]/p[2]' contains exact text 'Here goes
                            some docs that should appear on rfhub2 if init is parametrised'.
                        </msg>
                        <status status="PASS" starttime="20210830 17:37:19.075" endtime="20210830 17:37:19.098"/>
                    </kw>
                    <status status="PASS" starttime="20210830 17:37:19.049" endtime="20210830 17:37:19.098"/>
                </kw>
                <kw name="Library keywords Should Be Keywords (4)" library="e2e_keywords"
                    sourcename="Library ${field} Should Be ${value}">
                    <kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
                        <arg>${detail_view_library_${field}}</arg>
                        <arg>0.5s</arg>
                        <doc>Waits until the element ``locator`` is visible.</doc>
                        <status status="PASS" starttime="20210830 17:37:19.099" endtime="20210830 17:37:19.121"/>
                    </kw>
                    <kw name="Element Text Should Be" library="SeleniumLibrary">
                        <arg>${detail_view_library_${field}}</arg>
                        <arg>${value}</arg>
                        <doc>Verifies that element ``locator`` contains exact the text ``expected``.</doc>
                        <msg timestamp="20210830 17:37:19.121" level="INFO">Verifying element
                            '//*[@id="root"]/div/main/div[2]/div/div/div/h2[2]' contains exact text 'Keywords (4)'.
                        </msg>
                        <status status="PASS" starttime="20210830 17:37:19.121" endtime="20210830 17:37:19.141"/>
                    </kw>
                    <status status="PASS" starttime="20210830 17:37:19.099" endtime="20210830 17:37:19.141"/>
                </kw>
                <doc>This test bases on
                    'Populated App Should Show Number Of Collections'
                    to shorten execution time.
                </doc>
                <tag>e2e</tag>
                <tag>rfhub2-155</tag>
                <status status="PASS" starttime="20210830 17:37:15.878" endtime="20210830 17:37:19.141"/>
            </test>
            <test id="s1-s3-t6" name="Main Page Libraries Should Navigate To Library Details">
                <kw name="Navigate To Main Page" library="e2e_keywords" type="SETUP">
                    <kw name="Go To" library="SeleniumLibrary">
                        <arg>http://${HOST}:8000</arg>
                        <doc>Navigates the current browser window to the provided ``url``.</doc>
                        <msg timestamp="20210830 17:37:19.141" level="INFO">Opening url 'http://127.0.0.1:8000'</msg>
                        <status status="PASS" starttime="20210830 17:37:19.141" endtime="20210830 17:37:19.247"/>
                    </kw>
                    <status status="PASS" starttime="20210830 17:37:19.141" endtime="20210830 17:37:19.247"/>
                </kw>
                <kw name="Click Element When Visible" library="e2e_keywords">
                    <arg>${test_libdoc_file}</arg>
                    <kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
                        <arg>${element}</arg>
                        <doc>Waits until the element ``locator`` is visible.</doc>
                        <status status="PASS" starttime="20210830 17:37:19.248" endtime="20210830 17:37:19.505"/>
                    </kw>
                    <kw name="Click Element" library="SeleniumLibrary">
                        <arg>${element}</arg>
                        <doc>Click the element identified by ``locator``.</doc>
                        <msg timestamp="20210830 17:37:19.506" level="INFO">Clicking element '//a[contains(text(), "Test
                            Libdoc File")]'.
                        </msg>
                        <status status="PASS" starttime="20210830 17:37:19.505" endtime="20210830 17:37:19.573"/>
                    </kw>
                    <status status="PASS" starttime="20210830 17:37:19.248" endtime="20210830 17:37:19.574"/>
                </kw>
                <kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
                    <arg>${detail_view_library_version}</arg>
                    <doc>Waits until the element ``locator`` is visible.</doc>
                    <status status="PASS" starttime="20210830 17:37:19.574" endtime="20210830 17:37:19.841"/>
                </kw>
                <kw name="Library title Should Be Test Libdoc File" library="e2e_keywords"
                    sourcename="Library ${field} Should Be ${value}">
                    <kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
                        <arg>${detail_view_library_${field}}</arg>
                        <arg>0.5s</arg>
                        <doc>Waits until the element ``locator`` is visible.</doc>
                        <status status="PASS" starttime="20210830 17:37:19.841" endtime="20210830 17:37:19.881"/>
                    </kw>
                    <kw name="Element Text Should Be" library="SeleniumLibrary">
                        <arg>${detail_view_library_${field}}</arg>
                        <arg>${value}</arg>
                        <doc>Verifies that element ``locator`` contains exact the text ``expected``.</doc>
                        <msg timestamp="20210830 17:37:19.881" level="INFO">Verifying element
                            '//*[@id="root"]/div/main/div[2]/div/div/div/h2[1]' contains exact text 'Test Libdoc File'.
                        </msg>
                        <status status="PASS" starttime="20210830 17:37:19.881" endtime="20210830 17:37:19.931"/>
                    </kw>
                    <status status="PASS" starttime="20210830 17:37:19.841" endtime="20210830 17:37:19.931"/>
                </kw>
                <kw name="Library version Should Be version: 3.2.0" library="e2e_keywords"
                    sourcename="Library ${field} Should Be ${value}">
                    <kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
                        <arg>${detail_view_library_${field}}</arg>
                        <arg>0.5s</arg>
                        <doc>Waits until the element ``locator`` is visible.</doc>
                        <status status="PASS" starttime="20210830 17:37:19.931" endtime="20210830 17:37:19.951"/>
                    </kw>
                    <kw name="Element Text Should Be" library="SeleniumLibrary">
                        <arg>${detail_view_library_${field}}</arg>
                        <arg>${value}</arg>
                        <doc>Verifies that element ``locator`` contains exact the text ``expected``.</doc>
                        <msg timestamp="20210830 17:37:19.951" level="INFO">Verifying element
                            '//*[@id="root"]/div/main/div[2]/div/div/div/div[1]' contains exact text 'version: 3.2.0'.
                        </msg>
                        <status status="PASS" starttime="20210830 17:37:19.951" endtime="20210830 17:37:19.971"/>
                    </kw>
                    <status status="PASS" starttime="20210830 17:37:19.931" endtime="20210830 17:37:19.971"/>
                </kw>
                <kw name="Library scope Should Be scope: GLOBAL" library="e2e_keywords"
                    sourcename="Library ${field} Should Be ${value}">
                    <kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
                        <arg>${detail_view_library_${field}}</arg>
                        <arg>0.5s</arg>
                        <doc>Waits until the element ``locator`` is visible.</doc>
                        <status status="PASS" starttime="20210830 17:37:19.981" endtime="20210830 17:37:20.001"/>
                    </kw>
                    <kw name="Element Text Should Be" library="SeleniumLibrary">
                        <arg>${detail_view_library_${field}}</arg>
                        <arg>${value}</arg>
                        <doc>Verifies that element ``locator`` contains exact the text ``expected``.</doc>
                        <msg timestamp="20210830 17:37:20.001" level="INFO">Verifying element
                            '//*[@id="root"]/div/main/div[2]/div/div/div/div[2]' contains exact text 'scope: GLOBAL'.
                        </msg>
                        <status status="PASS" starttime="20210830 17:37:20.001" endtime="20210830 17:37:20.021"/>
                    </kw>
                    <status status="PASS" starttime="20210830 17:37:19.971" endtime="20210830 17:37:20.021"/>
                </kw>
                <kw name="Library overview Should Be Documentation for library Test Libdoc File." library="e2e_keywords"
                    sourcename="Library ${field} Should Be ${value}">
                    <kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
                        <arg>${detail_view_library_${field}}</arg>
                        <arg>0.5s</arg>
                        <doc>Waits until the element ``locator`` is visible.</doc>
                        <status status="PASS" starttime="20210830 17:37:20.021" endtime="20210830 17:37:20.041"/>
                    </kw>
                    <kw name="Element Text Should Be" library="SeleniumLibrary">
                        <arg>${detail_view_library_${field}}</arg>
                        <arg>${value}</arg>
                        <doc>Verifies that element ``locator`` contains exact the text ``expected``.</doc>
                        <msg timestamp="20210830 17:37:20.041" level="INFO">Verifying element
                            '//*[@id="root"]/div/main/div[2]/div/div/div/div[4]/p' contains exact text 'Documentation
                            for library Test Libdoc File.'.
                        </msg>
                        <status status="PASS" starttime="20210830 17:37:20.041" endtime="20210830 17:37:20.061"/>
                    </kw>
                    <status status="PASS" starttime="20210830 17:37:20.021" endtime="20210830 17:37:20.061"/>
                </kw>
                <kw name="Library keywords Should Be Keywords (1)" library="e2e_keywords"
                    sourcename="Library ${field} Should Be ${value}">
                    <kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
                        <arg>${detail_view_library_${field}}</arg>
                        <arg>0.5s</arg>
                        <doc>Waits until the element ``locator`` is visible.</doc>
                        <status status="PASS" starttime="20210830 17:37:20.061" endtime="20210830 17:37:20.091"/>
                    </kw>
                    <kw name="Element Text Should Be" library="SeleniumLibrary">
                        <arg>${detail_view_library_${field}}</arg>
                        <arg>${value}</arg>
                        <doc>Verifies that element ``locator`` contains exact the text ``expected``.</doc>
                        <msg timestamp="20210830 17:37:20.091" level="INFO">Verifying element
                            '//*[@id="root"]/div/main/div[2]/div/div/div/h2[2]' contains exact text 'Keywords (1)'.
                        </msg>
                        <status status="PASS" starttime="20210830 17:37:20.091" endtime="20210830 17:37:20.111"/>
                    </kw>
                    <status status="PASS" starttime="20210830 17:37:20.061" endtime="20210830 17:37:20.111"/>
                </kw>
                <doc>This test bases on
                    'Populated App Should Show Number Of Collections'
                    to shorten execution time.
                </doc>
                <tag>e2e</tag>
                <status status="PASS" starttime="20210830 17:37:19.141" endtime="20210830 17:37:20.111"/>
            </test>
            <test id="s1-s3-t7" name="Search Should Return Expected Results">
                <kw name="Navigate To Main Page" library="e2e_keywords" type="SETUP">
                    <kw name="Go To" library="SeleniumLibrary">
                        <arg>http://${HOST}:8000</arg>
                        <doc>Navigates the current browser window to the provided ``url``.</doc>
                        <msg timestamp="20210830 17:37:20.111" level="INFO">Opening url 'http://127.0.0.1:8000'</msg>
                        <status status="PASS" starttime="20210830 17:37:20.111" endtime="20210830 17:37:20.210"/>
                    </kw>
                    <status status="PASS" starttime="20210830 17:37:20.111" endtime="20210830 17:37:20.210"/>
                </kw>
                <kw name="Search For Method Should Return Expected Values" library="e2e_keywords">
                    <arg>Method 3</arg>
                    <arg>1</arg>
                    <arg>Single Class Lib Method 3</arg>
                    <arg>${EMPTY}</arg>
                    <arg>SingleClassLib</arg>
                    <arg>Docstring for single_class_lib_method_3 with two params</arg>
                    <kw name="Search For" library="e2e_keywords">
                        <arg>${method}</arg>
                        <kw name="Navigate To Main Page" library="e2e_keywords">
                            <kw name="Go To" library="SeleniumLibrary">
                                <arg>http://${HOST}:8000</arg>
                                <doc>Navigates the current browser window to the provided ``url``.</doc>
                                <msg timestamp="20210830 17:37:20.214" level="INFO">Opening url
                                    'http://127.0.0.1:8000'
                                </msg>
                                <status status="PASS" starttime="20210830 17:37:20.214"
                                        endtime="20210830 17:37:20.342"/>
                            </kw>
                            <status status="PASS" starttime="20210830 17:37:20.214" endtime="20210830 17:37:20.342"/>
                        </kw>
                        <kw name="Input Text" library="SeleniumLibrary">
                            <arg>${search_field}</arg>
                            <arg>${text}</arg>
                            <doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
                            <msg timestamp="20210830 17:37:20.343" level="INFO">Typing text 'Method 3' into text field
                                '//*[@id="root"]/div/header/div/div/div[2]/input'.
                            </msg>
                            <status status="PASS" starttime="20210830 17:37:20.342" endtime="20210830 17:37:20.592"/>
                        </kw>
                        <kw name="Reload Page" library="SeleniumLibrary">
                            <doc>Simulates user reloading page.</doc>
                            <status status="PASS" starttime="20210830 17:37:20.592" endtime="20210830 17:37:20.786"/>
                        </kw>
                        <kw name="Sleep" library="BuiltIn">
                            <arg>0.5s</arg>
                            <doc>Pauses the test executed for the given time.</doc>
                            <msg timestamp="20210830 17:37:21.291" level="INFO">Slept 500 milliseconds</msg>
                            <status status="PASS" starttime="20210830 17:37:20.786" endtime="20210830 17:37:21.291"/>
                        </kw>
                        <status status="PASS" starttime="20210830 17:37:20.213" endtime="20210830 17:37:21.291"/>
                    </kw>
                    <kw name="Search Results Count Should Be ${results_count}" library="e2e_keywords"
                        sourcename="Search Results Count Should Be ${n}">
                        <kw name="Element ${search_result_table} Count Should Be ${n}" library="e2e_keywords"
                            sourcename="Element ${element} Count Should Be ${n}">
                            <kw name="Get Element Count" library="SeleniumLibrary">
                                <var>${count}</var>
                                <arg>${element}</arg>
                                <doc>Returns the number of elements matching ``locator``.</doc>
                                <msg timestamp="20210830 17:37:21.321" level="INFO">${count} = 1</msg>
                                <status status="PASS" starttime="20210830 17:37:21.291"
                                        endtime="20210830 17:37:21.321"/>
                            </kw>
                            <kw name="Should Be Equal As Integers" library="BuiltIn">
                                <arg>${count}</arg>
                                <arg>${n}</arg>
                                <arg>Element count should be ${n} but is ${count}</arg>
                                <doc>Fails if objects are unequal after converting them to integers.</doc>
                                <msg timestamp="20210830 17:37:21.331" level="INFO">Argument types are:
                                    &lt;class 'int'&gt;
                                    &lt;type 'unicode'&gt;
                                </msg>
                                <status status="PASS" starttime="20210830 17:37:21.321"
                                        endtime="20210830 17:37:21.331"/>
                            </kw>
                            <status status="PASS" starttime="20210830 17:37:21.291" endtime="20210830 17:37:21.331"/>
                        </kw>
                        <status status="PASS" starttime="20210830 17:37:21.291" endtime="20210830 17:37:21.331"/>
                    </kw>
                    <kw name="Table Should Contain Library Data" library="e2e_keywords">
                        <arg>@{results_data}</arg>
                        <kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
                            <arg>${main_page_table}</arg>
                            <doc>Waits until the element ``locator`` is visible.</doc>
                            <status status="PASS" starttime="20210830 17:37:21.331" endtime="20210830 17:37:21.371"/>
                        </kw>
                        <kw name="Get Length" library="BuiltIn">
                            <var>${list_len}</var>
                            <arg>${Library_data}</arg>
                            <doc>Returns and logs the length of the given item as an integer.</doc>
                            <msg timestamp="20210830 17:37:21.371" level="INFO">Length is 4</msg>
                            <msg timestamp="20210830 17:37:21.371" level="INFO">${list_len} = 4</msg>
                            <status status="PASS" starttime="20210830 17:37:21.371" endtime="20210830 17:37:21.371"/>
                        </kw>
                        <for flavor="IN RANGE">
                            <var>${i}</var>
                            <value>1</value>
                            <value>${list_len}</value>
                            <iter>
                                <var name="${i}">1</var>
                                <kw name="Table Column Should Contain" library="SeleniumLibrary">
                                    <arg>${main_page_table}</arg>
                                    <arg>${i}</arg>
                                    <arg>${Library_data}[${i-1}]</arg>
                                    <doc>Verifies table column contains text ``expected``.</doc>
                                    <status status="PASS" starttime="20210830 17:37:21.371"
                                            endtime="20210830 17:37:21.451"/>
                                </kw>
                                <status status="PASS" starttime="20210830 17:37:21.371"
                                        endtime="20210830 17:37:21.451"/>
                            </iter>
                            <iter>
                                <var name="${i}">2</var>
                                <kw name="Table Column Should Contain" library="SeleniumLibrary">
                                    <arg>${main_page_table}</arg>
                                    <arg>${i}</arg>
                                    <arg>${Library_data}[${i-1}]</arg>
                                    <doc>Verifies table column contains text ``expected``.</doc>
                                    <status status="PASS" starttime="20210830 17:37:21.451"
                                            endtime="20210830 17:37:21.495"/>
                                </kw>
                                <status status="PASS" starttime="20210830 17:37:21.451"
                                        endtime="20210830 17:37:21.495"/>
                            </iter>
                            <iter>
                                <var name="${i}">3</var>
                                <kw name="Table Column Should Contain" library="SeleniumLibrary">
                                    <arg>${main_page_table}</arg>
                                    <arg>${i}</arg>
                                    <arg>${Library_data}[${i-1}]</arg>
                                    <doc>Verifies table column contains text ``expected``.</doc>
                                    <status status="PASS" starttime="20210830 17:37:21.495"
                                            endtime="20210830 17:37:21.555"/>
                                </kw>
                                <status status="PASS" starttime="20210830 17:37:21.495"
                                        endtime="20210830 17:37:21.555"/>
                            </iter>
                            <status status="PASS" starttime="20210830 17:37:21.371" endtime="20210830 17:37:21.555"/>
                        </for>
                        <status status="PASS" starttime="20210830 17:37:21.331" endtime="20210830 17:37:21.555"/>
                    </kw>
                    <status status="PASS" starttime="20210830 17:37:20.210" endtime="20210830 17:37:21.555"/>
                </kw>
                <kw name="Search For Method Should Return Expected Values" library="e2e_keywords">
                    <arg>Keyword*Doub</arg>
                    <arg>1</arg>
                    <arg>Keyword With Args With Double Quotation Mark</arg>
                    <arg>${EMPTY}</arg>
                    <arg>test_robot</arg>
                    <arg>Keyword With Args With Double Quotation Mark</arg>
                    <kw name="Search For" library="e2e_keywords">
                        <arg>${method}</arg>
                        <kw name="Navigate To Main Page" library="e2e_keywords">
                            <kw name="Go To" library="SeleniumLibrary">
                                <arg>http://${HOST}:8000</arg>
                                <doc>Navigates the current browser window to the provided ``url``.</doc>
                                <msg timestamp="20210830 17:37:21.565" level="INFO">Opening url
                                    'http://127.0.0.1:8000'
                                </msg>
                                <status status="PASS" starttime="20210830 17:37:21.555"
                                        endtime="20210830 17:37:21.657"/>
                            </kw>
                            <status status="PASS" starttime="20210830 17:37:21.555" endtime="20210830 17:37:21.657"/>
                        </kw>
                        <kw name="Input Text" library="SeleniumLibrary">
                            <arg>${search_field}</arg>
                            <arg>${text}</arg>
                            <doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
                            <msg timestamp="20210830 17:37:21.658" level="INFO">Typing text 'Keyword*Doub' into text
                                field '//*[@id="root"]/div/header/div/div/div[2]/input'.
                            </msg>
                            <status status="PASS" starttime="20210830 17:37:21.657" endtime="20210830 17:37:21.926"/>
                        </kw>
                        <kw name="Reload Page" library="SeleniumLibrary">
                            <doc>Simulates user reloading page.</doc>
                            <status status="PASS" starttime="20210830 17:37:21.926" endtime="20210830 17:37:22.132"/>
                        </kw>
                        <kw name="Sleep" library="BuiltIn">
                            <arg>0.5s</arg>
                            <doc>Pauses the test executed for the given time.</doc>
                            <msg timestamp="20210830 17:37:22.641" level="INFO">Slept 500 milliseconds</msg>
                            <status status="PASS" starttime="20210830 17:37:22.133" endtime="20210830 17:37:22.641"/>
                        </kw>
                        <status status="PASS" starttime="20210830 17:37:21.555" endtime="20210830 17:37:22.641"/>
                    </kw>
                    <kw name="Search Results Count Should Be ${results_count}" library="e2e_keywords"
                        sourcename="Search Results Count Should Be ${n}">
                        <kw name="Element ${search_result_table} Count Should Be ${n}" library="e2e_keywords"
                            sourcename="Element ${element} Count Should Be ${n}">
                            <kw name="Get Element Count" library="SeleniumLibrary">
                                <var>${count}</var>
                                <arg>${element}</arg>
                                <doc>Returns the number of elements matching ``locator``.</doc>
                                <msg timestamp="20210830 17:37:22.661" level="INFO">${count} = 1</msg>
                                <status status="PASS" starttime="20210830 17:37:22.641"
                                        endtime="20210830 17:37:22.661"/>
                            </kw>
                            <kw name="Should Be Equal As Integers" library="BuiltIn">
                                <arg>${count}</arg>
                                <arg>${n}</arg>
                                <arg>Element count should be ${n} but is ${count}</arg>
                                <doc>Fails if objects are unequal after converting them to integers.</doc>
                                <msg timestamp="20210830 17:37:22.671" level="INFO">Argument types are:
                                    &lt;class 'int'&gt;
                                    &lt;type 'unicode'&gt;
                                </msg>
                                <status status="PASS" starttime="20210830 17:37:22.661"
                                        endtime="20210830 17:37:22.671"/>
                            </kw>
                            <status status="PASS" starttime="20210830 17:37:22.641" endtime="20210830 17:37:22.671"/>
                        </kw>
                        <status status="PASS" starttime="20210830 17:37:22.641" endtime="20210830 17:37:22.671"/>
                    </kw>
                    <kw name="Table Should Contain Library Data" library="e2e_keywords">
                        <arg>@{results_data}</arg>
                        <kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
                            <arg>${main_page_table}</arg>
                            <doc>Waits until the element ``locator`` is visible.</doc>
                            <status status="PASS" starttime="20210830 17:37:22.671" endtime="20210830 17:37:22.711"/>
                        </kw>
                        <kw name="Get Length" library="BuiltIn">
                            <var>${list_len}</var>
                            <arg>${Library_data}</arg>
                            <doc>Returns and logs the length of the given item as an integer.</doc>
                            <msg timestamp="20210830 17:37:22.711" level="INFO">Length is 4</msg>
                            <msg timestamp="20210830 17:37:22.711" level="INFO">${list_len} = 4</msg>
                            <status status="PASS" starttime="20210830 17:37:22.711" endtime="20210830 17:37:22.711"/>
                        </kw>
                        <for flavor="IN RANGE">
                            <var>${i}</var>
                            <value>1</value>
                            <value>${list_len}</value>
                            <iter>
                                <var name="${i}">1</var>
                                <kw name="Table Column Should Contain" library="SeleniumLibrary">
                                    <arg>${main_page_table}</arg>
                                    <arg>${i}</arg>
                                    <arg>${Library_data}[${i-1}]</arg>
                                    <doc>Verifies table column contains text ``expected``.</doc>
                                    <status status="PASS" starttime="20210830 17:37:22.711"
                                            endtime="20210830 17:37:22.791"/>
                                </kw>
                                <status status="PASS" starttime="20210830 17:37:22.711"
                                        endtime="20210830 17:37:22.791"/>
                            </iter>
                            <iter>
                                <var name="${i}">2</var>
                                <kw name="Table Column Should Contain" library="SeleniumLibrary">
                                    <arg>${main_page_table}</arg>
                                    <arg>${i}</arg>
                                    <arg>${Library_data}[${i-1}]</arg>
                                    <doc>Verifies table column contains text ``expected``.</doc>
                                    <status status="PASS" starttime="20210830 17:37:22.791"
                                            endtime="20210830 17:37:22.831"/>
                                </kw>
                                <status status="PASS" starttime="20210830 17:37:22.791"
                                        endtime="20210830 17:37:22.831"/>
                            </iter>
                            <iter>
                                <var name="${i}">3</var>
                                <kw name="Table Column Should Contain" library="SeleniumLibrary">
                                    <arg>${main_page_table}</arg>
                                    <arg>${i}</arg>
                                    <arg>${Library_data}[${i-1}]</arg>
                                    <doc>Verifies table column contains text ``expected``.</doc>
                                    <status status="PASS" starttime="20210830 17:37:22.831"
                                            endtime="20210830 17:37:22.891"/>
                                </kw>
                                <status status="PASS" starttime="20210830 17:37:22.831"
                                        endtime="20210830 17:37:22.891"/>
                            </iter>
                            <status status="PASS" starttime="20210830 17:37:22.711" endtime="20210830 17:37:22.891"/>
                        </for>
                        <status status="PASS" starttime="20210830 17:37:22.671" endtime="20210830 17:37:22.891"/>
                    </kw>
                    <status status="PASS" starttime="20210830 17:37:21.555" endtime="20210830 17:37:22.891"/>
                </kw>
                <kw name="Search For Method Should Return Expected Values" library="e2e_keywords">
                    <arg>name:Some</arg>
                    <arg>1</arg>
                    <arg>Someone Shall Pass</arg>
                    <arg>${EMPTY}</arg>
                    <arg>${EMPTY}</arg>
                    <arg>Test Libdoc File</arg>
                    <kw name="Search For" library="e2e_keywords">
                        <arg>${method}</arg>
                        <kw name="Navigate To Main Page" library="e2e_keywords">
                            <kw name="Go To" library="SeleniumLibrary">
                                <arg>http://${HOST}:8000</arg>
                                <doc>Navigates the current browser window to the provided ``url``.</doc>
                                <msg timestamp="20210830 17:37:22.901" level="INFO">Opening url
                                    'http://127.0.0.1:8000'
                                </msg>
                                <status status="PASS" starttime="20210830 17:37:22.901"
                                        endtime="20210830 17:37:22.998"/>
                            </kw>
                            <status status="PASS" starttime="20210830 17:37:22.901" endtime="20210830 17:37:22.998"/>
                        </kw>
                        <kw name="Input Text" library="SeleniumLibrary">
                            <arg>${search_field}</arg>
                            <arg>${text}</arg>
                            <doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
                            <msg timestamp="20210830 17:37:22.999" level="INFO">Typing text 'name:Some' into text field
                                '//*[@id="root"]/div/header/div/div/div[2]/input'.
                            </msg>
                            <status status="PASS" starttime="20210830 17:37:22.998" endtime="20210830 17:37:23.262"/>
                        </kw>
                        <kw name="Reload Page" library="SeleniumLibrary">
                            <doc>Simulates user reloading page.</doc>
                            <status status="PASS" starttime="20210830 17:37:23.262" endtime="20210830 17:37:23.448"/>
                        </kw>
                        <kw name="Sleep" library="BuiltIn">
                            <arg>0.5s</arg>
                            <doc>Pauses the test executed for the given time.</doc>
                            <msg timestamp="20210830 17:37:23.948" level="INFO">Slept 500 milliseconds</msg>
                            <status status="PASS" starttime="20210830 17:37:23.448" endtime="20210830 17:37:23.948"/>
                        </kw>
                        <status status="PASS" starttime="20210830 17:37:22.901" endtime="20210830 17:37:23.948"/>
                    </kw>
                    <kw name="Search Results Count Should Be ${results_count}" library="e2e_keywords"
                        sourcename="Search Results Count Should Be ${n}">
                        <kw name="Element ${search_result_table} Count Should Be ${n}" library="e2e_keywords"
                            sourcename="Element ${element} Count Should Be ${n}">
                            <kw name="Get Element Count" library="SeleniumLibrary">
                                <var>${count}</var>
                                <arg>${element}</arg>
                                <doc>Returns the number of elements matching ``locator``.</doc>
                                <msg timestamp="20210830 17:37:23.968" level="INFO">${count} = 1</msg>
                                <status status="PASS" starttime="20210830 17:37:23.948"
                                        endtime="20210830 17:37:23.968"/>
                            </kw>
                            <kw name="Should Be Equal As Integers" library="BuiltIn">
                                <arg>${count}</arg>
                                <arg>${n}</arg>
                                <arg>Element count should be ${n} but is ${count}</arg>
                                <doc>Fails if objects are unequal after converting them to integers.</doc>
                                <msg timestamp="20210830 17:37:23.968" level="INFO">Argument types are:
                                    &lt;class 'int'&gt;
                                    &lt;type 'unicode'&gt;
                                </msg>
                                <status status="PASS" starttime="20210830 17:37:23.968"
                                        endtime="20210830 17:37:23.968"/>
                            </kw>
                            <status status="PASS" starttime="20210830 17:37:23.948" endtime="20210830 17:37:23.968"/>
                        </kw>
                        <status status="PASS" starttime="20210830 17:37:23.948" endtime="20210830 17:37:23.968"/>
                    </kw>
                    <kw name="Table Should Contain Library Data" library="e2e_keywords">
                        <arg>@{results_data}</arg>
                        <kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
                            <arg>${main_page_table}</arg>
                            <doc>Waits until the element ``locator`` is visible.</doc>
                            <status status="PASS" starttime="20210830 17:37:23.978" endtime="20210830 17:37:24.018"/>
                        </kw>
                        <kw name="Get Length" library="BuiltIn">
                            <var>${list_len}</var>
                            <arg>${Library_data}</arg>
                            <doc>Returns and logs the length of the given item as an integer.</doc>
                            <msg timestamp="20210830 17:37:24.018" level="INFO">Length is 4</msg>
                            <msg timestamp="20210830 17:37:24.018" level="INFO">${list_len} = 4</msg>
                            <status status="PASS" starttime="20210830 17:37:24.018" endtime="20210830 17:37:24.018"/>
                        </kw>
                        <for flavor="IN RANGE">
                            <var>${i}</var>
                            <value>1</value>
                            <value>${list_len}</value>
                            <iter>
                                <var name="${i}">1</var>
                                <kw name="Table Column Should Contain" library="SeleniumLibrary">
                                    <arg>${main_page_table}</arg>
                                    <arg>${i}</arg>
                                    <arg>${Library_data}[${i-1}]</arg>
                                    <doc>Verifies table column contains text ``expected``.</doc>
                                    <status status="PASS" starttime="20210830 17:37:24.018"
                                            endtime="20210830 17:37:24.108"/>
                                </kw>
                                <status status="PASS" starttime="20210830 17:37:24.018"
                                        endtime="20210830 17:37:24.108"/>
                            </iter>
                            <iter>
                                <var name="${i}">2</var>
                                <kw name="Table Column Should Contain" library="SeleniumLibrary">
                                    <arg>${main_page_table}</arg>
                                    <arg>${i}</arg>
                                    <arg>${Library_data}[${i-1}]</arg>
                                    <doc>Verifies table column contains text ``expected``.</doc>
                                    <status status="PASS" starttime="20210830 17:37:24.108"
                                            endtime="20210830 17:37:24.148"/>
                                </kw>
                                <status status="PASS" starttime="20210830 17:37:24.108"
                                        endtime="20210830 17:37:24.148"/>
                            </iter>
                            <iter>
                                <var name="${i}">3</var>
                                <kw name="Table Column Should Contain" library="SeleniumLibrary">
                                    <arg>${main_page_table}</arg>
                                    <arg>${i}</arg>
                                    <arg>${Library_data}[${i-1}]</arg>
                                    <doc>Verifies table column contains text ``expected``.</doc>
                                    <status status="PASS" starttime="20210830 17:37:24.148"
                                            endtime="20210830 17:37:24.188"/>
                                </kw>
                                <status status="PASS" starttime="20210830 17:37:24.148"
                                        endtime="20210830 17:37:24.188"/>
                            </iter>
                            <status status="PASS" starttime="20210830 17:37:24.018" endtime="20210830 17:37:24.198"/>
                        </for>
                        <status status="PASS" starttime="20210830 17:37:23.968" endtime="20210830 17:37:24.198"/>
                    </kw>
                    <status status="PASS" starttime="20210830 17:37:22.891" endtime="20210830 17:37:24.198"/>
                </kw>
                <kw name="Search For Method Should Return Expected Values" library="e2e_keywords">
                    <arg>Some in:Te</arg>
                    <arg>1</arg>
                    <arg>Someone Shall Pass</arg>
                    <arg>${EMPTY}</arg>
                    <arg>${EMPTY}</arg>
                    <arg>Test Libdoc File</arg>
                    <kw name="Search For" library="e2e_keywords">
                        <arg>${method}</arg>
                        <kw name="Navigate To Main Page" library="e2e_keywords">
                            <kw name="Go To" library="SeleniumLibrary">
                                <arg>http://${HOST}:8000</arg>
                                <doc>Navigates the current browser window to the provided ``url``.</doc>
                                <msg timestamp="20210830 17:37:24.198" level="INFO">Opening url
                                    'http://127.0.0.1:8000'
                                </msg>
                                <status status="PASS" starttime="20210830 17:37:24.198"
                                        endtime="20210830 17:37:24.303"/>
                            </kw>
                            <status status="PASS" starttime="20210830 17:37:24.198" endtime="20210830 17:37:24.303"/>
                        </kw>
                        <kw name="Input Text" library="SeleniumLibrary">
                            <arg>${search_field}</arg>
                            <arg>${text}</arg>
                            <doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
                            <msg timestamp="20210830 17:37:24.304" level="INFO">Typing text 'Some in:Te' into text field
                                '//*[@id="root"]/div/header/div/div/div[2]/input'.
                            </msg>
                            <status status="PASS" starttime="20210830 17:37:24.304" endtime="20210830 17:37:24.593"/>
                        </kw>
                        <kw name="Reload Page" library="SeleniumLibrary">
                            <doc>Simulates user reloading page.</doc>
                            <status status="PASS" starttime="20210830 17:37:24.593" endtime="20210830 17:37:24.761"/>
                        </kw>
                        <kw name="Sleep" library="BuiltIn">
                            <arg>0.5s</arg>
                            <doc>Pauses the test executed for the given time.</doc>
                            <msg timestamp="20210830 17:37:25.269" level="INFO">Slept 500 milliseconds</msg>
                            <status status="PASS" starttime="20210830 17:37:24.761" endtime="20210830 17:37:25.269"/>
                        </kw>
                        <status status="PASS" starttime="20210830 17:37:24.198" endtime="20210830 17:37:25.269"/>
                    </kw>
                    <kw name="Search Results Count Should Be ${results_count}" library="e2e_keywords"
                        sourcename="Search Results Count Should Be ${n}">
                        <kw name="Element ${search_result_table} Count Should Be ${n}" library="e2e_keywords"
                            sourcename="Element ${element} Count Should Be ${n}">
                            <kw name="Get Element Count" library="SeleniumLibrary">
                                <var>${count}</var>
                                <arg>${element}</arg>
                                <doc>Returns the number of elements matching ``locator``.</doc>
                                <msg timestamp="20210830 17:37:25.289" level="INFO">${count} = 1</msg>
                                <status status="PASS" starttime="20210830 17:37:25.269"
                                        endtime="20210830 17:37:25.289"/>
                            </kw>
                            <kw name="Should Be Equal As Integers" library="BuiltIn">
                                <arg>${count}</arg>
                                <arg>${n}</arg>
                                <arg>Element count should be ${n} but is ${count}</arg>
                                <doc>Fails if objects are unequal after converting them to integers.</doc>
                                <msg timestamp="20210830 17:37:25.289" level="INFO">Argument types are:
                                    &lt;class 'int'&gt;
                                    &lt;type 'unicode'&gt;
                                </msg>
                                <status status="PASS" starttime="20210830 17:37:25.289"
                                        endtime="20210830 17:37:25.289"/>
                            </kw>
                            <status status="PASS" starttime="20210830 17:37:25.269" endtime="20210830 17:37:25.289"/>
                        </kw>
                        <status status="PASS" starttime="20210830 17:37:25.269" endtime="20210830 17:37:25.289"/>
                    </kw>
                    <kw name="Table Should Contain Library Data" library="e2e_keywords">
                        <arg>@{results_data}</arg>
                        <kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
                            <arg>${main_page_table}</arg>
                            <doc>Waits until the element ``locator`` is visible.</doc>
                            <status status="PASS" starttime="20210830 17:37:25.289" endtime="20210830 17:37:25.309"/>
                        </kw>
                        <kw name="Get Length" library="BuiltIn">
                            <var>${list_len}</var>
                            <arg>${Library_data}</arg>
                            <doc>Returns and logs the length of the given item as an integer.</doc>
                            <msg timestamp="20210830 17:37:25.319" level="INFO">Length is 4</msg>
                            <msg timestamp="20210830 17:37:25.319" level="INFO">${list_len} = 4</msg>
                            <status status="PASS" starttime="20210830 17:37:25.309" endtime="20210830 17:37:25.319"/>
                        </kw>
                        <for flavor="IN RANGE">
                            <var>${i}</var>
                            <value>1</value>
                            <value>${list_len}</value>
                            <iter>
                                <var name="${i}">1</var>
                                <kw name="Table Column Should Contain" library="SeleniumLibrary">
                                    <arg>${main_page_table}</arg>
                                    <arg>${i}</arg>
                                    <arg>${Library_data}[${i-1}]</arg>
                                    <doc>Verifies table column contains text ``expected``.</doc>
                                    <status status="PASS" starttime="20210830 17:37:25.319"
                                            endtime="20210830 17:37:25.399"/>
                                </kw>
                                <status status="PASS" starttime="20210830 17:37:25.319"
                                        endtime="20210830 17:37:25.399"/>
                            </iter>
                            <iter>
                                <var name="${i}">2</var>
                                <kw name="Table Column Should Contain" library="SeleniumLibrary">
                                    <arg>${main_page_table}</arg>
                                    <arg>${i}</arg>
                                    <arg>${Library_data}[${i-1}]</arg>
                                    <doc>Verifies table column contains text ``expected``.</doc>
                                    <status status="PASS" starttime="20210830 17:37:25.399"
                                            endtime="20210830 17:37:25.439"/>
                                </kw>
                                <status status="PASS" starttime="20210830 17:37:25.399"
                                        endtime="20210830 17:37:25.439"/>
                            </iter>
                            <iter>
                                <var name="${i}">3</var>
                                <kw name="Table Column Should Contain" library="SeleniumLibrary">
                                    <arg>${main_page_table}</arg>
                                    <arg>${i}</arg>
                                    <arg>${Library_data}[${i-1}]</arg>
                                    <doc>Verifies table column contains text ``expected``.</doc>
                                    <status status="PASS" starttime="20210830 17:37:25.439"
                                            endtime="20210830 17:37:25.479"/>
                                </kw>
                                <status status="PASS" starttime="20210830 17:37:25.439"
                                        endtime="20210830 17:37:25.479"/>
                            </iter>
                            <status status="PASS" starttime="20210830 17:37:25.319" endtime="20210830 17:37:25.479"/>
                        </for>
                        <status status="PASS" starttime="20210830 17:37:25.289" endtime="20210830 17:37:25.479"/>
                    </kw>
                    <status status="PASS" starttime="20210830 17:37:24.198" endtime="20210830 17:37:25.479"/>
                </kw>
                <kw name="Search For Method Should Return Expected Values" library="e2e_keywords">
                    <arg>name:Sh in:Te</arg>
                    <arg>1</arg>
                    <arg>Someone Shall Pass</arg>
                    <arg>${EMPTY}</arg>
                    <arg>${EMPTY}</arg>
                    <arg>Test Libdoc File</arg>
                    <kw name="Search For" library="e2e_keywords">
                        <arg>${method}</arg>
                        <kw name="Navigate To Main Page" library="e2e_keywords">
                            <kw name="Go To" library="SeleniumLibrary">
                                <arg>http://${HOST}:8000</arg>
                                <doc>Navigates the current browser window to the provided ``url``.</doc>
                                <msg timestamp="20210830 17:37:25.489" level="INFO">Opening url
                                    'http://127.0.0.1:8000'
                                </msg>
                                <status status="PASS" starttime="20210830 17:37:25.489"
                                        endtime="20210830 17:37:25.584"/>
                            </kw>
                            <status status="PASS" starttime="20210830 17:37:25.489" endtime="20210830 17:37:25.584"/>
                        </kw>
                        <kw name="Input Text" library="SeleniumLibrary">
                            <arg>${search_field}</arg>
                            <arg>${text}</arg>
                            <doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
                            <msg timestamp="20210830 17:37:25.585" level="INFO">Typing text 'name:Sh in:Te' into text
                                field '//*[@id="root"]/div/header/div/div/div[2]/input'.
                            </msg>
                            <status status="PASS" starttime="20210830 17:37:25.584" endtime="20210830 17:37:25.967"/>
                        </kw>
                        <kw name="Reload Page" library="SeleniumLibrary">
                            <doc>Simulates user reloading page.</doc>
                            <status status="PASS" starttime="20210830 17:37:25.968" endtime="20210830 17:37:26.124"/>
                        </kw>
                        <kw name="Sleep" library="BuiltIn">
                            <arg>0.5s</arg>
                            <doc>Pauses the test executed for the given time.</doc>
                            <msg timestamp="20210830 17:37:26.631" level="INFO">Slept 500 milliseconds</msg>
                            <status status="PASS" starttime="20210830 17:37:26.125" endtime="20210830 17:37:26.631"/>
                        </kw>
                        <status status="PASS" starttime="20210830 17:37:25.489" endtime="20210830 17:37:26.631"/>
                    </kw>
                    <kw name="Search Results Count Should Be ${results_count}" library="e2e_keywords"
                        sourcename="Search Results Count Should Be ${n}">
                        <kw name="Element ${search_result_table} Count Should Be ${n}" library="e2e_keywords"
                            sourcename="Element ${element} Count Should Be ${n}">
                            <kw name="Get Element Count" library="SeleniumLibrary">
                                <var>${count}</var>
                                <arg>${element}</arg>
                                <doc>Returns the number of elements matching ``locator``.</doc>
                                <msg timestamp="20210830 17:37:26.651" level="INFO">${count} = 1</msg>
                                <status status="PASS" starttime="20210830 17:37:26.631"
                                        endtime="20210830 17:37:26.651"/>
                            </kw>
                            <kw name="Should Be Equal As Integers" library="BuiltIn">
                                <arg>${count}</arg>
                                <arg>${n}</arg>
                                <arg>Element count should be ${n} but is ${count}</arg>
                                <doc>Fails if objects are unequal after converting them to integers.</doc>
                                <msg timestamp="20210830 17:37:26.661" level="INFO">Argument types are:
                                    &lt;class 'int'&gt;
                                    &lt;type 'unicode'&gt;
                                </msg>
                                <status status="PASS" starttime="20210830 17:37:26.651"
                                        endtime="20210830 17:37:26.661"/>
                            </kw>
                            <status status="PASS" starttime="20210830 17:37:26.631" endtime="20210830 17:37:26.661"/>
                        </kw>
                        <status status="PASS" starttime="20210830 17:37:26.631" endtime="20210830 17:37:26.661"/>
                    </kw>
                    <kw name="Table Should Contain Library Data" library="e2e_keywords">
                        <arg>@{results_data}</arg>
                        <kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
                            <arg>${main_page_table}</arg>
                            <doc>Waits until the element ``locator`` is visible.</doc>
                            <status status="PASS" starttime="20210830 17:37:26.661" endtime="20210830 17:37:26.701"/>
                        </kw>
                        <kw name="Get Length" library="BuiltIn">
                            <var>${list_len}</var>
                            <arg>${Library_data}</arg>
                            <doc>Returns and logs the length of the given item as an integer.</doc>
                            <msg timestamp="20210830 17:37:26.701" level="INFO">Length is 4</msg>
                            <msg timestamp="20210830 17:37:26.701" level="INFO">${list_len} = 4</msg>
                            <status status="PASS" starttime="20210830 17:37:26.701" endtime="20210830 17:37:26.701"/>
                        </kw>
                        <for flavor="IN RANGE">
                            <var>${i}</var>
                            <value>1</value>
                            <value>${list_len}</value>
                            <iter>
                                <var name="${i}">1</var>
                                <kw name="Table Column Should Contain" library="SeleniumLibrary">
                                    <arg>${main_page_table}</arg>
                                    <arg>${i}</arg>
                                    <arg>${Library_data}[${i-1}]</arg>
                                    <doc>Verifies table column contains text ``expected``.</doc>
                                    <status status="PASS" starttime="20210830 17:37:26.701"
                                            endtime="20210830 17:37:26.761"/>
                                </kw>
                                <status status="PASS" starttime="20210830 17:37:26.701"
                                        endtime="20210830 17:37:26.761"/>
                            </iter>
                            <iter>
                                <var name="${i}">2</var>
                                <kw name="Table Column Should Contain" library="SeleniumLibrary">
                                    <arg>${main_page_table}</arg>
                                    <arg>${i}</arg>
                                    <arg>${Library_data}[${i-1}]</arg>
                                    <doc>Verifies table column contains text ``expected``.</doc>
                                    <status status="PASS" starttime="20210830 17:37:26.761"
                                            endtime="20210830 17:37:26.811"/>
                                </kw>
                                <status status="PASS" starttime="20210830 17:37:26.761"
                                        endtime="20210830 17:37:26.811"/>
                            </iter>
                            <iter>
                                <var name="${i}">3</var>
                                <kw name="Table Column Should Contain" library="SeleniumLibrary">
                                    <arg>${main_page_table}</arg>
                                    <arg>${i}</arg>
                                    <arg>${Library_data}[${i-1}]</arg>
                                    <doc>Verifies table column contains text ``expected``.</doc>
                                    <status status="PASS" starttime="20210830 17:37:26.811"
                                            endtime="20210830 17:37:26.851"/>
                                </kw>
                                <status status="PASS" starttime="20210830 17:37:26.811"
                                        endtime="20210830 17:37:26.851"/>
                            </iter>
                            <status status="PASS" starttime="20210830 17:37:26.701" endtime="20210830 17:37:26.851"/>
                        </for>
                        <status status="PASS" starttime="20210830 17:37:26.661" endtime="20210830 17:37:26.851"/>
                    </kw>
                    <status status="PASS" starttime="20210830 17:37:25.479" endtime="20210830 17:37:26.851"/>
                </kw>
                <kw name="Search For Method Should Return Expected Values" library="e2e_keywords">
                    <arg>tags:tag_1</arg>
                    <arg>1</arg>
                    <arg>Single Class Lib Method 1</arg>
                    <arg>${EMPTY}</arg>
                    <arg>SingleClassLib</arg>
                    <arg>Docstring for single_class_lib_method_1</arg>
                    <kw name="Search For" library="e2e_keywords">
                        <arg>${method}</arg>
                        <kw name="Navigate To Main Page" library="e2e_keywords">
                            <kw name="Go To" library="SeleniumLibrary">
                                <arg>http://${HOST}:8000</arg>
                                <doc>Navigates the current browser window to the provided ``url``.</doc>
                                <msg timestamp="20210830 17:37:26.861" level="INFO">Opening url
                                    'http://127.0.0.1:8000'
                                </msg>
                                <status status="PASS" starttime="20210830 17:37:26.861"
                                        endtime="20210830 17:37:26.959"/>
                            </kw>
                            <status status="PASS" starttime="20210830 17:37:26.851" endtime="20210830 17:37:26.959"/>
                        </kw>
                        <kw name="Input Text" library="SeleniumLibrary">
                            <arg>${search_field}</arg>
                            <arg>${text}</arg>
                            <doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
                            <msg timestamp="20210830 17:37:26.960" level="INFO">Typing text 'tags:tag_1' into text field
                                '//*[@id="root"]/div/header/div/div/div[2]/input'.
                            </msg>
                            <status status="PASS" starttime="20210830 17:37:26.960" endtime="20210830 17:37:27.235"/>
                        </kw>
                        <kw name="Reload Page" library="SeleniumLibrary">
                            <doc>Simulates user reloading page.</doc>
                            <status status="PASS" starttime="20210830 17:37:27.235" endtime="20210830 17:37:27.446"/>
                        </kw>
                        <kw name="Sleep" library="BuiltIn">
                            <arg>0.5s</arg>
                            <doc>Pauses the test executed for the given time.</doc>
                            <msg timestamp="20210830 17:37:27.948" level="INFO">Slept 500 milliseconds</msg>
                            <status status="PASS" starttime="20210830 17:37:27.447" endtime="20210830 17:37:27.948"/>
                        </kw>
                        <status status="PASS" starttime="20210830 17:37:26.851" endtime="20210830 17:37:27.948"/>
                    </kw>
                    <kw name="Search Results Count Should Be ${results_count}" library="e2e_keywords"
                        sourcename="Search Results Count Should Be ${n}">
                        <kw name="Element ${search_result_table} Count Should Be ${n}" library="e2e_keywords"
                            sourcename="Element ${element} Count Should Be ${n}">
                            <kw name="Get Element Count" library="SeleniumLibrary">
                                <var>${count}</var>
                                <arg>${element}</arg>
                                <doc>Returns the number of elements matching ``locator``.</doc>
                                <msg timestamp="20210830 17:37:27.968" level="INFO">${count} = 1</msg>
                                <status status="PASS" starttime="20210830 17:37:27.948"
                                        endtime="20210830 17:37:27.968"/>
                            </kw>
                            <kw name="Should Be Equal As Integers" library="BuiltIn">
                                <arg>${count}</arg>
                                <arg>${n}</arg>
                                <arg>Element count should be ${n} but is ${count}</arg>
                                <doc>Fails if objects are unequal after converting them to integers.</doc>
                                <msg timestamp="20210830 17:37:27.978" level="INFO">Argument types are:
                                    &lt;class 'int'&gt;
                                    &lt;type 'unicode'&gt;
                                </msg>
                                <status status="PASS" starttime="20210830 17:37:27.968"
                                        endtime="20210830 17:37:27.978"/>
                            </kw>
                            <status status="PASS" starttime="20210830 17:37:27.948" endtime="20210830 17:37:27.978"/>
                        </kw>
                        <status status="PASS" starttime="20210830 17:37:27.948" endtime="20210830 17:37:27.978"/>
                    </kw>
                    <kw name="Table Should Contain Library Data" library="e2e_keywords">
                        <arg>@{results_data}</arg>
                        <kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
                            <arg>${main_page_table}</arg>
                            <doc>Waits until the element ``locator`` is visible.</doc>
                            <status status="PASS" starttime="20210830 17:37:27.978" endtime="20210830 17:37:28.018"/>
                        </kw>
                        <kw name="Get Length" library="BuiltIn">
                            <var>${list_len}</var>
                            <arg>${Library_data}</arg>
                            <doc>Returns and logs the length of the given item as an integer.</doc>
                            <msg timestamp="20210830 17:37:28.018" level="INFO">Length is 4</msg>
                            <msg timestamp="20210830 17:37:28.018" level="INFO">${list_len} = 4</msg>
                            <status status="PASS" starttime="20210830 17:37:28.018" endtime="20210830 17:37:28.018"/>
                        </kw>
                        <for flavor="IN RANGE">
                            <var>${i}</var>
                            <value>1</value>
                            <value>${list_len}</value>
                            <iter>
                                <var name="${i}">1</var>
                                <kw name="Table Column Should Contain" library="SeleniumLibrary">
                                    <arg>${main_page_table}</arg>
                                    <arg>${i}</arg>
                                    <arg>${Library_data}[${i-1}]</arg>
                                    <doc>Verifies table column contains text ``expected``.</doc>
                                    <status status="PASS" starttime="20210830 17:37:28.018"
                                            endtime="20210830 17:37:28.098"/>
                                </kw>
                                <status status="PASS" starttime="20210830 17:37:28.018"
                                        endtime="20210830 17:37:28.098"/>
                            </iter>
                            <iter>
                                <var name="${i}">2</var>
                                <kw name="Table Column Should Contain" library="SeleniumLibrary">
                                    <arg>${main_page_table}</arg>
                                    <arg>${i}</arg>
                                    <arg>${Library_data}[${i-1}]</arg>
                                    <doc>Verifies table column contains text ``expected``.</doc>
                                    <status status="PASS" starttime="20210830 17:37:28.098"
                                            endtime="20210830 17:37:28.158"/>
                                </kw>
                                <status status="PASS" starttime="20210830 17:37:28.098"
                                        endtime="20210830 17:37:28.158"/>
                            </iter>
                            <iter>
                                <var name="${i}">3</var>
                                <kw name="Table Column Should Contain" library="SeleniumLibrary">
                                    <arg>${main_page_table}</arg>
                                    <arg>${i}</arg>
                                    <arg>${Library_data}[${i-1}]</arg>
                                    <doc>Verifies table column contains text ``expected``.</doc>
                                    <status status="PASS" starttime="20210830 17:37:28.158"
                                            endtime="20210830 17:37:28.218"/>
                                </kw>
                                <status status="PASS" starttime="20210830 17:37:28.158"
                                        endtime="20210830 17:37:28.218"/>
                            </iter>
                            <status status="PASS" starttime="20210830 17:37:28.018" endtime="20210830 17:37:28.218"/>
                        </for>
                        <status status="PASS" starttime="20210830 17:37:27.978" endtime="20210830 17:37:28.218"/>
                    </kw>
                    <status status="PASS" starttime="20210830 17:37:26.851" endtime="20210830 17:37:28.218"/>
                </kw>
                <kw name="Search For Method Should Return Expected Values" library="e2e_keywords">
                    <arg>tags:tag in:Single</arg>
                    <arg>1</arg>
                    <arg>Single Class Lib Method 1</arg>
                    <arg>${EMPTY}</arg>
                    <arg>SingleClassLib</arg>
                    <arg>Docstring for single_class_lib_method_1</arg>
                    <kw name="Search For" library="e2e_keywords">
                        <arg>${method}</arg>
                        <kw name="Navigate To Main Page" library="e2e_keywords">
                            <kw name="Go To" library="SeleniumLibrary">
                                <arg>http://${HOST}:8000</arg>
                                <doc>Navigates the current browser window to the provided ``url``.</doc>
                                <msg timestamp="20210830 17:37:28.218" level="INFO">Opening url
                                    'http://127.0.0.1:8000'
                                </msg>
                                <status status="PASS" starttime="20210830 17:37:28.218"
                                        endtime="20210830 17:37:28.322"/>
                            </kw>
                            <status status="PASS" starttime="20210830 17:37:28.218" endtime="20210830 17:37:28.323"/>
                        </kw>
                        <kw name="Input Text" library="SeleniumLibrary">
                            <arg>${search_field}</arg>
                            <arg>${text}</arg>
                            <doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
                            <msg timestamp="20210830 17:37:28.324" level="INFO">Typing text 'tags:tag in:Single' into
                                text field '//*[@id="root"]/div/header/div/div/div[2]/input'.
                            </msg>
                            <status status="PASS" starttime="20210830 17:37:28.323" endtime="20210830 17:37:28.681"/>
                        </kw>
                        <kw name="Reload Page" library="SeleniumLibrary">
                            <doc>Simulates user reloading page.</doc>
                            <status status="PASS" starttime="20210830 17:37:28.681" endtime="20210830 17:37:29.340"/>
                        </kw>
                        <kw name="Sleep" library="BuiltIn">
                            <arg>0.5s</arg>
                            <doc>Pauses the test executed for the given time.</doc>
                            <msg timestamp="20210830 17:37:29.848" level="INFO">Slept 500 milliseconds</msg>
                            <status status="PASS" starttime="20210830 17:37:29.340" endtime="20210830 17:37:29.848"/>
                        </kw>
                        <status status="PASS" starttime="20210830 17:37:28.218" endtime="20210830 17:37:29.848"/>
                    </kw>
                    <kw name="Search Results Count Should Be ${results_count}" library="e2e_keywords"
                        sourcename="Search Results Count Should Be ${n}">
                        <kw name="Element ${search_result_table} Count Should Be ${n}" library="e2e_keywords"
                            sourcename="Element ${element} Count Should Be ${n}">
                            <kw name="Get Element Count" library="SeleniumLibrary">
                                <var>${count}</var>
                                <arg>${element}</arg>
                                <doc>Returns the number of elements matching ``locator``.</doc>
                                <msg timestamp="20210830 17:37:29.858" level="INFO">${count} = 1</msg>
                                <status status="PASS" starttime="20210830 17:37:29.848"
                                        endtime="20210830 17:37:29.858"/>
                            </kw>
                            <kw name="Should Be Equal As Integers" library="BuiltIn">
                                <arg>${count}</arg>
                                <arg>${n}</arg>
                                <arg>Element count should be ${n} but is ${count}</arg>
                                <doc>Fails if objects are unequal after converting them to integers.</doc>
                                <msg timestamp="20210830 17:37:29.858" level="INFO">Argument types are:
                                    &lt;class 'int'&gt;
                                    &lt;type 'unicode'&gt;
                                </msg>
                                <status status="PASS" starttime="20210830 17:37:29.858"
                                        endtime="20210830 17:37:29.858"/>
                            </kw>
                            <status status="PASS" starttime="20210830 17:37:29.848" endtime="20210830 17:37:29.858"/>
                        </kw>
                        <status status="PASS" starttime="20210830 17:37:29.848" endtime="20210830 17:37:29.858"/>
                    </kw>
                    <kw name="Table Should Contain Library Data" library="e2e_keywords">
                        <arg>@{results_data}</arg>
                        <kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
                            <arg>${main_page_table}</arg>
                            <doc>Waits until the element ``locator`` is visible.</doc>
                            <status status="PASS" starttime="20210830 17:37:29.858" endtime="20210830 17:37:29.878"/>
                        </kw>
                        <kw name="Get Length" library="BuiltIn">
                            <var>${list_len}</var>
                            <arg>${Library_data}</arg>
                            <doc>Returns and logs the length of the given item as an integer.</doc>
                            <msg timestamp="20210830 17:37:29.878" level="INFO">Length is 4</msg>
                            <msg timestamp="20210830 17:37:29.878" level="INFO">${list_len} = 4</msg>
                            <status status="PASS" starttime="20210830 17:37:29.878" endtime="20210830 17:37:29.878"/>
                        </kw>
                        <for flavor="IN RANGE">
                            <var>${i}</var>
                            <value>1</value>
                            <value>${list_len}</value>
                            <iter>
                                <var name="${i}">1</var>
                                <kw name="Table Column Should Contain" library="SeleniumLibrary">
                                    <arg>${main_page_table}</arg>
                                    <arg>${i}</arg>
                                    <arg>${Library_data}[${i-1}]</arg>
                                    <doc>Verifies table column contains text ``expected``.</doc>
                                    <status status="PASS" starttime="20210830 17:37:29.878"
                                            endtime="20210830 17:37:29.958"/>
                                </kw>
                                <status status="PASS" starttime="20210830 17:37:29.878"
                                        endtime="20210830 17:37:29.958"/>
                            </iter>
                            <iter>
                                <var name="${i}">2</var>
                                <kw name="Table Column Should Contain" library="SeleniumLibrary">
                                    <arg>${main_page_table}</arg>
                                    <arg>${i}</arg>
                                    <arg>${Library_data}[${i-1}]</arg>
                                    <doc>Verifies table column contains text ``expected``.</doc>
                                    <status status="PASS" starttime="20210830 17:37:29.958"
                                            endtime="20210830 17:37:30.008"/>
                                </kw>
                                <status status="PASS" starttime="20210830 17:37:29.958"
                                        endtime="20210830 17:37:30.008"/>
                            </iter>
                            <iter>
                                <var name="${i}">3</var>
                                <kw name="Table Column Should Contain" library="SeleniumLibrary">
                                    <arg>${main_page_table}</arg>
                                    <arg>${i}</arg>
                                    <arg>${Library_data}[${i-1}]</arg>
                                    <doc>Verifies table column contains text ``expected``.</doc>
                                    <status status="PASS" starttime="20210830 17:37:30.008"
                                            endtime="20210830 17:37:30.068"/>
                                </kw>
                                <status status="PASS" starttime="20210830 17:37:30.008"
                                        endtime="20210830 17:37:30.068"/>
                            </iter>
                            <status status="PASS" starttime="20210830 17:37:29.878" endtime="20210830 17:37:30.068"/>
                        </for>
                        <status status="PASS" starttime="20210830 17:37:29.858" endtime="20210830 17:37:30.068"/>
                    </kw>
                    <status status="PASS" starttime="20210830 17:37:28.218" endtime="20210830 17:37:30.068"/>
                </kw>
                <doc>This test bases on
                    'Populated App Should Show Number Of Collections'
                    to shorten execution time.
                </doc>
                <tag>e2e</tag>
                <tag>rfhub2-161</tag>
                <tag>tags</tag>
                <status status="PASS" starttime="20210830 17:37:20.111" endtime="20210830 17:37:30.068"/>
            </test>
            <test id="s1-s3-t8" name="Tags Should Be Displayed On Collection Details">
                <kw name="Navigate To Main Page" library="e2e_keywords" type="SETUP">
                    <kw name="Go To" library="SeleniumLibrary">
                        <arg>http://${HOST}:8000</arg>
                        <doc>Navigates the current browser window to the provided ``url``.</doc>
                        <msg timestamp="20210830 17:37:30.078" level="INFO">Opening url 'http://127.0.0.1:8000'</msg>
                        <status status="PASS" starttime="20210830 17:37:30.078" endtime="20210830 17:37:30.174"/>
                    </kw>
                    <status status="PASS" starttime="20210830 17:37:30.078" endtime="20210830 17:37:30.174"/>
                </kw>
                <kw name="Tags Should Be Displayed For Collection" library="e2e_keywords">
                    <arg>test_robot</arg>
                    <arg>first_tag</arg>
                    <arg>second_tag</arg>
                    <kw name="Open ${${collection}} In Left Panel" library="e2e_keywords"
                        sourcename="Open ${library} In Left Panel">
                        <kw name="Run Keyword And Return Status" library="BuiltIn">
                            <var>${is_visible}</var>
                            <arg>Element Should Not Be Visible</arg>
                            <arg>${hamburger}</arg>
                            <doc>Runs the given keyword with given arguments and returns the status as a Boolean
                                value.
                            </doc>
                            <kw name="Element Should Not Be Visible" library="SeleniumLibrary">
                                <arg>${hamburger}</arg>
                                <doc>Verifies that the element identified by ``locator`` is NOT visible.</doc>
                                <msg timestamp="20210830 17:37:30.191" level="INFO">Element
                                    '//*[@id="root"]/div/header/div/button/span[1]/svg/path' did not exist.
                                </msg>
                                <status status="PASS" starttime="20210830 17:37:30.176"
                                        endtime="20210830 17:37:30.192"/>
                            </kw>
                            <msg timestamp="20210830 17:37:30.192" level="INFO">${is_visible} = True</msg>
                            <status status="PASS" starttime="20210830 17:37:30.176" endtime="20210830 17:37:30.192"/>
                        </kw>
                        <kw name="Run Keyword Unless" library="BuiltIn">
                            <arg>${is_visible}</arg>
                            <arg>Click Element</arg>
                            <arg>${hamburger}</arg>
                            <doc>Runs the given keyword with the given arguments if ``condition`` is false.</doc>
                            <status status="PASS" starttime="20210830 17:37:30.192" endtime="20210830 17:37:30.193"/>
                        </kw>
                        <kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
                            <arg>${library}</arg>
                            <doc>Waits until the element ``locator`` is visible.</doc>
                            <status status="PASS" starttime="20210830 17:37:30.193" endtime="20210830 17:37:30.243"/>
                        </kw>
                        <kw name="Click Element" library="SeleniumLibrary">
                            <arg>${library}</arg>
                            <doc>Click the element identified by ``locator``.</doc>
                            <msg timestamp="20210830 17:37:30.244" level="INFO">Clicking element
                                '//*[contains(text(),"test_robot")]'.
                            </msg>
                            <status status="PASS" starttime="20210830 17:37:30.243" endtime="20210830 17:37:30.307"/>
                        </kw>
                        <kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
                            <arg>//*[contains(text(),'Overview')]</arg>
                            <doc>Waits until the element ``locator`` is visible.</doc>
                            <status status="PASS" starttime="20210830 17:37:30.308" endtime="20210830 17:37:30.585"/>
                        </kw>
                        <status status="PASS" starttime="20210830 17:37:30.175" endtime="20210830 17:37:30.585"/>
                    </kw>
                    <kw name="Click ${${collection}_keyword_1} In Left Panel" library="e2e_keywords"
                        sourcename="Click ${keyword} In Left Panel">
                        <kw name="Click Element When Visible" library="e2e_keywords">
                            <arg>${keyword}</arg>
                            <kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
                                <arg>${element}</arg>
                                <doc>Waits until the element ``locator`` is visible.</doc>
                                <status status="PASS" starttime="20210830 17:37:30.589"
                                        endtime="20210830 17:37:30.628"/>
                            </kw>
                            <kw name="Click Element" library="SeleniumLibrary">
                                <arg>${element}</arg>
                                <doc>Click the element identified by ``locator``.</doc>
                                <msg timestamp="20210830 17:37:30.629" level="INFO">Clicking element
                                    '//*[contains(text(),"Keyword 1 Imported From Robot")]'.
                                </msg>
                                <status status="PASS" starttime="20210830 17:37:30.628"
                                        endtime="20210830 17:37:30.706"/>
                            </kw>
                            <status status="PASS" starttime="20210830 17:37:30.587" endtime="20210830 17:37:30.706"/>
                        </kw>
                        <kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
                            <arg>${detail_view_library_version}</arg>
                            <doc>Waits until the element ``locator`` is visible.</doc>
                            <msg timestamp="20210830 17:37:30.764" level="INFO">Suppressing
                                StaleElementReferenceException from Selenium.
                            </msg>
                            <status status="PASS" starttime="20210830 17:37:30.707" endtime="20210830 17:37:30.996"/>
                        </kw>
                        <status status="PASS" starttime="20210830 17:37:30.586" endtime="20210830 17:37:30.996"/>
                    </kw>
                    <kw name="Check If Tags Are Displayed Correctly" library="e2e_keywords">
                        <arg>main</arg>
                        <arg>@{tags}</arg>
                        <kw name="Get Length" library="BuiltIn">
                            <var>${tags_count}</var>
                            <arg>${tags}</arg>
                            <doc>Returns and logs the length of the given item as an integer.</doc>
                            <msg timestamp="20210830 17:37:30.999" level="INFO">Length is 2</msg>
                            <msg timestamp="20210830 17:37:30.999" level="INFO">${tags_count} = 2</msg>
                            <status status="PASS" starttime="20210830 17:37:30.998" endtime="20210830 17:37:30.999"/>
                        </kw>
                        <kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
                            <arg>${${table}_page_table_tag_column}/div</arg>
                            <arg>5s</arg>
                            <doc>Waits until the element ``locator`` is visible.</doc>
                            <status status="PASS" starttime="20210830 17:37:31.000" endtime="20210830 17:37:31.041"/>
                        </kw>
                        <kw name="Element ${${table}_page_table_tag_column}/div Count Should Be ${tags_count}"
                            library="e2e_keywords" sourcename="Element ${element} Count Should Be ${n}">
                            <kw name="Get Element Count" library="SeleniumLibrary">
                                <var>${count}</var>
                                <arg>${element}</arg>
                                <doc>Returns the number of elements matching ``locator``.</doc>
                                <msg timestamp="20210830 17:37:31.056" level="INFO">${count} = 2</msg>
                                <status status="PASS" starttime="20210830 17:37:31.043"
                                        endtime="20210830 17:37:31.056"/>
                            </kw>
                            <kw name="Should Be Equal As Integers" library="BuiltIn">
                                <arg>${count}</arg>
                                <arg>${n}</arg>
                                <arg>Element count should be ${n} but is ${count}</arg>
                                <doc>Fails if objects are unequal after converting them to integers.</doc>
                                <status status="PASS" starttime="20210830 17:37:31.057"
                                        endtime="20210830 17:37:31.058"/>
                            </kw>
                            <status status="PASS" starttime="20210830 17:37:31.041" endtime="20210830 17:37:31.058"/>
                        </kw>
                        <for flavor="IN ENUMERATE">
                            <var>${i}</var>
                            <var>${tag}</var>
                            <value>@{tags}</value>
                            <iter>
                                <var name="${i}">0</var>
                                <var name="${tag}">first_tag</var>
                                <kw name="Element Text Should Be" library="SeleniumLibrary">
                                    <arg>${${table}_page_table_tag_column}/div[${i+1}]/span</arg>
                                    <arg>${tag}</arg>
                                    <doc>Verifies that element ``locator`` contains exact the text ``expected``.</doc>
                                    <msg timestamp="20210830 17:37:31.064" level="INFO">Verifying element
                                        '//*[@id="root"]/div/main/div[2]/div/div/div/table/tbody/tr[1]/td[3]/div[1]/span'
                                        contains exact text 'first_tag'.
                                    </msg>
                                    <status status="PASS" starttime="20210830 17:37:31.059"
                                            endtime="20210830 17:37:31.113"/>
                                </kw>
                                <status status="PASS" starttime="20210830 17:37:31.059"
                                        endtime="20210830 17:37:31.113"/>
                            </iter>
                            <iter>
                                <var name="${i}">1</var>
                                <var name="${tag}">second_tag</var>
                                <kw name="Element Text Should Be" library="SeleniumLibrary">
                                    <arg>${${table}_page_table_tag_column}/div[${i+1}]/span</arg>
                                    <arg>${tag}</arg>
                                    <doc>Verifies that element ``locator`` contains exact the text ``expected``.</doc>
                                    <msg timestamp="20210830 17:37:31.116" level="INFO">Verifying element
                                        '//*[@id="root"]/div/main/div[2]/div/div/div/table/tbody/tr[1]/td[3]/div[2]/span'
                                        contains exact text 'second_tag'.
                                    </msg>
                                    <status status="PASS" starttime="20210830 17:37:31.113"
                                            endtime="20210830 17:37:31.143"/>
                                </kw>
                                <status status="PASS" starttime="20210830 17:37:31.113"
                                        endtime="20210830 17:37:31.143"/>
                            </iter>
                            <status status="PASS" starttime="20210830 17:37:31.058" endtime="20210830 17:37:31.143"/>
                        </for>
                        <status status="PASS" starttime="20210830 17:37:30.996" endtime="20210830 17:37:31.144"/>
                    </kw>
                    <status status="PASS" starttime="20210830 17:37:30.174" endtime="20210830 17:37:31.144"/>
                </kw>
                <kw name="Tags Should Be Displayed For Collection" library="e2e_keywords">
                    <arg>SingleClassLib</arg>
                    <arg>tag_1</arg>
                    <arg>tag_2</arg>
                    <kw name="Open ${${collection}} In Left Panel" library="e2e_keywords"
                        sourcename="Open ${library} In Left Panel">
                        <kw name="Run Keyword And Return Status" library="BuiltIn">
                            <var>${is_visible}</var>
                            <arg>Element Should Not Be Visible</arg>
                            <arg>${hamburger}</arg>
                            <doc>Runs the given keyword with given arguments and returns the status as a Boolean
                                value.
                            </doc>
                            <kw name="Element Should Not Be Visible" library="SeleniumLibrary">
                                <arg>${hamburger}</arg>
                                <doc>Verifies that the element identified by ``locator`` is NOT visible.</doc>
                                <msg timestamp="20210830 17:37:31.154" level="INFO">Element
                                    '//*[@id="root"]/div/header/div/button/span[1]/svg/path' did not exist.
                                </msg>
                                <status status="PASS" starttime="20210830 17:37:31.146"
                                        endtime="20210830 17:37:31.155"/>
                            </kw>
                            <msg timestamp="20210830 17:37:31.155" level="INFO">${is_visible} = True</msg>
                            <status status="PASS" starttime="20210830 17:37:31.146" endtime="20210830 17:37:31.155"/>
                        </kw>
                        <kw name="Run Keyword Unless" library="BuiltIn">
                            <arg>${is_visible}</arg>
                            <arg>Click Element</arg>
                            <arg>${hamburger}</arg>
                            <doc>Runs the given keyword with the given arguments if ``condition`` is false.</doc>
                            <status status="PASS" starttime="20210830 17:37:31.155" endtime="20210830 17:37:31.155"/>
                        </kw>
                        <kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
                            <arg>${library}</arg>
                            <doc>Waits until the element ``locator`` is visible.</doc>
                            <status status="PASS" starttime="20210830 17:37:31.156" endtime="20210830 17:37:31.183"/>
                        </kw>
                        <kw name="Click Element" library="SeleniumLibrary">
                            <arg>${library}</arg>
                            <doc>Click the element identified by ``locator``.</doc>
                            <msg timestamp="20210830 17:37:31.184" level="INFO">Clicking element
                                '//*[contains(text(),"SingleClassLib")]'.
                            </msg>
                            <status status="PASS" starttime="20210830 17:37:31.183" endtime="20210830 17:37:31.247"/>
                        </kw>
                        <kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
                            <arg>//*[contains(text(),'Overview')]</arg>
                            <doc>Waits until the element ``locator`` is visible.</doc>
                            <status status="PASS" starttime="20210830 17:37:31.248" endtime="20210830 17:37:31.518"/>
                        </kw>
                        <status status="PASS" starttime="20210830 17:37:31.145" endtime="20210830 17:37:31.518"/>
                    </kw>
                    <kw name="Click ${${collection}_keyword_1} In Left Panel" library="e2e_keywords"
                        sourcename="Click ${keyword} In Left Panel">
                        <kw name="Click Element When Visible" library="e2e_keywords">
                            <arg>${keyword}</arg>
                            <kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
                                <arg>${element}</arg>
                                <doc>Waits until the element ``locator`` is visible.</doc>
                                <status status="PASS" starttime="20210830 17:37:31.520"
                                        endtime="20210830 17:37:31.555"/>
                            </kw>
                            <kw name="Click Element" library="SeleniumLibrary">
                                <arg>${element}</arg>
                                <doc>Click the element identified by ``locator``.</doc>
                                <msg timestamp="20210830 17:37:31.556" level="INFO">Clicking element
                                    '//*[contains(text(),"Single Class Lib Method 1")]'.
                                </msg>
                                <status status="PASS" starttime="20210830 17:37:31.555"
                                        endtime="20210830 17:37:31.615"/>
                            </kw>
                            <status status="PASS" starttime="20210830 17:37:31.520" endtime="20210830 17:37:31.615"/>
                        </kw>
                        <kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
                            <arg>${detail_view_library_version}</arg>
                            <doc>Waits until the element ``locator`` is visible.</doc>
                            <status status="PASS" starttime="20210830 17:37:31.616" endtime="20210830 17:37:31.873"/>
                        </kw>
                        <status status="PASS" starttime="20210830 17:37:31.519" endtime="20210830 17:37:31.874"/>
                    </kw>
                    <kw name="Check If Tags Are Displayed Correctly" library="e2e_keywords">
                        <arg>main</arg>
                        <arg>@{tags}</arg>
                        <kw name="Get Length" library="BuiltIn">
                            <var>${tags_count}</var>
                            <arg>${tags}</arg>
                            <doc>Returns and logs the length of the given item as an integer.</doc>
                            <msg timestamp="20210830 17:37:31.876" level="INFO">Length is 2</msg>
                            <msg timestamp="20210830 17:37:31.876" level="INFO">${tags_count} = 2</msg>
                            <status status="PASS" starttime="20210830 17:37:31.876" endtime="20210830 17:37:31.876"/>
                        </kw>
                        <kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
                            <arg>${${table}_page_table_tag_column}/div</arg>
                            <arg>5s</arg>
                            <doc>Waits until the element ``locator`` is visible.</doc>
                            <status status="PASS" starttime="20210830 17:37:31.877" endtime="20210830 17:37:31.898"/>
                        </kw>
                        <kw name="Element ${${table}_page_table_tag_column}/div Count Should Be ${tags_count}"
                            library="e2e_keywords" sourcename="Element ${element} Count Should Be ${n}">
                            <kw name="Get Element Count" library="SeleniumLibrary">
                                <var>${count}</var>
                                <arg>${element}</arg>
                                <doc>Returns the number of elements matching ``locator``.</doc>
                                <msg timestamp="20210830 17:37:31.908" level="INFO">${count} = 2</msg>
                                <status status="PASS" starttime="20210830 17:37:31.900"
                                        endtime="20210830 17:37:31.909"/>
                            </kw>
                            <kw name="Should Be Equal As Integers" library="BuiltIn">
                                <arg>${count}</arg>
                                <arg>${n}</arg>
                                <arg>Element count should be ${n} but is ${count}</arg>
                                <doc>Fails if objects are unequal after converting them to integers.</doc>
                                <status status="PASS" starttime="20210830 17:37:31.909"
                                        endtime="20210830 17:37:31.910"/>
                            </kw>
                            <status status="PASS" starttime="20210830 17:37:31.899" endtime="20210830 17:37:31.910"/>
                        </kw>
                        <for flavor="IN ENUMERATE">
                            <var>${i}</var>
                            <var>${tag}</var>
                            <value>@{tags}</value>
                            <iter>
                                <var name="${i}">0</var>
                                <var name="${tag}">tag_1</var>
                                <kw name="Element Text Should Be" library="SeleniumLibrary">
                                    <arg>${${table}_page_table_tag_column}/div[${i+1}]/span</arg>
                                    <arg>${tag}</arg>
                                    <doc>Verifies that element ``locator`` contains exact the text ``expected``.</doc>
                                    <msg timestamp="20210830 17:37:31.913" level="INFO">Verifying element
                                        '//*[@id="root"]/div/main/div[2]/div/div/div/table/tbody/tr[1]/td[3]/div[1]/span'
                                        contains exact text 'tag_1'.
                                    </msg>
                                    <status status="PASS" starttime="20210830 17:37:31.911"
                                            endtime="20210830 17:37:31.935"/>
                                </kw>
                                <status status="PASS" starttime="20210830 17:37:31.910"
                                        endtime="20210830 17:37:31.935"/>
                            </iter>
                            <iter>
                                <var name="${i}">1</var>
                                <var name="${tag}">tag_2</var>
                                <kw name="Element Text Should Be" library="SeleniumLibrary">
                                    <arg>${${table}_page_table_tag_column}/div[${i+1}]/span</arg>
                                    <arg>${tag}</arg>
                                    <doc>Verifies that element ``locator`` contains exact the text ``expected``.</doc>
                                    <msg timestamp="20210830 17:37:31.938" level="INFO">Verifying element
                                        '//*[@id="root"]/div/main/div[2]/div/div/div/table/tbody/tr[1]/td[3]/div[2]/span'
                                        contains exact text 'tag_2'.
                                    </msg>
                                    <status status="PASS" starttime="20210830 17:37:31.936"
                                            endtime="20210830 17:37:31.960"/>
                                </kw>
                                <status status="PASS" starttime="20210830 17:37:31.935"
                                        endtime="20210830 17:37:31.960"/>
                            </iter>
                            <status status="PASS" starttime="20210830 17:37:31.910" endtime="20210830 17:37:31.960"/>
                        </for>
                        <status status="PASS" starttime="20210830 17:37:31.874" endtime="20210830 17:37:31.960"/>
                    </kw>
                    <status status="PASS" starttime="20210830 17:37:31.144" endtime="20210830 17:37:31.961"/>
                </kw>
                <doc>This test bases on
                    'Populated App Should Show Number Of Collections'
                    to shorten execution time.
                </doc>
                <tag>e2e</tag>
                <tag>rfhub2-161</tag>
                <tag>tags</tag>
                <status status="PASS" starttime="20210830 17:37:30.078" endtime="20210830 17:37:31.961"/>
            </test>
            <test id="s1-s3-t9" name="Tags Should Be Displayed On Search Results">
                <kw name="Navigate To Main Page" library="e2e_keywords" type="SETUP">
                    <kw name="Go To" library="SeleniumLibrary">
                        <arg>http://${HOST}:8000</arg>
                        <doc>Navigates the current browser window to the provided ``url``.</doc>
                        <msg timestamp="20210830 17:37:31.965" level="INFO">Opening url 'http://127.0.0.1:8000'</msg>
                        <status status="PASS" starttime="20210830 17:37:31.964" endtime="20210830 17:37:32.056"/>
                    </kw>
                    <status status="PASS" starttime="20210830 17:37:31.963" endtime="20210830 17:37:32.057"/>
                </kw>
                <kw name="Tags Should Be Displayed For Search Results" library="e2e_keywords">
                    <arg>tags:first_tag</arg>
                    <arg>first_tag</arg>
                    <kw name="Search For" library="e2e_keywords">
                        <arg>${search_string}</arg>
                        <kw name="Navigate To Main Page" library="e2e_keywords">
                            <kw name="Go To" library="SeleniumLibrary">
                                <arg>http://${HOST}:8000</arg>
                                <doc>Navigates the current browser window to the provided ``url``.</doc>
                                <msg timestamp="20210830 17:37:32.059" level="INFO">Opening url
                                    'http://127.0.0.1:8000'
                                </msg>
                                <status status="PASS" starttime="20210830 17:37:32.059"
                                        endtime="20210830 17:37:32.186"/>
                            </kw>
                            <status status="PASS" starttime="20210830 17:37:32.058" endtime="20210830 17:37:32.186"/>
                        </kw>
                        <kw name="Input Text" library="SeleniumLibrary">
                            <arg>${search_field}</arg>
                            <arg>${text}</arg>
                            <doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
                            <msg timestamp="20210830 17:37:32.187" level="INFO">Typing text 'tags:first_tag' into text
                                field '//*[@id="root"]/div/header/div/div/div[2]/input'.
                            </msg>
                            <status status="PASS" starttime="20210830 17:37:32.187" endtime="20210830 17:37:32.500"/>
                        </kw>
                        <kw name="Reload Page" library="SeleniumLibrary">
                            <doc>Simulates user reloading page.</doc>
                            <status status="PASS" starttime="20210830 17:37:32.500" endtime="20210830 17:37:32.790"/>
                        </kw>
                        <kw name="Sleep" library="BuiltIn">
                            <arg>0.5s</arg>
                            <doc>Pauses the test executed for the given time.</doc>
                            <msg timestamp="20210830 17:37:33.297" level="INFO">Slept 500 milliseconds</msg>
                            <status status="PASS" starttime="20210830 17:37:32.791" endtime="20210830 17:37:33.297"/>
                        </kw>
                        <status status="PASS" starttime="20210830 17:37:32.058" endtime="20210830 17:37:33.297"/>
                    </kw>
                    <kw name="Check If Tags Are Displayed Correctly" library="e2e_keywords">
                        <arg>search</arg>
                        <arg>@{tags}</arg>
                        <kw name="Get Length" library="BuiltIn">
                            <var>${tags_count}</var>
                            <arg>${tags}</arg>
                            <doc>Returns and logs the length of the given item as an integer.</doc>
                            <msg timestamp="20210830 17:37:33.297" level="INFO">Length is 1</msg>
                            <msg timestamp="20210830 17:37:33.297" level="INFO">${tags_count} = 1</msg>
                            <status status="PASS" starttime="20210830 17:37:33.297" endtime="20210830 17:37:33.297"/>
                        </kw>
                        <kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
                            <arg>${${table}_page_table_tag_column}/div</arg>
                            <arg>5s</arg>
                            <doc>Waits until the element ``locator`` is visible.</doc>
                            <status status="PASS" starttime="20210830 17:37:33.297" endtime="20210830 17:37:33.369"/>
                        </kw>
                        <kw name="Element ${${table}_page_table_tag_column}/div Count Should Be ${tags_count}"
                            library="e2e_keywords" sourcename="Element ${element} Count Should Be ${n}">
                            <kw name="Get Element Count" library="SeleniumLibrary">
                                <var>${count}</var>
                                <arg>${element}</arg>
                                <doc>Returns the number of elements matching ``locator``.</doc>
                                <msg timestamp="20210830 17:37:33.381" level="INFO">${count} = 1</msg>
                                <status status="PASS" starttime="20210830 17:37:33.371"
                                        endtime="20210830 17:37:33.381"/>
                            </kw>
                            <kw name="Should Be Equal As Integers" library="BuiltIn">
                                <arg>${count}</arg>
                                <arg>${n}</arg>
                                <arg>Element count should be ${n} but is ${count}</arg>
                                <doc>Fails if objects are unequal after converting them to integers.</doc>
                                <status status="PASS" starttime="20210830 17:37:33.382"
                                        endtime="20210830 17:37:33.382"/>
                            </kw>
                            <status status="PASS" starttime="20210830 17:37:33.370" endtime="20210830 17:37:33.383"/>
                        </kw>
                        <for flavor="IN ENUMERATE">
                            <var>${i}</var>
                            <var>${tag}</var>
                            <value>@{tags}</value>
                            <iter>
                                <var name="${i}">0</var>
                                <var name="${tag}">first_tag</var>
                                <kw name="Element Text Should Be" library="SeleniumLibrary">
                                    <arg>${${table}_page_table_tag_column}/div[${i+1}]/span</arg>
                                    <arg>${tag}</arg>
                                    <doc>Verifies that element ``locator`` contains exact the text ``expected``.</doc>
                                    <msg timestamp="20210830 17:37:33.386" level="INFO">Verifying element
                                        '//*[@id="root"]/div/main/div[2]/div/div/div/table/tbody/tr[1]/td[2]/div[1]/span'
                                        contains exact text 'first_tag'.
                                    </msg>
                                    <status status="PASS" starttime="20210830 17:37:33.383"
                                            endtime="20210830 17:37:33.410"/>
                                </kw>
                                <status status="PASS" starttime="20210830 17:37:33.383"
                                        endtime="20210830 17:37:33.410"/>
                            </iter>
                            <status status="PASS" starttime="20210830 17:37:33.383" endtime="20210830 17:37:33.410"/>
                        </for>
                        <status status="PASS" starttime="20210830 17:37:33.297" endtime="20210830 17:37:33.410"/>
                    </kw>
                    <status status="PASS" starttime="20210830 17:37:32.057" endtime="20210830 17:37:33.410"/>
                </kw>
                <kw name="Tags Should Be Displayed For Search Results" library="e2e_keywords">
                    <arg>tags:tag in:Single</arg>
                    <arg>tag_1</arg>
                    <arg>tag_2</arg>
                    <kw name="Search For" library="e2e_keywords">
                        <arg>${search_string}</arg>
                        <kw name="Navigate To Main Page" library="e2e_keywords">
                            <kw name="Go To" library="SeleniumLibrary">
                                <arg>http://${HOST}:8000</arg>
                                <doc>Navigates the current browser window to the provided ``url``.</doc>
                                <msg timestamp="20210830 17:37:33.410" level="INFO">Opening url
                                    'http://127.0.0.1:8000'
                                </msg>
                                <status status="PASS" starttime="20210830 17:37:33.410"
                                        endtime="20210830 17:37:33.508"/>
                            </kw>
                            <status status="PASS" starttime="20210830 17:37:33.410" endtime="20210830 17:37:33.508"/>
                        </kw>
                        <kw name="Input Text" library="SeleniumLibrary">
                            <arg>${search_field}</arg>
                            <arg>${text}</arg>
                            <doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
                            <msg timestamp="20210830 17:37:33.509" level="INFO">Typing text 'tags:tag in:Single' into
                                text field '//*[@id="root"]/div/header/div/div/div[2]/input'.
                            </msg>
                            <status status="PASS" starttime="20210830 17:37:33.509" endtime="20210830 17:37:33.865"/>
                        </kw>
                        <kw name="Reload Page" library="SeleniumLibrary">
                            <doc>Simulates user reloading page.</doc>
                            <status status="PASS" starttime="20210830 17:37:33.865" endtime="20210830 17:37:34.162"/>
                        </kw>
                        <kw name="Sleep" library="BuiltIn">
                            <arg>0.5s</arg>
                            <doc>Pauses the test executed for the given time.</doc>
                            <msg timestamp="20210830 17:37:34.671" level="INFO">Slept 500 milliseconds</msg>
                            <status status="PASS" starttime="20210830 17:37:34.163" endtime="20210830 17:37:34.671"/>
                        </kw>
                        <status status="PASS" starttime="20210830 17:37:33.410" endtime="20210830 17:37:34.671"/>
                    </kw>
                    <kw name="Check If Tags Are Displayed Correctly" library="e2e_keywords">
                        <arg>search</arg>
                        <arg>@{tags}</arg>
                        <kw name="Get Length" library="BuiltIn">
                            <var>${tags_count}</var>
                            <arg>${tags}</arg>
                            <doc>Returns and logs the length of the given item as an integer.</doc>
                            <msg timestamp="20210830 17:37:34.671" level="INFO">Length is 2</msg>
                            <msg timestamp="20210830 17:37:34.671" level="INFO">${tags_count} = 2</msg>
                            <status status="PASS" starttime="20210830 17:37:34.671" endtime="20210830 17:37:34.671"/>
                        </kw>
                        <kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
                            <arg>${${table}_page_table_tag_column}/div</arg>
                            <arg>5s</arg>
                            <doc>Waits until the element ``locator`` is visible.</doc>
                            <status status="PASS" starttime="20210830 17:37:34.671" endtime="20210830 17:37:34.721"/>
                        </kw>
                        <kw name="Element ${${table}_page_table_tag_column}/div Count Should Be ${tags_count}"
                            library="e2e_keywords" sourcename="Element ${element} Count Should Be ${n}">
                            <kw name="Get Element Count" library="SeleniumLibrary">
                                <var>${count}</var>
                                <arg>${element}</arg>
                                <doc>Returns the number of elements matching ``locator``.</doc>
                                <msg timestamp="20210830 17:37:34.731" level="INFO">${count} = 2</msg>
                                <status status="PASS" starttime="20210830 17:37:34.721"
                                        endtime="20210830 17:37:34.731"/>
                            </kw>
                            <kw name="Should Be Equal As Integers" library="BuiltIn">
                                <arg>${count}</arg>
                                <arg>${n}</arg>
                                <arg>Element count should be ${n} but is ${count}</arg>
                                <doc>Fails if objects are unequal after converting them to integers.</doc>
                                <status status="PASS" starttime="20210830 17:37:34.731"
                                        endtime="20210830 17:37:34.731"/>
                            </kw>
                            <status status="PASS" starttime="20210830 17:37:34.721" endtime="20210830 17:37:34.731"/>
                        </kw>
                        <for flavor="IN ENUMERATE">
                            <var>${i}</var>
                            <var>${tag}</var>
                            <value>@{tags}</value>
                            <iter>
                                <var name="${i}">0</var>
                                <var name="${tag}">tag_1</var>
                                <kw name="Element Text Should Be" library="SeleniumLibrary">
                                    <arg>${${table}_page_table_tag_column}/div[${i+1}]/span</arg>
                                    <arg>${tag}</arg>
                                    <doc>Verifies that element ``locator`` contains exact the text ``expected``.</doc>
                                    <msg timestamp="20210830 17:37:34.741" level="INFO">Verifying element
                                        '//*[@id="root"]/div/main/div[2]/div/div/div/table/tbody/tr[1]/td[2]/div[1]/span'
                                        contains exact text 'tag_1'.
                                    </msg>
                                    <status status="PASS" starttime="20210830 17:37:34.731"
                                            endtime="20210830 17:37:34.771"/>
                                </kw>
                                <status status="PASS" starttime="20210830 17:37:34.731"
                                        endtime="20210830 17:37:34.771"/>
                            </iter>
                            <iter>
                                <var name="${i}">1</var>
                                <var name="${tag}">tag_2</var>
                                <kw name="Element Text Should Be" library="SeleniumLibrary">
                                    <arg>${${table}_page_table_tag_column}/div[${i+1}]/span</arg>
                                    <arg>${tag}</arg>
                                    <doc>Verifies that element ``locator`` contains exact the text ``expected``.</doc>
                                    <msg timestamp="20210830 17:37:34.781" level="INFO">Verifying element
                                        '//*[@id="root"]/div/main/div[2]/div/div/div/table/tbody/tr[1]/td[2]/div[2]/span'
                                        contains exact text 'tag_2'.
                                    </msg>
                                    <status status="PASS" starttime="20210830 17:37:34.771"
                                            endtime="20210830 17:37:34.821"/>
                                </kw>
                                <status status="PASS" starttime="20210830 17:37:34.771"
                                        endtime="20210830 17:37:34.821"/>
                            </iter>
                            <status status="PASS" starttime="20210830 17:37:34.731" endtime="20210830 17:37:34.821"/>
                        </for>
                        <status status="PASS" starttime="20210830 17:37:34.671" endtime="20210830 17:37:34.821"/>
                    </kw>
                    <status status="PASS" starttime="20210830 17:37:33.410" endtime="20210830 17:37:34.821"/>
                </kw>
                <doc>This test bases on
                    'Populated App Should Show Number Of Collections'
                    to shorten execution time.
                </doc>
                <tag>e2e</tag>
                <tag>rfhub2-161</tag>
                <tag>tags</tag>
                <status status="PASS" starttime="20210830 17:37:31.962" endtime="20210830 17:37:34.821"/>
            </test>
            <test id="s1-s3-t10" name="First Page Table After Update Should Contain Proper Libraries Data">
                <kw name="Test Setup For Collections Update" type="SETUP">
                    <kw name="Run Cli Package Without Installed Keywords" library="keywords">
                        <kw name="Run Cli Package With Options" library="keywords">
                            <arg>--load-mode=insert --no-installed-keywords ${INITIAL_FIXTURES}</arg>
                            <doc>Attempt to run the rfhub2-cli package with the given options
                                The stdout of the process will be in a test suite
                                variable named ${output}
                            </doc>
                            <kw name="Run" library="OperatingSystem">
                                <var>${output}</var>
                                <arg>${ACTIVATE_VENV} rfhub2-cli -a http://${HOST}:8000 ${options}</arg>
                                <doc>Runs the given command in the system and returns the output.</doc>
                                <msg timestamp="20210830 17:37:34.981" level="INFO">Running command ' rfhub2-cli -a
                                    http://127.0.0.1:8000 --load-mode=insert --no-installed-keywords
                                    C:\repo\rfhub2\tests\acceptance\resources\..\..\fixtures/initial/ 2&gt;&amp;1'.
                                </msg>
                                <msg timestamp="20210830 17:37:37.350" level="INFO">${output} = usage:
                                    script_for_system_exit [-h] -c CONF
                                    script_for_system_exit: error: the following arguments are required: -c/--conf
                                    Failed to create collection from path C:\repo\rfhub2\tests\acceptance\resource...
                                </msg>
                                <status status="PASS" starttime="20210830 17:37:34.821"
                                        endtime="20210830 17:37:37.350"/>
                            </kw>
                            <kw name="Set Suite Variable" library="BuiltIn">
                                <arg>${output}</arg>
                                <doc>Makes a variable available everywhere within the scope of the current suite.</doc>
                                <msg timestamp="20210830 17:37:37.350" level="INFO">${output} = usage:
                                    script_for_system_exit [-h] -c CONF
                                    script_for_system_exit: error: the following arguments are required: -c/--conf
                                    Failed to create collection from path C:\repo\rfhub2\tests\acceptance\resource...
                                </msg>
                                <status status="PASS" starttime="20210830 17:37:37.350"
                                        endtime="20210830 17:37:37.350"/>
                            </kw>
                            <status status="PASS" starttime="20210830 17:37:34.821" endtime="20210830 17:37:37.350"/>
                        </kw>
                        <status status="PASS" starttime="20210830 17:37:34.821" endtime="20210830 17:37:37.350"/>
                    </kw>
                    <kw name="Backup And Switch Initial With Updated Fixtures" library="keywords">
                        <kw name="Move Directory" library="OperatingSystem">
                            <arg>${INITIAL_FIXTURES}</arg>
                            <arg>${BACKUP_FIXTURES}</arg>
                            <doc>Moves the source directory into a destination.</doc>
                            <msg timestamp="20210830 17:37:37.360" level="INFO" html="true">Moved directory from '&lt;a
                                href="file://C:\repo\rfhub2\tests\fixtures\initial"&gt;C:\repo\rfhub2\tests\fixtures\initial&lt;/a&gt;'
                                to '&lt;a href="file://C:\repo\rfhub2\tests\fixtures\initial_bkp"&gt;C:\repo\rfhub2\tests\fixtures\initial_bkp&lt;/a&gt;'.
                            </msg>
                            <status status="PASS" starttime="20210830 17:37:37.350" endtime="20210830 17:37:37.360"/>
                        </kw>
                        <kw name="Copy Directory" library="OperatingSystem">
                            <arg>${UPDATED_FIXTURES}</arg>
                            <arg>${INITIAL_FIXTURES}</arg>
                            <doc>Copies the source directory into the destination.</doc>
                            <msg timestamp="20210830 17:37:37.410" level="INFO" html="true">Copied directory from '&lt;a
                                href="file://C:\repo\rfhub2\tests\fixtures\updated"&gt;C:\repo\rfhub2\tests\fixtures\updated&lt;/a&gt;'
                                to '&lt;a href="file://C:\repo\rfhub2\tests\fixtures\initial"&gt;C:\repo\rfhub2\tests\fixtures\initial&lt;/a&gt;'.
                            </msg>
                            <status status="PASS" starttime="20210830 17:37:37.360" endtime="20210830 17:37:37.410"/>
                        </kw>
                        <status status="PASS" starttime="20210830 17:37:37.350" endtime="20210830 17:37:37.410"/>
                    </kw>
                    <kw name="Run Cli Package With Options" library="keywords">
                        <arg>--load-mode=update --no-installed-keywords ${INITIAL_FIXTURES}</arg>
                        <doc>Attempt to run the rfhub2-cli package with the given options
                            The stdout of the process will be in a test suite
                            variable named ${output}
                        </doc>
                        <kw name="Run" library="OperatingSystem">
                            <var>${output}</var>
                            <arg>${ACTIVATE_VENV} rfhub2-cli -a http://${HOST}:8000 ${options}</arg>
                            <doc>Runs the given command in the system and returns the output.</doc>
                            <msg timestamp="20210830 17:37:37.550" level="INFO">Running command ' rfhub2-cli -a
                                http://127.0.0.1:8000 --load-mode=update --no-installed-keywords
                                C:\repo\rfhub2\tests\acceptance\resources\..\..\fixtures/initial/ 2&gt;&amp;1'.
                            </msg>
                            <msg timestamp="20210830 17:37:39.702" level="INFO">${output} = SingleClassLib library with
                                4 keywords loaded.
                                Test Libdoc File library with 1 keywords loaded.
                                test_resource library with 2 keywords loaded.
                                Test Libdoc File Copy library with 1 keywords loaded.

                                Suc...
                            </msg>
                            <status status="PASS" starttime="20210830 17:37:37.410" endtime="20210830 17:37:39.702"/>
                        </kw>
                        <kw name="Set Suite Variable" library="BuiltIn">
                            <arg>${output}</arg>
                            <doc>Makes a variable available everywhere within the scope of the current suite.</doc>
                            <msg timestamp="20210830 17:37:39.702" level="INFO">${output} = SingleClassLib library with
                                4 keywords loaded.
                                Test Libdoc File library with 1 keywords loaded.
                                test_resource library with 2 keywords loaded.
                                Test Libdoc File Copy library with 1 keywords loaded.

                                Suc...
                            </msg>
                            <status status="PASS" starttime="20210830 17:37:39.702" endtime="20210830 17:37:39.702"/>
                        </kw>
                        <status status="PASS" starttime="20210830 17:37:37.410" endtime="20210830 17:37:39.702"/>
                    </kw>
                    <kw name="Navigate To Main Page" library="e2e_keywords">
                        <kw name="Go To" library="SeleniumLibrary">
                            <arg>http://${HOST}:8000</arg>
                            <doc>Navigates the current browser window to the provided ``url``.</doc>
                            <msg timestamp="20210830 17:37:39.712" level="INFO">Opening url 'http://127.0.0.1:8000'
                            </msg>
                            <status status="PASS" starttime="20210830 17:37:39.712" endtime="20210830 17:37:39.825"/>
                        </kw>
                        <status status="PASS" starttime="20210830 17:37:39.702" endtime="20210830 17:37:39.825"/>
                    </kw>
                    <kw name="Collections Count On Main Page Should Be 7" library="e2e_keywords"
                        sourcename="Collections Count On Main Page Should Be ${n}">
                        <kw name="Reload Page" library="SeleniumLibrary">
                            <doc>Simulates user reloading page.</doc>
                            <status status="PASS" starttime="20210830 17:37:39.827" endtime="20210830 17:37:39.953"/>
                        </kw>
                        <kw name="Run Keyword If" library="BuiltIn">
                            <arg>'${n}'!='0'</arg>
                            <arg>Wait Until Element Is Visible</arg>
                            <arg>${main_page_table}</arg>
                            <doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
                            <kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
                                <arg>${main_page_table}</arg>
                                <doc>Waits until the element ``locator`` is visible.</doc>
                                <status status="PASS" starttime="20210830 17:37:39.954"
                                        endtime="20210830 17:37:40.217"/>
                            </kw>
                            <status status="PASS" starttime="20210830 17:37:39.953" endtime="20210830 17:37:40.217"/>
                        </kw>
                        <kw name="Element Text Should Be" library="SeleniumLibrary">
                            <arg>${main_page_collection_number}</arg>
                            <arg>Collections (${n})</arg>
                            <doc>Verifies that element ``locator`` contains exact the text ``expected``.</doc>
                            <msg timestamp="20210830 17:37:40.218" level="INFO">Verifying element
                                '//*[@id="root"]/div/main/div[2]/div/div/div/h2' contains exact text 'Collections (7)'.
                            </msg>
                            <status status="PASS" starttime="20210830 17:37:40.217" endtime="20210830 17:37:40.245"/>
                        </kw>
                        <status status="PASS" starttime="20210830 17:37:39.826" endtime="20210830 17:37:40.246"/>
                    </kw>
                    <status status="PASS" starttime="20210830 17:37:34.821" endtime="20210830 17:37:40.246"/>
                </kw>
                <kw name="Table Should Contain Library Data" library="e2e_keywords">
                    <arg>LibWithEmptyInit1</arg>
                    <arg>LIBRARY</arg>
                    <arg>2.1.0</arg>
                    <arg>2</arg>
                    <kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
                        <arg>${main_page_table}</arg>
                        <doc>Waits until the element ``locator`` is visible.</doc>
                        <status status="PASS" starttime="20210830 17:37:40.247" endtime="20210830 17:37:40.266"/>
                    </kw>
                    <kw name="Get Length" library="BuiltIn">
                        <var>${list_len}</var>
                        <arg>${Library_data}</arg>
                        <doc>Returns and logs the length of the given item as an integer.</doc>
                        <msg timestamp="20210830 17:37:40.267" level="INFO">Length is 4</msg>
                        <msg timestamp="20210830 17:37:40.267" level="INFO">${list_len} = 4</msg>
                        <status status="PASS" starttime="20210830 17:37:40.267" endtime="20210830 17:37:40.267"/>
                    </kw>
                    <for flavor="IN RANGE">
                        <var>${i}</var>
                        <value>1</value>
                        <value>${list_len}</value>
                        <iter>
                            <var name="${i}">1</var>
                            <kw name="Table Column Should Contain" library="SeleniumLibrary">
                                <arg>${main_page_table}</arg>
                                <arg>${i}</arg>
                                <arg>${Library_data}[${i-1}]</arg>
                                <doc>Verifies table column contains text ``expected``.</doc>
                                <status status="PASS" starttime="20210830 17:37:40.268"
                                        endtime="20210830 17:37:40.330"/>
                            </kw>
                            <status status="PASS" starttime="20210830 17:37:40.268" endtime="20210830 17:37:40.330"/>
                        </iter>
                        <iter>
                            <var name="${i}">2</var>
                            <kw name="Table Column Should Contain" library="SeleniumLibrary">
                                <arg>${main_page_table}</arg>
                                <arg>${i}</arg>
                                <arg>${Library_data}[${i-1}]</arg>
                                <doc>Verifies table column contains text ``expected``.</doc>
                                <status status="PASS" starttime="20210830 17:37:40.330"
                                        endtime="20210830 17:37:40.390"/>
                            </kw>
                            <status status="PASS" starttime="20210830 17:37:40.330" endtime="20210830 17:37:40.390"/>
                        </iter>
                        <iter>
                            <var name="${i}">3</var>
                            <kw name="Table Column Should Contain" library="SeleniumLibrary">
                                <arg>${main_page_table}</arg>
                                <arg>${i}</arg>
                                <arg>${Library_data}[${i-1}]</arg>
                                <doc>Verifies table column contains text ``expected``.</doc>
                                <status status="PASS" starttime="20210830 17:37:40.390"
                                        endtime="20210830 17:37:40.460"/>
                            </kw>
                            <status status="PASS" starttime="20210830 17:37:40.390" endtime="20210830 17:37:40.460"/>
                        </iter>
                        <status status="PASS" starttime="20210830 17:37:40.267" endtime="20210830 17:37:40.460"/>
                    </for>
                    <status status="PASS" starttime="20210830 17:37:40.246" endtime="20210830 17:37:40.460"/>
                </kw>
                <kw name="Table Should Contain Library Data" library="e2e_keywords">
                    <arg>LibWithEmptyInit2</arg>
                    <arg>LIBRARY</arg>
                    <arg>1.0.0</arg>
                    <arg>2</arg>
                    <kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
                        <arg>${main_page_table}</arg>
                        <doc>Waits until the element ``locator`` is visible.</doc>
                        <status status="PASS" starttime="20210830 17:37:40.460" endtime="20210830 17:37:40.480"/>
                    </kw>
                    <kw name="Get Length" library="BuiltIn">
                        <var>${list_len}</var>
                        <arg>${Library_data}</arg>
                        <doc>Returns and logs the length of the given item as an integer.</doc>
                        <msg timestamp="20210830 17:37:40.480" level="INFO">Length is 4</msg>
                        <msg timestamp="20210830 17:37:40.480" level="INFO">${list_len} = 4</msg>
                        <status status="PASS" starttime="20210830 17:37:40.480" endtime="20210830 17:37:40.480"/>
                    </kw>
                    <for flavor="IN RANGE">
                        <var>${i}</var>
                        <value>1</value>
                        <value>${list_len}</value>
                        <iter>
                            <var name="${i}">1</var>
                            <kw name="Table Column Should Contain" library="SeleniumLibrary">
                                <arg>${main_page_table}</arg>
                                <arg>${i}</arg>
                                <arg>${Library_data}[${i-1}]</arg>
                                <doc>Verifies table column contains text ``expected``.</doc>
                                <status status="PASS" starttime="20210830 17:37:40.480"
                                        endtime="20210830 17:37:40.550"/>
                            </kw>
                            <status status="PASS" starttime="20210830 17:37:40.480" endtime="20210830 17:37:40.550"/>
                        </iter>
                        <iter>
                            <var name="${i}">2</var>
                            <kw name="Table Column Should Contain" library="SeleniumLibrary">
                                <arg>${main_page_table}</arg>
                                <arg>${i}</arg>
                                <arg>${Library_data}[${i-1}]</arg>
                                <doc>Verifies table column contains text ``expected``.</doc>
                                <status status="PASS" starttime="20210830 17:37:40.550"
                                        endtime="20210830 17:37:40.600"/>
                            </kw>
                            <status status="PASS" starttime="20210830 17:37:40.550" endtime="20210830 17:37:40.600"/>
                        </iter>
                        <iter>
                            <var name="${i}">3</var>
                            <kw name="Table Column Should Contain" library="SeleniumLibrary">
                                <arg>${main_page_table}</arg>
                                <arg>${i}</arg>
                                <arg>${Library_data}[${i-1}]</arg>
                                <doc>Verifies table column contains text ``expected``.</doc>
                                <status status="PASS" starttime="20210830 17:37:40.600"
                                        endtime="20210830 17:37:40.670"/>
                            </kw>
                            <status status="PASS" starttime="20210830 17:37:40.600" endtime="20210830 17:37:40.670"/>
                        </iter>
                        <status status="PASS" starttime="20210830 17:37:40.480" endtime="20210830 17:37:40.670"/>
                    </for>
                    <status status="PASS" starttime="20210830 17:37:40.460" endtime="20210830 17:37:40.670"/>
                </kw>
                <kw name="Table Should Contain Library Data" library="e2e_keywords">
                    <arg>LibWithInit</arg>
                    <arg>LIBRARY</arg>
                    <arg>6.6.6</arg>
                    <arg>4</arg>
                    <kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
                        <arg>${main_page_table}</arg>
                        <doc>Waits until the element ``locator`` is visible.</doc>
                        <status status="PASS" starttime="20210830 17:37:40.670" endtime="20210830 17:37:40.690"/>
                    </kw>
                    <kw name="Get Length" library="BuiltIn">
                        <var>${list_len}</var>
                        <arg>${Library_data}</arg>
                        <doc>Returns and logs the length of the given item as an integer.</doc>
                        <msg timestamp="20210830 17:37:40.690" level="INFO">Length is 4</msg>
                        <msg timestamp="20210830 17:37:40.690" level="INFO">${list_len} = 4</msg>
                        <status status="PASS" starttime="20210830 17:37:40.690" endtime="20210830 17:37:40.690"/>
                    </kw>
                    <for flavor="IN RANGE">
                        <var>${i}</var>
                        <value>1</value>
                        <value>${list_len}</value>
                        <iter>
                            <var name="${i}">1</var>
                            <kw name="Table Column Should Contain" library="SeleniumLibrary">
                                <arg>${main_page_table}</arg>
                                <arg>${i}</arg>
                                <arg>${Library_data}[${i-1}]</arg>
                                <doc>Verifies table column contains text ``expected``.</doc>
                                <status status="PASS" starttime="20210830 17:37:40.690"
                                        endtime="20210830 17:37:40.780"/>
                            </kw>
                            <status status="PASS" starttime="20210830 17:37:40.690" endtime="20210830 17:37:40.780"/>
                        </iter>
                        <iter>
                            <var name="${i}">2</var>
                            <kw name="Table Column Should Contain" library="SeleniumLibrary">
                                <arg>${main_page_table}</arg>
                                <arg>${i}</arg>
                                <arg>${Library_data}[${i-1}]</arg>
                                <doc>Verifies table column contains text ``expected``.</doc>
                                <status status="PASS" starttime="20210830 17:37:40.790"
                                        endtime="20210830 17:37:40.830"/>
                            </kw>
                            <status status="PASS" starttime="20210830 17:37:40.790" endtime="20210830 17:37:40.830"/>
                        </iter>
                        <iter>
                            <var name="${i}">3</var>
                            <kw name="Table Column Should Contain" library="SeleniumLibrary">
                                <arg>${main_page_table}</arg>
                                <arg>${i}</arg>
                                <arg>${Library_data}[${i-1}]</arg>
                                <doc>Verifies table column contains text ``expected``.</doc>
                                <status status="PASS" starttime="20210830 17:37:40.830"
                                        endtime="20210830 17:37:40.920"/>
                            </kw>
                            <status status="PASS" starttime="20210830 17:37:40.830" endtime="20210830 17:37:40.920"/>
                        </iter>
                        <status status="PASS" starttime="20210830 17:37:40.690" endtime="20210830 17:37:40.920"/>
                    </for>
                    <status status="PASS" starttime="20210830 17:37:40.670" endtime="20210830 17:37:40.920"/>
                </kw>
                <kw name="Table Should Contain Library Data" library="e2e_keywords">
                    <arg>SingleClassLib</arg>
                    <arg>LIBRARY</arg>
                    <arg>1.2.8</arg>
                    <arg>4</arg>
                    <kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
                        <arg>${main_page_table}</arg>
                        <doc>Waits until the element ``locator`` is visible.</doc>
                        <status status="PASS" starttime="20210830 17:37:40.920" endtime="20210830 17:37:40.940"/>
                    </kw>
                    <kw name="Get Length" library="BuiltIn">
                        <var>${list_len}</var>
                        <arg>${Library_data}</arg>
                        <doc>Returns and logs the length of the given item as an integer.</doc>
                        <msg timestamp="20210830 17:37:40.940" level="INFO">Length is 4</msg>
                        <msg timestamp="20210830 17:37:40.940" level="INFO">${list_len} = 4</msg>
                        <status status="PASS" starttime="20210830 17:37:40.940" endtime="20210830 17:37:40.940"/>
                    </kw>
                    <for flavor="IN RANGE">
                        <var>${i}</var>
                        <value>1</value>
                        <value>${list_len}</value>
                        <iter>
                            <var name="${i}">1</var>
                            <kw name="Table Column Should Contain" library="SeleniumLibrary">
                                <arg>${main_page_table}</arg>
                                <arg>${i}</arg>
                                <arg>${Library_data}[${i-1}]</arg>
                                <doc>Verifies table column contains text ``expected``.</doc>
                                <status status="PASS" starttime="20210830 17:37:40.940"
                                        endtime="20210830 17:37:41.050"/>
                            </kw>
                            <status status="PASS" starttime="20210830 17:37:40.940" endtime="20210830 17:37:41.050"/>
                        </iter>
                        <iter>
                            <var name="${i}">2</var>
                            <kw name="Table Column Should Contain" library="SeleniumLibrary">
                                <arg>${main_page_table}</arg>
                                <arg>${i}</arg>
                                <arg>${Library_data}[${i-1}]</arg>
                                <doc>Verifies table column contains text ``expected``.</doc>
                                <status status="PASS" starttime="20210830 17:37:41.050"
                                        endtime="20210830 17:37:41.100"/>
                            </kw>
                            <status status="PASS" starttime="20210830 17:37:41.050" endtime="20210830 17:37:41.100"/>
                        </iter>
                        <iter>
                            <var name="${i}">3</var>
                            <kw name="Table Column Should Contain" library="SeleniumLibrary">
                                <arg>${main_page_table}</arg>
                                <arg>${i}</arg>
                                <arg>${Library_data}[${i-1}]</arg>
                                <doc>Verifies table column contains text ``expected``.</doc>
                                <status status="PASS" starttime="20210830 17:37:41.100"
                                        endtime="20210830 17:37:41.198"/>
                            </kw>
                            <status status="PASS" starttime="20210830 17:37:41.100" endtime="20210830 17:37:41.198"/>
                        </iter>
                        <status status="PASS" starttime="20210830 17:37:40.940" endtime="20210830 17:37:41.198"/>
                    </for>
                    <status status="PASS" starttime="20210830 17:37:40.920" endtime="20210830 17:37:41.198"/>
                </kw>
                <kw name="Table Should Contain Library Data" library="e2e_keywords">
                    <arg>Test Libdoc File</arg>
                    <arg>LIBRARY</arg>
                    <arg>3.2.1</arg>
                    <arg>1</arg>
                    <kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
                        <arg>${main_page_table}</arg>
                        <doc>Waits until the element ``locator`` is visible.</doc>
                        <status status="PASS" starttime="20210830 17:37:41.198" endtime="20210830 17:37:41.218"/>
                    </kw>
                    <kw name="Get Length" library="BuiltIn">
                        <var>${list_len}</var>
                        <arg>${Library_data}</arg>
                        <doc>Returns and logs the length of the given item as an integer.</doc>
                        <msg timestamp="20210830 17:37:41.218" level="INFO">Length is 4</msg>
                        <msg timestamp="20210830 17:37:41.218" level="INFO">${list_len} = 4</msg>
                        <status status="PASS" starttime="20210830 17:37:41.218" endtime="20210830 17:37:41.218"/>
                    </kw>
                    <for flavor="IN RANGE">
                        <var>${i}</var>
                        <value>1</value>
                        <value>${list_len}</value>
                        <iter>
                            <var name="${i}">1</var>
                            <kw name="Table Column Should Contain" library="SeleniumLibrary">
                                <arg>${main_page_table}</arg>
                                <arg>${i}</arg>
                                <arg>${Library_data}[${i-1}]</arg>
                                <doc>Verifies table column contains text ``expected``.</doc>
                                <status status="PASS" starttime="20210830 17:37:41.218"
                                        endtime="20210830 17:37:41.348"/>
                            </kw>
                            <status status="PASS" starttime="20210830 17:37:41.218" endtime="20210830 17:37:41.348"/>
                        </iter>
                        <iter>
                            <var name="${i}">2</var>
                            <kw name="Table Column Should Contain" library="SeleniumLibrary">
                                <arg>${main_page_table}</arg>
                                <arg>${i}</arg>
                                <arg>${Library_data}[${i-1}]</arg>
                                <doc>Verifies table column contains text ``expected``.</doc>
                                <status status="PASS" starttime="20210830 17:37:41.348"
                                        endtime="20210830 17:37:41.398"/>
                            </kw>
                            <status status="PASS" starttime="20210830 17:37:41.348" endtime="20210830 17:37:41.398"/>
                        </iter>
                        <iter>
                            <var name="${i}">3</var>
                            <kw name="Table Column Should Contain" library="SeleniumLibrary">
                                <arg>${main_page_table}</arg>
                                <arg>${i}</arg>
                                <arg>${Library_data}[${i-1}]</arg>
                                <doc>Verifies table column contains text ``expected``.</doc>
                                <status status="PASS" starttime="20210830 17:37:41.398"
                                        endtime="20210830 17:37:41.528"/>
                            </kw>
                            <status status="PASS" starttime="20210830 17:37:41.398" endtime="20210830 17:37:41.528"/>
                        </iter>
                        <status status="PASS" starttime="20210830 17:37:41.218" endtime="20210830 17:37:41.528"/>
                    </for>
                    <status status="PASS" starttime="20210830 17:37:41.198" endtime="20210830 17:37:41.528"/>
                </kw>
                <kw name="Table Should Contain Library Data" library="e2e_keywords">
                    <arg>Test Libdoc File Copy</arg>
                    <arg>LIBRARY</arg>
                    <arg>3.2.1</arg>
                    <arg>1</arg>
                    <kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
                        <arg>${main_page_table}</arg>
                        <doc>Waits until the element ``locator`` is visible.</doc>
                        <status status="PASS" starttime="20210830 17:37:41.528" endtime="20210830 17:37:41.548"/>
                    </kw>
                    <kw name="Get Length" library="BuiltIn">
                        <var>${list_len}</var>
                        <arg>${Library_data}</arg>
                        <doc>Returns and logs the length of the given item as an integer.</doc>
                        <msg timestamp="20210830 17:37:41.548" level="INFO">Length is 4</msg>
                        <msg timestamp="20210830 17:37:41.548" level="INFO">${list_len} = 4</msg>
                        <status status="PASS" starttime="20210830 17:37:41.548" endtime="20210830 17:37:41.548"/>
                    </kw>
                    <for flavor="IN RANGE">
                        <var>${i}</var>
                        <value>1</value>
                        <value>${list_len}</value>
                        <iter>
                            <var name="${i}">1</var>
                            <kw name="Table Column Should Contain" library="SeleniumLibrary">
                                <arg>${main_page_table}</arg>
                                <arg>${i}</arg>
                                <arg>${Library_data}[${i-1}]</arg>
                                <doc>Verifies table column contains text ``expected``.</doc>
                                <status status="PASS" starttime="20210830 17:37:41.548"
                                        endtime="20210830 17:37:41.688"/>
                            </kw>
                            <status status="PASS" starttime="20210830 17:37:41.548" endtime="20210830 17:37:41.688"/>
                        </iter>
                        <iter>
                            <var name="${i}">2</var>
                            <kw name="Table Column Should Contain" library="SeleniumLibrary">
                                <arg>${main_page_table}</arg>
                                <arg>${i}</arg>
                                <arg>${Library_data}[${i-1}]</arg>
                                <doc>Verifies table column contains text ``expected``.</doc>
                                <status status="PASS" starttime="20210830 17:37:41.688"
                                        endtime="20210830 17:37:41.738"/>
                            </kw>
                            <status status="PASS" starttime="20210830 17:37:41.688" endtime="20210830 17:37:41.738"/>
                        </iter>
                        <iter>
                            <var name="${i}">3</var>
                            <kw name="Table Column Should Contain" library="SeleniumLibrary">
                                <arg>${main_page_table}</arg>
                                <arg>${i}</arg>
                                <arg>${Library_data}[${i-1}]</arg>
                                <doc>Verifies table column contains text ``expected``.</doc>
                                <status status="PASS" starttime="20210830 17:37:41.738"
                                        endtime="20210830 17:37:41.848"/>
                            </kw>
                            <status status="PASS" starttime="20210830 17:37:41.738" endtime="20210830 17:37:41.848"/>
                        </iter>
                        <status status="PASS" starttime="20210830 17:37:41.548" endtime="20210830 17:37:41.848"/>
                    </for>
                    <status status="PASS" starttime="20210830 17:37:41.528" endtime="20210830 17:37:41.848"/>
                </kw>
                <kw name="Table Should Contain Library Data" library="e2e_keywords">
                    <arg>test_resource</arg>
                    <arg>RESOURCE</arg>
                    <arg>${EMPTY}</arg>
                    <arg>2</arg>
                    <kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
                        <arg>${main_page_table}</arg>
                        <doc>Waits until the element ``locator`` is visible.</doc>
                        <status status="PASS" starttime="20210830 17:37:41.848" endtime="20210830 17:37:41.868"/>
                    </kw>
                    <kw name="Get Length" library="BuiltIn">
                        <var>${list_len}</var>
                        <arg>${Library_data}</arg>
                        <doc>Returns and logs the length of the given item as an integer.</doc>
                        <msg timestamp="20210830 17:37:41.868" level="INFO">Length is 4</msg>
                        <msg timestamp="20210830 17:37:41.868" level="INFO">${list_len} = 4</msg>
                        <status status="PASS" starttime="20210830 17:37:41.868" endtime="20210830 17:37:41.868"/>
                    </kw>
                    <for flavor="IN RANGE">
                        <var>${i}</var>
                        <value>1</value>
                        <value>${list_len}</value>
                        <iter>
                            <var name="${i}">1</var>
                            <kw name="Table Column Should Contain" library="SeleniumLibrary">
                                <arg>${main_page_table}</arg>
                                <arg>${i}</arg>
                                <arg>${Library_data}[${i-1}]</arg>
                                <doc>Verifies table column contains text ``expected``.</doc>
                                <status status="PASS" starttime="20210830 17:37:41.868"
                                        endtime="20210830 17:37:42.028"/>
                            </kw>
                            <status status="PASS" starttime="20210830 17:37:41.868" endtime="20210830 17:37:42.028"/>
                        </iter>
                        <iter>
                            <var name="${i}">2</var>
                            <kw name="Table Column Should Contain" library="SeleniumLibrary">
                                <arg>${main_page_table}</arg>
                                <arg>${i}</arg>
                                <arg>${Library_data}[${i-1}]</arg>
                                <doc>Verifies table column contains text ``expected``.</doc>
                                <status status="PASS" starttime="20210830 17:37:42.028"
                                        endtime="20210830 17:37:42.198"/>
                            </kw>
                            <status status="PASS" starttime="20210830 17:37:42.028" endtime="20210830 17:37:42.198"/>
                        </iter>
                        <iter>
                            <var name="${i}">3</var>
                            <kw name="Table Column Should Contain" library="SeleniumLibrary">
                                <arg>${main_page_table}</arg>
                                <arg>${i}</arg>
                                <arg>${Library_data}[${i-1}]</arg>
                                <doc>Verifies table column contains text ``expected``.</doc>
                                <status status="PASS" starttime="20210830 17:37:42.198"
                                        endtime="20210830 17:37:42.238"/>
                            </kw>
                            <status status="PASS" starttime="20210830 17:37:42.198" endtime="20210830 17:37:42.238"/>
                        </iter>
                        <status status="PASS" starttime="20210830 17:37:41.868" endtime="20210830 17:37:42.238"/>
                    </for>
                    <status status="PASS" starttime="20210830 17:37:41.848" endtime="20210830 17:37:42.238"/>
                </kw>
                <kw name="Restore Initial Fixtures" library="keywords" type="TEARDOWN">
                    <kw name="Remove Directory" library="OperatingSystem">
                        <arg>${INITIAL_FIXTURES}</arg>
                        <arg>recursive=True</arg>
                        <doc>Removes the directory pointed to by the given ``path``.</doc>
                        <msg timestamp="20210830 17:37:42.258" level="INFO" html="true">Removed directory '&lt;a
                            href="file://C:\repo\rfhub2\tests\fixtures\initial"&gt;C:\repo\rfhub2\tests\fixtures\initial&lt;/a&gt;'.
                        </msg>
                        <status status="PASS" starttime="20210830 17:37:42.238" endtime="20210830 17:37:42.258"/>
                    </kw>
                    <kw name="Copy Directory" library="OperatingSystem">
                        <arg>${BACKUP_FIXTURES}</arg>
                        <arg>${INITIAL_FIXTURES}</arg>
                        <doc>Copies the source directory into the destination.</doc>
                        <msg timestamp="20210830 17:37:42.328" level="INFO" html="true">Copied directory from '&lt;a
                            href="file://C:\repo\rfhub2\tests\fixtures\initial_bkp"&gt;C:\repo\rfhub2\tests\fixtures\initial_bkp&lt;/a&gt;'
                            to '&lt;a href="file://C:\repo\rfhub2\tests\fixtures\initial"&gt;C:\repo\rfhub2\tests\fixtures\initial&lt;/a&gt;'.
                        </msg>
                        <status status="PASS" starttime="20210830 17:37:42.258" endtime="20210830 17:37:42.328"/>
                    </kw>
                    <kw name="Remove Directory" library="OperatingSystem">
                        <arg>${BACKUP_FIXTURES}</arg>
                        <arg>recursive=True</arg>
                        <doc>Removes the directory pointed to by the given ``path``.</doc>
                        <msg timestamp="20210830 17:37:42.368" level="INFO" html="true">Removed directory '&lt;a
                            href="file://C:\repo\rfhub2\tests\fixtures\initial_bkp"&gt;C:\repo\rfhub2\tests\fixtures\initial_bkp&lt;/a&gt;'.
                        </msg>
                        <status status="PASS" starttime="20210830 17:37:42.328" endtime="20210830 17:37:42.368"/>
                    </kw>
                    <status status="PASS" starttime="20210830 17:37:42.238" endtime="20210830 17:37:42.368"/>
                </kw>
                <doc>This test bases on
                    'Populated App Should Show Number Of Collections'
                    to shorten execution time.
                </doc>
                <tag>e2e</tag>
                <tag>rfhub2-64</tag>
                <tag>update</tag>
                <status status="PASS" starttime="20210830 17:37:34.821" endtime="20210830 17:37:42.368"/>
            </test>
            <test id="s1-s3-t11" name="Single Class Library Details Should Be Updated On Frontend">
                <kw name="Navigate To Main Page" library="e2e_keywords" type="SETUP">
                    <kw name="Go To" library="SeleniumLibrary">
                        <arg>http://${HOST}:8000</arg>
                        <doc>Navigates the current browser window to the provided ``url``.</doc>
                        <msg timestamp="20210830 17:37:42.378" level="INFO">Opening url 'http://127.0.0.1:8000'</msg>
                        <status status="PASS" starttime="20210830 17:37:42.378" endtime="20210830 17:37:42.476"/>
                    </kw>
                    <status status="PASS" starttime="20210830 17:37:42.368" endtime="20210830 17:37:42.476"/>
                </kw>
                <kw name="Open ${single_class_lib} In Left Panel" library="e2e_keywords"
                    sourcename="Open ${library} In Left Panel">
                    <kw name="Run Keyword And Return Status" library="BuiltIn">
                        <var>${is_visible}</var>
                        <arg>Element Should Not Be Visible</arg>
                        <arg>${hamburger}</arg>
                        <doc>Runs the given keyword with given arguments and returns the status as a Boolean value.
                        </doc>
                        <kw name="Element Should Not Be Visible" library="SeleniumLibrary">
                            <arg>${hamburger}</arg>
                            <doc>Verifies that the element identified by ``locator`` is NOT visible.</doc>
                            <msg timestamp="20210830 17:37:42.504" level="INFO">Element
                                '//*[@id="root"]/div/header/div/button/span[1]/svg/path' did not exist.
                            </msg>
                            <status status="PASS" starttime="20210830 17:37:42.478" endtime="20210830 17:37:42.504"/>
                        </kw>
                        <msg timestamp="20210830 17:37:42.504" level="INFO">${is_visible} = True</msg>
                        <status status="PASS" starttime="20210830 17:37:42.477" endtime="20210830 17:37:42.504"/>
                    </kw>
                    <kw name="Run Keyword Unless" library="BuiltIn">
                        <arg>${is_visible}</arg>
                        <arg>Click Element</arg>
                        <arg>${hamburger}</arg>
                        <doc>Runs the given keyword with the given arguments if ``condition`` is false.</doc>
                        <status status="PASS" starttime="20210830 17:37:42.504" endtime="20210830 17:37:42.505"/>
                    </kw>
                    <kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
                        <arg>${library}</arg>
                        <doc>Waits until the element ``locator`` is visible.</doc>
                        <status status="PASS" starttime="20210830 17:37:42.505" endtime="20210830 17:37:42.554"/>
                    </kw>
                    <kw name="Click Element" library="SeleniumLibrary">
                        <arg>${library}</arg>
                        <doc>Click the element identified by ``locator``.</doc>
                        <msg timestamp="20210830 17:37:42.554" level="INFO">Clicking element
                            '//*[contains(text(),"SingleClassLib")]'.
                        </msg>
                        <status status="PASS" starttime="20210830 17:37:42.554" endtime="20210830 17:37:42.610"/>
                    </kw>
                    <kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
                        <arg>//*[contains(text(),'Overview')]</arg>
                        <doc>Waits until the element ``locator`` is visible.</doc>
                        <status status="PASS" starttime="20210830 17:37:42.611" endtime="20210830 17:37:42.880"/>
                    </kw>
                    <status status="PASS" starttime="20210830 17:37:42.476" endtime="20210830 17:37:42.881"/>
                </kw>
                <kw name="Click ${overview} In Left Panel" library="e2e_keywords"
                    sourcename="Click ${keyword} In Left Panel">
                    <kw name="Click Element When Visible" library="e2e_keywords">
                        <arg>${keyword}</arg>
                        <kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
                            <arg>${element}</arg>
                            <doc>Waits until the element ``locator`` is visible.</doc>
                            <status status="PASS" starttime="20210830 17:37:42.884" endtime="20210830 17:37:42.918"/>
                        </kw>
                        <kw name="Click Element" library="SeleniumLibrary">
                            <arg>${element}</arg>
                            <doc>Click the element identified by ``locator``.</doc>
                            <msg timestamp="20210830 17:37:42.919" level="INFO">Clicking element
                                '//*[contains(text(),"Overview")]'.
                            </msg>
                            <status status="PASS" starttime="20210830 17:37:42.918" endtime="20210830 17:37:42.986"/>
                        </kw>
                        <status status="PASS" starttime="20210830 17:37:42.883" endtime="20210830 17:37:42.987"/>
                    </kw>
                    <kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
                        <arg>${detail_view_library_version}</arg>
                        <doc>Waits until the element ``locator`` is visible.</doc>
                        <msg timestamp="20210830 17:37:43.024" level="INFO">Suppressing StaleElementReferenceException
                            from Selenium.
                        </msg>
                        <status status="PASS" starttime="20210830 17:37:42.987" endtime="20210830 17:37:43.279"/>
                    </kw>
                    <status status="PASS" starttime="20210830 17:37:42.882" endtime="20210830 17:37:43.279"/>
                </kw>
                <kw name="Click Element" library="SeleniumLibrary">
                    <arg>${single_class_lib}</arg>
                    <doc>Click the element identified by ``locator``.</doc>
                    <msg timestamp="20210830 17:37:43.280" level="INFO">Clicking element
                        '//*[contains(text(),"SingleClassLib")]'.
                    </msg>
                    <status status="PASS" starttime="20210830 17:37:43.279" endtime="20210830 17:37:43.322"/>
                </kw>
                <kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
                    <arg>${detail_view_library_version}</arg>
                    <doc>Waits until the element ``locator`` is visible.</doc>
                    <status status="PASS" starttime="20210830 17:37:43.322" endtime="20210830 17:37:43.344"/>
                </kw>
                <kw name="Library title Should Be SingleClassLib" library="e2e_keywords"
                    sourcename="Library ${field} Should Be ${value}">
                    <kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
                        <arg>${detail_view_library_${field}}</arg>
                        <arg>0.5s</arg>
                        <doc>Waits until the element ``locator`` is visible.</doc>
                        <status status="PASS" starttime="20210830 17:37:43.345" endtime="20210830 17:37:43.372"/>
                    </kw>
                    <kw name="Element Text Should Be" library="SeleniumLibrary">
                        <arg>${detail_view_library_${field}}</arg>
                        <arg>${value}</arg>
                        <doc>Verifies that element ``locator`` contains exact the text ``expected``.</doc>
                        <msg timestamp="20210830 17:37:43.374" level="INFO">Verifying element
                            '//*[@id="root"]/div/main/div[2]/div/div/div/h2[1]' contains exact text 'SingleClassLib'.
                        </msg>
                        <status status="PASS" starttime="20210830 17:37:43.373" endtime="20210830 17:37:43.398"/>
                    </kw>
                    <status status="PASS" starttime="20210830 17:37:43.345" endtime="20210830 17:37:43.398"/>
                </kw>
                <kw name="Library version Should Be version: 1.2.8" library="e2e_keywords"
                    sourcename="Library ${field} Should Be ${value}">
                    <kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
                        <arg>${detail_view_library_${field}}</arg>
                        <arg>0.5s</arg>
                        <doc>Waits until the element ``locator`` is visible.</doc>
                        <status status="PASS" starttime="20210830 17:37:43.399" endtime="20210830 17:37:43.420"/>
                    </kw>
                    <kw name="Element Text Should Be" library="SeleniumLibrary">
                        <arg>${detail_view_library_${field}}</arg>
                        <arg>${value}</arg>
                        <doc>Verifies that element ``locator`` contains exact the text ``expected``.</doc>
                        <msg timestamp="20210830 17:37:43.422" level="INFO">Verifying element
                            '//*[@id="root"]/div/main/div[2]/div/div/div/div[1]' contains exact text 'version: 1.2.8'.
                        </msg>
                        <status status="PASS" starttime="20210830 17:37:43.421" endtime="20210830 17:37:43.446"/>
                    </kw>
                    <status status="PASS" starttime="20210830 17:37:43.399" endtime="20210830 17:37:43.446"/>
                </kw>
                <kw name="Library scope Should Be scope: TEST" library="e2e_keywords"
                    sourcename="Library ${field} Should Be ${value}">
                    <kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
                        <arg>${detail_view_library_${field}}</arg>
                        <arg>0.5s</arg>
                        <doc>Waits until the element ``locator`` is visible.</doc>
                        <status status="PASS" starttime="20210830 17:37:43.447" endtime="20210830 17:37:43.473"/>
                    </kw>
                    <kw name="Element Text Should Be" library="SeleniumLibrary">
                        <arg>${detail_view_library_${field}}</arg>
                        <arg>${value}</arg>
                        <doc>Verifies that element ``locator`` contains exact the text ``expected``.</doc>
                        <msg timestamp="20210830 17:37:43.474" level="INFO">Verifying element
                            '//*[@id="root"]/div/main/div[2]/div/div/div/div[2]' contains exact text 'scope: TEST'.
                        </msg>
                        <status status="PASS" starttime="20210830 17:37:43.473" endtime="20210830 17:37:43.499"/>
                    </kw>
                    <status status="PASS" starttime="20210830 17:37:43.447" endtime="20210830 17:37:43.499"/>
                </kw>
                <kw name="Library overview Should Be Overview that should be imported for SingleClassLib."
                    library="e2e_keywords" sourcename="Library ${field} Should Be ${value}">
                    <kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
                        <arg>${detail_view_library_${field}}</arg>
                        <arg>0.5s</arg>
                        <doc>Waits until the element ``locator`` is visible.</doc>
                        <status status="PASS" starttime="20210830 17:37:43.501" endtime="20210830 17:37:43.527"/>
                    </kw>
                    <kw name="Element Text Should Be" library="SeleniumLibrary">
                        <arg>${detail_view_library_${field}}</arg>
                        <arg>${value}</arg>
                        <doc>Verifies that element ``locator`` contains exact the text ``expected``.</doc>
                        <msg timestamp="20210830 17:37:43.529" level="INFO">Verifying element
                            '//*[@id="root"]/div/main/div[2]/div/div/div/div[4]/p' contains exact text 'Overview that
                            should be imported for SingleClassLib.'.
                        </msg>
                        <status status="PASS" starttime="20210830 17:37:43.528" endtime="20210830 17:37:43.552"/>
                    </kw>
                    <status status="PASS" starttime="20210830 17:37:43.500" endtime="20210830 17:37:43.552"/>
                </kw>
                <kw name="Library keywords Should Be Keywords (4)" library="e2e_keywords"
                    sourcename="Library ${field} Should Be ${value}">
                    <kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
                        <arg>${detail_view_library_${field}}</arg>
                        <arg>0.5s</arg>
                        <doc>Waits until the element ``locator`` is visible.</doc>
                        <status status="PASS" starttime="20210830 17:37:43.553" endtime="20210830 17:37:43.581"/>
                    </kw>
                    <kw name="Element Text Should Be" library="SeleniumLibrary">
                        <arg>${detail_view_library_${field}}</arg>
                        <arg>${value}</arg>
                        <doc>Verifies that element ``locator`` contains exact the text ``expected``.</doc>
                        <msg timestamp="20210830 17:37:43.582" level="INFO">Verifying element
                            '//*[@id="root"]/div/main/div[2]/div/div/div/h2[2]' contains exact text 'Keywords (4)'.
                        </msg>
                        <status status="PASS" starttime="20210830 17:37:43.581" endtime="20210830 17:37:43.606"/>
                    </kw>
                    <status status="PASS" starttime="20210830 17:37:43.553" endtime="20210830 17:37:43.606"/>
                </kw>
                <doc>This test bases on
                    'First Page Table After Update Should Contain Proper Libraries Data'
                    to shorten execution time.
                </doc>
                <tag>e2e</tag>
                <tag>rfhub2-64</tag>
                <tag>update</tag>
                <status status="PASS" starttime="20210830 17:37:42.368" endtime="20210830 17:37:43.606"/>
            </test>
            <test id="s1-s3-t12" name="App Should Display Libraries With Times Used Statistics">
                <kw name="Test Setup For Collections Statistics" type="SETUP">
                    <kw name="Run Cli Package With Options" library="keywords">
                        <arg>--load-mode=insert --no-installed-keywords ${STATISTICS_PATH}
                            C:\\repo\\rfhub2\\tests\\acceptance/resources
                        </arg>
                        <doc>Attempt to run the rfhub2-cli package with the given options
                            The stdout of the process will be in a test suite
                            variable named ${output}
                        </doc>
                        <kw name="Run" library="OperatingSystem">
                            <var>${output}</var>
                            <arg>${ACTIVATE_VENV} rfhub2-cli -a http://${HOST}:8000 ${options}</arg>
                            <doc>Runs the given command in the system and returns the output.</doc>
                            <msg timestamp="20210830 17:37:43.763" level="INFO">Running command ' rfhub2-cli -a
                                http://127.0.0.1:8000 --load-mode=insert --no-installed-keywords
                                C:\repo\rfhub2\tests\acceptance\resources\..\..\fixtures\statistics
                                C:\repo\rfhub2\tests\acceptance/resources 2&gt;&amp;1'.
                            </msg>
                            <msg timestamp="20210830 17:37:46.401" level="INFO">${output} = e2e_keywords library with 17
                                keywords loaded.
                                keywords library with 15 keywords loaded.

                                Successfully loaded 2 collections with 32 keywords.
                            </msg>
                            <status status="PASS" starttime="20210830 17:37:43.610" endtime="20210830 17:37:46.401"/>
                        </kw>
                        <kw name="Set Suite Variable" library="BuiltIn">
                            <arg>${output}</arg>
                            <doc>Makes a variable available everywhere within the scope of the current suite.</doc>
                            <msg timestamp="20210830 17:37:46.401" level="INFO">${output} = e2e_keywords library with 17
                                keywords loaded.
                                keywords library with 15 keywords loaded.

                                Successfully loaded 2 collections with 32 keywords.
                            </msg>
                            <status status="PASS" starttime="20210830 17:37:46.401" endtime="20210830 17:37:46.401"/>
                        </kw>
                        <status status="PASS" starttime="20210830 17:37:43.609" endtime="20210830 17:37:46.401"/>
                    </kw>
                    <kw name="Run Cli Package With Options" library="keywords">
                        <arg>--load-mode=insert -m statistics ${STATISTICS_PATH}</arg>
                        <doc>Attempt to run the rfhub2-cli package with the given options
                            The stdout of the process will be in a test suite
                            variable named ${output}
                        </doc>
                        <kw name="Run" library="OperatingSystem">
                            <var>${output}</var>
                            <arg>${ACTIVATE_VENV} rfhub2-cli -a http://${HOST}:8000 ${options}</arg>
                            <doc>Runs the given command in the system and returns the output.</doc>
                            <msg timestamp="20210830 17:37:46.541" level="INFO">Running command ' rfhub2-cli -a
                                http://127.0.0.1:8000 --load-mode=insert -m statistics
                                C:\repo\rfhub2\tests\acceptance\resources\..\..\fixtures\statistics 2&gt;&amp;1'.
                            </msg>
                            <msg timestamp="20210830 17:37:48.500" level="INFO">${output} =
                                Successfully loaded 2 files with 90 statistics.
                            </msg>
                            <status status="PASS" starttime="20210830 17:37:46.401" endtime="20210830 17:37:48.500"/>
                        </kw>
                        <kw name="Set Suite Variable" library="BuiltIn">
                            <arg>${output}</arg>
                            <doc>Makes a variable available everywhere within the scope of the current suite.</doc>
                            <msg timestamp="20210830 17:37:48.510" level="INFO">${output} =
                                Successfully loaded 2 files with 90 statistics.
                            </msg>
                            <status status="PASS" starttime="20210830 17:37:48.500" endtime="20210830 17:37:48.510"/>
                        </kw>
                        <status status="PASS" starttime="20210830 17:37:46.401" endtime="20210830 17:37:48.510"/>
                    </kw>
                    <kw name="Navigate To Main Page" library="e2e_keywords">
                        <kw name="Go To" library="SeleniumLibrary">
                            <arg>http://${HOST}:8000</arg>
                            <doc>Navigates the current browser window to the provided ``url``.</doc>
                            <msg timestamp="20210830 17:37:48.510" level="INFO">Opening url 'http://127.0.0.1:8000'
                            </msg>
                            <status status="PASS" starttime="20210830 17:37:48.510" endtime="20210830 17:37:48.609"/>
                        </kw>
                        <status status="PASS" starttime="20210830 17:37:48.510" endtime="20210830 17:37:48.609"/>
                    </kw>
                    <kw name="Sleep" library="BuiltIn">
                        <arg>1s</arg>
                        <doc>Pauses the test executed for the given time.</doc>
                        <msg timestamp="20210830 17:37:49.616" level="INFO">Slept 1 second</msg>
                        <status status="PASS" starttime="20210830 17:37:48.610" endtime="20210830 17:37:49.616"/>
                    </kw>
                    <kw name="Collections Count On Main Page Should Be 2" library="e2e_keywords"
                        sourcename="Collections Count On Main Page Should Be ${n}">
                        <kw name="Reload Page" library="SeleniumLibrary">
                            <doc>Simulates user reloading page.</doc>
                            <status status="PASS" starttime="20210830 17:37:49.616" endtime="20210830 17:37:49.746"/>
                        </kw>
                        <kw name="Run Keyword If" library="BuiltIn">
                            <arg>'${n}'!='0'</arg>
                            <arg>Wait Until Element Is Visible</arg>
                            <arg>${main_page_table}</arg>
                            <doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
                            <kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
                                <arg>${main_page_table}</arg>
                                <doc>Waits until the element ``locator`` is visible.</doc>
                                <status status="PASS" starttime="20210830 17:37:49.747"
                                        endtime="20210830 17:37:49.993"/>
                            </kw>
                            <status status="PASS" starttime="20210830 17:37:49.746" endtime="20210830 17:37:49.993"/>
                        </kw>
                        <kw name="Element Text Should Be" library="SeleniumLibrary">
                            <arg>${main_page_collection_number}</arg>
                            <arg>Collections (${n})</arg>
                            <doc>Verifies that element ``locator`` contains exact the text ``expected``.</doc>
                            <msg timestamp="20210830 17:37:49.995" level="INFO">Verifying element
                                '//*[@id="root"]/div/main/div[2]/div/div/div/h2' contains exact text 'Collections (2)'.
                            </msg>
                            <status status="PASS" starttime="20210830 17:37:49.994" endtime="20210830 17:37:50.019"/>
                        </kw>
                        <status status="PASS" starttime="20210830 17:37:49.616" endtime="20210830 17:37:50.019"/>
                    </kw>
                    <status status="PASS" starttime="20210830 17:37:43.608" endtime="20210830 17:37:50.019"/>
                </kw>
                <kw name="Table Should Contain Library Data" library="e2e_keywords">
                    <arg>e2e_keywords</arg>
                    <arg>RESOURCE</arg>
                    <arg>${EMPTY}</arg>
                    <arg>17</arg>
                    <arg>114</arg>
                    <kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
                        <arg>${main_page_table}</arg>
                        <doc>Waits until the element ``locator`` is visible.</doc>
                        <status status="PASS" starttime="20210830 17:37:50.022" endtime="20210830 17:37:50.041"/>
                    </kw>
                    <kw name="Get Length" library="BuiltIn">
                        <var>${list_len}</var>
                        <arg>${Library_data}</arg>
                        <doc>Returns and logs the length of the given item as an integer.</doc>
                        <msg timestamp="20210830 17:37:50.042" level="INFO">Length is 5</msg>
                        <msg timestamp="20210830 17:37:50.042" level="INFO">${list_len} = 5</msg>
                        <status status="PASS" starttime="20210830 17:37:50.041" endtime="20210830 17:37:50.042"/>
                    </kw>
                    <for flavor="IN RANGE">
                        <var>${i}</var>
                        <value>1</value>
                        <value>${list_len}</value>
                        <iter>
                            <var name="${i}">1</var>
                            <kw name="Table Column Should Contain" library="SeleniumLibrary">
                                <arg>${main_page_table}</arg>
                                <arg>${i}</arg>
                                <arg>${Library_data}[${i-1}]</arg>
                                <doc>Verifies table column contains text ``expected``.</doc>
                                <status status="PASS" starttime="20210830 17:37:50.042"
                                        endtime="20210830 17:37:50.107"/>
                            </kw>
                            <status status="PASS" starttime="20210830 17:37:50.042" endtime="20210830 17:37:50.107"/>
                        </iter>
                        <iter>
                            <var name="${i}">2</var>
                            <kw name="Table Column Should Contain" library="SeleniumLibrary">
                                <arg>${main_page_table}</arg>
                                <arg>${i}</arg>
                                <arg>${Library_data}[${i-1}]</arg>
                                <doc>Verifies table column contains text ``expected``.</doc>
                                <status status="PASS" starttime="20210830 17:37:50.107"
                                        endtime="20210830 17:37:50.167"/>
                            </kw>
                            <status status="PASS" starttime="20210830 17:37:50.107" endtime="20210830 17:37:50.167"/>
                        </iter>
                        <iter>
                            <var name="${i}">3</var>
                            <kw name="Table Column Should Contain" library="SeleniumLibrary">
                                <arg>${main_page_table}</arg>
                                <arg>${i}</arg>
                                <arg>${Library_data}[${i-1}]</arg>
                                <doc>Verifies table column contains text ``expected``.</doc>
                                <status status="PASS" starttime="20210830 17:37:50.167"
                                        endtime="20210830 17:37:50.217"/>
                            </kw>
                            <status status="PASS" starttime="20210830 17:37:50.167" endtime="20210830 17:37:50.217"/>
                        </iter>
                        <iter>
                            <var name="${i}">4</var>
                            <kw name="Table Column Should Contain" library="SeleniumLibrary">
                                <arg>${main_page_table}</arg>
                                <arg>${i}</arg>
                                <arg>${Library_data}[${i-1}]</arg>
                                <doc>Verifies table column contains text ``expected``.</doc>
                                <status status="PASS" starttime="20210830 17:37:50.217"
                                        endtime="20210830 17:37:50.287"/>
                            </kw>
                            <status status="PASS" starttime="20210830 17:37:50.217" endtime="20210830 17:37:50.287"/>
                        </iter>
                        <status status="PASS" starttime="20210830 17:37:50.042" endtime="20210830 17:37:50.287"/>
                    </for>
                    <status status="PASS" starttime="20210830 17:37:50.020" endtime="20210830 17:37:50.287"/>
                </kw>
                <kw name="Table Should Contain Library Data" library="e2e_keywords">
                    <arg>keywords</arg>
                    <arg>RESOURCE</arg>
                    <arg>${EMPTY}</arg>
                    <arg>15</arg>
                    <arg>67</arg>
                    <kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
                        <arg>${main_page_table}</arg>
                        <doc>Waits until the element ``locator`` is visible.</doc>
                        <status status="PASS" starttime="20210830 17:37:50.287" endtime="20210830 17:37:50.307"/>
                    </kw>
                    <kw name="Get Length" library="BuiltIn">
                        <var>${list_len}</var>
                        <arg>${Library_data}</arg>
                        <doc>Returns and logs the length of the given item as an integer.</doc>
                        <msg timestamp="20210830 17:37:50.307" level="INFO">Length is 5</msg>
                        <msg timestamp="20210830 17:37:50.307" level="INFO">${list_len} = 5</msg>
                        <status status="PASS" starttime="20210830 17:37:50.307" endtime="20210830 17:37:50.307"/>
                    </kw>
                    <for flavor="IN RANGE">
                        <var>${i}</var>
                        <value>1</value>
                        <value>${list_len}</value>
                        <iter>
                            <var name="${i}">1</var>
                            <kw name="Table Column Should Contain" library="SeleniumLibrary">
                                <arg>${main_page_table}</arg>
                                <arg>${i}</arg>
                                <arg>${Library_data}[${i-1}]</arg>
                                <doc>Verifies table column contains text ``expected``.</doc>
                                <status status="PASS" starttime="20210830 17:37:50.307"
                                        endtime="20210830 17:37:50.357"/>
                            </kw>
                            <status status="PASS" starttime="20210830 17:37:50.307" endtime="20210830 17:37:50.357"/>
                        </iter>
                        <iter>
                            <var name="${i}">2</var>
                            <kw name="Table Column Should Contain" library="SeleniumLibrary">
                                <arg>${main_page_table}</arg>
                                <arg>${i}</arg>
                                <arg>${Library_data}[${i-1}]</arg>
                                <doc>Verifies table column contains text ``expected``.</doc>
                                <status status="PASS" starttime="20210830 17:37:50.357"
                                        endtime="20210830 17:37:50.407"/>
                            </kw>
                            <status status="PASS" starttime="20210830 17:37:50.357" endtime="20210830 17:37:50.407"/>
                        </iter>
                        <iter>
                            <var name="${i}">3</var>
                            <kw name="Table Column Should Contain" library="SeleniumLibrary">
                                <arg>${main_page_table}</arg>
                                <arg>${i}</arg>
                                <arg>${Library_data}[${i-1}]</arg>
                                <doc>Verifies table column contains text ``expected``.</doc>
                                <status status="PASS" starttime="20210830 17:37:50.407"
                                        endtime="20210830 17:37:50.447"/>
                            </kw>
                            <status status="PASS" starttime="20210830 17:37:50.407" endtime="20210830 17:37:50.447"/>
                        </iter>
                        <iter>
                            <var name="${i}">4</var>
                            <kw name="Table Column Should Contain" library="SeleniumLibrary">
                                <arg>${main_page_table}</arg>
                                <arg>${i}</arg>
                                <arg>${Library_data}[${i-1}]</arg>
                                <doc>Verifies table column contains text ``expected``.</doc>
                                <status status="PASS" starttime="20210830 17:37:50.447"
                                        endtime="20210830 17:37:50.530"/>
                            </kw>
                            <status status="PASS" starttime="20210830 17:37:50.447" endtime="20210830 17:37:50.530"/>
                        </iter>
                        <status status="PASS" starttime="20210830 17:37:50.307" endtime="20210830 17:37:50.530"/>
                    </for>
                    <status status="PASS" starttime="20210830 17:37:50.287" endtime="20210830 17:37:50.530"/>
                </kw>
                <doc>App Should Display Libraries With Times Used Statistics</doc>
                <tag>e2e</tag>
                <tag>rfhub2-67</tag>
                <tag>statistics</tag>
                <status status="PASS" starttime="20210830 17:37:43.607" endtime="20210830 17:37:50.530"/>
            </test>
            <test id="s1-s3-t13" name="App Should Display Keywords Statistics For Single Libary">
                <kw name="Navigate To Main Page" library="e2e_keywords" type="SETUP">
                    <kw name="Go To" library="SeleniumLibrary">
                        <arg>http://${HOST}:8000</arg>
                        <doc>Navigates the current browser window to the provided ``url``.</doc>
                        <msg timestamp="20210830 17:37:50.530" level="INFO">Opening url 'http://127.0.0.1:8000'</msg>
                        <status status="PASS" starttime="20210830 17:37:50.530" endtime="20210830 17:37:50.629"/>
                    </kw>
                    <status status="PASS" starttime="20210830 17:37:50.530" endtime="20210830 17:37:50.629"/>
                </kw>
                <kw name="Click Element When Visible" library="e2e_keywords">
                    <arg>${e2e_keywords_file}</arg>
                    <kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
                        <arg>${element}</arg>
                        <doc>Waits until the element ``locator`` is visible.</doc>
                        <status status="PASS" starttime="20210830 17:37:50.630" endtime="20210830 17:37:50.891"/>
                    </kw>
                    <kw name="Click Element" library="SeleniumLibrary">
                        <arg>${element}</arg>
                        <doc>Click the element identified by ``locator``.</doc>
                        <msg timestamp="20210830 17:37:50.893" level="INFO">Clicking element '//a[contains(text(),
                            "e2e_keywords")]'.
                        </msg>
                        <status status="PASS" starttime="20210830 17:37:50.892" endtime="20210830 17:37:50.951"/>
                    </kw>
                    <status status="PASS" starttime="20210830 17:37:50.629" endtime="20210830 17:37:50.951"/>
                </kw>
                <kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
                    <arg>${detail_view_library_version}</arg>
                    <doc>Waits until the element ``locator`` is visible.</doc>
                    <status status="PASS" starttime="20210830 17:37:50.952" endtime="20210830 17:37:51.210"/>
                </kw>
                <kw name="Sleep" library="BuiltIn">
                    <arg>2s</arg>
                    <doc>Pauses the test executed for the given time.</doc>
                    <msg timestamp="20210830 17:37:53.210" level="INFO">Slept 2 seconds</msg>
                    <status status="PASS" starttime="20210830 17:37:51.210" endtime="20210830 17:37:53.210"/>
                </kw>
                <kw name="Row 2 In Column 1 Of Table ${detail_view_library_table} Should Contain Check If Tags Are Displayed Correctly"
                    sourcename="Row ${m} In Column ${n} Of Table ${table} Should Contain ${value}">
                    <kw name="Table Cell Should Contain" library="SeleniumLibrary">
                        <arg>${table}</arg>
                        <arg>${m}</arg>
                        <arg>${n}</arg>
                        <arg>${value}</arg>
                        <doc>Verifies table cell contains text ``expected``.</doc>
                        <msg timestamp="20210830 17:37:53.290" level="INFO">Table cell contains 'Check If Tags Are
                            Displayed Correctly'.
                        </msg>
                        <status status="PASS" starttime="20210830 17:37:53.210" endtime="20210830 17:37:53.290"/>
                    </kw>
                    <status status="PASS" starttime="20210830 17:37:53.210" endtime="20210830 17:37:53.290"/>
                </kw>
                <kw name="Row 2 In Column 5 Of Table ${detail_view_library_table} Should Contain 4"
                    sourcename="Row ${m} In Column ${n} Of Table ${table} Should Contain ${value}">
                    <kw name="Table Cell Should Contain" library="SeleniumLibrary">
                        <arg>${table}</arg>
                        <arg>${m}</arg>
                        <arg>${n}</arg>
                        <arg>${value}</arg>
                        <doc>Verifies table cell contains text ``expected``.</doc>
                        <msg timestamp="20210830 17:37:53.350" level="INFO">Table cell contains '4'.</msg>
                        <status status="PASS" starttime="20210830 17:37:53.290" endtime="20210830 17:37:53.350"/>
                    </kw>
                    <status status="PASS" starttime="20210830 17:37:53.290" endtime="20210830 17:37:53.350"/>
                </kw>
                <kw name="Row 2 In Column 6 Of Table ${detail_view_library_table} Should Contain 106 ms"
                    sourcename="Row ${m} In Column ${n} Of Table ${table} Should Contain ${value}">
                    <kw name="Table Cell Should Contain" library="SeleniumLibrary">
                        <arg>${table}</arg>
                        <arg>${m}</arg>
                        <arg>${n}</arg>
                        <arg>${value}</arg>
                        <doc>Verifies table cell contains text ``expected``.</doc>
                        <msg timestamp="20210830 17:37:53.390" level="INFO">Table cell contains '106 ms'.</msg>
                        <status status="PASS" starttime="20210830 17:37:53.350" endtime="20210830 17:37:53.390"/>
                    </kw>
                    <status status="PASS" starttime="20210830 17:37:53.350" endtime="20210830 17:37:53.390"/>
                </kw>
                <doc>App Should Display Keywords Statistics For Single Libary
                    this tests is dependant on 'App Should Display Libraries
                    With Times Used Statistics' to shorter execution time
                </doc>
                <tag>e2e</tag>
                <tag>rfhub2-67</tag>
                <tag>statistics</tag>
                <status status="PASS" starttime="20210830 17:37:50.530" endtime="20210830 17:37:53.390"/>
            </test>
            <kw name="Close Browser" library="SeleniumLibrary" type="TEARDOWN">
                <doc>Closes the current browser.</doc>
                <status status="PASS" starttime="20210830 17:37:53.400" endtime="20210830 17:37:55.575"/>
            </kw>
            <status status="PASS" starttime="20210830 17:37:03.661" endtime="20210830 17:37:55.575"/>
        </suite>
        <kw name="Stop Rfhub2" library="keywords" type="TEARDOWN">
            <doc>Stops the rfhub2 process created by "Start Rfhub2"</doc>
            <kw name="Terminate Process" library="Process">
                <arg>${rfhub2_process}</arg>
                <doc>Stops the process gracefully or forcefully.</doc>
                <msg timestamp="20210830 17:37:55.605" level="INFO">Gracefully terminating process.</msg>
                <msg timestamp="20210830 17:37:55.705" level="INFO">Process completed.</msg>
                <status status="PASS" starttime="20210830 17:37:55.595" endtime="20210830 17:37:55.705"/>
            </kw>
            <kw name="Get Process Result" library="Process">
                <var>${result}</var>
                <doc>Returns the specified `result object` or some of its attributes.</doc>
                <msg timestamp="20210830 17:37:55.705" level="INFO">${result} = &lt;result object with rc
                    3221225786&gt;
                </msg>
                <status status="PASS" starttime="20210830 17:37:55.705" endtime="20210830 17:37:55.705"/>
            </kw>
            <kw name="Log" library="BuiltIn">
                <arg>rfhub2 stderr: ${result.stderr} \nstdout: ${result.stdout}</arg>
                <arg>DEBUG</arg>
                <doc>Logs the given message with the given level.</doc>
                <status status="PASS" starttime="20210830 17:37:55.705" endtime="20210830 17:37:55.715"/>
            </kw>
            <status status="PASS" starttime="20210830 17:37:55.595" endtime="20210830 17:37:55.715"/>
        </kw>
        <status status="FAIL" starttime="20210830 17:35:10.064" endtime="20210830 17:37:55.715"/>
    </suite>
    <statistics>
        <total>
            <stat pass="40" fail="5" skip="1">All Tests</stat>
        </total>
        <tag>
            <stat pass="0" fail="1" skip="0">append</stat>
            <stat pass="13" fail="0" skip="0">e2e</stat>
            <stat pass="2" fail="5" skip="1">include-exclude</stat>
            <stat pass="2" fail="0" skip="0">installed_libs</stat>
            <stat pass="3" fail="0" skip="1">merge</stat>
            <stat pass="1" fail="0" skip="0">regression</stat>
            <stat pass="1" fail="0" skip="0">rfhub2-153</stat>
            <stat pass="1" fail="0" skip="0">rfhub2-155</stat>
            <stat pass="3" fail="0" skip="0">rfhub2-161</stat>
            <stat pass="1" fail="0" skip="0">rfhub2-330</stat>
            <stat pass="2" fail="0" skip="0">rfhub2-342</stat>
            <stat pass="1" fail="0" skip="0">rfhub2-46</stat>
            <stat pass="9" fail="0" skip="0">rfhub2-64</stat>
            <stat pass="5" fail="0" skip="0">rfhub2-67</stat>
            <stat pass="5" fail="0" skip="0">statistics</stat>
            <stat pass="3" fail="0" skip="0">tags</stat>
            <stat pass="5" fail="1" skip="0">update</stat>
        </tag>
        <suite>
            <stat pass="40" fail="5" skip="1" id="s1" name="Acceptance">Acceptance</stat>
            <stat pass="9" fail="0" skip="0" id="s1-s1" name="Cli Options">Acceptance.Cli Options</stat>
            <stat pass="18" fail="5" skip="1" id="s1-s2" name="Cli Population">Acceptance.Cli Population</stat>
            <stat pass="13" fail="0" skip="0" id="s1-s3" name="E2E">Acceptance.E2E</stat>
        </suite>
    </statistics>
    <errors>
        <msg timestamp="20210830 17:35:11.745" level="WARN">Retrying (RetryAdapter(total=2, connect=None, read=None,
            redirect=None, status=None)) after connection broken by 'NewConnectionError('&lt;urllib3.connection.HTTPConnection
            object at 0x03319470&gt;: Failed to establish a new connection: [WinError 10061] Nie można nawiązać
            połączenia, ponieważ komputer docelowy aktywnie go odmawia',)': /api/v1/health
        </msg>
        <msg timestamp="20210830 17:35:12.947" level="WARN">Retrying (RetryAdapter(total=1, connect=None, read=None,
            redirect=None, status=None)) after connection broken by 'NewConnectionError('&lt;urllib3.connection.HTTPConnection
            object at 0x03BA7930&gt;: Failed to establish a new connection: [WinError 10061] Nie można nawiązać
            połączenia, ponieważ komputer docelowy aktywnie go odmawia',)': /api/v1/health
        </msg>
    </errors>
</robot>
