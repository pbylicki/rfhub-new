{"version":3,"sources":["components/DrawerCollectionList.tsx","components/Title.tsx","components/CollectionList.tsx","stores/CollectionStore.ts","components/SearchKeywordList.tsx","components/CollectionDetails.tsx","components/SearchBar.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["useStyles","makeStyles","theme","createStyles","nested","paddingLeft","spacing","fontStyle","DrawerCollectionListItem","store","collection","classes","isSelected","collectionId","drawerSelectedCollection","Fragment","ListItem","selected","id","onClick","event","index","toggleDrawerSelectedCollection","ListItemText","primary","name","Collapse","in","timeout","unmountOnExit","List","component","disablePadding","button","className","to","keywords","map","keyword","key","DrawerCollectionList","observer","collections","collectionHasMore","length","isVisible","getCollections","Title","props","Typography","variant","color","gutterBottom","children","CollectionTableRow","TableRow","TableCell","type","version","align","CollectionList","resultCountLabel","toString","Table","size","TableHead","TableBody","collectionStore","action","bound","this","colIndex","selectedKeywordId","detailCollection","axios","get","then","resp","data","keywordId","getCollection","skip","limit","entries","Map","collectionsMap","Array","from","searchResults","searchHasMore","pattern","searchTerm","clearSearchResults","Promise","resolve","values","observable","computed","SearchKeywordTableRow","synopsis","SearchKeywordList","table","title","searchKeywords","CollectionDetails","element","document","getElementById","scrollIntoView","behavior","block","view","scope","dangerouslySetInnerHTML","__html","html_doc","arg_string","React","Component","search","position","borderRadius","shape","backgroundColor","fade","palette","common","white","marginLeft","width","breakpoints","up","searchIcon","height","pointerEvents","display","alignItems","justifyContent","inputRoot","inputInput","padding","transition","transitions","create","SearchBar","history","InputBase","placeholder","root","input","value","inputProps","onChange","target","trim","push","encoded","queryString","stringify","Copyright","href","Date","getFullYear","toolbar","paddingRight","toolbarIcon","mixins","appBar","zIndex","drawer","easing","sharp","duration","leavingScreen","appBarShift","enteringScreen","menuButton","marginRight","menuButtonHidden","flexGrow","flexShrink","drawerPaper","drawerPaperClose","overflowX","appBarSpacer","content","overflow","container","paddingTop","paddingBottom","paper","flexDirection","fixedHeight","withRouter","useState","open","setOpen","CssBaseline","AppBar","clsx","Toolbar","IconButton","edge","aria-label","noWrap","Drawer","anchor","Divider","Container","maxWidth","Grid","item","xs","Paper","path","exact","render","queryParams","parse","location","parseInt","match","params","getCollectionWithKeywordSelected","Boolean","window","hostname","ReactDOM","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ec41d4e2.chunk.js","sourcesContent":["import React from 'react';\nimport { observer } from 'mobx-react';\nimport { Link } from 'react-router-dom';\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Collapse from '@material-ui/core/Collapse';\nimport ExpandLess from '@material-ui/icons/ExpandLess';\nimport ExpandMore from '@material-ui/icons/ExpandMore';\nimport VisibilitySensor from 'react-visibility-sensor';\nimport { StoreProps } from '../types/PropsTypes'\nimport { List } from '@material-ui/core';\nimport { Collection } from '../types/ModelTypes';\nimport { CollectionStore } from '../stores/CollectionStore';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    nested: {\n      paddingLeft: theme.spacing(4),\n      fontStyle: 'italic'\n    },\n  }),\n);\n\ninterface DrawerCollectionListItemProps {\n  store: CollectionStore\n  collection: Collection\n}\n\nconst DrawerCollectionListItem: React.FC<DrawerCollectionListItemProps> = ({ store, collection }) => {\n  const classes = useStyles();\n\n  function handleListItemClick(\n    event: React.MouseEvent<HTMLLIElement, MouseEvent>,\n    index: number,\n  ): void {\n    store.toggleDrawerSelectedCollection(index);\n  }\n\n  function isSelected(collectionId: number): boolean {\n    return store.drawerSelectedCollection === collectionId\n  }\n\n  return (\n    <React.Fragment>\n      <ListItem\n        selected={isSelected(collection.id)}\n        onClick={event => handleListItemClick(event, collection.id)}\n      >\n        <ListItemText primary={collection.name} />\n        {isSelected(collection.id) ? <ExpandLess /> : <ExpandMore />}\n      </ListItem>\n      <Collapse in={isSelected(collection.id)} timeout=\"auto\" unmountOnExit>\n        <List component=\"div\" disablePadding>\n          <ListItem button className={classes.nested}>\n            <Link to={`/keywords/${collection.id}`}><ListItemText primary=\"Overview\" /></Link>\n          </ListItem>\n          {collection.keywords.map(keyword => (\n            <ListItem button key={keyword.id} className={classes.nested}>\n              <Link to={`/keywords/${collection.id}/${keyword.id}/`}>\n                <ListItemText primary={keyword.name} />\n              </Link>\n            </ListItem>\n          ))}\n        </List>\n      </Collapse>\n    </React.Fragment>\n  )\n}\n\nexport const DrawerCollectionList: React.FC<StoreProps> = observer(({ store }) => {\n  const loadMore = () => store.getCollections(store.collections.length)\n\n  return (\n    <List>\n      {store.collections.map((collection, index) => {\n        if (store.collectionHasMore && index === store.collections.length - 3) {\n          return (\n            <VisibilitySensor key={collection.id}>\n              {({ isVisible }) => {\n                if (isVisible) {\n                  loadMore()\n                }\n                return (<DrawerCollectionListItem store={store} collection={collection} />)\n              }}\n            </VisibilitySensor>)\n        } else {\n          return (<DrawerCollectionListItem key={collection.id} store={store} collection={collection} />)\n        }\n      }\n      )}\n    </List>\n  )\n})\n","import React from 'react';\nimport Typography from '@material-ui/core/Typography';\n\nexport const Title: React.SFC = (props) => (\n  <Typography component=\"h2\" variant=\"h6\" color=\"primary\" gutterBottom>\n    {props.children}\n  </Typography>\n);\n\nexport default Title;\n","/* eslint-disable no-script-url */\n\nimport React from 'react';\nimport { observer } from 'mobx-react';\nimport { Link } from 'react-router-dom';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport VisibilitySensor from 'react-visibility-sensor';\nimport Title from './Title';\nimport { Collection } from '../types/ModelTypes';\nimport { StoreProps } from '../types/PropsTypes';\n\ninterface CollectionTableRowProps {\n  collection: Collection\n}\n\nconst CollectionTableRow: React.FC<CollectionTableRowProps> = ({ collection }) => (\n  <TableRow key={collection.id}>\n    <TableCell><Link to={`/keywords/${collection.id}`}>{collection.name}</Link></TableCell>\n    <TableCell>{collection.type}</TableCell>\n    <TableCell>{collection.version}</TableCell>\n    <TableCell align=\"right\">{collection.keywords.length}</TableCell>\n  </TableRow>\n)\n\nexport const CollectionList: React.FC<StoreProps> = observer(({ store }) => {\n  const loadMore = () => store.getCollections(store.collections.length)\n  const resultCountLabel = store.collectionHasMore ? `${store.collections.length}+` : store.collections.length.toString()\n  return (\n  <React.Fragment>\n    <Title>Collections ({resultCountLabel})</Title>\n    <Table size=\"small\">\n      <TableHead>\n        <TableRow>\n          <TableCell>Name</TableCell>\n          <TableCell>Type</TableCell>\n          <TableCell>Version</TableCell>\n          <TableCell align=\"right\">Keywords</TableCell>\n        </TableRow>\n      </TableHead>\n      <TableBody>\n        {store.collections.map((collection, index) => {\n          if (store.collectionHasMore && index === store.collections.length - 3) {\n            return (\n              <VisibilitySensor key={collection.id}>\n                {({ isVisible }) => {\n                  if (isVisible) {\n                    loadMore()\n                  }\n                  return (<CollectionTableRow collection={collection} />)\n                }}\n              </VisibilitySensor>)\n          } else {\n            return (<CollectionTableRow key={collection.id} collection={collection} />)\n          }\n        })}\n      </TableBody>\n    </Table>\n  </React.Fragment>\n)});\nexport default CollectionList","import axios, { AxiosResponse } from 'axios';\nimport { observable, action, computed } from 'mobx';\nimport { Collection, Keyword } from '../types/ModelTypes';\n\nexport class CollectionStore {\n  @observable collectionsMap: Map<number, Collection> = new Map()\n  @observable collectionHasMore: boolean = false\n  @observable searchTerm: string = \"\"\n  @observable searchHasMore: boolean = false\n  @observable searchResults: Map<number, Keyword> = new Map()\n  @observable drawerSelectedCollection: number = 0\n  @observable detailCollection: Collection | null = null\n  @observable selectedKeywordId: number | null = null\n\n  constructor() {\n    this.getCollections()\n  }\n\n  @computed\n  get collections(): Collection[] {\n    return Array.from(this.collectionsMap.values())\n  }\n\n  @action.bound\n  toggleDrawerSelectedCollection(colIndex: number) {\n    if (this.drawerSelectedCollection === colIndex) {\n      this.drawerSelectedCollection = 0;\n    } else {\n      this.drawerSelectedCollection = colIndex;\n    }\n  }\n\n  @action.bound\n  getCollection(id: number): Promise<void> {\n    this.selectedKeywordId = null;\n    this.detailCollection = null;\n    return axios.get(`/api/v1/collections/${id}/`)\n      .then(resp => {\n        this.detailCollection = resp.data;\n      })\n  }\n\n  @action.bound\n  getCollectionWithKeywordSelected(collectionId: number, keywordId: number): void {\n    this.getCollection(collectionId)\n    this.selectedKeywordId = keywordId\n  }\n\n  @action.bound\n  getCollections(skip: number = 0, limit: number = 100): Promise<void> {\n    this.collectionHasMore = false\n    return axios.get<any, AxiosResponse<Collection[]>>(`/api/v1/collections/?skip=${skip}&limit=${limit}`)\n      .then(resp => {\n        const entries = new Map(resp.data.map((collection: Collection, index: number) => [skip + index, collection]));\n        this.collectionsMap = new Map([...Array.from(this.collectionsMap), ...Array.from(entries)]);\n        this.collectionHasMore = resp.data.length === limit;\n      })\n  }\n\n  @action.bound\n  clearSearchResults(): void {\n    this.searchResults = new Map();\n    this.searchHasMore = false;\n  }\n\n  @action.bound\n  searchKeywords(pattern: string, skip: number = 0, limit: number = 100): Promise<void> {\n    if (pattern.length > 2) {\n      this.searchHasMore = false\n      return axios.get<any, AxiosResponse<Keyword[]>>(`/api/v1/keywords/search/?pattern=${pattern}&skip=${skip}&limit=${limit}`)\n        .then(resp => {\n          const entries = new Map(resp.data.map((keyword: Keyword, index: number) => [skip + index, keyword]));\n          this.searchResults = new Map([...Array.from(this.searchResults), ...Array.from(entries)]);\n          this.searchTerm = pattern;\n          this.searchHasMore = resp.data.length === limit;\n        })\n    } else {\n      this.clearSearchResults();\n      this.searchTerm = pattern;\n      return Promise.resolve()\n    }\n  }\n}\n\nexport const collectionStore: CollectionStore = new CollectionStore()\n","/* eslint-disable no-script-url */\n\nimport React from 'react';\nimport { observer } from 'mobx-react';\nimport { Link } from 'react-router-dom';\nimport { TableRow, TableCell, Table, TableHead, TableBody } from '@material-ui/core';\nimport VisibilitySensor from 'react-visibility-sensor';\nimport Title from './Title';\nimport { Keyword } from '../types/ModelTypes';\nimport { StoreProps } from '../types/PropsTypes';\n\ninterface SearchKeywordTableRowProps {\n  keyword: Keyword;\n}\n\nconst SearchKeywordTableRow: React.FC<SearchKeywordTableRowProps> = ({ keyword }) => (\n  <TableRow key={keyword.id}>\n    <TableCell><Link to={`/keywords/${keyword.collection.id}/${keyword.id}/`}>{keyword.name}</Link></TableCell>\n    <TableCell>{keyword.collection.name}</TableCell>\n    <TableCell>{keyword.synopsis}</TableCell>\n  </TableRow>\n)\n\nexport const SearchKeywordList: React.FC<StoreProps> = observer(({ store }) => {\n  const loadMore = () => store.searchKeywords(store.searchTerm, store.searchResults.size)\n\n  let table, title\n  if (store.searchResults.size > 0) {\n    const resultCountLabel = store.searchHasMore ? `${store.searchResults.size}+` : store.searchResults.size.toString()\n    title = `Found ${resultCountLabel} keywords matching \"${store.searchTerm}\"`\n    table = (\n      <Table size=\"small\">\n        <TableHead>\n          <TableRow>\n            <TableCell>Name</TableCell>\n            <TableCell>Collection</TableCell>\n            <TableCell>Description</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {Array.from(store.searchResults.values()).map((keyword, index) => {\n            if (store.searchHasMore && index === store.searchResults.size - 3) {\n              return (\n                <VisibilitySensor key={keyword.id}>\n                  {({ isVisible }) => {\n                    if (isVisible) {\n                      loadMore()\n                    }\n                    return (<SearchKeywordTableRow keyword={keyword} />)\n                  }}\n                </VisibilitySensor>)\n            } else {\n              return (<SearchKeywordTableRow key={keyword.id} keyword={keyword} />)\n            }\n          }\n          )}\n        </TableBody>\n      </Table>\n    )\n  } else {\n    title = \"No keywords found\"\n  }\n  return (\n    <React.Fragment>\n      <Title>{title}</Title>\n      {table}\n    </React.Fragment>\n  )\n});\nexport default SearchKeywordList\n","/* eslint-disable no-script-url */\n\nimport React from 'react';\nimport { observer } from 'mobx-react';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Title from './Title';\nimport { StoreProps } from '../types/PropsTypes';\n\n@observer\nexport default class CollectionDetails extends React.Component<StoreProps> {\n\n  componentDidUpdate() {\n    if (this.props.store.selectedKeywordId) {\n      const element = document.getElementById(this.props.store.selectedKeywordId.toString());\n      if (element) {\n        element.scrollIntoView({ behavior: 'smooth', block: 'center' });\n      }\n    }\n  }\n\n  render() {\n    const store = this.props.store;\n    let view\n    if (store && store.detailCollection) {\n      view = (\n        <React.Fragment>\n          <Title>{store.detailCollection.name}</Title>\n          <div>version: {store.detailCollection.version}</div>\n          <div>scope: {store.detailCollection.scope}</div>\n          <div dangerouslySetInnerHTML={{ __html: store.detailCollection.html_doc }}></div>\n          <Title>Keywords ({store.detailCollection.keywords.length})</Title>\n          <Table size=\"small\">\n            <TableHead>\n              <TableRow>\n                <TableCell>Keyword</TableCell>\n                <TableCell>Arguments</TableCell>\n                <TableCell>Documentation</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {store.detailCollection.keywords.map(keyword => (\n                <TableRow id={keyword.id.toString()} key={keyword.id}>\n                  <TableCell>{keyword.name}</TableCell>\n                  <TableCell>{keyword.arg_string}</TableCell>\n                  <TableCell dangerouslySetInnerHTML={{ __html: keyword.html_doc }}></TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </React.Fragment>\n      )\n    } else {\n      view = (\n        <React.Fragment>\n          <Title>Collection not found</Title>\n        </React.Fragment>\n      )\n    }\n\n    return (\n      <React.Fragment>\n        {view}\n      </React.Fragment>\n    )\n  }\n}\n","import React from 'react';\nimport { observer } from 'mobx-react';\nimport queryString from 'query-string';\nimport { History } from 'history';\nimport { makeStyles, fade } from '@material-ui/core/styles';\nimport SearchIcon from '@material-ui/icons/Search';\nimport InputBase from '@material-ui/core/InputBase';\nimport { CollectionStore } from '../stores/CollectionStore';\n\nconst useStyles = makeStyles(theme => ({\n  search: {\n    position: 'relative',\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: fade(theme.palette.common.white, 0.15),\n    '&:hover': {\n      backgroundColor: fade(theme.palette.common.white, 0.25),\n    },\n    marginLeft: 0,\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      marginLeft: theme.spacing(1),\n      width: 'auto',\n    },\n  },\n  searchIcon: {\n    width: theme.spacing(7),\n    height: '100%',\n    position: 'absolute',\n    pointerEvents: 'none',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  inputRoot: {\n    color: 'inherit',\n  },\n  inputInput: {\n    padding: theme.spacing(1, 1, 1, 7),\n    transition: theme.transitions.create('width'),\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      width: 180,\n      '&:focus': {\n        width: 240,\n      },\n    },\n  },\n}))\n\ninterface SearchBarProps {\n  store: CollectionStore\n  history: History<any>\n}\n\nexport const SearchBar: React.FC<SearchBarProps> = observer(({ store, history }) => {\n  const classes = useStyles();\n\n  const handleSearchChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const pattern: string = event.target.value\n    if (pattern.trim() === '') {\n      store.searchKeywords(pattern);\n      history.push('/')\n    } else {\n      const encoded: string = queryString.stringify({ \"q\": pattern });\n      history.push(`/search/?${encoded}`)\n    }\n  }\n\n  return (\n    <div className={classes.search}>\n      <div className={classes.searchIcon}>\n        <SearchIcon />\n      </div>\n      <InputBase\n        placeholder=\"Search…\"\n        classes={{\n          root: classes.inputRoot,\n          input: classes.inputInput,\n        }}\n        value={store.searchTerm}\n        inputProps={{ 'aria-label': 'search' }}\n        onChange={handleSearchChange}\n      />\n    </div>\n  )\n})\n\nexport default SearchBar","import React from 'react';\nimport { Link, Route, RouteComponentProps, withRouter } from 'react-router-dom';\nimport clsx from 'clsx';\nimport queryString, { ParsedQuery } from 'query-string';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Drawer from '@material-ui/core/Drawer';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport ExternalLink from '@material-ui/core/Link';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport { DrawerCollectionList } from './components/DrawerCollectionList';\nimport CollectionList from './components/CollectionList';\nimport { collectionStore } from './stores/CollectionStore';\nimport SearchKeywordList from './components/SearchKeywordList';\nimport CollectionDetails from './components/CollectionDetails';\nimport SearchBar from './components/SearchBar';\nimport './App.css';\n\ninterface CollectionDetailsMatchParams {\n  id: string\n}\ninterface KeywordDetailsMatchParams {\n  id: string\n  keywordId: string\n}\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {'Copyright © '}\n      <ExternalLink color=\"inherit\" href=\"https://material-ui.com/\">\n        Your Website\n      </ExternalLink>{' '}\n      {new Date().getFullYear()}\n      {'. Built with '}\n      <ExternalLink color=\"inherit\" href=\"https://material-ui.com/\">\n        Material-UI.\n      </ExternalLink>\n    </Typography>\n  );\n}\n\nconst drawerWidth = 300;\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n  },\n  toolbar: {\n    paddingRight: 24, // keep right padding when drawer closed\n  },\n  toolbarIcon: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    padding: '0 8px',\n    ...theme.mixins.toolbar,\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginRight: 36,\n  },\n  menuButtonHidden: {\n    display: 'none',\n  },\n  title: {\n    flexGrow: 1,\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n  },\n  drawerPaper: {\n    width: drawerWidth,\n  },\n  drawerPaperClose: {\n    overflowX: 'hidden',\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    width: theme.spacing(7),\n    [theme.breakpoints.up('sm')]: {\n      width: theme.spacing(9),\n    },\n  },\n  appBarSpacer: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    height: '100vh',\n    overflow: 'auto',\n  },\n  container: {\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n  },\n  paper: {\n    padding: theme.spacing(2),\n    display: 'flex',\n    overflow: 'auto',\n    flexDirection: 'column',\n  },\n  fixedHeight: {\n    height: 240,\n  }\n}));\n\nexport const App: React.FC<RouteComponentProps<any>> = ({ history }) => {\n  const store = collectionStore;\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(true);\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n\n  const handleSearchRoute = (props: RouteComponentProps) => {\n    const queryParams: ParsedQuery<string> = queryString.parse(props.location.search)\n    if (queryParams[\"q\"]) {\n      store.clearSearchResults()\n      store.searchKeywords(queryParams[\"q\"] as string)\n    } else {\n      store.searchKeywords(\"\")\n    }\n    return <SearchKeywordList {...props} store={store} />\n  }\n\n  const handleCollectionRoute = (props: RouteComponentProps<CollectionDetailsMatchParams>) => {\n    const collectionId = parseInt(props.match.params.id)\n    store.getCollection(collectionId)\n    return <CollectionDetails store={store} />\n  }\n\n  const handleKeywordRoute = (props: RouteComponentProps<KeywordDetailsMatchParams>) => {\n    const collectionId = parseInt(props.match.params.id)\n    const keywordId = parseInt(props.match.params.keywordId)\n    store.getCollectionWithKeywordSelected(collectionId, keywordId)\n    return <CollectionDetails store={store} />\n  }\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <AppBar position=\"absolute\" className={clsx(classes.appBar, open && classes.appBarShift)}>\n        <Toolbar className={classes.toolbar}>\n          <IconButton\n            edge=\"start\"\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            onClick={handleDrawerOpen}\n            className={clsx(classes.menuButton, open && classes.menuButtonHidden)}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography component=\"h1\" variant=\"h6\" color=\"inherit\" noWrap className={classes.title}>\n          <Link to=\"/\">\n            rfhub2\n            </Link>\n          </Typography>\n          <SearchBar store={store} history={history} />\n        </Toolbar>\n      </AppBar>\n      <Drawer\n        className={classes.drawer}\n        variant=\"persistent\"\n        anchor=\"left\"\n        open={open}\n        classes={{\n          paper: classes.drawerPaper,\n        }}\n      >\n        <div className={classes.toolbarIcon}>\n          <IconButton onClick={handleDrawerClose}>\n            <ChevronLeftIcon />\n          </IconButton>\n        </div>\n        <Divider />\n        <DrawerCollectionList store={store} />\n      </Drawer>\n      <main className={classes.content}>\n        <div className={classes.appBarSpacer} />\n        <Container maxWidth=\"lg\" className={classes.container}>\n          <Grid container spacing={3}>\n            <Grid item xs={12}>\n              <Paper className={classes.paper}>\n                <Route path=\"/\" exact render={(props) => <CollectionList {...props} store={store} />} />\n                <Route path=\"/search/\" render={handleSearchRoute} />\n                <Route path=\"/keywords/:id/\" exact render={handleCollectionRoute} />\n                <Route path=\"/keywords/:id/:keywordId\" exact render={handleKeywordRoute} />\n              </Paper>\n            </Grid>\n          </Grid>\n        </Container>\n        <Copyright />\n      </main>\n    </div>\n  );\n}\n\nexport default withRouter(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<Router><App /></Router>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}